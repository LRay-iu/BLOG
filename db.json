{"meta":{"version":1,"warehouse":"5.0.1"},"models":{"Asset":[{"_id":"themes/redefine/source/assets/hbe.style.css","path":"assets/hbe.style.css","modified":0,"renderable":1},{"_id":"themes/redefine/source/assets/odometer-theme-minimal.css","path":"assets/odometer-theme-minimal.css","modified":0,"renderable":1},{"_id":"themes/redefine/source/css/style.styl","path":"css/style.styl","modified":0,"renderable":1},{"_id":"themes/redefine/source/fontawesome/all.min.css","path":"fontawesome/all.min.css","modified":0,"renderable":1},{"_id":"themes/redefine/source/fontawesome/brands.min.css","path":"fontawesome/brands.min.css","modified":0,"renderable":1},{"_id":"themes/redefine/source/fontawesome/duotone.min.css","path":"fontawesome/duotone.min.css","modified":0,"renderable":1},{"_id":"themes/redefine/source/fontawesome/fontawesome.min.css","path":"fontawesome/fontawesome.min.css","modified":0,"renderable":1},{"_id":"themes/redefine/source/fontawesome/light.min.css","path":"fontawesome/light.min.css","modified":0,"renderable":1},{"_id":"themes/redefine/source/fontawesome/regular.min.css","path":"fontawesome/regular.min.css","modified":0,"renderable":1},{"_id":"themes/redefine/source/fontawesome/sharp-solid.min.css","path":"fontawesome/sharp-solid.min.css","modified":0,"renderable":1},{"_id":"themes/redefine/source/fontawesome/solid.min.css","path":"fontawesome/solid.min.css","modified":0,"renderable":1},{"_id":"themes/redefine/source/fontawesome/svg-with-js.min.css","path":"fontawesome/svg-with-js.min.css","modified":0,"renderable":1},{"_id":"themes/redefine/source/fontawesome/thin.min.css","path":"fontawesome/thin.min.css","modified":0,"renderable":1},{"_id":"themes/redefine/source/fontawesome/v4-font-face.min.css","path":"fontawesome/v4-font-face.min.css","modified":0,"renderable":1},{"_id":"themes/redefine/source/fontawesome/v4-shims.min.css","path":"fontawesome/v4-shims.min.css","modified":0,"renderable":1},{"_id":"themes/redefine/source/fontawesome/v5-font-face.min.css","path":"fontawesome/v5-font-face.min.css","modified":0,"renderable":1},{"_id":"themes/redefine/source/images/loading.svg","path":"images/loading.svg","modified":0,"renderable":1},{"_id":"themes/redefine/source/images/redefine-avatar.svg","path":"images/redefine-avatar.svg","modified":0,"renderable":1},{"_id":"themes/redefine/source/images/redefine-logo.svg","path":"images/redefine-logo.svg","modified":0,"renderable":1},{"_id":"themes/redefine/source/images/redefine-favicon.svg","path":"images/redefine-favicon.svg","modified":0,"renderable":1},{"_id":"themes/redefine/source/images/redefine-logo.webp","path":"images/redefine-logo.webp","modified":0,"renderable":1},{"_id":"themes/redefine/source/images/tenten-favicon.svg","path":"images/tenten-favicon.svg","modified":0,"renderable":1},{"_id":"themes/redefine/source/images/tenten.ico","path":"images/tenten.ico","modified":0,"renderable":1},{"_id":"themes/redefine/source/images/wallhaven-wqery6-dark.webp","path":"images/wallhaven-wqery6-dark.webp","modified":0,"renderable":1},{"_id":"themes/redefine/source/images/wallhaven-wqery6-light.webp","path":"images/wallhaven-wqery6-light.webp","modified":0,"renderable":1},{"_id":"themes/redefine/source/js/main.js","path":"js/main.js","modified":0,"renderable":1},{"_id":"themes/redefine/source/js/utils.js","path":"js/utils.js","modified":0,"renderable":1},{"_id":"themes/redefine/source/webfonts/fa-brands-400.woff2","path":"webfonts/fa-brands-400.woff2","modified":0,"renderable":1},{"_id":"themes/redefine/source/webfonts/fa-brands-400.ttf","path":"webfonts/fa-brands-400.ttf","modified":0,"renderable":1},{"_id":"themes/redefine/source/webfonts/fa-duotone-900.ttf","path":"webfonts/fa-duotone-900.ttf","modified":0,"renderable":1},{"_id":"themes/redefine/source/webfonts/fa-duotone-900.woff2","path":"webfonts/fa-duotone-900.woff2","modified":0,"renderable":1},{"_id":"themes/redefine/source/webfonts/fa-light-300.ttf","path":"webfonts/fa-light-300.ttf","modified":0,"renderable":1},{"_id":"themes/redefine/source/webfonts/fa-light-300.woff2","path":"webfonts/fa-light-300.woff2","modified":0,"renderable":1},{"_id":"themes/redefine/source/webfonts/fa-regular-400.woff2","path":"webfonts/fa-regular-400.woff2","modified":0,"renderable":1},{"_id":"themes/redefine/source/webfonts/fa-sharp-solid-900.ttf","path":"webfonts/fa-sharp-solid-900.ttf","modified":0,"renderable":1},{"_id":"themes/redefine/source/webfonts/fa-sharp-solid-900.woff2","path":"webfonts/fa-sharp-solid-900.woff2","modified":0,"renderable":1},{"_id":"themes/redefine/source/webfonts/fa-solid-900.ttf","path":"webfonts/fa-solid-900.ttf","modified":0,"renderable":1},{"_id":"themes/redefine/source/webfonts/fa-solid-900.woff2","path":"webfonts/fa-solid-900.woff2","modified":0,"renderable":1},{"_id":"themes/redefine/source/webfonts/fa-regular-400.ttf","path":"webfonts/fa-regular-400.ttf","modified":0,"renderable":1},{"_id":"themes/redefine/source/webfonts/fa-thin-100.ttf","path":"webfonts/fa-thin-100.ttf","modified":0,"renderable":1},{"_id":"themes/redefine/source/webfonts/fa-v4compatibility.ttf","path":"webfonts/fa-v4compatibility.ttf","modified":0,"renderable":1},{"_id":"themes/redefine/source/webfonts/fa-thin-100.woff2","path":"webfonts/fa-thin-100.woff2","modified":0,"renderable":1},{"_id":"themes/redefine/source/webfonts/fa-v4compatibility.woff2","path":"webfonts/fa-v4compatibility.woff2","modified":0,"renderable":1},{"_id":"themes/redefine/source/assets/build/styles.css","path":"assets/build/styles.css","modified":0,"renderable":1},{"_id":"themes/redefine/source/css/common/animated.styl","path":"css/common/animated.styl","modified":0,"renderable":1},{"_id":"themes/redefine/source/css/common/basic.styl","path":"css/common/basic.styl","modified":0,"renderable":1},{"_id":"themes/redefine/source/css/common/redefine-theme.styl","path":"css/common/redefine-theme.styl","modified":0,"renderable":1},{"_id":"themes/redefine/source/css/common/variables.styl","path":"css/common/variables.styl","modified":0,"renderable":1},{"_id":"themes/redefine/source/css/common/markdown.styl","path":"css/common/markdown.styl","modified":0,"renderable":1},{"_id":"themes/redefine/source/fonts/Chillax/Chillax-Variable.eot","path":"fonts/Chillax/Chillax-Variable.eot","modified":0,"renderable":1},{"_id":"themes/redefine/source/fonts/Chillax/Chillax-Variable.ttf","path":"fonts/Chillax/Chillax-Variable.ttf","modified":0,"renderable":1},{"_id":"themes/redefine/source/fonts/Chillax/Chillax-Variable.woff","path":"fonts/Chillax/Chillax-Variable.woff","modified":0,"renderable":1},{"_id":"themes/redefine/source/fonts/Chillax/Chillax-Variable.woff2","path":"fonts/Chillax/Chillax-Variable.woff2","modified":0,"renderable":1},{"_id":"themes/redefine/source/fonts/Chillax/chillax.css","path":"fonts/Chillax/chillax.css","modified":0,"renderable":1},{"_id":"themes/redefine/source/fonts/Geist/GeistVF.ttf","path":"fonts/Geist/GeistVF.ttf","modified":0,"renderable":1},{"_id":"themes/redefine/source/fonts/Geist/GeistVF.woff","path":"fonts/Geist/GeistVF.woff","modified":0,"renderable":1},{"_id":"themes/redefine/source/fonts/Geist/geist.css","path":"fonts/Geist/geist.css","modified":0,"renderable":1},{"_id":"themes/redefine/source/fonts/Geist/GeistVF.woff2","path":"fonts/Geist/GeistVF.woff2","modified":0,"renderable":1},{"_id":"themes/redefine/source/css/layout/archive-content.styl","path":"css/layout/archive-content.styl","modified":0,"renderable":1},{"_id":"themes/redefine/source/css/layout/article-content.styl","path":"css/layout/article-content.styl","modified":0,"renderable":1},{"_id":"themes/redefine/source/css/layout/category-content.styl","path":"css/layout/category-content.styl","modified":0,"renderable":1},{"_id":"themes/redefine/source/css/layout/home-content.styl","path":"css/layout/home-content.styl","modified":0,"renderable":1},{"_id":"themes/redefine/source/css/layout/home-sidebar.styl","path":"css/layout/home-sidebar.styl","modified":0,"renderable":1},{"_id":"themes/redefine/source/css/layout/category-list.styl","path":"css/layout/category-list.styl","modified":0,"renderable":1},{"_id":"themes/redefine/source/css/layout/page.styl","path":"css/layout/page.styl","modified":0,"renderable":1},{"_id":"themes/redefine/source/css/layout/tag-content.styl","path":"css/layout/tag-content.styl","modified":0,"renderable":1},{"_id":"themes/redefine/source/js/layouts/navbarShrink.js","path":"js/layouts/navbarShrink.js","modified":0,"renderable":1},{"_id":"themes/redefine/source/js/layouts/categoryList.js","path":"js/layouts/categoryList.js","modified":0,"renderable":1},{"_id":"themes/redefine/source/js/layouts/lazyload.js","path":"js/layouts/lazyload.js","modified":0,"renderable":1},{"_id":"themes/redefine/source/js/layouts/toc.js","path":"js/layouts/toc.js","modified":0,"renderable":1},{"_id":"themes/redefine/source/js/libs/APlayer.min.js.map","path":"js/libs/APlayer.min.js.map","modified":0,"renderable":1},{"_id":"themes/redefine/source/js/libs/APlayer.min.js","path":"js/libs/APlayer.min.js","modified":0,"renderable":1},{"_id":"themes/redefine/source/js/libs/Swup.min.js","path":"js/libs/Swup.min.js","modified":0,"renderable":1},{"_id":"themes/redefine/source/js/libs/Swup.min.js.map","path":"js/libs/Swup.min.js.map","modified":0,"renderable":1},{"_id":"themes/redefine/source/js/libs/SwupPreloadPlugin.min.js","path":"js/libs/SwupPreloadPlugin.min.js","modified":0,"renderable":1},{"_id":"themes/redefine/source/js/libs/SwupPreloadPlugin.min.js.map","path":"js/libs/SwupPreloadPlugin.min.js.map","modified":0,"renderable":1},{"_id":"themes/redefine/source/js/libs/SwupProgressPlugin.min.js","path":"js/libs/SwupProgressPlugin.min.js","modified":0,"renderable":1},{"_id":"themes/redefine/source/js/libs/SwupScriptsPlugin.min.js","path":"js/libs/SwupScriptsPlugin.min.js","modified":0,"renderable":1},{"_id":"themes/redefine/source/js/libs/SwupScrollPlugin.min.js","path":"js/libs/SwupScrollPlugin.min.js","modified":0,"renderable":1},{"_id":"themes/redefine/source/js/libs/SwupScrollPlugin.min.js.map","path":"js/libs/SwupScrollPlugin.min.js.map","modified":0,"renderable":1},{"_id":"themes/redefine/source/js/libs/SwupSlideTheme.min.js","path":"js/libs/SwupSlideTheme.min.js","modified":0,"renderable":1},{"_id":"themes/redefine/source/js/libs/Typed.min.js","path":"js/libs/Typed.min.js","modified":0,"renderable":1},{"_id":"themes/redefine/source/js/libs/anime.min.js","path":"js/libs/anime.min.js","modified":0,"renderable":1},{"_id":"themes/redefine/source/js/libs/mermaid.min.js","path":"js/libs/mermaid.min.js","modified":0,"renderable":1},{"_id":"themes/redefine/source/js/libs/mermaid.min.js.map","path":"js/libs/mermaid.min.js.map","modified":0,"renderable":1},{"_id":"themes/redefine/source/js/libs/minimasonry.min.js","path":"js/libs/minimasonry.min.js","modified":0,"renderable":1},{"_id":"themes/redefine/source/js/libs/odometer.min.js","path":"js/libs/odometer.min.js","modified":0,"renderable":1},{"_id":"themes/redefine/source/js/libs/pjax.min.js","path":"js/libs/pjax.min.js","modified":0,"renderable":1},{"_id":"themes/redefine/source/js/libs/waline.mjs","path":"js/libs/waline.mjs","modified":0,"renderable":1},{"_id":"themes/redefine/source/js/libs/waline.mjs.map","path":"js/libs/waline.mjs.map","modified":0,"renderable":1},{"_id":"themes/redefine/source/js/plugins/hbe.js","path":"js/plugins/hbe.js","modified":0,"renderable":1},{"_id":"themes/redefine/source/js/plugins/aplayer.js","path":"js/plugins/aplayer.js","modified":0,"renderable":1},{"_id":"themes/redefine/source/js/plugins/masonry.js","path":"js/plugins/masonry.js","modified":0,"renderable":1},{"_id":"themes/redefine/source/js/plugins/mermaid.js","path":"js/plugins/mermaid.js","modified":0,"renderable":1},{"_id":"themes/redefine/source/js/plugins/tabs.js","path":"js/plugins/tabs.js","modified":0,"renderable":1},{"_id":"themes/redefine/source/fonts/GeistMono/GeistMonoVF.ttf","path":"fonts/GeistMono/GeistMonoVF.ttf","modified":0,"renderable":1},{"_id":"themes/redefine/source/fonts/GeistMono/GeistMonoVF.woff","path":"fonts/GeistMono/GeistMonoVF.woff","modified":0,"renderable":1},{"_id":"themes/redefine/source/fonts/GeistMono/GeistMonoVF.woff2","path":"fonts/GeistMono/GeistMonoVF.woff2","modified":0,"renderable":1},{"_id":"themes/redefine/source/js/plugins/typed.js","path":"js/plugins/typed.js","modified":0,"renderable":1},{"_id":"themes/redefine/source/fonts/GeistMono/geist-mono.css","path":"fonts/GeistMono/geist-mono.css","modified":0,"renderable":1},{"_id":"themes/redefine/source/js/tools/codeBlock.js","path":"js/tools/codeBlock.js","modified":0,"renderable":1},{"_id":"themes/redefine/source/js/tools/imageViewer.js","path":"js/tools/imageViewer.js","modified":0,"renderable":1},{"_id":"themes/redefine/source/js/tools/runtime.js","path":"js/tools/runtime.js","modified":0,"renderable":1},{"_id":"themes/redefine/source/js/tools/localSearch.js","path":"js/tools/localSearch.js","modified":0,"renderable":1},{"_id":"themes/redefine/source/js/tools/lightDarkSwitch.js","path":"js/tools/lightDarkSwitch.js","modified":0,"renderable":1},{"_id":"themes/redefine/source/js/tools/scrollTopBottom.js","path":"js/tools/scrollTopBottom.js","modified":0,"renderable":1},{"_id":"themes/redefine/source/js/tools/tocToggle.js","path":"js/tools/tocToggle.js","modified":0,"renderable":1},{"_id":"themes/redefine/source/css/common/codeblock/code-block.styl","path":"css/common/codeblock/code-block.styl","modified":0,"renderable":1},{"_id":"themes/redefine/source/css/common/codeblock/code-theme.styl","path":"css/common/codeblock/code-theme.styl","modified":0,"renderable":1},{"_id":"themes/redefine/source/css/common/codeblock/highlight.styl","path":"css/common/codeblock/highlight.styl","modified":0,"renderable":1},{"_id":"source/img/20240721_1727/IMG_20240721_204959.png","path":"img/20240721_1727/IMG_20240721_204959.png","modified":0,"renderable":0},{"_id":"source/img/20240721_1727/yourName(1).png","path":"img/20240721_1727/yourName(1).png","modified":0,"renderable":0},{"_id":"source/img/20240721_1727/yourName(3).png","path":"img/20240721_1727/yourName(3).png","modified":0,"renderable":0},{"_id":"source/img/20240721_1727/yourName(2).png","path":"img/20240721_1727/yourName(2).png","modified":0,"renderable":0},{"_id":"source/img/20240721_1727/yourName(4).png","path":"img/20240721_1727/yourName(4).png","modified":0,"renderable":0},{"_id":"source/img/20240721_1727/yourName(5).png","path":"img/20240721_1727/yourName(5).png","modified":0,"renderable":0},{"_id":"source/img/20240721_1727/yourName(6).png","path":"img/20240721_1727/yourName(6).png","modified":0,"renderable":0},{"_id":"source/img/20240721_1727/yourName(7).png","path":"img/20240721_1727/yourName(7).png","modified":0,"renderable":0},{"_id":"source/img/20240721_1727/yourName(8).png","path":"img/20240721_1727/yourName(8).png","modified":0,"renderable":0},{"_id":"source/img/Patrick Collins_blockchain_note/image-20240109233040953.png","path":"img/Patrick Collins_blockchain_note/image-20240109233040953.png","modified":0,"renderable":0},{"_id":"source/img/Gin_note/image-20240329131341634.png","path":"img/Gin_note/image-20240329131341634.png","modified":0,"renderable":0},{"_id":"source/img/Gin_note/image-20240330175545744.png","path":"img/Gin_note/image-20240330175545744.png","modified":0,"renderable":0},{"_id":"source/img/Gin_note/image-20240330175639344.png","path":"img/Gin_note/image-20240330175639344.png","modified":0,"renderable":0},{"_id":"source/img/Patrick Collins_blockchain_note/image-20240109233120241.png","path":"img/Patrick Collins_blockchain_note/image-20240109233120241.png","modified":0,"renderable":0},{"_id":"source/img/Patrick Collins_blockchain_note/image-20240110145343247.png","path":"img/Patrick Collins_blockchain_note/image-20240110145343247.png","modified":0,"renderable":0},{"_id":"source/img/Patrick Collins_blockchain_note/image-20240110144901761.png","path":"img/Patrick Collins_blockchain_note/image-20240110144901761.png","modified":0,"renderable":0},{"_id":"source/img/Patrick Collins_blockchain_note/image-20240112093457519.png","path":"img/Patrick Collins_blockchain_note/image-20240112093457519.png","modified":0,"renderable":0},{"_id":"source/img/Patrick Collins_blockchain_note/image-20240112094858855.png","path":"img/Patrick Collins_blockchain_note/image-20240112094858855.png","modified":0,"renderable":0},{"_id":"source/img/Patrick Collins_blockchain_note/image-20240112095159024.png","path":"img/Patrick Collins_blockchain_note/image-20240112095159024.png","modified":0,"renderable":0},{"_id":"source/img/Patrick Collins_blockchain_note/image-20240112095737762.png","path":"img/Patrick Collins_blockchain_note/image-20240112095737762.png","modified":0,"renderable":0},{"_id":"source/img/Patrick Collins_blockchain_note/image-20240112095746127.png","path":"img/Patrick Collins_blockchain_note/image-20240112095746127.png","modified":0,"renderable":0},{"_id":"source/img/Patrick Collins_blockchain_note/image-20240112095206377.png","path":"img/Patrick Collins_blockchain_note/image-20240112095206377.png","modified":0,"renderable":0},{"_id":"source/img/Patrick Collins_blockchain_note/image-20240115231345044.png","path":"img/Patrick Collins_blockchain_note/image-20240115231345044.png","modified":0,"renderable":0},{"_id":"source/img/Patrick Collins_blockchain_note/image-20240115231352791.png","path":"img/Patrick Collins_blockchain_note/image-20240115231352791.png","modified":0,"renderable":0},{"_id":"source/img/Patrick Collins_blockchain_note/image-20240115231411208.png","path":"img/Patrick Collins_blockchain_note/image-20240115231411208.png","modified":0,"renderable":0},{"_id":"source/img/Patrick Collins_blockchain_note/image-20240123155823210.png","path":"img/Patrick Collins_blockchain_note/image-20240123155823210.png","modified":0,"renderable":0},{"_id":"source/img/Patrick Collins_blockchain_note/image-20240123155927054.png","path":"img/Patrick Collins_blockchain_note/image-20240123155927054.png","modified":0,"renderable":0},{"_id":"source/img/Patrick Collins_blockchain_note/image-20240123155705037.png","path":"img/Patrick Collins_blockchain_note/image-20240123155705037.png","modified":0,"renderable":0},{"_id":"source/img/Patrick Collins_blockchain_note/image-20240123155959166.png","path":"img/Patrick Collins_blockchain_note/image-20240123155959166.png","modified":0,"renderable":0},{"_id":"source/img/Patrick Collins_blockchain_note/image-20240125153122214.png","path":"img/Patrick Collins_blockchain_note/image-20240125153122214.png","modified":0,"renderable":0},{"_id":"source/img/Patrick Collins_blockchain_note/image-20240125155456902.png","path":"img/Patrick Collins_blockchain_note/image-20240125155456902.png","modified":0,"renderable":0},{"_id":"source/img/Patrick Collins_blockchain_note/image-20240125222714288.png","path":"img/Patrick Collins_blockchain_note/image-20240125222714288.png","modified":0,"renderable":0},{"_id":"source/img/Patrick Collins_blockchain_note/image-20240125150543392.png","path":"img/Patrick Collins_blockchain_note/image-20240125150543392.png","modified":0,"renderable":0},{"_id":"source/img/Patrick Collins_blockchain_note/image-20240125230207782.png","path":"img/Patrick Collins_blockchain_note/image-20240125230207782.png","modified":0,"renderable":0},{"_id":"source/img/Patrick Collins_blockchain_note/image-20240125230239939.png","path":"img/Patrick Collins_blockchain_note/image-20240125230239939.png","modified":0,"renderable":0},{"_id":"source/img/Patrick Collins_blockchain_note/image-20240125230536425.png","path":"img/Patrick Collins_blockchain_note/image-20240125230536425.png","modified":0,"renderable":0},{"_id":"source/img/Patrick Collins_blockchain_note/image-20240125230559283.png","path":"img/Patrick Collins_blockchain_note/image-20240125230559283.png","modified":0,"renderable":0},{"_id":"source/img/Patrick Collins_blockchain_note/image-20240125230758121.png","path":"img/Patrick Collins_blockchain_note/image-20240125230758121.png","modified":0,"renderable":0},{"_id":"source/img/Patrick Collins_blockchain_note/image-20240125231013855.png","path":"img/Patrick Collins_blockchain_note/image-20240125231013855.png","modified":0,"renderable":0},{"_id":"source/img/Patrick Collins_blockchain_note/image-20240125231517791.png","path":"img/Patrick Collins_blockchain_note/image-20240125231517791.png","modified":0,"renderable":0},{"_id":"source/img/Patrick Collins_blockchain_note/image-20240127234611622.png","path":"img/Patrick Collins_blockchain_note/image-20240127234611622.png","modified":0,"renderable":0},{"_id":"source/img/Patrick Collins_blockchain_note/image-20240128222423403.png","path":"img/Patrick Collins_blockchain_note/image-20240128222423403.png","modified":0,"renderable":0},{"_id":"source/img/Patrick Collins_blockchain_note/image-20240125231634552.png","path":"img/Patrick Collins_blockchain_note/image-20240125231634552.png","modified":0,"renderable":0},{"_id":"source/img/Patrick Collins_blockchain_note/image-20240129210306564.png","path":"img/Patrick Collins_blockchain_note/image-20240129210306564.png","modified":0,"renderable":0},{"_id":"source/img/Patrick Collins_blockchain_note/image-20240205140809591.png","path":"img/Patrick Collins_blockchain_note/image-20240205140809591.png","modified":0,"renderable":0},{"_id":"source/img/Patrick Collins_blockchain_note/image-20240205130649419.png","path":"img/Patrick Collins_blockchain_note/image-20240205130649419.png","modified":0,"renderable":0},{"_id":"source/img/Patrick Collins_blockchain_note/image-20240205140823024.png","path":"img/Patrick Collins_blockchain_note/image-20240205140823024.png","modified":0,"renderable":0},{"_id":"source/img/Patrick Collins_blockchain_note/image-20240219154857856.png","path":"img/Patrick Collins_blockchain_note/image-20240219154857856.png","modified":0,"renderable":0},{"_id":"source/img/Patrick Collins_blockchain_note/image-20240219154902367.png","path":"img/Patrick Collins_blockchain_note/image-20240219154902367.png","modified":0,"renderable":0},{"_id":"source/img/Patrick Collins_blockchain_note/image-20240220135504952.png","path":"img/Patrick Collins_blockchain_note/image-20240220135504952.png","modified":0,"renderable":0},{"_id":"source/img/Patrick Collins_blockchain_note/image-20240225225217144.png","path":"img/Patrick Collins_blockchain_note/image-20240225225217144.png","modified":0,"renderable":0},{"_id":"source/img/Patrick Collins_blockchain_note/image-20240225231333402.png","path":"img/Patrick Collins_blockchain_note/image-20240225231333402.png","modified":0,"renderable":0},{"_id":"source/img/Patrick Collins_blockchain_note/image-20240225234449556.png","path":"img/Patrick Collins_blockchain_note/image-20240225234449556.png","modified":0,"renderable":0},{"_id":"source/img/Vue3_note/ed5b963beaf85e5b9e489a10efcc51f-170441778579113.png","path":"img/Vue3_note/ed5b963beaf85e5b9e489a10efcc51f-170441778579113.png","modified":0,"renderable":0},{"_id":"source/img/Patrick Collins_blockchain_note/image-20240305002127313.png","path":"img/Patrick Collins_blockchain_note/image-20240305002127313.png","modified":0,"renderable":0},{"_id":"source/img/Vue3_note/image-20240105103235439.png","path":"img/Vue3_note/image-20240105103235439.png","modified":0,"renderable":0},{"_id":"source/img/Vue3_note/image-20240105104452696.png","path":"img/Vue3_note/image-20240105104452696.png","modified":0,"renderable":0},{"_id":"source/img/Vue3_note/image-20240105104835729.png","path":"img/Vue3_note/image-20240105104835729.png","modified":0,"renderable":0},{"_id":"source/img/Vue3_note/image-20240105120758018.png","path":"img/Vue3_note/image-20240105120758018.png","modified":0,"renderable":0},{"_id":"source/img/Vue3_note/image-20240105155229131.png","path":"img/Vue3_note/image-20240105155229131.png","modified":0,"renderable":0},{"_id":"source/img/Vue3_note/image-20240108173531398.png","path":"img/Vue3_note/image-20240108173531398.png","modified":0,"renderable":0},{"_id":"source/img/Vue3_note/image-20240108233851273.png","path":"img/Vue3_note/image-20240108233851273.png","modified":0,"renderable":0},{"_id":"source/img/Vue3_note/image-20240109132707143.png","path":"img/Vue3_note/image-20240109132707143.png","modified":0,"renderable":0},{"_id":"source/img/Vue3_note/image-20240109132721613.png","path":"img/Vue3_note/image-20240109132721613.png","modified":0,"renderable":0},{"_id":"source/img/Vue3_note/image-20240128220343854.png","path":"img/Vue3_note/image-20240128220343854.png","modified":0,"renderable":0},{"_id":"source/img/Vue3_note/image-20240128222423403.png","path":"img/Vue3_note/image-20240128222423403.png","modified":0,"renderable":0},{"_id":"source/img/Vue3_note/image-20240201212634644.png","path":"img/Vue3_note/image-20240201212634644.png","modified":0,"renderable":0},{"_id":"source/img/Vue3_note/image-20240201213743914.png","path":"img/Vue3_note/image-20240201213743914.png","modified":0,"renderable":0},{"_id":"source/img/Vue3_note/image-20240310184451213.png","path":"img/Vue3_note/image-20240310184451213.png","modified":0,"renderable":0},{"_id":"source/img/Vue3_note/image-20240314224306984.png","path":"img/Vue3_note/image-20240314224306984.png","modified":0,"renderable":0},{"_id":"source/img/Vue3_note/image-20240317151105751.png","path":"img/Vue3_note/image-20240317151105751.png","modified":0,"renderable":0},{"_id":"source/img/Vue3_note/image-20240329131341634.png","path":"img/Vue3_note/image-20240329131341634.png","modified":0,"renderable":0},{"_id":"source/img/Vue3_note/image-20240330175639344.png","path":"img/Vue3_note/image-20240330175639344.png","modified":0,"renderable":0},{"_id":"source/img/Vue3_note/image-20240330175545744.png","path":"img/Vue3_note/image-20240330175545744.png","modified":0,"renderable":0},{"_id":"source/img/Vue3_note/image-20240423210315875.png","path":"img/Vue3_note/image-20240423210315875.png","modified":0,"renderable":0},{"_id":"source/img/Vue3_note/image-20240406172521070.png","path":"img/Vue3_note/image-20240406172521070.png","modified":0,"renderable":0},{"_id":"source/img/Vue3_note/image-20240423215020646.png","path":"img/Vue3_note/image-20240423215020646.png","modified":0,"renderable":0},{"_id":"source/img/Vue3_note/lifecycle_zh-CN.FtDDVyNA.png","path":"img/Vue3_note/lifecycle_zh-CN.FtDDVyNA.png","modified":0,"renderable":0},{"_id":"source/img/emoji/终于.png","path":"img/emoji/终于.png","modified":0,"renderable":0},{"_id":"source/img/emoji/feizhaidaile.png","path":"img/emoji/feizhaidaile.png","modified":0,"renderable":0},{"_id":"source/img/cover/jinan.png","path":"img/cover/jinan.png","modified":0,"renderable":0},{"_id":"source/img/cover/wuxi.png","path":"img/cover/wuxi.png","modified":0,"renderable":0},{"_id":"source/img/cover/yourname.png","path":"img/cover/yourname.png","modified":0,"renderable":0},{"_id":"source/img/minatosys_Blockchain_note/image-20240423222551537.png","path":"img/minatosys_Blockchain_note/image-20240423222551537.png","modified":0,"renderable":0},{"_id":"source/img/minatosys_Blockchain_note/image-20240423231604679.png","path":"img/minatosys_Blockchain_note/image-20240423231604679.png","modified":0,"renderable":0},{"_id":"source/img/jinan_travel/7707e2487fcdfccad200b6d92c858b1.png","path":"img/jinan_travel/7707e2487fcdfccad200b6d92c858b1.png","modified":0,"renderable":0},{"_id":"source/img/jinan_travel/e77f1a35c400301fb207671d1211242.png","path":"img/jinan_travel/e77f1a35c400301fb207671d1211242.png","modified":0,"renderable":0},{"_id":"source/img/jinan_travel/IMG_20240621_135248.png","path":"img/jinan_travel/IMG_20240621_135248.png","modified":0,"renderable":0},{"_id":"source/img/jinan_travel/Videoframe_20240713_153346_com.huawei.himovie.loc.jpg","path":"img/jinan_travel/Videoframe_20240713_153346_com.huawei.himovie.loc.jpg","modified":0,"renderable":0},{"_id":"source/img/jinan_travel/image-20240702132800880.png","path":"img/jinan_travel/image-20240702132800880.png","modified":0,"renderable":0},{"_id":"source/img/jinan_travel/image-20240702134340918.png","path":"img/jinan_travel/image-20240702134340918.png","modified":0,"renderable":0},{"_id":"source/img/jinan_travel/image-20240704110552965.png","path":"img/jinan_travel/image-20240704110552965.png","modified":0,"renderable":0},{"_id":"source/img/jinan_travel/image-20240703101658725.png","path":"img/jinan_travel/image-20240703101658725.png","modified":0,"renderable":0},{"_id":"source/img/jinan_travel/image-20240704110017720.png","path":"img/jinan_travel/image-20240704110017720.png","modified":0,"renderable":0},{"_id":"source/img/jinan_travel/image-20240704110651807.png","path":"img/jinan_travel/image-20240704110651807.png","modified":0,"renderable":0},{"_id":"source/img/jinan_travel/image-20240704121142124.png","path":"img/jinan_travel/image-20240704121142124.png","modified":0,"renderable":0},{"_id":"source/img/jinan_travel/image-20240704121647858.png","path":"img/jinan_travel/image-20240704121647858.png","modified":0,"renderable":0},{"_id":"source/img/jinan_travel/image-20240704155606548.png","path":"img/jinan_travel/image-20240704155606548.png","modified":0,"renderable":0},{"_id":"source/img/jinan_travel/image-20240704161658983.png","path":"img/jinan_travel/image-20240704161658983.png","modified":0,"renderable":0},{"_id":"source/img/jinan_travel/image-20240704162422780.png","path":"img/jinan_travel/image-20240704162422780.png","modified":0,"renderable":0},{"_id":"source/img/jinan_travel/sporthealth-1-20240713-153633_edit_42309425324064.jpg","path":"img/jinan_travel/sporthealth-1-20240713-153633_edit_42309425324064.jpg","modified":0,"renderable":0},{"_id":"source/img/jinan_travel/wx_camera_1719046544940.jpg","path":"img/jinan_travel/wx_camera_1719046544940.jpg","modified":0,"renderable":0},{"_id":"source/img/jinan_travel/五龙潭公园.png","path":"img/jinan_travel/五龙潭公园.png","modified":0,"renderable":0},{"_id":"source/img/jinan_travel/wx_camera_1719390403383.jpg","path":"img/jinan_travel/wx_camera_1719390403383.jpg","modified":0,"renderable":0},{"_id":"source/img/jinan_travel/五龙迎宾.png","path":"img/jinan_travel/五龙迎宾.png","modified":0,"renderable":0},{"_id":"source/img/jinan_travel/大明湖.png","path":"img/jinan_travel/大明湖.png","modified":0,"renderable":0},{"_id":"source/img/jinan_travel/大明湖荷花.png","path":"img/jinan_travel/大明湖荷花.png","modified":0,"renderable":0},{"_id":"source/img/jinan_travel/大观园.png","path":"img/jinan_travel/大观园.png","modified":0,"renderable":0},{"_id":"source/img/jinan_travel/夹心胡同.png","path":"img/jinan_travel/夹心胡同.png","modified":0,"renderable":0},{"_id":"source/img/jinan_travel/宽厚里.png","path":"img/jinan_travel/宽厚里.png","modified":0,"renderable":0},{"_id":"source/img/jinan_travel/宽厚里2.png","path":"img/jinan_travel/宽厚里2.png","modified":0,"renderable":0},{"_id":"source/img/jinan_travel/曲水亭街.png","path":"img/jinan_travel/曲水亭街.png","modified":0,"renderable":0},{"_id":"source/img/jinan_travel/李清照画像.png","path":"img/jinan_travel/李清照画像.png","modified":0,"renderable":0},{"_id":"source/img/jinan_travel/济南墙.png","path":"img/jinan_travel/济南墙.png","modified":0,"renderable":0},{"_id":"source/img/jinan_travel/济南自行车道.png","path":"img/jinan_travel/济南自行车道.png","modified":0,"renderable":0},{"_id":"source/img/jinan_travel/济南老胡同.png","path":"img/jinan_travel/济南老胡同.png","modified":0,"renderable":0},{"_id":"source/img/jinan_travel/烧饼夹牛肉.png","path":"img/jinan_travel/烧饼夹牛肉.png","modified":0,"renderable":0},{"_id":"source/img/jinan_travel/爱心红灯.png","path":"img/jinan_travel/爱心红灯.png","modified":0,"renderable":0},{"_id":"source/img/jinan_travel/老济南复原模型.png","path":"img/jinan_travel/老济南复原模型.png","modified":0,"renderable":0},{"_id":"source/img/jinan_travel/老济南胡同改造.png","path":"img/jinan_travel/老济南胡同改造.png","modified":0,"renderable":0},{"_id":"source/img/jinan_travel/老济南奶油冰棍.png","path":"img/jinan_travel/老济南奶油冰棍.png","modified":0,"renderable":0},{"_id":"source/img/jinan_travel/芙蓉街.png","path":"img/jinan_travel/芙蓉街.png","modified":0,"renderable":0},{"_id":"source/img/jinan_travel/解放阁.png","path":"img/jinan_travel/解放阁.png","modified":0,"renderable":0},{"_id":"source/img/jinan_travel/起风桥.png","path":"img/jinan_travel/起风桥.png","modified":0,"renderable":0},{"_id":"source/img/jinan_travel/超然楼.png","path":"img/jinan_travel/超然楼.png","modified":0,"renderable":0},{"_id":"source/img/jinan_travel/超然楼木雕.png","path":"img/jinan_travel/超然楼木雕.png","modified":0,"renderable":0},{"_id":"source/img/jinan_travel/超然楼木雕2.png","path":"img/jinan_travel/超然楼木雕2.png","modified":0,"renderable":0},{"_id":"source/img/jinan_travel/趵突泉.png","path":"img/jinan_travel/趵突泉.png","modified":0,"renderable":0},{"_id":"source/img/jinan_travel/黑虎泉.png","path":"img/jinan_travel/黑虎泉.png","modified":0,"renderable":0},{"_id":"source/img/jinan_travel/黑虎泉2.png","path":"img/jinan_travel/黑虎泉2.png","modified":0,"renderable":0},{"_id":"source/img/software_exam/54573865e5952bd00fb98cbf2d505be8.jpeg","path":"img/software_exam/54573865e5952bd00fb98cbf2d505be8.jpeg","modified":0,"renderable":0},{"_id":"source/img/software_exam/0930abe368ad014ddd3d5a98f87c25d.png","path":"img/software_exam/0930abe368ad014ddd3d5a98f87c25d.png","modified":0,"renderable":0},{"_id":"source/img/software_exam/image-20240818113830275.png","path":"img/software_exam/image-20240818113830275.png","modified":0,"renderable":0},{"_id":"source/img/software_exam/image-20240821211304579.png","path":"img/software_exam/image-20240821211304579.png","modified":0,"renderable":0},{"_id":"source/img/thumbnail/jinan.png","path":"img/thumbnail/jinan.png","modified":0,"renderable":0},{"_id":"source/img/thumbnail/minato.png","path":"img/thumbnail/minato.png","modified":0,"renderable":0},{"_id":"source/img/thumbnail/taishan.png","path":"img/thumbnail/taishan.png","modified":0,"renderable":0},{"_id":"source/img/thumbnail/wuxi.png","path":"img/thumbnail/wuxi.png","modified":0,"renderable":0},{"_id":"source/img/thumbnail/yourname.png","path":"img/thumbnail/yourname.png","modified":0,"renderable":0},{"_id":"source/img/taishan_travel/Collage_20240625_124523.jpg","path":"img/taishan_travel/Collage_20240625_124523.jpg","modified":0,"renderable":0},{"_id":"source/img/thumbnail/zibo.png","path":"img/thumbnail/zibo.png","modified":0,"renderable":0},{"_id":"source/img/taishan_travel/IMG_20240624_171323.jpg","path":"img/taishan_travel/IMG_20240624_171323.jpg","modified":0,"renderable":0},{"_id":"source/img/taishan_travel/IMG_20240624_173655_edit_62212043219672.jpg","path":"img/taishan_travel/IMG_20240624_173655_edit_62212043219672.jpg","modified":0,"renderable":0},{"_id":"source/img/taishan_travel/IMG_20240624_182059.jpg","path":"img/taishan_travel/IMG_20240624_182059.jpg","modified":0,"renderable":0},{"_id":"source/img/taishan_travel/IMG_20240624_175207_edit_62156931195202.jpg","path":"img/taishan_travel/IMG_20240624_175207_edit_62156931195202.jpg","modified":0,"renderable":0},{"_id":"source/img/taishan_travel/IMG_20240624_185345_edit_62433046371201.jpg","path":"img/taishan_travel/IMG_20240624_185345_edit_62433046371201.jpg","modified":0,"renderable":0},{"_id":"source/img/taishan_travel/IMG_20240624_184010.jpg","path":"img/taishan_travel/IMG_20240624_184010.jpg","modified":0,"renderable":0},{"_id":"source/img/taishan_travel/IMG_20240624_190641.jpg","path":"img/taishan_travel/IMG_20240624_190641.jpg","modified":0,"renderable":0},{"_id":"source/img/taishan_travel/IMG_20240625_043819.jpg","path":"img/taishan_travel/IMG_20240625_043819.jpg","modified":0,"renderable":0},{"_id":"source/img/taishan_travel/IMG_20240625_032804_edit_5404153770528.jpg","path":"img/taishan_travel/IMG_20240625_032804_edit_5404153770528.jpg","modified":0,"renderable":0},{"_id":"source/img/taishan_travel/IMG_20240625_051334.jpg","path":"img/taishan_travel/IMG_20240625_051334.jpg","modified":0,"renderable":0},{"_id":"source/img/taishan_travel/IMG_20240625_063755.jpg","path":"img/taishan_travel/IMG_20240625_063755.jpg","modified":0,"renderable":0},{"_id":"source/img/taishan_travel/IMG_20240625_051923.jpg","path":"img/taishan_travel/IMG_20240625_051923.jpg","modified":0,"renderable":0},{"_id":"source/img/taishan_travel/IMG_20240625_073157.jpg","path":"img/taishan_travel/IMG_20240625_073157.jpg","modified":0,"renderable":0},{"_id":"source/img/taishan_travel/IMG_20240625_073600.jpg","path":"img/taishan_travel/IMG_20240625_073600.jpg","modified":0,"renderable":0},{"_id":"source/img/taishan_travel/IMG_20240626_092948.jpg","path":"img/taishan_travel/IMG_20240626_092948.jpg","modified":0,"renderable":0},{"_id":"source/img/taishan_travel/IMG_20240626_100914_edit_49982107513205.jpg","path":"img/taishan_travel/IMG_20240626_100914_edit_49982107513205.jpg","modified":0,"renderable":0},{"_id":"source/img/taishan_travel/IMG_20240626_104302.jpg","path":"img/taishan_travel/IMG_20240626_104302.jpg","modified":0,"renderable":0},{"_id":"source/img/taishan_travel/Screenshot_20240624_223334_com.autonavi.minimap_e.jpg","path":"img/taishan_travel/Screenshot_20240624_223334_com.autonavi.minimap_e.jpg","modified":0,"renderable":0},{"_id":"source/img/taishan_travel/Screenshot_20240624_202610_com.huawei.compass_edi.jpg","path":"img/taishan_travel/Screenshot_20240624_202610_com.huawei.compass_edi.jpg","modified":0,"renderable":0},{"_id":"source/img/taishan_travel/IMG_20240624_185754.jpg","path":"img/taishan_travel/IMG_20240624_185754.jpg","modified":0,"renderable":0},{"_id":"source/img/taishan_travel/image-20240726110457865.png","path":"img/taishan_travel/image-20240726110457865.png","modified":0,"renderable":0},{"_id":"source/img/taishan_travel/mmexport1719446927162_edit_99879125112362.jpg","path":"img/taishan_travel/mmexport1719446927162_edit_99879125112362.jpg","modified":0,"renderable":0},{"_id":"source/img/taishan_travel/一览众山小.jpg","path":"img/taishan_travel/一览众山小.jpg","modified":0,"renderable":0},{"_id":"source/img/taishan_travel/下山所见（1）.png","path":"img/taishan_travel/下山所见（1）.png","modified":0,"renderable":0},{"_id":"source/img/taishan_travel/下山所见（2）.png","path":"img/taishan_travel/下山所见（2）.png","modified":0,"renderable":0},{"_id":"source/img/taishan_travel/五元纸币.png","path":"img/taishan_travel/五元纸币.png","modified":0,"renderable":0},{"_id":"source/img/taishan_travel/南天门夕阳.jpg","path":"img/taishan_travel/南天门夕阳.jpg","modified":0,"renderable":0},{"_id":"source/img/taishan_travel/勇闯天涯.jpg","path":"img/taishan_travel/勇闯天涯.jpg","modified":0,"renderable":0},{"_id":"source/img/taishan_travel/岱庙2.png","path":"img/taishan_travel/岱庙2.png","modified":0,"renderable":0},{"_id":"source/img/taishan_travel/油酥火烧.png","path":"img/taishan_travel/油酥火烧.png","modified":0,"renderable":0},{"_id":"source/img/taishan_travel/朝阳2.png","path":"img/taishan_travel/朝阳2.png","modified":0,"renderable":0},{"_id":"source/img/taishan_travel/泰山远景.png","path":"img/taishan_travel/泰山远景.png","modified":0,"renderable":0},{"_id":"source/img/taishan_travel/登山路线.png","path":"img/taishan_travel/登山路线.png","modified":0,"renderable":0},{"_id":"source/img/taishan_travel/瞻鲁台.png","path":"img/taishan_travel/瞻鲁台.png","modified":0,"renderable":0},{"_id":"source/img/taishan_travel/糁汤.png","path":"img/taishan_travel/糁汤.png","modified":0,"renderable":0},{"_id":"source/img/minatosys_FrontEnd_note/image-20240423222551537.png","path":"img/minatosys_FrontEnd_note/image-20240423222551537.png","modified":0,"renderable":0},{"_id":"source/img/minatosys_FrontEnd_note/image-20240429092312447.png","path":"img/minatosys_FrontEnd_note/image-20240429092312447.png","modified":0,"renderable":0},{"_id":"source/img/minatosys_FrontEnd_note/image-20240429095339280.png","path":"img/minatosys_FrontEnd_note/image-20240429095339280.png","modified":0,"renderable":0},{"_id":"source/img/minatosys_FrontEnd_note/image-20240429100428388.png","path":"img/minatosys_FrontEnd_note/image-20240429100428388.png","modified":0,"renderable":0},{"_id":"source/img/minatosys_FrontEnd_note/image-20240429100543929.png","path":"img/minatosys_FrontEnd_note/image-20240429100543929.png","modified":0,"renderable":0},{"_id":"source/img/minatosys_FrontEnd_note/image-20240429100702637.png","path":"img/minatosys_FrontEnd_note/image-20240429100702637.png","modified":0,"renderable":0},{"_id":"source/img/minatosys_FrontEnd_note/image-20240429100754037.png","path":"img/minatosys_FrontEnd_note/image-20240429100754037.png","modified":0,"renderable":0},{"_id":"source/img/minatosys_FrontEnd_note/image-20240506160424465.png","path":"img/minatosys_FrontEnd_note/image-20240506160424465.png","modified":0,"renderable":0},{"_id":"source/img/minatosys_FrontEnd_note/image-20240506160609536.png","path":"img/minatosys_FrontEnd_note/image-20240506160609536.png","modified":0,"renderable":0},{"_id":"source/img/minatosys_FrontEnd_note/image-20240506160655596.png","path":"img/minatosys_FrontEnd_note/image-20240506160655596.png","modified":0,"renderable":0},{"_id":"source/img/wuxi_travel/02767365218acc958e8136d77decad8.png","path":"img/wuxi_travel/02767365218acc958e8136d77decad8.png","modified":0,"renderable":0},{"_id":"source/img/wuxi_travel/082e66374891cb305cb637aba10c3f1.png","path":"img/wuxi_travel/082e66374891cb305cb637aba10c3f1.png","modified":0,"renderable":0},{"_id":"source/img/wuxi_travel/08ba68d5c6cdcd8d8fed92638f6831e.png","path":"img/wuxi_travel/08ba68d5c6cdcd8d8fed92638f6831e.png","modified":0,"renderable":0},{"_id":"source/img/wuxi_travel/0b2f97d92d81bbdc082b15c55b8719d.png","path":"img/wuxi_travel/0b2f97d92d81bbdc082b15c55b8719d.png","modified":0,"renderable":0},{"_id":"source/img/wuxi_travel/0b63e55eccb17bade774d1e96d9536f.png","path":"img/wuxi_travel/0b63e55eccb17bade774d1e96d9536f.png","modified":0,"renderable":0},{"_id":"source/img/wuxi_travel/1427443a2e73c9c941f33ea93460927.png","path":"img/wuxi_travel/1427443a2e73c9c941f33ea93460927.png","modified":0,"renderable":0},{"_id":"source/img/wuxi_travel/1590570e99863f157b79663b746aa71.png","path":"img/wuxi_travel/1590570e99863f157b79663b746aa71.png","modified":0,"renderable":0},{"_id":"source/img/wuxi_travel/19d00734826c8aa0045369227f2f991.png","path":"img/wuxi_travel/19d00734826c8aa0045369227f2f991.png","modified":0,"renderable":0},{"_id":"source/img/wuxi_travel/1d904be0143789bacf088db2455ed31.png","path":"img/wuxi_travel/1d904be0143789bacf088db2455ed31.png","modified":0,"renderable":0},{"_id":"source/img/wuxi_travel/252625631f0c6b7aa772de90aec5d2c.png","path":"img/wuxi_travel/252625631f0c6b7aa772de90aec5d2c.png","modified":0,"renderable":0},{"_id":"source/img/wuxi_travel/4b89c957cac4bc0340105379d6c3149.png","path":"img/wuxi_travel/4b89c957cac4bc0340105379d6c3149.png","modified":0,"renderable":0},{"_id":"source/img/wuxi_travel/49f67c697ac74de2f1dc938fe5f5007.jpg","path":"img/wuxi_travel/49f67c697ac74de2f1dc938fe5f5007.jpg","modified":0,"renderable":0},{"_id":"source/img/wuxi_travel/4a495848762e2f1ac7a93606bbfd2a3.png","path":"img/wuxi_travel/4a495848762e2f1ac7a93606bbfd2a3.png","modified":0,"renderable":0},{"_id":"source/img/wuxi_travel/618cb82399ff8e5247523225e7c3295.png","path":"img/wuxi_travel/618cb82399ff8e5247523225e7c3295.png","modified":0,"renderable":0},{"_id":"source/img/wuxi_travel/62b721fd8eb56b9ecebe3d7b3a9e94e.png","path":"img/wuxi_travel/62b721fd8eb56b9ecebe3d7b3a9e94e.png","modified":0,"renderable":0},{"_id":"source/img/wuxi_travel/6ba64f8a74f8fd370d169393e0be116.png","path":"img/wuxi_travel/6ba64f8a74f8fd370d169393e0be116.png","modified":0,"renderable":0},{"_id":"source/img/wuxi_travel/6f8701a00ada2c7bf0ecfffd450d00b.png","path":"img/wuxi_travel/6f8701a00ada2c7bf0ecfffd450d00b.png","modified":0,"renderable":0},{"_id":"source/img/wuxi_travel/635f0a2b8f0d55d73afeacf15acf14d.png","path":"img/wuxi_travel/635f0a2b8f0d55d73afeacf15acf14d.png","modified":0,"renderable":0},{"_id":"source/img/wuxi_travel/6b140467433f8c6cabce2ef700fc0bb.png","path":"img/wuxi_travel/6b140467433f8c6cabce2ef700fc0bb.png","modified":0,"renderable":0},{"_id":"source/img/wuxi_travel/75a68aa3be4521d319d2f2ace73a094.png","path":"img/wuxi_travel/75a68aa3be4521d319d2f2ace73a094.png","modified":0,"renderable":0},{"_id":"source/img/wuxi_travel/7652f4176a3e53757f2de430679e66a.png","path":"img/wuxi_travel/7652f4176a3e53757f2de430679e66a.png","modified":0,"renderable":0},{"_id":"source/img/wuxi_travel/932115e476bfe0ce837efe884767298.png","path":"img/wuxi_travel/932115e476bfe0ce837efe884767298.png","modified":0,"renderable":0},{"_id":"source/img/wuxi_travel/8dae16d449f1457f5fce533e2dab31d.png","path":"img/wuxi_travel/8dae16d449f1457f5fce533e2dab31d.png","modified":0,"renderable":0},{"_id":"source/img/wuxi_travel/958626e2f2af371925aef1288d50b0a.png","path":"img/wuxi_travel/958626e2f2af371925aef1288d50b0a.png","modified":0,"renderable":0},{"_id":"source/img/wuxi_travel/95d6958ac2f4bdfe5576f6bd7e568c4.png","path":"img/wuxi_travel/95d6958ac2f4bdfe5576f6bd7e568c4.png","modified":0,"renderable":0},{"_id":"source/img/wuxi_travel/9d4365c205960d054f77e6c999aa47f.png","path":"img/wuxi_travel/9d4365c205960d054f77e6c999aa47f.png","modified":0,"renderable":0},{"_id":"source/img/wuxi_travel/97dea71c2818e9e05ffde08045531b4.jpg","path":"img/wuxi_travel/97dea71c2818e9e05ffde08045531b4.jpg","modified":0,"renderable":0},{"_id":"source/img/wuxi_travel/a2e775fb556f3202d3430f8a788803f.png","path":"img/wuxi_travel/a2e775fb556f3202d3430f8a788803f.png","modified":0,"renderable":0},{"_id":"source/img/wuxi_travel/b48121421dd91a5276f90bd6856e5df.png","path":"img/wuxi_travel/b48121421dd91a5276f90bd6856e5df.png","modified":0,"renderable":0},{"_id":"source/img/wuxi_travel/c12eeb504affac83d6290c9d77ffdc6.png","path":"img/wuxi_travel/c12eeb504affac83d6290c9d77ffdc6.png","modified":0,"renderable":0},{"_id":"source/img/wuxi_travel/dc85f46992113347bf299d7aaedfd6d.png","path":"img/wuxi_travel/dc85f46992113347bf299d7aaedfd6d.png","modified":0,"renderable":0},{"_id":"source/img/wuxi_travel/c46d2fb753b96b77cca1985ccf7d70d.png","path":"img/wuxi_travel/c46d2fb753b96b77cca1985ccf7d70d.png","modified":0,"renderable":0},{"_id":"source/img/wuxi_travel/d8627057731e73a4529c303c82ff675.png","path":"img/wuxi_travel/d8627057731e73a4529c303c82ff675.png","modified":0,"renderable":0},{"_id":"source/img/wuxi_travel/df31837900c348bfd7662a540513daf.png","path":"img/wuxi_travel/df31837900c348bfd7662a540513daf.png","modified":0,"renderable":0},{"_id":"source/img/wuxi_travel/e10bf3fe081a0e31a17601c68bc5373.png","path":"img/wuxi_travel/e10bf3fe081a0e31a17601c68bc5373.png","modified":0,"renderable":0},{"_id":"source/img/wuxi_travel/ec95c4c41b95b38a6a8bac1f6e1601b.png","path":"img/wuxi_travel/ec95c4c41b95b38a6a8bac1f6e1601b.png","modified":0,"renderable":0},{"_id":"source/img/wuxi_travel/e5e782b62f70befbee201f721164abd.png","path":"img/wuxi_travel/e5e782b62f70befbee201f721164abd.png","modified":0,"renderable":0},{"_id":"source/img/wuxi_travel/e77e651e41cfffac455256ee30a62e7.png","path":"img/wuxi_travel/e77e651e41cfffac455256ee30a62e7.png","modified":0,"renderable":0},{"_id":"source/img/wuxi_travel/fa67438411b13a560d498928e194bf8.png","path":"img/wuxi_travel/fa67438411b13a560d498928e194bf8.png","modified":0,"renderable":0},{"_id":"source/img/wuxi_travel/f99b0a70d8fe594a1cb60876a89c5d0.png","path":"img/wuxi_travel/f99b0a70d8fe594a1cb60876a89c5d0.png","modified":0,"renderable":0},{"_id":"source/img/wuxi_travel/ee0d47a4f62780f85d318749fc25a8f.png","path":"img/wuxi_travel/ee0d47a4f62780f85d318749fc25a8f.png","modified":0,"renderable":0},{"_id":"source/img/wuxi_travel/image-20240605135725673.png","path":"img/wuxi_travel/image-20240605135725673.png","modified":0,"renderable":0},{"_id":"source/img/wuxi_travel/微信图片_20240529122852.jpg","path":"img/wuxi_travel/微信图片_20240529122852.jpg","modified":0,"renderable":0},{"_id":"source/img/wuxi_travel/微信图片_20240529122839.jpg","path":"img/wuxi_travel/微信图片_20240529122839.jpg","modified":0,"renderable":0},{"_id":"source/img/xiaozhen_blockchain_note/3f0cfb0ee800495f367fb49c58eea45.png","path":"img/xiaozhen_blockchain_note/3f0cfb0ee800495f367fb49c58eea45.png","modified":0,"renderable":0},{"_id":"source/img/xiaozhen_blockchain_note/04b959cbb244f9b3d13a0cefae513ab.png","path":"img/xiaozhen_blockchain_note/04b959cbb244f9b3d13a0cefae513ab.png","modified":0,"renderable":0},{"_id":"source/img/xiaozhen_blockchain_note/5d552b84a412de924d855c63a4498a7.png","path":"img/xiaozhen_blockchain_note/5d552b84a412de924d855c63a4498a7.png","modified":0,"renderable":0},{"_id":"source/img/xiaozhen_blockchain_note/9c36b711da645ebc72e4fb5b73b7572.png","path":"img/xiaozhen_blockchain_note/9c36b711da645ebc72e4fb5b73b7572.png","modified":0,"renderable":0},{"_id":"source/img/xiaozhen_blockchain_note/cec260ce36410d64a2e680b87dafbbe.png","path":"img/xiaozhen_blockchain_note/cec260ce36410d64a2e680b87dafbbe.png","modified":0,"renderable":0},{"_id":"source/img/xiaozhen_blockchain_note/b82daa61a0de14965f383ca4cfbf309.png","path":"img/xiaozhen_blockchain_note/b82daa61a0de14965f383ca4cfbf309.png","modified":0,"renderable":0},{"_id":"source/img/xiaozhen_blockchain_note/ed5b963beaf85e5b9e489a10efcc51f-170441778579113.png","path":"img/xiaozhen_blockchain_note/ed5b963beaf85e5b9e489a10efcc51f-170441778579113.png","modified":0,"renderable":0},{"_id":"source/img/xiaozhen_blockchain_note/image-20240105091958351.png","path":"img/xiaozhen_blockchain_note/image-20240105091958351.png","modified":0,"renderable":0},{"_id":"source/img/xiaozhen_blockchain_note/image-20240112095737762.png","path":"img/xiaozhen_blockchain_note/image-20240112095737762.png","modified":0,"renderable":0},{"_id":"source/img/xiaozhen_blockchain_note/image-20240105103235439.png","path":"img/xiaozhen_blockchain_note/image-20240105103235439.png","modified":0,"renderable":0},{"_id":"source/img/xiaozhen_blockchain_note/image-20240112095746127.png","path":"img/xiaozhen_blockchain_note/image-20240112095746127.png","modified":0,"renderable":0},{"_id":"source/img/xiaozhen_blockchain_note/image-20240115231345044.png","path":"img/xiaozhen_blockchain_note/image-20240115231345044.png","modified":0,"renderable":0},{"_id":"source/img/xiaozhen_blockchain_note/image-20240115231352791.png","path":"img/xiaozhen_blockchain_note/image-20240115231352791.png","modified":0,"renderable":0},{"_id":"source/img/zibo_travel/image-20240724162657704.png","path":"img/zibo_travel/image-20240724162657704.png","modified":0,"renderable":0},{"_id":"source/img/xiaozhen_blockchain_note/image-20240115231411208.png","path":"img/xiaozhen_blockchain_note/image-20240115231411208.png","modified":0,"renderable":0},{"_id":"source/img/zibo_travel/eb43fd68f43fd31e4d26e0f8586056c.png","path":"img/zibo_travel/eb43fd68f43fd31e4d26e0f8586056c.png","modified":0,"renderable":0},{"_id":"source/img/zibo_travel/image-20240725095327146.png","path":"img/zibo_travel/image-20240725095327146.png","modified":0,"renderable":0},{"_id":"source/img/zibo_travel/image-20240725095442762.png","path":"img/zibo_travel/image-20240725095442762.png","modified":0,"renderable":0},{"_id":"source/img/zibo_travel/《樊华净界》玉净瓶.png","path":"img/zibo_travel/《樊华净界》玉净瓶.png","modified":0,"renderable":0},{"_id":"source/img/zibo_travel/凤舞和鸣国宴用瓷.png","path":"img/zibo_travel/凤舞和鸣国宴用瓷.png","modified":0,"renderable":0},{"_id":"source/img/zibo_travel/八大局便民市场.png","path":"img/zibo_travel/八大局便民市场.png","modified":0,"renderable":0},{"_id":"source/img/zibo_travel/啤酒.png","path":"img/zibo_travel/啤酒.png","modified":0,"renderable":0},{"_id":"source/img/zibo_travel/大烧烤(2).png","path":"img/zibo_travel/大烧烤(2).png","modified":0,"renderable":0},{"_id":"source/img/zibo_travel/大烧烤.png","path":"img/zibo_travel/大烧烤.png","modified":0,"renderable":0},{"_id":"source/img/zibo_travel/小烧烤(2).png","path":"img/zibo_travel/小烧烤(2).png","modified":0,"renderable":0},{"_id":"source/img/zibo_travel/小烧烤(3).png","path":"img/zibo_travel/小烧烤(3).png","modified":0,"renderable":0},{"_id":"source/img/zibo_travel/小烧烤(4).png","path":"img/zibo_travel/小烧烤(4).png","modified":0,"renderable":0},{"_id":"source/img/zibo_travel/小烧烤.png","path":"img/zibo_travel/小烧烤.png","modified":0,"renderable":0},{"_id":"source/img/zibo_travel/忘记拍名字了的瓷瓶.png","path":"img/zibo_travel/忘记拍名字了的瓷瓶.png","modified":0,"renderable":0},{"_id":"source/img/zibo_travel/忘记拍名字了的瓷器.png","path":"img/zibo_travel/忘记拍名字了的瓷器.png","modified":0,"renderable":0},{"_id":"source/img/zibo_travel/海岱楼.png","path":"img/zibo_travel/海岱楼.png","modified":0,"renderable":0},{"_id":"source/img/zibo_travel/琉璃博物馆.png","path":"img/zibo_travel/琉璃博物馆.png","modified":0,"renderable":0},{"_id":"source/img/zibo_travel/琉璃小猪.png","path":"img/zibo_travel/琉璃小猪.png","modified":0,"renderable":0},{"_id":"source/img/zibo_travel/紫米饼.png","path":"img/zibo_travel/紫米饼.png","modified":0,"renderable":0},{"_id":"source/img/zibo_travel/锅盔饼.png","path":"img/zibo_travel/锅盔饼.png","modified":0,"renderable":0},{"_id":"source/img/zibo_travel/陶瓷琉璃瓶.png","path":"img/zibo_travel/陶瓷琉璃瓶.png","modified":0,"renderable":0},{"_id":"source/img/zibo_travel/蓝莓味香酥牛奶棒.png","path":"img/zibo_travel/蓝莓味香酥牛奶棒.png","modified":0,"renderable":0},{"_id":"source/img/zibo_travel/陶瓷茉莉花.png","path":"img/zibo_travel/陶瓷茉莉花.png","modified":0,"renderable":0},{"_id":"source/img/zibo_travel/陶瓷葡萄.png","path":"img/zibo_travel/陶瓷葡萄.png","modified":0,"renderable":0},{"_id":"source/img/zibo_travel/陶瓷龙虾.png","path":"img/zibo_travel/陶瓷龙虾.png","modified":0,"renderable":0},{"_id":"source/img/zibo_travel/鸡油黄镌刻罗汉图.png","path":"img/zibo_travel/鸡油黄镌刻罗汉图.png","modified":0,"renderable":0},{"_id":"source/img/zibo_travel/鸡血红观音瓶.png","path":"img/zibo_travel/鸡血红观音瓶.png","modified":0,"renderable":0},{"_id":"source/img/zibo_travel/齐风塔.png","path":"img/zibo_travel/齐风塔.png","modified":0,"renderable":0}],"Cache":[{"_id":"source/_data/essays.yml","hash":"18fd475562fb94d4e9a1fb80c592ee2a252cd7a9","modified":1724491108826},{"_id":"source/_data/links.yml","hash":"65a1e8fed201b7a15dd2ca8c8e7ad3b84bb9bfa9","modified":1724418620567},{"_id":"source/_data/masonry.yml","hash":"b3ea2d20ed8104e330f43ae9e374766444922abf","modified":1724564928241},{"_id":"source/_data/url.csv","hash":"dbdf391216dee6b3094a0109d2838bd353fdea75","modified":1724553222539},{"_id":"source/_data/tool.py","hash":"3a35e0147be213857d6a447a390ad25b7529ce52","modified":1724554687632},{"_id":"source/_posts/20240721_1727.md","hash":"fd203d1f69bfd9de8233934bfe9d497eedae8935","modified":1724595794334},{"_id":"source/_data/url.txt","hash":"aabfe2ceda45c8aef8bba38a0496c526cb221e71","modified":1724554690121},{"_id":"source/_posts/Gin_note.md","hash":"f5d2a223996a7be6592c9d7bc53453698bed1ba4","modified":1724479737647},{"_id":"source/_posts/Patrick Collins_blockchain_note.md","hash":"4e1676e4f11332e46f21574241e00b1e1b801d6d","modified":1724479751014},{"_id":"source/_posts/Vue3_note.md","hash":"a5dd00b86d88924c68f1df63a367049ef2335ab6","modified":1724479773910},{"_id":"source/_posts/hairTie.md","hash":"02cdef6b643b7ead072ce43745cbb389e8f42170","modified":1724478384216},{"_id":"source/_posts/jinan_travel.md","hash":"3efb6ef63998855a4e7be93c5a2e575f54b811bc","modified":1724486626379},{"_id":"source/_posts/minatosys_Blockchain_note.md","hash":"904343b312f72356f5ecff5a9ea5cda9657041ea","modified":1724480456114},{"_id":"source/_posts/software_exam.md","hash":"067d2b710b29acbe3f7fcf7cf6d398f8c6cc957c","modified":1724515627126},{"_id":"source/_posts/taishan_travel.md","hash":"3c744d8e3d9324928b7c10f90bb99cecc866fc1b","modified":1724482981916},{"_id":"source/_posts/minatosys_FrontEnd_note.md","hash":"caab90e04ffbca33ee160ec0fa1d0a9a7a8bb850","modified":1724480446120},{"_id":"source/_posts/wuxi_travel.md","hash":"79b799dd6db55796d38eaa8ec36e70c6dbd29bc1","modified":1724486924909},{"_id":"source/about/index.md","hash":"e0336ec8fd5e2b8618fe147ea2c3431479b8b8de","modified":1724426078878},{"_id":"source/_posts/zibo_travel.md","hash":"2d51d4cfb2522dcefad02384bf07d9cc3baa5c6c","modified":1724482991849},{"_id":"source/_posts/xiaozhen_blockchain_note.md","hash":"f1dc1157168e4384709c2bccc4734977984a144e","modified":1724479809248},{"_id":"source/_posts/个人常用指令集.md","hash":"5450387c946f42d65c445d395f30661a1f671019","modified":1724593765324},{"_id":"source/essays/index.md","hash":"4bd740d43b2c29e31ff63989c6791e2b1f958f9d","modified":1724426791013},{"_id":"source/categories/index.md","hash":"c77533ea67e7658f9724e682fbb82eba9ed024e7","modified":1724421968324},{"_id":"source/links/index.md","hash":"215a899ae8c24e3215accc7230695a1b154fbcb2","modified":1724418378489},{"_id":"source/tags/index.md","hash":"264c5649ebdba7dfda768f79a19539a53eb244fe","modified":1724421984715},{"_id":"source/img/Gin_note/image-20240329131341634.png","hash":"76e4641a0fb62a91c9b1f1dd7e7afc1f5c21bbd6","modified":1720855738194},{"_id":"source/img/Gin_note/image-20240330175545744.png","hash":"8f94e50085413997b09f9fe6e742fbe5b8711e77","modified":1720855738101},{"_id":"source/img/Gin_note/image-20240330175639344.png","hash":"07d45105c0bcbd47c5285cf6855187890a902707","modified":1720855738157},{"_id":"source/img/Patrick Collins_blockchain_note/image-20240109233120241.png","hash":"10972a49932ef990f474a04ed508d2a73f96487b","modified":1720856446866},{"_id":"source/img/Patrick Collins_blockchain_note/image-20240109233040953.png","hash":"aae0e4abde24fa95d1a575d43eb0c9154fa051e3","modified":1720856446431},{"_id":"source/img/Patrick Collins_blockchain_note/image-20240110145343247.png","hash":"902b344c09f7bbefcdcc8fc2e8bc16d5cf33fb01","modified":1720856446381},{"_id":"source/img/Patrick Collins_blockchain_note/image-20240112093457519.png","hash":"bc90c4dca45e9559be6c6c9d481aaafee45403c4","modified":1720856446478},{"_id":"source/img/Patrick Collins_blockchain_note/image-20240112094858855.png","hash":"65a345dcd9059fe1e33495714594f0a8f03696f3","modified":1720856446113},{"_id":"source/img/Patrick Collins_blockchain_note/image-20240112095746127.png","hash":"7d794f269504ca2c2bd91e991f0d529a270042bf","modified":1720856446485},{"_id":"source/img/Patrick Collins_blockchain_note/image-20240112095159024.png","hash":"da3958e836212565811efebeb4a025dd684242e1","modified":1720856446485},{"_id":"source/img/Patrick Collins_blockchain_note/image-20240112095737762.png","hash":"630eaf1419553ce09dcff34a06f4df9858293b3a","modified":1720856446485},{"_id":"source/img/Patrick Collins_blockchain_note/image-20240112095206377.png","hash":"54b96484fec9a31a2048092933b992ee7f91f779","modified":1720856446112},{"_id":"source/img/Patrick Collins_blockchain_note/image-20240115231345044.png","hash":"a8427d6c1498a31691a1b2734782254d536c3c7f","modified":1705331625082},{"_id":"source/img/Patrick Collins_blockchain_note/image-20240115231352791.png","hash":"eebc275d7345c52423aae043a8b6c3383f0c0b52","modified":1720856446485},{"_id":"source/img/Patrick Collins_blockchain_note/image-20240123155823210.png","hash":"b2001418ff0b2240f35ea9542105795575717725","modified":1720856446014},{"_id":"source/img/Patrick Collins_blockchain_note/image-20240115231411208.png","hash":"693df2c29d7bf69780e226df802035e8d7367785","modified":1705331651263},{"_id":"source/img/Patrick Collins_blockchain_note/image-20240123155927054.png","hash":"41d6fc104abdbc1509555acd61a0318d0b4c2dcd","modified":1720856445931},{"_id":"source/img/Patrick Collins_blockchain_note/image-20240123155959166.png","hash":"261fa99f15b601a29644ab80e5780d782ba30e3a","modified":1720856445931},{"_id":"source/img/Patrick Collins_blockchain_note/image-20240125155456902.png","hash":"a41628d655b5d9113b9ccaff2afcdcad2121b98f","modified":1720856445482},{"_id":"source/img/Patrick Collins_blockchain_note/image-20240125153122214.png","hash":"38f7c32f5ed4f9755fd25fff30d191dcb96aa71e","modified":1720856445431},{"_id":"source/img/Patrick Collins_blockchain_note/image-20240125222714288.png","hash":"d713256fcf5964bbe38351a0e140e30228b72eff","modified":1720856445449},{"_id":"source/img/Patrick Collins_blockchain_note/image-20240125230207782.png","hash":"6e51a124b044a5e8b215a6770b034f7689ffc54b","modified":1720856445423},{"_id":"source/img/Patrick Collins_blockchain_note/image-20240125230239939.png","hash":"b1f3e59a083e9ed9720d46ea6caab49cecf0dee4","modified":1720856445484},{"_id":"source/img/Patrick Collins_blockchain_note/image-20240125150543392.png","hash":"da73d09319bc790ad6aa9c745dfffffd1c67612c","modified":1720856445475},{"_id":"source/img/Patrick Collins_blockchain_note/image-20240125230559283.png","hash":"d8881e046af90c555d2b32a0560b123bb536eb58","modified":1720856445616},{"_id":"source/img/Patrick Collins_blockchain_note/image-20240125230536425.png","hash":"b6ec1d61702c02b7f6b25b2079d3f84bdd0e6990","modified":1720856445470},{"_id":"source/img/Patrick Collins_blockchain_note/image-20240125230758121.png","hash":"f47efed49735deccfc873f16a55273e0ad7008cf","modified":1720856445893},{"_id":"source/img/Patrick Collins_blockchain_note/image-20240125231517791.png","hash":"a82ee512f30404d920374f0f72672f26902a1b24","modified":1720856445548},{"_id":"source/img/Patrick Collins_blockchain_note/image-20240127234611622.png","hash":"0b4626a6a653d16cd6dad00397f01cf7415c2272","modified":1720856445422},{"_id":"source/img/Patrick Collins_blockchain_note/image-20240128222423403.png","hash":"1a87675539484cbcbc2a39e9d09d41f075f0dcf9","modified":1720856445892},{"_id":"source/img/Patrick Collins_blockchain_note/image-20240129210306564.png","hash":"a1dc859a4eeb1bdf8a70b94ea1b302d74adaa3fb","modified":1720856445470},{"_id":"source/img/Patrick Collins_blockchain_note/image-20240125231634552.png","hash":"b6a0fbacafa9401ccdad811d1ab38260eca79d7b","modified":1720856445547},{"_id":"source/img/Patrick Collins_blockchain_note/image-20240205130649419.png","hash":"5c165598c31edb129f6d929201df9a8a1b8e0278","modified":1720856446992},{"_id":"source/img/Patrick Collins_blockchain_note/image-20240205140809591.png","hash":"3b5f24a58b130e7b6c965c3c7b1dc30d66a24e0d","modified":1707113289601},{"_id":"source/img/Patrick Collins_blockchain_note/image-20240205140823024.png","hash":"ec460b500f7ee225b7fd71a7f28b6335d4f89a9f","modified":1720856447156},{"_id":"source/img/Patrick Collins_blockchain_note/image-20240219154857856.png","hash":"963c24246f9e21b4bd062603bf06610b9e76843f","modified":1720856447117},{"_id":"source/img/Patrick Collins_blockchain_note/image-20240219154902367.png","hash":"8aec4aaf93b4d67a2b7da68e60484c8b9b4013b9","modified":1720856446968},{"_id":"source/img/Patrick Collins_blockchain_note/image-20240225225217144.png","hash":"8017e56992321010351ff4126d76208cf2f9ba2d","modified":1720856446879},{"_id":"source/img/Patrick Collins_blockchain_note/image-20240220135504952.png","hash":"fc3ea44258b7dec8ac13e8ae3d33b451d8c758a0","modified":1720856446880},{"_id":"source/img/Patrick Collins_blockchain_note/image-20240225231333402.png","hash":"c7127952ca695c68d7e2aacce1f6e0e7e08ef350","modified":1720856446867},{"_id":"source/img/Vue3_note/ed5b963beaf85e5b9e489a10efcc51f-170441778579113.png","hash":"fe008396243319755363aa928f096cf4b85b6674","modified":1720856460358},{"_id":"source/img/Patrick Collins_blockchain_note/image-20240225234449556.png","hash":"bf231e9c1ec7a24d248d31c79120a12c97bd8b28","modified":1720856446714},{"_id":"source/img/Patrick Collins_blockchain_note/image-20240305002127313.png","hash":"4a0be3a376fd6d9daa22e47889575cc7b626979d","modified":1720856446538},{"_id":"source/img/Vue3_note/image-20240105104452696.png","hash":"3455d5967d2c30c03ba1b327bec20fb756b5abf7","modified":1720856460358},{"_id":"source/img/Vue3_note/image-20240105104835729.png","hash":"8d0e5f70125cf334e7a8421ad0167a70f7bc6b53","modified":1720856460173},{"_id":"source/img/Vue3_note/image-20240105155229131.png","hash":"612a59e06f2320283fca701eae5b289bf3641221","modified":1720856460262},{"_id":"source/img/Vue3_note/image-20240105120758018.png","hash":"f95b5e5acd3b72e0921d13cf1f6b8ef2c33d59c4","modified":1720856460262},{"_id":"source/img/Vue3_note/image-20240108173531398.png","hash":"56bf31735dcaf818b3d2fe359612a80b914b2812","modified":1720856460359},{"_id":"source/img/Vue3_note/image-20240109132707143.png","hash":"6bfe723c736abb012d5e7c92e6e9bce1b87bb60e","modified":1720856460107},{"_id":"source/img/Vue3_note/image-20240108233851273.png","hash":"d8ed90ea40693d918d4803aa6948baf447ab7422","modified":1720856460359},{"_id":"source/img/Vue3_note/image-20240109132721613.png","hash":"6bfe723c736abb012d5e7c92e6e9bce1b87bb60e","modified":1720856460107},{"_id":"source/img/Vue3_note/image-20240128220343854.png","hash":"6145b0c2e75813d79487503805645abedb7eba6a","modified":1720856460262},{"_id":"source/img/Vue3_note/image-20240128222423403.png","hash":"1a87675539484cbcbc2a39e9d09d41f075f0dcf9","modified":1720856460164},{"_id":"source/img/Vue3_note/image-20240201212634644.png","hash":"dd46083e1a033988d466398f66f182f1b845f27d","modified":1720856460173},{"_id":"source/img/Vue3_note/image-20240201213743914.png","hash":"b1d4e7fb86d3025ef444c3921268cf68465d76e2","modified":1720856460082},{"_id":"source/img/Vue3_note/image-20240310184451213.png","hash":"d990dd6628a3bfe82de11bb548b141982f1a3706","modified":1720856460089},{"_id":"source/img/Vue3_note/image-20240314224306984.png","hash":"8af22b67cc679ae7fa2922ea5b353459c731abc3","modified":1720856460548},{"_id":"source/img/Vue3_note/image-20240329131341634.png","hash":"76e4641a0fb62a91c9b1f1dd7e7afc1f5c21bbd6","modified":1720856460671},{"_id":"source/img/Vue3_note/image-20240330175639344.png","hash":"07d45105c0bcbd47c5285cf6855187890a902707","modified":1720856460540},{"_id":"source/img/Vue3_note/image-20240330175545744.png","hash":"8f94e50085413997b09f9fe6e742fbe5b8711e77","modified":1720856460671},{"_id":"source/img/Vue3_note/image-20240423210315875.png","hash":"8bc1636f80fc56b99b3ecfaae808d2442114ef81","modified":1720856460488},{"_id":"source/img/Vue3_note/image-20240406172521070.png","hash":"5d24ca37f912813473a8609806030913de75824b","modified":1720856460540},{"_id":"source/img/Vue3_note/image-20240423215020646.png","hash":"c3dd2f844a5cff227bac4695f999c93e6fe4ee22","modified":1720856460460},{"_id":"source/img/Vue3_note/lifecycle_zh-CN.FtDDVyNA.png","hash":"eb20655f4a8f654a50e7d20184f51ca9e7bf0269","modified":1720856460813},{"_id":"source/img/minatosys_Blockchain_note/image-20240423222551537.png","hash":"8bc1636f80fc56b99b3ecfaae808d2442114ef81","modified":1720856421102},{"_id":"source/img/jinan_travel/image-20240704110552965.png","hash":"fdda4a5afac13692f42f985eaffc1f0a58010525","modified":1722241906394},{"_id":"source/img/jinan_travel/image-20240702134340918.png","hash":"47a1a7d1c1cb0ec2da72ed0faa1ea51c078aeaaf","modified":1722241905988},{"_id":"source/img/jinan_travel/image-20240704110017720.png","hash":"ab2e245fe5d639df03fe4856fe2c29f221e82013","modified":1722241906394},{"_id":"source/img/software_exam/54573865e5952bd00fb98cbf2d505be8.jpeg","hash":"2cc0b776a20503f2a2abefa9ce32f836980e3fb1","modified":1723894083381},{"_id":"source/img/software_exam/image-20240821211304579.png","hash":"a0f9f967d618ad3bace3a28aba872a899a2dacc4","modified":1724245984594},{"_id":"source/img/taishan_travel/Collage_20240625_124523.jpg","hash":"6255952af789fd61e7f1a9cf8258a81cd63029ae","modified":1722241565213},{"_id":"source/img/taishan_travel/IMG_20240625_032804_edit_5404153770528.jpg","hash":"febc389782df73c9a9f53802b60582a2df5f9f64","modified":1722241563484},{"_id":"source/img/taishan_travel/Screenshot_20240624_223334_com.autonavi.minimap_e.jpg","hash":"a26ac413e5aa4fe243bfcae031117e21196ee74c","modified":1722241567557},{"_id":"source/img/taishan_travel/Screenshot_20240624_202610_com.huawei.compass_edi.jpg","hash":"32e31fd7ea6b043e86ce8b1a00f69fe761a0d88e","modified":1722241568537},{"_id":"source/img/minatosys_FrontEnd_note/image-20240423222551537.png","hash":"8ec4e2c243b8766223588116cd63d185932536b0","modified":1720856429938},{"_id":"source/img/minatosys_FrontEnd_note/image-20240429092312447.png","hash":"9a248eda90f9361998fd146cbf92f228e1c6c363","modified":1720856429938},{"_id":"source/img/minatosys_FrontEnd_note/image-20240429100428388.png","hash":"5c364b31fdda011ea20f8e867556129795a5090e","modified":1720856429927},{"_id":"source/img/minatosys_FrontEnd_note/image-20240429095339280.png","hash":"d2e6e8c197bf5005e70a9197bc9de7a08b5d1ac8","modified":1720856429939},{"_id":"source/img/minatosys_FrontEnd_note/image-20240429100702637.png","hash":"4ba918f4b130ac787daa9ce7cc60eb3f2acb0237","modified":1720856429980},{"_id":"source/img/minatosys_FrontEnd_note/image-20240429100543929.png","hash":"981fda92388ae415602525adabc22107bfed4ed9","modified":1720856429920},{"_id":"source/img/minatosys_FrontEnd_note/image-20240429100754037.png","hash":"9a5196d8615e60944e23d478731a9f19527700bf","modified":1720856429938},{"_id":"source/img/minatosys_FrontEnd_note/image-20240506160424465.png","hash":"64e6d2e0e6c4422e6e31ba48ec4e56efd1d6c1af","modified":1720856429980},{"_id":"source/img/minatosys_FrontEnd_note/image-20240506160655596.png","hash":"afc3ff0e73d5fcc238ff7b5db3cb0d88831e5753","modified":1720856429938},{"_id":"source/masonry/gallery/index.md","hash":"7902fae9b853d762c743436c212d0dd03a86d72a","modified":1724338007219},{"_id":"source/img/xiaozhen_blockchain_note/3f0cfb0ee800495f367fb49c58eea45.png","hash":"cab353523a9a37d0155e62cae4f37f23dd71fcff","modified":1720856491358},{"_id":"source/img/xiaozhen_blockchain_note/04b959cbb244f9b3d13a0cefae513ab.png","hash":"2e47aa5ff1e50148bdb021fcb2bf5d66c3e5185d","modified":1720856491738},{"_id":"source/img/xiaozhen_blockchain_note/cec260ce36410d64a2e680b87dafbbe.png","hash":"c62daf46e275e9f1773473b605bf323ceff08d36","modified":1720856491687},{"_id":"source/img/xiaozhen_blockchain_note/b82daa61a0de14965f383ca4cfbf309.png","hash":"9efd48daea502c3af1a38f7b7d27cc8f71bb6b60","modified":1720856491383},{"_id":"source/img/xiaozhen_blockchain_note/ed5b963beaf85e5b9e489a10efcc51f-170441778579113.png","hash":"fe008396243319755363aa928f096cf4b85b6674","modified":1720856491493},{"_id":"source/img/xiaozhen_blockchain_note/image-20240105091958351.png","hash":"eb42ed8e984591c799c8ea2e557d77e5e58bdf2b","modified":1720856491690},{"_id":"source/img/xiaozhen_blockchain_note/image-20240112095737762.png","hash":"630eaf1419553ce09dcff34a06f4df9858293b3a","modified":1720856491423},{"_id":"source/img/xiaozhen_blockchain_note/image-20240112095746127.png","hash":"7d794f269504ca2c2bd91e991f0d529a270042bf","modified":1720856491493},{"_id":"source/img/xiaozhen_blockchain_note/image-20240115231345044.png","hash":"a8427d6c1498a31691a1b2734782254d536c3c7f","modified":1705331625082},{"_id":"source/img/xiaozhen_blockchain_note/image-20240115231352791.png","hash":"eebc275d7345c52423aae043a8b6c3383f0c0b52","modified":1720856491494},{"_id":"source/img/xiaozhen_blockchain_note/image-20240115231411208.png","hash":"693df2c29d7bf69780e226df802035e8d7367785","modified":1705331651263},{"_id":"source/img/zibo_travel/image-20240725095327146.png","hash":"d8f591e56a44f0194115c91530efaa751043ae20","modified":1722241873042},{"_id":"source/masonry/postcard/index.md","hash":"d361a1de1894ef54d27e3ea2b1c59576b6c333b9","modified":1724338004926},{"_id":"source/img/Patrick Collins_blockchain_note/image-20240110144901761.png","hash":"075eabaabea7e66a5d63734b0f9666ee8b26738c","modified":1720856446868},{"_id":"source/img/Patrick Collins_blockchain_note/image-20240123155705037.png","hash":"f3e68bb57c525d083651c832a57e2c38758e77b7","modified":1720856446486},{"_id":"source/img/Patrick Collins_blockchain_note/image-20240125231013855.png","hash":"cd3b5cfde3716b679c7a2aea17410fab81d7ab3f","modified":1706195413882},{"_id":"source/img/Vue3_note/image-20240105103235439.png","hash":"187d65fbd1fb60c015efa2e2fb5a2e7c0fe4dbee","modified":1720856460173},{"_id":"source/img/Vue3_note/image-20240317151105751.png","hash":"a5035256ad0bd636e6921d34f4ed71c6f83272e0","modified":1720856460766},{"_id":"source/img/emoji/终于.png","hash":"67b767363038f6b4f2a8642fdafb60d82b1b1b0c","modified":1722925268599},{"_id":"source/img/emoji/feizhaidaile.png","hash":"070bd033f187045bc1e64f013b9d271a3327cd0a","modified":1722926669122},{"_id":"source/img/minatosys_Blockchain_note/image-20240423231604679.png","hash":"1505f4651fadfa4016dd9e7cd4ebf7d4e4a26a03","modified":1720856421321},{"_id":"source/img/jinan_travel/Videoframe_20240713_153346_com.huawei.himovie.loc.jpg","hash":"f607d829b94063642da8bdbc2e8649dcbd23a077","modified":1722241901103},{"_id":"source/img/jinan_travel/image-20240702132800880.png","hash":"5ad55fcd68af50e82cb24080aad5760eed16862e","modified":1722241905976},{"_id":"source/img/jinan_travel/sporthealth-1-20240713-153633_edit_42309425324064.jpg","hash":"26668a6e15f7ee9e46695f2af88d9fab33d7a917","modified":1722241899067},{"_id":"source/img/jinan_travel/wx_camera_1719390403383.jpg","hash":"724f12d9f89731ad5b7c937d5e80dec462b29e37","modified":1722922120798},{"_id":"source/img/software_exam/image-20240818113830275.png","hash":"a5bee1ffcf8c0a03c093e41956c15e29636d4c0e","modified":1723952310324},{"_id":"source/img/taishan_travel/mmexport1719446927162_edit_99879125112362.jpg","hash":"513adf55939236c0ffe9e9a0c9d1e1313ffa1fac","modified":1722241564281},{"_id":"source/img/minatosys_FrontEnd_note/image-20240506160609536.png","hash":"e02e82e173722ae812d9088e5cb0f72218cd2206","modified":1720856429981},{"_id":"source/img/xiaozhen_blockchain_note/9c36b711da645ebc72e4fb5b73b7572.png","hash":"d62c2bfb974727783619b0b94adc6e962756348e","modified":1720856491691},{"_id":"source/img/xiaozhen_blockchain_note/image-20240105103235439.png","hash":"187d65fbd1fb60c015efa2e2fb5a2e7c0fe4dbee","modified":1720856491423},{"_id":"source/img/zibo_travel/image-20240724162657704.png","hash":"90243dfe17dfbe98690d126c645f495809c84a8a","modified":1722241872736},{"_id":"source/img/jinan_travel/wx_camera_1719046544940.jpg","hash":"b6b77a16090d424a6dd6d34ca621fda616a27817","modified":1722922139434},{"_id":"source/img/taishan_travel/image-20240726110457865.png","hash":"ee971f7652e9a2d5e4c03f07c9db80db0eaf4e3d","modified":1722241565068},{"_id":"source/img/wuxi_travel/微信图片_20240529122852.jpg","hash":"f8d9826977d6bd11f5c80a43e98a513fd933d3ff","modified":1720856474399},{"_id":"source/img/jinan_travel/image-20240704161658983.png","hash":"a2950b40be65e124ef047e8d9c438dde82f850fd","modified":1722241899067},{"_id":"source/img/taishan_travel/IMG_20240625_051334.jpg","hash":"0870dd5b437a7d162bc1f8d35d0adb6a77fd844b","modified":1722241563600},{"_id":"source/img/taishan_travel/IMG_20240624_185754.jpg","hash":"9107ab05d372bef8bed7c607acc23d0aa5bc6c59","modified":1722241563899},{"_id":"source/img/xiaozhen_blockchain_note/5d552b84a412de924d855c63a4498a7.png","hash":"3e246dd9512878a7f2fd71ec520414febcdd285c","modified":1720856491692},{"_id":"source/img/zibo_travel/eb43fd68f43fd31e4d26e0f8586056c.png","hash":"adfedaa2b4e00fb787ec03bfc70111f4aef74de7","modified":1722241872967},{"_id":"source/img/taishan_travel/南天门夕阳.jpg","hash":"c6ad6ef90aa135ac915574b79ec8eb1a21befd66","modified":1722241563903},{"_id":"source/img/wuxi_travel/c46d2fb753b96b77cca1985ccf7d70d.png","hash":"8f2a90a8c68bb7b05b695414019384246da80c7f","modified":1720856473838},{"_id":"source/img/wuxi_travel/932115e476bfe0ce837efe884767298.png","hash":"8f065ab45523cdbf0ac5a6e07016aca1935f2ec8","modified":1720856472059},{"_id":"source/img/wuxi_travel/252625631f0c6b7aa772de90aec5d2c.png","hash":"99f468639ebfdf1f9f077e40e329486ce37cce12","modified":1720856472909},{"_id":"source/img/taishan_travel/IMG_20240625_051923.jpg","hash":"11367eb3aef8ab89ba87b866b392e10be6d268ea","modified":1722241563601},{"_id":"source/img/taishan_travel/IMG_20240626_104302.jpg","hash":"5aa223f0b2a5ef53cc54fad680b68a395fac32b5","modified":1722241564867},{"_id":"source/img/taishan_travel/IMG_20240626_092948.jpg","hash":"89d99b14eab39d8c20653934f30f1946901cab35","modified":1722241564637},{"_id":"source/img/taishan_travel/IMG_20240626_100914_edit_49982107513205.jpg","hash":"e944a5f74d30642a0e337521a32e70f166e2ae3f","modified":1722241564466},{"_id":"source/img/wuxi_travel/ee0d47a4f62780f85d318749fc25a8f.png","hash":"39e245bf12286997ad05d3d5ef14cff0055f8b58","modified":1720856474221},{"_id":"source/img/wuxi_travel/微信图片_20240529122839.jpg","hash":"35592213b66417604039fb563c883f0135f911ff","modified":1720856475577},{"_id":"source/img/zibo_travel/image-20240725095442762.png","hash":"7cc032667e415f8566727220002060de637abf9f","modified":1722241873944},{"_id":"source/img/taishan_travel/勇闯天涯.jpg","hash":"afbffc608a90ac6b7b1fc1c7bcfd2482c0dcef70","modified":1722241563590},{"_id":"source/img/wuxi_travel/4b89c957cac4bc0340105379d6c3149.png","hash":"a289c0f062cc95eb7a3c2840d4f56a7ce2d76ece","modified":1720856475452},{"_id":"source/img/wuxi_travel/618cb82399ff8e5247523225e7c3295.png","hash":"eb4a2f04a02b9d53705c32e98f3d36c9d2001f0d","modified":1720856471936},{"_id":"source/img/wuxi_travel/97dea71c2818e9e05ffde08045531b4.jpg","hash":"64c45a0b846db3bef1300c1255cf771d5c362fff","modified":1720856472061},{"_id":"source/img/jinan_travel/image-20240704155606548.png","hash":"0a31ea78b4c0f1716d37582268757ddc5b1030ef","modified":1722241899021},{"_id":"themes/redefine/.gitignore","hash":"9573fa414d4d41ccf48a3bdd2b183ac7dec484d5","modified":1724071631096},{"_id":"themes/redefine/.npmignore","hash":"79596a6faba67852ff4d0426602141426f48639f","modified":1724071631096},{"_id":"themes/redefine/CONTRIBUTING.md","hash":"c6ef834f602b7ae02e2863a2a857e0ce8d392f15","modified":1724071631097},{"_id":"themes/redefine/DONATION.md","hash":"c04ce21a6a0ff9ccd31e792abd17fe6257c681ab","modified":1724071631098},{"_id":"themes/redefine/CODE_OF_CONDUCT.md","hash":"61a6276ef54989b7a1325f3ecb3183a4dfdf50cb","modified":1724071631097},{"_id":"themes/redefine/LICENSE","hash":"1de7bacb4fbbd7b6d391a69abfe174c2509ec303","modified":1724071631099},{"_id":"themes/redefine/README_zh-CN.md","hash":"c670a196349beb3c7512977ab650cac5ca3dcfb3","modified":1724071631100},{"_id":"themes/redefine/README.md","hash":"532badccacd8b17376b54d1042eee9599e8bb39f","modified":1724071631100},{"_id":"themes/redefine/README_zh-TW.md","hash":"2fe52c3da506f864f536097c735179b00d11c341","modified":1724071631100},{"_id":"themes/redefine/_config.yml","hash":"60f3f6669e1dc6d54c42b128d44aeca699c901ba","modified":1724566974021},{"_id":"themes/redefine/package.json","hash":"d79edcfb4eb38331ced023014131a780d73eaca1","modified":1724071631125},{"_id":"themes/redefine/tailwind.config.js","hash":"27227462bb6dc16b57fcc75baa17e354f841b6e4","modified":1724071631258},{"_id":"themes/redefine/vercel.json","hash":"357c1fd2678f8ae4a9a852a1a6888c8eca774551","modified":1724071631259},{"_id":"themes/redefine/languages/ja.yml","hash":"8a125bb668274de2985f12f3eb9b9857e22e389f","modified":1724071631102},{"_id":"themes/redefine/.github/FUNDING.yml","hash":"7d7dc34bf08883dad940625ac098790bd1a50fb0","modified":1724071631092},{"_id":"themes/redefine/languages/en.yml","hash":"157f84538d34fb3d47a05482a8b45c1e1a5c8ef8","modified":1724413846258},{"_id":"themes/redefine/languages/zh-CN.yml","hash":"f1ab49b05efcf3293f660faca65c9ff1028ee622","modified":1724414426227},{"_id":"themes/redefine/layout/archive-content.ejs","hash":"2adfbb9954af9fcf2047c8abc85d4664d45167af","modified":1724071631118},{"_id":"themes/redefine/languages/zh-TW.yml","hash":"84819d96f8c27f51ece8f1eabc74b9f79b16db2e","modified":1724071631102},{"_id":"themes/redefine/layout/archive.ejs","hash":"8456f112fc12bbb1c83cd190d0ce83ee474bd297","modified":1724071631119},{"_id":"themes/redefine/layout/category-content.ejs","hash":"5c4fdc9c2b7f225edb7ebb2abf6925b81c5e698f","modified":1724071631120},{"_id":"themes/redefine/layout/category-list.ejs","hash":"21eba67679bcb476bc9403bbbe4705c3dd2d51ac","modified":1724421896052},{"_id":"themes/redefine/layout/category.ejs","hash":"8456f112fc12bbb1c83cd190d0ce83ee474bd297","modified":1724071631120},{"_id":"themes/redefine/layout/layout.ejs","hash":"e13ebcba0323e0641457d04009c6b548b914ef3d","modified":1724679678585},{"_id":"themes/redefine/layout/page.ejs","hash":"044eed2b8eb5692d007da70cdeb4b5f57f110b13","modified":1724421914890},{"_id":"themes/redefine/layout/tag.ejs","hash":"8456f112fc12bbb1c83cd190d0ce83ee474bd297","modified":1724071631123},{"_id":"themes/redefine/layout/tag-content.ejs","hash":"6134aa2a112b9d8daa3eeaf9a1ee41bbeaf7eb24","modified":1724071631122},{"_id":"themes/redefine/layout/404.ejs","hash":"8456f112fc12bbb1c83cd190d0ce83ee474bd297","modified":1724071631103},{"_id":"themes/redefine/scripts/dataHandle.js","hash":"3a069d3f529dceed3fd98e99d5940989f1087305","modified":1724071631126},{"_id":"themes/redefine/layout/tags.ejs","hash":"8456f112fc12bbb1c83cd190d0ce83ee474bd297","modified":1724071631123},{"_id":"themes/redefine/layout/article-content.ejs","hash":"06fc5b68e843065c80d07a9a56997d61576b04f7","modified":1724484482631},{"_id":"themes/redefine/.github/ISSUE_TEMPLATE/bug-english.yml","hash":"23bcdb79064f0e967258be662777c3a424140782","modified":1724071631093},{"_id":"themes/redefine/.github/ISSUE_TEMPLATE/enhancement-english.yml","hash":"e43dc9d37f8ad5cdfd12aacf6f85b71346ae6e9b","modified":1724071631094},{"_id":"themes/redefine/.github/ISSUE_TEMPLATE/enhancement-chinese.yml","hash":"b55c4e79ea4946318324c79b8be61a8ae16cc5c9","modified":1724071631093},{"_id":"themes/redefine/.github/workflows/aliyun-cdn-publish.yml","hash":"18975c5422509b0fb7c3b6ddd788eac65802781a","modified":1724071631094},{"_id":"themes/redefine/.github/ISSUE_TEMPLATE/bug-chinese.yml","hash":"5616b1ba5ddcd91755fce55fdb6d13022e5d39c0","modified":1724071631093},{"_id":"themes/redefine/layout/index.ejs","hash":"f5fee4e079a9c2c23059ebde4cd89ec723e310c6","modified":1724071631121},{"_id":"themes/redefine/.github/workflows/npm-publish.yml","hash":"46bdc96146a893148bfbc37e47881aa25769d32c","modified":1724071631095},{"_id":"themes/redefine/.github/workflows/preview-deployment.yml","hash":"d4ffce573836dfd5eaf3f247a4c1943462ade699","modified":1724071631095},{"_id":"themes/redefine/.github/workflows/production-deployment.yml","hash":"d411d426c6df79ac7e487401f0f11206c245d1c1","modified":1724071631095},{"_id":"themes/redefine/.github/workflows/stale-issues.yml","hash":"e51a46d8af88087fe7512885ec3a87df753c3776","modified":1724071631096},{"_id":"themes/redefine/layout/_meta/article-copyright.ejs","hash":"8e97d76ded33d1e334c376451e2f3d5fd177a958","modified":1724071631104},{"_id":"themes/redefine/layout/_plugins/aplayer.ejs","hash":"c8f275cdbbe14b4673c69f7c1463b1f830ec8e40","modified":1724071631113},{"_id":"themes/redefine/layout/_meta/article-info.ejs","hash":"1d551beb7cc47d6c841ce63a7f0f0ffb30c1770b","modified":1724071631104},{"_id":"themes/redefine/layout/_meta/home-article.ejs","hash":"b54a0df26341fa5f26a6e1eedb91cd11014d50c5","modified":1724071631104},{"_id":"themes/redefine/layout/_plugins/swup.ejs","hash":"9fbfd2872dfbe92ec715357d5238647987d8cbdf","modified":1724071631113},{"_id":"themes/redefine/layout/_partials/404-template.ejs","hash":"e3574f623ea22ec3e90413909321a9a3b447f7e2","modified":1724071631105},{"_id":"themes/redefine/layout/_partials/footer.ejs","hash":"e97bb31749d8b29177aeb743429512fa5033e60c","modified":1724674654326},{"_id":"themes/redefine/layout/_partials/head.ejs","hash":"c451c9110ec362f9a1278248571652c7dd42c4ee","modified":1724071631108},{"_id":"themes/redefine/layout/_partials/home-background.ejs","hash":"dd120259ab091b8087d0194ea2291676556efad8","modified":1724071631108},{"_id":"themes/redefine/layout/_partials/home-banner.ejs","hash":"5cc6d0a703c207e86c9def16c0885ec69b3c8658","modified":1724071631109},{"_id":"themes/redefine/layout/_partials/home-content.ejs","hash":"9443d55dd5ae33350fec8181b43057b93f831604","modified":1724071631109},{"_id":"themes/redefine/layout/_partials/home-sidebar.ejs","hash":"976d24d01194a9340957617db24b30f63c1ba66b","modified":1724071631110},{"_id":"themes/redefine/layout/_partials/navbar.ejs","hash":"7f9a1044a047a7a1787ea690c163093fc682f74c","modified":1724413594134},{"_id":"themes/redefine/layout/_partials/page-template.ejs","hash":"5d03f543ae291598ee227af758da73304a51633e","modified":1724071631110},{"_id":"themes/redefine/layout/_partials/preloader.ejs","hash":"d6d60bb0c3803877358c29e8f92ecc8fd0b41221","modified":1724423249774},{"_id":"themes/redefine/layout/_widgets/archive-list.ejs","hash":"d0dd3ef263f9cd0d5908a46a0f1c6b9ac64237e0","modified":1724071631114},{"_id":"themes/redefine/layout/_partials/scripts.ejs","hash":"1f0219c25aa35f4129686f290e987a3f28b3869d","modified":1724071631111},{"_id":"themes/redefine/layout/_widgets/essays.ejs","hash":"e4332342b7dd95449c2a84edfe8323f54db6f4b5","modified":1724071631114},{"_id":"themes/redefine/layout/_widgets/friends-link.ejs","hash":"1b9c06d46ecaee674c98e649241d4ee1f3dfaac4","modified":1724423490865},{"_id":"themes/redefine/layout/_widgets/local-search.ejs","hash":"72c9acca0280f0e63e6a5d31618dd2707bdbec3f","modified":1724071631115},{"_id":"themes/redefine/layout/_widgets/image-viewer.ejs","hash":"beb3dec5e08856a29d585fe0eb94a8a6ddade4dd","modified":1724071631115},{"_id":"themes/redefine/layout/_widgets/masonry.ejs","hash":"cbf1795b3944ac078e86308fb624afb46c2ec4c1","modified":1724251810855},{"_id":"themes/redefine/layout/_widgets/paginator.ejs","hash":"a237e7b858e0cf32ca67553d540f7c5f7239a8d0","modified":1724071631116},{"_id":"themes/redefine/layout/_widgets/post-tools.ejs","hash":"c2d193e84e0781423ce1c018ee2be1116359d694","modified":1724071631117},{"_id":"themes/redefine/layout/_widgets/side-tools.ejs","hash":"5da164c16c8266555ff8cb8f79b9e7529fdd0a78","modified":1724679687430},{"_id":"themes/redefine/layout/_widgets/progress-bar.ejs","hash":"4cab094eafc72b19662a7c9eb888e632d7bb15e7","modified":1724071631117},{"_id":"themes/redefine/scripts/events/404.js","hash":"169245d7b2af1ff401cf76e718c28b4e38f637c7","modified":1724071631126},{"_id":"themes/redefine/scripts/events/welcome.js","hash":"79c297334542c7d8eec10bd1c10390422d26f20c","modified":1724071631126},{"_id":"themes/redefine/layout/_widgets/tagcloud.ejs","hash":"e93cf1d920557d754773477c3aa2ce199e43385b","modified":1724422007582},{"_id":"themes/redefine/scripts/helpers/articleRecommend.js","hash":"b9ede93bfd16af13871625d2d127bf79d99724d1","modified":1724071631130},{"_id":"themes/redefine/scripts/helpers/autoCanonical.js","hash":"f3ea74759129c71041371a1d77c687eb6aa88d3a","modified":1724071631130},{"_id":"themes/redefine/scripts/helpers/configExport.js","hash":"c1e5b36a8d8e97218c8cc1aab77ec38d5457c846","modified":1724071631131},{"_id":"themes/redefine/scripts/helpers/seoGenerate.js","hash":"e0059a60cc5978be6792dcf795a2ece3a509f41a","modified":1724071631131},{"_id":"themes/redefine/scripts/helpers/themeHelpers.js","hash":"fba0d764bff87988d253cdfb54fd373abe33b1c9","modified":1724071631131},{"_id":"themes/redefine/layout/_widgets/toc.ejs","hash":"46ef94dca9be59d163f6b4cba16e1695e8020bc3","modified":1724071631118},{"_id":"themes/redefine/scripts/modules/btn.js","hash":"aa7a34ff5fb0a624163c38fffe0746cef44d2ea3","modified":1724071631132},{"_id":"themes/redefine/scripts/helpers/walineConfig.js","hash":"9f2c3d6c4c7cf6212d28be0729816cd66921bd67","modified":1724071631132},{"_id":"themes/redefine/scripts/modules/btns.js","hash":"a91492e772287114527a3fbc85f0c7c1c1b15eb3","modified":1724071631133},{"_id":"themes/redefine/scripts/modules/note-large.js","hash":"b3e19b9a5c57e3e029bf9ead84aac750f799a9b3","modified":1724071631133},{"_id":"themes/redefine/scripts/modules/folding.js","hash":"cfa6646c1350c557430149bd52578c6cac59063b","modified":1724071631133},{"_id":"themes/redefine/scripts/modules/tabs.js","hash":"74e3b0cdd009206f7b78b04dcb96eccd86e7a996","modified":1724071631134},{"_id":"themes/redefine/scripts/modules/note.js","hash":"8fc9f2e7d78fe2d1644828d8a79e2c48597f6103","modified":1724071631134},{"_id":"themes/redefine/scripts/filters/encrypt.js","hash":"0d23ffd5ff5c2dd40268b1831d0b2209ba893871","modified":1724492364223},{"_id":"themes/redefine/source/assets/odometer-theme-minimal.css","hash":"793c31feb38e241a5ff6ecc5e65e61751507d728","modified":1724071631136},{"_id":"themes/redefine/scripts/filters/imgHandle.js","hash":"b396fe7b6cbc331f2952aa7561f96c1f250d8c52","modified":1724071631127},{"_id":"themes/redefine/source/assets/hbe.style.css","hash":"29be8fc47be885e9954e310cbc68dfadd3b4cee6","modified":1724071631136},{"_id":"themes/redefine/scripts/filters/lazyloadHandle.js","hash":"f8ae44311e6463e887c07a41910ebade8766bac2","modified":1724071631128},{"_id":"themes/redefine/scripts/filters/linkHandle.js","hash":"7d8cb128dbfed1a4ef9b07142a63ba0c6c383628","modified":1724071631128},{"_id":"themes/redefine/scripts/filters/stylHandle.js","hash":"8a8bf069ce096bd7b42952c8e50c3c89758cbc13","modified":1724071631129},{"_id":"themes/redefine/scripts/filters/tableHandle.js","hash":"c500c45cd9221788df1f31939c5399eabb62ebb5","modified":1724071631129},{"_id":"themes/redefine/source/css/style.styl","hash":"e8679a7dde047eeb2385eade6252b0f827d0979d","modified":1724422718749},{"_id":"themes/redefine/source/fontawesome/brands.min.css","hash":"5119c35bbd273d2ea2501997827f6d644da93164","modified":1724071631158},{"_id":"themes/redefine/source/fontawesome/light.min.css","hash":"18a176eb2486db4e938e568083fa578b641ccc83","modified":1724071631160},{"_id":"themes/redefine/source/fontawesome/regular.min.css","hash":"d27c4fed54dacff688010e51f611d950dd6e0aca","modified":1724071631161},{"_id":"themes/redefine/source/fontawesome/sharp-solid.min.css","hash":"7d1a13c6b8178b29f5bcb1a639a1998fc9de16c4","modified":1724071631161},{"_id":"themes/redefine/source/fontawesome/solid.min.css","hash":"e727feabedb171fb0b398151870d7739ef4e2432","modified":1724071631161},{"_id":"themes/redefine/source/fontawesome/svg-with-js.min.css","hash":"f4c08e37c4d44b3ed7a3f377d1cb5d7fca4d04bc","modified":1724071631162},{"_id":"themes/redefine/source/fontawesome/thin.min.css","hash":"3d46be31379b07ffb24d69c6c915725eaa2e89e9","modified":1724071631162},{"_id":"themes/redefine/source/fontawesome/v4-font-face.min.css","hash":"0be987628c8b485b39f064da41c90f15c0596c1f","modified":1724071631162},{"_id":"themes/redefine/source/fontawesome/v4-shims.min.css","hash":"96f037860b8e9b59af8e47571ea98791616dbfd8","modified":1724071631163},{"_id":"themes/redefine/source/fontawesome/v5-font-face.min.css","hash":"260ea7a5e0b89963a5dcf2600a4decdf0f408f3f","modified":1724071631163},{"_id":"themes/redefine/source/images/loading.svg","hash":"938c2a41c8ba18e37ed659e481696e40a4c8f3a4","modified":1724071631173},{"_id":"themes/redefine/source/images/redefine-logo.svg","hash":"472776b6f013aad44706fee6c94201c96ee83932","modified":1724071631174},{"_id":"themes/redefine/source/images/redefine-favicon.svg","hash":"420f930a1df64a3c4391ff80326a8a2d7d5a6418","modified":1724071631174},{"_id":"themes/redefine/source/images/redefine-avatar.svg","hash":"d0d20061bda08894a82d7691b660be7c6aaa0608","modified":1724071631174},{"_id":"themes/redefine/source/images/redefine-logo.webp","hash":"0a07e3fb6d9125dee44798c8c110187b16fb42a9","modified":1724071631175},{"_id":"themes/redefine/source/images/tenten-favicon.svg","hash":"61c015e6473e98c05bf611b0ff8f76d9f666e94a","modified":1724568797053},{"_id":"themes/redefine/source/images/tenten.ico","hash":"c258a434621ea84308efd4f0c3fad989d9b10a95","modified":1717075784246},{"_id":"themes/redefine/source/js/main.js","hash":"9d1d5167d8b966786268841abdf3c1639fd6d13a","modified":1724675946882},{"_id":"themes/redefine/source/js/utils.js","hash":"00fe71414bf6a95bd4438cb301cf9096df90c46c","modified":1724071631212},{"_id":"themes/redefine/source/webfonts/fa-v4compatibility.ttf","hash":"b54531dd09c5089eb93b12ce8f90ff521855ff8a","modified":1724071631257},{"_id":"themes/redefine/source/webfonts/fa-v4compatibility.woff2","hash":"d02b1adc81fd5bec023e25a7770779b99d6dd742","modified":1724071631258},{"_id":"themes/redefine/layout/_partials/comments/gitalk.ejs","hash":"1e1cf5e5f883f2bde0a76d6edb1d42bbd125c313","modified":1724071631106},{"_id":"themes/redefine/layout/_partials/comments/giscus.ejs","hash":"5a20975c17daeed5a602dedd0682a29d7c56e42f","modified":1724071631106},{"_id":"themes/redefine/source/assets/build/styles.css","hash":"cd12316db86666d63e78c6b692036aedbd7de0f0","modified":1724422832048},{"_id":"themes/redefine/layout/_partials/comments/twikoo.ejs","hash":"2945e818e4406fbb5628a465023c7e4d445c0975","modified":1724071631107},{"_id":"themes/redefine/scripts/filters/lib/hbe.default.js","hash":"fee2c92011ef007121b992193bbab0f3b196d873","modified":1724071631128},{"_id":"themes/redefine/layout/_partials/comments/waline.ejs","hash":"35239e49743c6b7f40014bd753bff9c415b5fcbb","modified":1724071631107},{"_id":"themes/redefine/source/css/common/animated.styl","hash":"ab52b066c427cee62d67e4da136878114c7b1afe","modified":1724071631137},{"_id":"themes/redefine/source/css/common/variables.styl","hash":"c864d522c477bf910a73830762d2656c091455ec","modified":1724568213712},{"_id":"themes/redefine/source/css/common/redefine-theme.styl","hash":"ff099b1959829e3070e5077c4a3b13e1c1573e79","modified":1724071631140},{"_id":"themes/redefine/source/css/common/basic.styl","hash":"0493e7ae8c2b07cf1172fa1b68ea1ec74795878b","modified":1724071631138},{"_id":"themes/redefine/source/css/common/markdown.styl","hash":"ee6a2118ed3fce956afa5a5bf0588cd4caf43304","modified":1724422718750},{"_id":"themes/redefine/layout/_partials/sidebar-components/author.ejs","hash":"422aed0f3f67529c1ea87ee43f8f680ffc531b45","modified":1724071631112},{"_id":"themes/redefine/layout/_partials/comments/comment.ejs","hash":"e0c2e22351d2740e7f7584028a9ea7c87f26372f","modified":1724071631105},{"_id":"themes/redefine/layout/_partials/sidebar-components/avatar.ejs","hash":"47cd8318471493c82f5e5983550145d4fd0a2ddc","modified":1724071631112},{"_id":"themes/redefine/layout/_partials/sidebar-components/statistics.ejs","hash":"4329363d232de541e1cb8f24eb59c1a8bacc9b9c","modified":1724071631112},{"_id":"themes/redefine/source/fonts/Chillax/Chillax-Variable.woff","hash":"fc0e791429c274c4c9312d810e7ae9503cab34ab","modified":1724071631166},{"_id":"themes/redefine/source/fonts/Chillax/Chillax-Variable.woff2","hash":"fc5d99b40db9deca7d151f9bd16b96ff160828b7","modified":1724071631167},{"_id":"themes/redefine/source/fonts/Chillax/chillax.css","hash":"210179f53c6bce91a12ca6db9129184cc1549c36","modified":1724071631167},{"_id":"themes/redefine/source/fonts/Geist/geist.css","hash":"17f37a09d6192f06b2190f8319114238b0a2ec8c","modified":1724071631170},{"_id":"themes/redefine/source/css/layout/archive-content.styl","hash":"4e329547447c716c986e0b4a4f54afc59fc6b486","modified":1724071631151},{"_id":"themes/redefine/source/fonts/Geist/GeistVF.woff2","hash":"772998a8569a6caa04927d876fbe9e0fb859658b","modified":1724071631170},{"_id":"themes/redefine/source/css/layout/category-content.styl","hash":"4f9a5559b5269ec74b5f49ac113268f747bf0243","modified":1724071631152},{"_id":"themes/redefine/source/css/layout/article-content.styl","hash":"348758fb8eeee788d3fbf618ea79b54c7e683b43","modified":1724423152606},{"_id":"themes/redefine/source/css/layout/home-content.styl","hash":"c807b967ec6a6cc87b81ad3257c1080e8955c837","modified":1724568201381},{"_id":"themes/redefine/source/css/layout/home-sidebar.styl","hash":"8b48a113d06d828e03daa338e02c6739990b3d7c","modified":1724568289948},{"_id":"themes/redefine/source/css/layout/category-list.styl","hash":"534aa6a85c2017e44fe31a176e33dc494ce57bb8","modified":1724422718751},{"_id":"themes/redefine/source/js/layouts/navbarShrink.js","hash":"3e80bf9ef719b2ddb2d1c4b67eb169d2ef52dbb8","modified":1724071631177},{"_id":"themes/redefine/source/css/layout/page.styl","hash":"e5c0b44623d18d0c2674069b3796546dd9857b8d","modified":1724683325685},{"_id":"themes/redefine/source/css/layout/tag-content.styl","hash":"6c9ec582c1d8699bdff5a4cd1524121cc6ca8522","modified":1724071631154},{"_id":"themes/redefine/source/js/layouts/categoryList.js","hash":"eb1af2cd0726f56ff7861222ea543315fe295a17","modified":1724071631177},{"_id":"themes/redefine/source/js/layouts/lazyload.js","hash":"c06323d68bbdebbb685db5010e7655b8ed0caf42","modified":1724071631177},{"_id":"themes/redefine/source/js/layouts/toc.js","hash":"7a768982f6cb1f40552cce063d5743fe862db762","modified":1724071631178},{"_id":"themes/redefine/source/js/libs/Swup.min.js","hash":"cc054d34e74a1feecfae75064f6a4d6107607396","modified":1724071631180},{"_id":"themes/redefine/source/js/libs/APlayer.min.js","hash":"22caa28ff6b41a16ff40f15d38f1739e22359478","modified":1724071631179},{"_id":"themes/redefine/source/js/libs/SwupPreloadPlugin.min.js","hash":"d911512891ecbe1935203bcd3d93427ad75e45c8","modified":1724071631181},{"_id":"themes/redefine/source/js/libs/SwupPreloadPlugin.min.js.map","hash":"40513fec1323b601667876a97a9ef8a0c88bff63","modified":1724071631182},{"_id":"themes/redefine/source/js/libs/SwupProgressPlugin.min.js","hash":"fd30fe1c43072017f67bbaac18b962a5ac218711","modified":1724071631183},{"_id":"themes/redefine/source/js/libs/SwupScriptsPlugin.min.js","hash":"b17f3434035f1339d6f9cd5c8a055d2a1b6602e9","modified":1724071631183},{"_id":"themes/redefine/source/js/libs/SwupScrollPlugin.min.js","hash":"6c3afca9bb98f79d14516c093f27e3e50a3fd82e","modified":1724071631184},{"_id":"themes/redefine/source/js/libs/SwupSlideTheme.min.js","hash":"e9d143780e879d958164b1356b7f918ec25e838a","modified":1724071631185},{"_id":"themes/redefine/source/js/libs/Typed.min.js","hash":"e8ce2b674a637b0c0396a3106c1aedf10186249c","modified":1724071631185},{"_id":"themes/redefine/source/js/libs/SwupScrollPlugin.min.js.map","hash":"63cf04ba556b256379e103ef7d3ba12d629449a4","modified":1724071631184},{"_id":"themes/redefine/source/js/libs/anime.min.js","hash":"47cb482a8a488620a793d50ba8f6752324b46af3","modified":1724071631185},{"_id":"themes/redefine/source/js/libs/minimasonry.min.js","hash":"9681cc509cb8aa733d36aad032e6e8acdb33c08c","modified":1724071631200},{"_id":"themes/redefine/source/js/libs/odometer.min.js","hash":"fe5beb60997c84ab2f91b54535c4221443cdd21f","modified":1724071631200},{"_id":"themes/redefine/source/js/libs/pjax.min.js","hash":"3d796e5be9cdd4067c94e190ea2482d7fdb4856c","modified":1724071631201},{"_id":"themes/redefine/source/js/plugins/aplayer.js","hash":"1b7d9dff8db52b14825775fd55054c6adf269bf7","modified":1724071631207},{"_id":"themes/redefine/source/js/plugins/hbe.js","hash":"abd3b27238e26dc3bdd65e0e69fa514fa432a75b","modified":1724675944279},{"_id":"themes/redefine/source/js/plugins/masonry.js","hash":"92734a30a21f8b16f20aa75208f6c082890275fb","modified":1724071631208},{"_id":"themes/redefine/source/js/plugins/tabs.js","hash":"964ec5c25a8d78763ba2ba9bfbd5b1b49ed05381","modified":1724071631209},{"_id":"themes/redefine/source/js/plugins/mermaid.js","hash":"303254d382869ed618025fcb328426bd10314583","modified":1724071631208},{"_id":"themes/redefine/source/js/plugins/typed.js","hash":"01799d5c07633f33b1d2893f524054074d56ec65","modified":1724071631209},{"_id":"themes/redefine/source/fonts/GeistMono/GeistMonoVF.woff2","hash":"11e9a061ce255fc4cc45ac3eeb8cab09a49f5ccc","modified":1724071631172},{"_id":"themes/redefine/source/fonts/GeistMono/geist-mono.css","hash":"b89d5af7e04df579c8ad62c0ea445ff7d16eec11","modified":1724071631173},{"_id":"themes/redefine/source/js/tools/imageViewer.js","hash":"f2ed02b6489c601821cd257c6ffa28c25f07bdd7","modified":1724071631210},{"_id":"themes/redefine/source/js/tools/runtime.js","hash":"eb0374b6f033f7ac25f49b1b079aa163e14b0fcd","modified":1724071631211},{"_id":"themes/redefine/source/js/tools/codeBlock.js","hash":"344e6c83e6ffda22f6e5bc724d603066b49a7d8b","modified":1724071631210},{"_id":"themes/redefine/source/js/tools/localSearch.js","hash":"f6e59f65c676457198c2cf5d78bd06052499ee38","modified":1724071631211},{"_id":"themes/redefine/source/js/tools/lightDarkSwitch.js","hash":"97b7e68f871dc218fceca77b85ac051c7c6306af","modified":1724071631210},{"_id":"themes/redefine/source/js/tools/scrollTopBottom.js","hash":"9e54fa4310bb98ea5ba61780a9ef56d05d475203","modified":1724071631211},{"_id":"themes/redefine/source/js/tools/tocToggle.js","hash":"c2224ff0370fcf109e94194613b9480a3913c82d","modified":1724071631212},{"_id":"themes/redefine/source/css/layout/_modules/aplayer.styl","hash":"20b9b774e75e7a44cc4bdf1cbefe67d98d9f3bb7","modified":1724682166558},{"_id":"themes/redefine/source/css/common/codeblock/code-theme.styl","hash":"a3cc2e7a83a8ed575681f6cb6e3b4ef205689c2a","modified":1724071631139},{"_id":"themes/redefine/source/css/common/codeblock/code-block.styl","hash":"0593c3555640bb9132caaccac9821225ea3b97c8","modified":1724071631138},{"_id":"themes/redefine/source/css/common/codeblock/highlight.styl","hash":"2d498609f0b4608e6346d100d3effad0c4aa2c54","modified":1724071631139},{"_id":"themes/redefine/source/css/layout/_modules/buttons.styl","hash":"18bd3c1d00e2cc6416cef69433b207ae5c947ba1","modified":1724071631142},{"_id":"themes/redefine/source/css/layout/_modules/tabs.styl","hash":"fb5f2f223f7d4ed86d3693fdc0977362f456212e","modified":1724071631143},{"_id":"themes/redefine/source/css/layout/_partials/404.styl","hash":"16215f6fe664d1ddc5744a626405bc774dc30f70","modified":1724071631143},{"_id":"themes/redefine/source/css/layout/_modules/notes.styl","hash":"37b2a4a0669414c74498ed0ecae873c90b15fe6e","modified":1724071631142},{"_id":"themes/redefine/source/css/layout/_partials/archive-list.styl","hash":"1c869018d795c06d34738d4924e207bab9571f59","modified":1724071631143},{"_id":"themes/redefine/source/css/layout/_modules/folding.styl","hash":"b5e5c2407eb83ae4b3ee4ed73490dcd41edef705","modified":1724071631142},{"_id":"themes/redefine/source/css/layout/_partials/article-meta-info.styl","hash":"1f680910751b36c4445a48c5a48eda3187412eaf","modified":1724071631144},{"_id":"themes/redefine/source/css/layout/_partials/article-copyright-info.styl","hash":"12fad2f674e8a7ad009cabecf4e98b65d5ed8b1e","modified":1724071631144},{"_id":"themes/redefine/source/css/layout/_partials/footer.styl","hash":"b9028c74a9f75536d5a7cee77a25a5d77469515a","modified":1724071631146},{"_id":"themes/redefine/source/css/layout/_partials/home-banner.styl","hash":"39b3753f86bf30b6eb5276cc2a2aa43e7729a303","modified":1724071631147},{"_id":"themes/redefine/source/css/layout/_partials/image-viewer.styl","hash":"6c8eeb7a96cae110cd9a684a3a5076148b8154d8","modified":1724071631147},{"_id":"themes/redefine/source/css/layout/_partials/local-search.styl","hash":"a9c99c57b27afbe7f00f1f14f0e46c41748affb5","modified":1724071631147},{"_id":"themes/redefine/source/css/layout/_partials/navbar.styl","hash":"dea655ebe2bbf57324da195e42185a4df2c7946a","modified":1724071631148},{"_id":"themes/redefine/source/css/layout/_partials/page-template.styl","hash":"c57dccb2fdc13fc7bceb730c7b0eda9590557bd9","modified":1724071631148},{"_id":"themes/redefine/source/css/layout/_partials/post-tools.styl","hash":"d602c2fe191d2c639f7cd8c4d0ee618f8c80f5c1","modified":1724071631149},{"_id":"themes/redefine/source/css/layout/_partials/progress-bar.styl","hash":"d3715280d9b62d89ccd1b79ab5e5f030669f4d88","modified":1724071631149},{"_id":"themes/redefine/source/css/layout/_partials/paginator.styl","hash":"53421b731f3d7ed34a3a4c87405e06ae3d6519e0","modified":1724071631148},{"_id":"themes/redefine/source/css/layout/_partials/side-tools.styl","hash":"995982b8c228f7386d352042f64587d06663716e","modified":1724071631150},{"_id":"themes/redefine/source/css/layout/_partials/tagcloud.styl","hash":"a80180aad2cb97cbb3dafcab804cf4dd12ae2b01","modified":1724422718751},{"_id":"themes/redefine/source/css/layout/_partials/toc.styl","hash":"13949981a5afa2b0483da1836af5999d992961f9","modified":1724071631150},{"_id":"themes/redefine/source/css/layout/_partials/comments/twikoo.styl","hash":"448cbc045bcffa2d666094b81dd99eb980676fff","modified":1724071631145},{"_id":"themes/redefine/source/css/layout/_partials/comments/gitalk.styl","hash":"85f26189ec6dee13a0a743687e7b5391f170c33f","modified":1724071631145},{"_id":"themes/redefine/source/css/layout/_partials/comments/waline.styl","hash":"0663e8e50eff65afb4dbcbc7c4758d8acdd1d368","modified":1724071631146},{"_id":"themes/redefine/source/css/layout/_partials/comments/comment.styl","hash":"71529ec72f356c78f75a752e5400c1197aa5ea96","modified":1724071631145},{"_id":"source/img/jinan_travel/曲水亭街.png","hash":"7bc8f6da48ff7d4ff2f9f19f97f6ef0148f6e87e","modified":1722241904466},{"_id":"source/img/taishan_travel/一览众山小.jpg","hash":"80336737723d6fc9dc31dbe0466cd5ce9593ad3b","modified":1722241563644},{"_id":"source/img/wuxi_travel/8dae16d449f1457f5fce533e2dab31d.png","hash":"110006e77badabe7904d47ee7f49977fb290854f","modified":1720856475439},{"_id":"source/img/wuxi_travel/95d6958ac2f4bdfe5576f6bd7e568c4.png","hash":"e6ff1eb98575a3e78c181d9e4692594ec64b52a4","modified":1720856471786},{"_id":"source/img/wuxi_travel/7652f4176a3e53757f2de430679e66a.png","hash":"5cf239817e9b4880d65bd605c0ddbfeedde0f267","modified":1720856471815},{"_id":"source/img/wuxi_travel/c12eeb504affac83d6290c9d77ffdc6.png","hash":"1ef9e74fd4ed81740beb572468bdc9766e1418be","modified":1720856473358},{"_id":"themes/redefine/package-lock.json","hash":"c34cc2d5f2a7703bcf38c029008f2b43c4870545","modified":1724071631124},{"_id":"themes/redefine/source/webfonts/fa-brands-400.woff2","hash":"a358912d781e6249a8d291e4ce9ebd0a9ab9452e","modified":1724071631215},{"_id":"themes/redefine/source/fonts/Geist/GeistVF.ttf","hash":"9a531509e4e768e9102d11f5d7d293e3f04d9c64","modified":1724071631168},{"_id":"themes/redefine/source/fonts/Geist/GeistVF.woff","hash":"d06c767b3837999a8b98426e4eb16ca0a8080880","modified":1724071631169},{"_id":"themes/redefine/source/js/libs/Swup.min.js.map","hash":"f74755d9318a86939791027767f631472b876207","modified":1724071631181},{"_id":"themes/redefine/source/fonts/GeistMono/GeistMonoVF.woff","hash":"fd8c986a8767d59a36e2d194299466720c916ee2","modified":1724071631172},{"_id":"themes/redefine/source/fonts/GeistMono/GeistMonoVF.ttf","hash":"d72ec9d729305fc24f38e1ba69174e93b700cd69","modified":1724071631171},{"_id":"source/img/thumbnail/wuxi.png","hash":"f59f0f803c06e3d5ecd8467bda4f07b11c53f68b","modified":1724486371658},{"_id":"source/img/taishan_travel/IMG_20240624_185345_edit_62433046371201.jpg","hash":"b975aee0c9b705a2eca5de158034d2955d5596b0","modified":1722241563901},{"_id":"source/img/taishan_travel/五元纸币.png","hash":"cf424381f6c0809ac31e9c218dbb3ae50a40467d","modified":1722307728196},{"_id":"source/img/wuxi_travel/082e66374891cb305cb637aba10c3f1.png","hash":"71bca4a9d2e23c5ef5d87c6f6914127eeeded134","modified":1720856471787},{"_id":"source/img/wuxi_travel/08ba68d5c6cdcd8d8fed92638f6831e.png","hash":"a3d69755a1aabd9672c7470c3a26f6199cd88f90","modified":1720856475446},{"_id":"source/img/wuxi_travel/0b63e55eccb17bade774d1e96d9536f.png","hash":"af770a66124bc06409ab402c966059bcddec5320","modified":1720856475252},{"_id":"source/img/wuxi_travel/4a495848762e2f1ac7a93606bbfd2a3.png","hash":"44316ae0524385e59a1d3d2c06b634edcd5877cc","modified":1720856475210},{"_id":"source/img/jinan_travel/7707e2487fcdfccad200b6d92c858b1.png","hash":"fe854341e74da10e51629832c923da1b4bca3d06","modified":1722241905589},{"_id":"themes/redefine/source/fontawesome/fontawesome.min.css","hash":"44e6d666b45a6875e4fce11159876129e7a1cceb","modified":1724071631160},{"_id":"themes/redefine/source/webfonts/fa-brands-400.ttf","hash":"ba9322d66c19f635e15e458cc39fcb509818332f","modified":1724071631214},{"_id":"themes/redefine/source/fonts/Chillax/Chillax-Variable.ttf","hash":"01aafadc0ca4ace59127a5594a8f534e83b84879","modified":1724071631166},{"_id":"themes/redefine/source/fonts/Chillax/Chillax-Variable.eot","hash":"50a4e2ab17155fe7449e0ee488a6242180f3b256","modified":1724071631165},{"_id":"themes/redefine/source/js/libs/APlayer.min.js.map","hash":"31a19da0f0cb6b00ec212eafa847f31af86788df","modified":1724071631180},{"_id":"themes/redefine/source/js/libs/waline.mjs","hash":"d94e0f396776a003b603d6e90a732a548c2fda33","modified":1724071631202},{"_id":"source/img/thumbnail/yourname.png","hash":"c4280782365a77a46cb37bff95f9ccd7e0e9a80c","modified":1724485199986},{"_id":"source/img/taishan_travel/IMG_20240625_043819.jpg","hash":"ac566f5180f5d93318f93c4506f90e9fa9067388","modified":1722241563485},{"_id":"source/img/taishan_travel/IMG_20240625_063755.jpg","hash":"cabee2e685f59299bf3ab8084c58b7b82a6fa292","modified":1722241563643},{"_id":"source/img/wuxi_travel/0b2f97d92d81bbdc082b15c55b8719d.png","hash":"0ba57feac46cef92f0d1843913c797c21b458e7a","modified":1720856475133},{"_id":"source/img/wuxi_travel/1d904be0143789bacf088db2455ed31.png","hash":"57814266a6fc18e82a4205fc4f176e9bcfcb8173","modified":1720856475211},{"_id":"source/img/wuxi_travel/75a68aa3be4521d319d2f2ace73a094.png","hash":"e51ccbf68adf158b3637e1c7575ab1b33d6d2538","modified":1720856471793},{"_id":"source/img/zibo_travel/啤酒.png","hash":"94027a39fb0667da6de6b5c6d5c26ac69ef522cf","modified":1722241870831},{"_id":"themes/redefine/source/webfonts/fa-sharp-solid-900.woff2","hash":"74d0af1108ab8157993ca03cef80e89e35e2408d","modified":1724071631243},{"_id":"source/img/taishan_travel/IMG_20240624_190641.jpg","hash":"bd9e7bf2c3fdcadef5a4dfb4711b8368b1ce1fcb","modified":1722241563602},{"_id":"source/img/taishan_travel/IMG_20240625_073600.jpg","hash":"4f5ead4e874631d4439ba49177c9a32c5f912063","modified":1722241563643},{"_id":"source/img/taishan_travel/IMG_20240625_073157.jpg","hash":"edd8cf275631f9f70d3207eb595803ed55560d11","modified":1722241563608},{"_id":"source/img/wuxi_travel/635f0a2b8f0d55d73afeacf15acf14d.png","hash":"354da5b91d305462b0030374e2d5070fcc0b522d","modified":1720856472047},{"_id":"themes/redefine/source/fontawesome/duotone.min.css","hash":"0becc4b085bd9d377a8ff4b5160f8e19c8ec27a0","modified":1724071631159},{"_id":"themes/redefine/source/webfonts/fa-solid-900.woff2","hash":"e73d164db2aff2c91d18c07da03e8db9d0c5dfd4","modified":1724071631249},{"_id":"source/img/taishan_travel/IMG_20240624_173655_edit_62212043219672.jpg","hash":"eac5a8811f443b56647b9271a1849f9ca25004ff","modified":1722241566521},{"_id":"source/img/wuxi_travel/1590570e99863f157b79663b746aa71.png","hash":"687995a3b383271e5c547dc8cb128bc52d32ed9e","modified":1720856471938},{"_id":"source/img/wuxi_travel/62b721fd8eb56b9ecebe3d7b3a9e94e.png","hash":"82addbae1587bfcc2bb9f713561d68afcccd1c7f","modified":1720856471707},{"_id":"source/img/wuxi_travel/d8627057731e73a4529c303c82ff675.png","hash":"d021201f80bc80ae4518581b1aa08a554fad99c3","modified":1720856473651},{"_id":"source/img/20240721_1727/yourName(4).png","hash":"31fb5a74e4d5299d0ef6957fec747fdc2deaef68","modified":1722845189895},{"_id":"source/img/wuxi_travel/1427443a2e73c9c941f33ea93460927.png","hash":"4ab002ac0c72eb8d16a1ba8bbc4ee7821d11f242","modified":1720856471791},{"_id":"source/img/wuxi_travel/958626e2f2af371925aef1288d50b0a.png","hash":"868988cc67c974fbea8a991426d26afea60b494d","modified":1720856471792},{"_id":"source/img/wuxi_travel/6b140467433f8c6cabce2ef700fc0bb.png","hash":"dd2f9d50e5f10abe7596d8fb1d11ede2ca55e8d6","modified":1720856475453},{"_id":"source/img/wuxi_travel/dc85f46992113347bf299d7aaedfd6d.png","hash":"f048ed4a887a223ce5c23a40378e5f29b857055c","modified":1720856473840},{"_id":"source/img/wuxi_travel/b48121421dd91a5276f90bd6856e5df.png","hash":"ee5056d9fb47da85a422d07b5aa11597788591d7","modified":1720856473679},{"_id":"source/img/zibo_travel/小烧烤(4).png","hash":"e4f428ff486c6058b747a9ca0551eb7bc70828a9","modified":1722241877015},{"_id":"source/img/jinan_travel/e77f1a35c400301fb207671d1211242.png","hash":"cad8ebab40a6e25e54253a0586e283bd21a94648","modified":1722241906630},{"_id":"source/img/jinan_travel/image-20240703101658725.png","hash":"32d21ee028019a2dc688f8b450d21dd499764d52","modified":1722241906835},{"_id":"source/img/jinan_travel/image-20240704121647858.png","hash":"ec08bd850d5d64026a78789a0dbc6bc4f8dd4083","modified":1722241902500},{"_id":"source/img/jinan_travel/image-20240704121142124.png","hash":"a72c2f64b94035cba7dcbff137afd03ebbc22637","modified":1720855780084},{"_id":"themes/redefine/source/webfonts/fa-duotone-900.woff2","hash":"2cc24434345b80a844a6bda1139539fe41e4df53","modified":1724071631225},{"_id":"themes/redefine/source/webfonts/fa-regular-400.woff2","hash":"486fed640153de1de84f460834c73daef060ed20","modified":1724071631239},{"_id":"themes/redefine/source/webfonts/fa-light-300.woff2","hash":"def760895375328ccdcf62b2b9b9001a21947acd","modified":1724071631232},{"_id":"source/img/jinan_travel/老济南胡同改造.png","hash":"ed7c055733f5da56017d682ab96f9699a369997a","modified":1722241903714},{"_id":"source/img/taishan_travel/IMG_20240624_171323.jpg","hash":"d49325c337c84194ae925a63e90ec9e7a02da2b7","modified":1722241566402},{"_id":"source/img/wuxi_travel/6f8701a00ada2c7bf0ecfffd450d00b.png","hash":"4b80a707fdbabc18d3408ed966b58b7a36945231","modified":1720856475685},{"_id":"source/img/wuxi_travel/9d4365c205960d054f77e6c999aa47f.png","hash":"ad348b981a621b16a05456a9c8b915525159e68d","modified":1720856471620},{"_id":"source/img/wuxi_travel/e10bf3fe081a0e31a17601c68bc5373.png","hash":"2e7c2c57275ed1c8c62808a541c164b1766f19bc","modified":1720856474223},{"_id":"source/img/wuxi_travel/ec95c4c41b95b38a6a8bac1f6e1601b.png","hash":"dfe5c77ef2863d3cf099b40e379bbe5e9c7a78c7","modified":1720856474220},{"_id":"source/img/zibo_travel/大烧烤.png","hash":"89386be41da552e96f3803d584c80c4cb84a4ce1","modified":1722241876376},{"_id":"themes/redefine/source/fontawesome/all.min.css","hash":"630bf0e29410ec27622f65d1270c6bc435cdff21","modified":1724071631157},{"_id":"themes/redefine/source/webfonts/fa-thin-100.woff2","hash":"e0a4482c20f6b67784df54965539a317a3bd681b","modified":1724071631256},{"_id":"source/img/jinan_travel/老济南奶油冰棍.png","hash":"a145757341177422398afcdaa396e6c3133ac5f2","modified":1722241903702},{"_id":"source/img/jinan_travel/超然楼木雕2.png","hash":"a2f99ac6c629af588c206391a0579e8082cc27f7","modified":1722241901114},{"_id":"source/img/software_exam/0930abe368ad014ddd3d5a98f87c25d.png","hash":"a4af885dcf27df15ebb55b41bf45361e602fe636","modified":1723874707420},{"_id":"source/img/thumbnail/minato.png","hash":"0de25aecb43958619c71d77b7d2693459f373a79","modified":1724482544710},{"_id":"source/img/taishan_travel/登山路线.png","hash":"44b26d406ef83549af0a69b1d9480a968701d3ed","modified":1722241568526},{"_id":"source/img/wuxi_travel/49f67c697ac74de2f1dc938fe5f5007.jpg","hash":"1b15596fc328785677925a53bc12f4f0d2d9fd6e","modified":1720856472059},{"_id":"source/img/wuxi_travel/e5e782b62f70befbee201f721164abd.png","hash":"31740d937b49cf5040fe500737b60ceb42daac80","modified":1720856473571},{"_id":"source/img/wuxi_travel/fa67438411b13a560d498928e194bf8.png","hash":"b0eec1d221831f27c27a9bb07a7d28be33c95a7d","modified":1720856474109},{"_id":"source/img/wuxi_travel/image-20240605135725673.png","hash":"78fe953765660adbb60c254548d8cb3c41db77d3","modified":1720856474759},{"_id":"source/img/wuxi_travel/19d00734826c8aa0045369227f2f991.png","hash":"bc98ba6f68fb602132e080c65d256b33d9132466","modified":1720856472058},{"_id":"source/img/wuxi_travel/6ba64f8a74f8fd370d169393e0be116.png","hash":"d03f0712462a2346effb1e28d4608713b02e6446","modified":1720856475852},{"_id":"source/img/wuxi_travel/df31837900c348bfd7662a540513daf.png","hash":"5e6ad92349e5a4355556b44191323f65dc440d46","modified":1720856474108},{"_id":"source/img/wuxi_travel/e77e651e41cfffac455256ee30a62e7.png","hash":"2bfdcaab10b7dccd337d6d41e8291c17b661789e","modified":1720856474189},{"_id":"themes/redefine/source/webfonts/fa-sharp-solid-900.ttf","hash":"0d710cd7bd1b7ff574e88bb812de82babe45e415","modified":1724071631242},{"_id":"source/img/jinan_travel/超然楼木雕.png","hash":"513594fdb4b04fa5b92395bd62e2ccac9dc04ff7","modified":1722241902500},{"_id":"source/img/taishan_travel/IMG_20240624_182059.jpg","hash":"85d2aaeb006115e2efeb955d958ea4304db8b31b","modified":1722241563904},{"_id":"source/img/taishan_travel/IMG_20240624_184010.jpg","hash":"7950623d75d4ae81e300e401c29f2cdc21cbc3bc","modified":1722241563902},{"_id":"source/img/wuxi_travel/02767365218acc958e8136d77decad8.png","hash":"d875adc07ad74712582f3a5a553a1369dbd16416","modified":1720856473618},{"_id":"source/img/wuxi_travel/a2e775fb556f3202d3430f8a788803f.png","hash":"6a057a313d28adf298188ececb37718463691087","modified":1720856473680},{"_id":"source/img/jinan_travel/李清照画像.png","hash":"e5a99b34549517f9a7307e310b8c859848a27061","modified":1722241906834},{"_id":"source/img/cover/wuxi.png","hash":"251c8ff36983e7ff2ee65cd4618d457b44b621be","modified":1724487058134},{"_id":"themes/redefine/source/webfonts/fa-solid-900.ttf","hash":"40b536c3667547db70ee9ca6f3c94fbc33e0cab7","modified":1724071631247},{"_id":"themes/redefine/source/js/libs/mermaid.min.js","hash":"c11ca6043d8dae028448a808105f8c888faac8f5","modified":1724071631189},{"_id":"source/img/20240721_1727/yourName(3).png","hash":"967ea23993d63328622b06025f1f8667c8c08698","modified":1722845181688},{"_id":"source/img/cover/yourname.png","hash":"c5c7624eaa67ecc4f2ad71422972ec752c28d514","modified":1724484879178},{"_id":"themes/redefine/source/webfonts/fa-regular-400.ttf","hash":"cdec068700dc440530e5bbeff7e8bb33a01b4132","modified":1724071631238},{"_id":"themes/redefine/source/images/wallhaven-wqery6-light.webp","hash":"ecb95803c44ea24162e6e56d8e4dd56755ff6388","modified":1724572304835},{"_id":"themes/redefine/source/js/libs/waline.mjs.map","hash":"37c5b3e6aa5e1b70358426345a1a1329d6b896d3","modified":1724071631206},{"_id":"themes/redefine/source/webfonts/fa-light-300.ttf","hash":"cc5d9f4f994c82e23f58cdde1eec8792d81633c7","modified":1724071631231},{"_id":"source/img/zibo_travel/琉璃小猪.png","hash":"988ce180cc2b7a99549ca03bc42fcc86a5ff158e","modified":1721712229390},{"_id":"source/img/zibo_travel/陶瓷茉莉花.png","hash":"392d3a9a24bd2033c6056bdadc94e6340cd45fe7","modified":1722307428297},{"_id":"themes/redefine/source/webfonts/fa-thin-100.ttf","hash":"c1fee6e6986b14533ce022afada5fbe10c0f6562","modified":1724071631255},{"_id":"themes/redefine/source/webfonts/fa-duotone-900.ttf","hash":"e0313a772ea710cb5ea4bd08f5dedb0a0025f8ca","modified":1724071631223},{"_id":"source/img/jinan_travel/大观园.png","hash":"d60e53cbe1e437b847dddaf95332e914b09babe0","modified":1722307540066},{"_id":"source/img/taishan_travel/IMG_20240624_175207_edit_62156931195202.jpg","hash":"8ad5de1b02e7066957aaa540c215a5084a6dc381","modified":1722241567866},{"_id":"source/img/taishan_travel/朝阳2.png","hash":"4f8e69fa1d399a4186bc3a9c382e0aa5bb8caebb","modified":1722307728572},{"_id":"source/img/jinan_travel/image-20240704110651807.png","hash":"80ae6963c80965a25fb664f8c31f10c98f317abb","modified":1722241904640},{"_id":"themes/redefine/source/images/wallhaven-wqery6-dark.webp","hash":"e1f8272df512c2c4c3217f15441043735ddb07c9","modified":1724572156740},{"_id":"source/img/zibo_travel/陶瓷葡萄.png","hash":"cc306c5dc2374a152dfc81536a041baee8037e01","modified":1722241870902},{"_id":"source/img/zibo_travel/小烧烤(3).png","hash":"bd619d88a7d5564a98e23bb3b90f830d6f37540f","modified":1722307420521},{"_id":"source/img/20240721_1727/yourName(2).png","hash":"8f87417c0ef972cc9d0e147d440453f62cc46949","modified":1722946699553},{"_id":"source/img/jinan_travel/黑虎泉.png","hash":"9def7bb4c6eddbaff207a98bb39b9630f08ec18c","modified":1722241901704},{"_id":"source/img/20240721_1727/yourName(5).png","hash":"b8fe5a4a64c65d5c3c3b22d748b2aff2294f4b6b","modified":1722845181693},{"_id":"source/img/zibo_travel/《樊华净界》玉净瓶.png","hash":"b1ea5f341076cff60109ed10c9477ba069518863","modified":1722241876147},{"_id":"source/img/taishan_travel/糁汤.png","hash":"d53359f19ae3809c99ea7203a05216fcc8e646dd","modified":1722241568540},{"_id":"source/img/zibo_travel/小烧烤.png","hash":"13132fe708898a1750188c01a2a31fe1325382f0","modified":1722241876689},{"_id":"source/img/jinan_travel/IMG_20240621_135248.png","hash":"484f1c014369d8ee79356bf4980ceff332cc2fc5","modified":1722241901528},{"_id":"source/img/zibo_travel/鸡血红观音瓶.png","hash":"6b41b669ac34a72320ce3faf1f192d94f2a9f4d1","modified":1722241875277},{"_id":"source/img/jinan_travel/爱心红灯.png","hash":"d1b2c01fed56e0ddfb244154ed01f6f7aa361e4a","modified":1722307579035},{"_id":"source/img/jinan_travel/趵突泉.png","hash":"99218dba5b8029bcbf6e8dcc731e197ab49ffa4c","modified":1722307594015},{"_id":"source/img/jinan_travel/大明湖.png","hash":"e7b51ff8fef61f64e7ba0cd7bda445cf73f32ed8","modified":1722241901915},{"_id":"source/img/jinan_travel/老济南复原模型.png","hash":"e63c699cf2d124b3d94919d3db1d7ef75c4c583a","modified":1722241905303},{"_id":"source/img/zibo_travel/蓝莓味香酥牛奶棒.png","hash":"d4e96523ee19483f1c8c1413b6aad80bdc651951","modified":1722241875279},{"_id":"source/img/jinan_travel/济南墙.png","hash":"818a19cd4d91b02667838b740d42fb04a790e2c5","modified":1722241906037},{"_id":"source/img/zibo_travel/小烧烤(2).png","hash":"69946b64d5760a05b6c773b0d4ee708ef69d46a5","modified":1722241879159},{"_id":"source/img/zibo_travel/忘记拍名字了的瓷瓶.png","hash":"af524ab6e739b6fc32c55441d19ba42d24fdcc0b","modified":1722241871967},{"_id":"source/img/jinan_travel/起风桥.png","hash":"05750c2323b04d5bf6b95e9177f68f8ab092cdd4","modified":1722241909126},{"_id":"source/img/zibo_travel/锅盔饼.png","hash":"a1f633d0bde6791332683f9a43b02aa0a38c035e","modified":1722241875277},{"_id":"source/img/zibo_travel/紫米饼.png","hash":"060e23d16e4f9c09e5ac02b69364038d33022001","modified":1722241876688},{"_id":"themes/redefine/source/js/libs/mermaid.min.js.map","hash":"7d303cf926754817c4360f92e6c39b8c390cdbdb","modified":1724071631199},{"_id":"source/img/jinan_travel/五龙迎宾.png","hash":"707f8da2790d0eecc64b5a02d024d0ec7c57f67c","modified":1722307553067},{"_id":"source/img/jinan_travel/宽厚里2.png","hash":"1cafac9a43fe41106119ac208f0c993bab7200fb","modified":1722241904895},{"_id":"source/img/zibo_travel/陶瓷琉璃瓶.png","hash":"d0f90076412a66b383f550221b41681f091ba2a6","modified":1722241870834},{"_id":"source/img/zibo_travel/陶瓷龙虾.png","hash":"2fa41389bfb5381abe29be44833ab1230f99bb89","modified":1722241870904},{"_id":"source/img/jinan_travel/image-20240704162422780.png","hash":"39de34945e11924bf507b3b4d1b90ac22ffd0153","modified":1720855774053},{"_id":"source/img/jinan_travel/芙蓉街.png","hash":"b6ebe2535cb363f0c81b6988cd9aa12b3e5a37fe","modified":1722241902302},{"_id":"source/img/taishan_travel/泰山远景.png","hash":"958bd2b2c422005bc84342e296da43ca9f4b085b","modified":1722307728573},{"_id":"source/img/jinan_travel/夹心胡同.png","hash":"99b5da26142517c1ec0325aa554fa3f619279600","modified":1722307637507},{"_id":"source/img/20240721_1727/IMG_20240721_204959.png","hash":"a19d509a93f3fe43bef709d869878b571ea76fad","modified":1721568418546},{"_id":"source/img/zibo_travel/海岱楼.png","hash":"b16a68f3384f81ed5a8fe30bea82646645853a5f","modified":1722307410568},{"_id":"source/img/jinan_travel/解放阁.png","hash":"b35992e136b1ef4ea0264cbf5736a1a563d7a816","modified":1722241905609},{"_id":"source/img/20240721_1727/yourName(8).png","hash":"603f00c038a99209bf604ec99692fb4a5de0b4ba","modified":1723296200488},{"_id":"source/img/zibo_travel/鸡油黄镌刻罗汉图.png","hash":"cb6de060e3978f84eca2c1d55b1fc368972b81ce","modified":1722241875281},{"_id":"source/img/taishan_travel/油酥火烧.png","hash":"f8514907898924d4421b2a25a93474785416c70d","modified":1722241571193},{"_id":"source/img/taishan_travel/下山所见（1）.png","hash":"b7b52335db3bcecc4457e00e7a44f856a4497fce","modified":1722241571192},{"_id":"source/img/taishan_travel/岱庙2.png","hash":"5520614ad6d26a3b0d6fe95e9dcb802068f1c9f9","modified":1722308008893},{"_id":"source/img/thumbnail/jinan.png","hash":"ca10912282c0cfa225cd6cf0b545fe9d3311a56f","modified":1724486449467},{"_id":"source/img/20240721_1727/yourName(1).png","hash":"38cceabd0696304989bdd8101cabe2b0c89f6ed1","modified":1722845032201},{"_id":"source/img/zibo_travel/大烧烤(2).png","hash":"e1465e5c3f39a156ca164b46a048ee8380b669e1","modified":1722241879119},{"_id":"source/img/zibo_travel/八大局便民市场.png","hash":"864110833d98f2204e4092b8c50afbe65b59fe40","modified":1722241878286},{"_id":"source/img/jinan_travel/宽厚里.png","hash":"580e65a244c0162bc30ed918a851bcffee39f668","modified":1722241907333},{"_id":"source/img/jinan_travel/济南老胡同.png","hash":"86024dc9267c1e9403e019caa4f8a0086c8a3bb8","modified":1722241906040},{"_id":"source/img/zibo_travel/琉璃博物馆.png","hash":"fc01f5d5991f60a30e1b7491fab35e62eb5cd282","modified":1722241872069},{"_id":"source/img/zibo_travel/齐风塔.png","hash":"794d8f19be2e1da39f5f744891d2cae318e70a8a","modified":1722241871970},{"_id":"source/img/taishan_travel/瞻鲁台.png","hash":"4dcc7e30c390ce4fb95153b00cbc85b392b4ccd2","modified":1722241571866},{"_id":"source/img/wuxi_travel/f99b0a70d8fe594a1cb60876a89c5d0.png","hash":"39f4d85f18607be693e7dd15e0322ea5ee545589","modified":1720859984799},{"_id":"source/img/taishan_travel/下山所见（2）.png","hash":"80de493f48ab75209a2f4a77890805aa61a7e7f6","modified":1722241569709},{"_id":"source/img/jinan_travel/黑虎泉2.png","hash":"ad6c1a2e84947e233a87562148c9b6a556a9421d","modified":1722241904566},{"_id":"source/img/thumbnail/zibo.png","hash":"6a04b46736e9036f7a1499cd12e2205acac0dee8","modified":1724486098513},{"_id":"source/img/jinan_travel/济南自行车道.png","hash":"610533221452e2286a5ec30b3bc357854fa370e4","modified":1722241907594},{"_id":"source/img/jinan_travel/五龙潭公园.png","hash":"eae5e32823203e405ab7cf2e1888386eaa20b67f","modified":1722241908931},{"_id":"source/img/zibo_travel/凤舞和鸣国宴用瓷.png","hash":"d1ee5239894fb4a86896847c9e903c7ba2bf61d5","modified":1722241875285},{"_id":"source/img/zibo_travel/忘记拍名字了的瓷器.png","hash":"21522824b0929f2a23be1ba4fe7759c5d5304df5","modified":1722241879162},{"_id":"source/img/jinan_travel/超然楼.png","hash":"2fef977382a6951ac56cfc660da4d0bc319e92dc","modified":1722241906095},{"_id":"source/img/jinan_travel/烧饼夹牛肉.png","hash":"80a8a8945abc7eec860dde62d37fe6da42b20050","modified":1720855786744},{"_id":"source/img/jinan_travel/大明湖荷花.png","hash":"be298a3ba30e2e55d1f7ea0bf5215a8446c96f34","modified":1720855781083},{"_id":"source/img/20240721_1727/yourName(7).png","hash":"55d312b7991fd633c89dba559f744dcd71859966","modified":1722946531308},{"_id":"source/img/thumbnail/taishan.png","hash":"9ca5ac25f5831692d7f6d476d02959ff43c1cb67","modified":1724482905748},{"_id":"source/img/20240721_1727/yourName(6).png","hash":"803bad2c284485bfbf07f55812996bd287bf99d8","modified":1722946485901},{"_id":"source/img/cover/jinan.png","hash":"7fba5136bd5bce4a9ac33b5ed8c7bbc5b4fab734","modified":1724486806730}],"Category":[{"name":"后端","_id":"cm0b0qx790004jwur8832edjk"},{"name":"生活记录","_id":"cm0b0qx7g000cjwur1klo9xvo"},{"name":"Web3","_id":"cm0b0qx7j000jjwurfxc65nyv"},{"name":"前端","_id":"cm0b0qx7l000pjwur59mt8f0y"},{"name":"软考","_id":"cm0b0qx7m000wjwur2bo86wqr"},{"name":"工具包","_id":"cm0b0qx7x0020jwurcdh8akbn"}],"Data":[{"_id":"links","data":[{"links_category":null,"has_thumbnail":false,"list":[{"name":"糖泥","link":"https://tangricheng.com/","description":"大杯牛乳红茶，少冰，三分糖，加波霸。","avatar":"https://tangricheng.com/images/avatar.jpg"},{"name":"东南DNF","link":"https://dnf.doyi.online/","description":"向着全栈迈进的码农","avatar":"https://lib.dnf.doyi.online/imgs/avatar/dnf-avatar.jpeg"},{"name":"nich0las","link":"https://nicholas-wei.github.io/","description":"勤能补拙是良训，一分辛苦一分才","avatar":"https://nicholas-wei.github.io/img/avatar.png"}]},{"links_category":"主题来源","has_thumbnail":true,"list":[{"name":"EvenNotFound","link":"https://ohevan.com/","description":"Redefine 作者","avatar":"https://assets.ohevan.com/avatars/avatar-min.webp","thumbnail":"https://ohevan.com/img/wallhaven-72rd8e_1920x1080.webp"},{"name":"Redefine docs","link":"https://redefine-docs.ohevan.com/","description":"redefine your writing","avatar":"https://evan.beee.top/projects/hexo-theme-redefine/statics/logos/logo.webp","thumbnail":"https://redefine.ohevan.com/images/wallhaven-wqery6-light.webp"}]}]},{"_id":"essays","data":[{"content":"今天是在市场部实习的最后一天，转眼已经在市场部实习了4个多月了，明天开始就要培训了，之后就是正式员工，能拿五金和正式工资了（其实现在已经开始拿了）；\n昨天看了一眼培训名单，基本上都是陌生人，这一点有些羡慕隔壁上海电气的培训，700多号人居然还能找着老同学。\n<style>\n        .grid-container {\n            display: grid;\n            grid-template-columns: repeat(3, 1fr);\n            gap: 5px;\n            width: 300px; /* 调整总宽度以适应图片 */\n            margin-left: 0;\n        }\n        .grid-container img {\n            width: 100%;\n            height: 100px; /* 固定高度以确保正方形 */\n            object-fit: cover; /* 裁切图片以适应容器 */\n            object-position: center; /* 中心对齐裁切 */\n            display: block;\n            border-radius: 10px; \n        }\n    </style>\n<div class=\"grid-container\">\n    <img src=\"/img/emoji/feizhaidaile.png\" alt=\"肥宅呆了\">\n</div>\n","date":"2024-08-06T13:39:00.000Z"},{"content":"自从发现工位后面有个碎纸机，每天想着法子往里面丢纸，甚至连盒马买面包的小票都要留着塞进去，就为了听那个兹拉兹拉的声音，那叫一个酸爽解压。\n<style>\n        .grid-container {\n            display: grid;\n            grid-template-columns: repeat(3, 1fr);\n            gap: 5px;\n            width: 300px; /* 调整总宽度以适应图片 */\n            margin-left: 0;\n        }\n        .grid-container img {\n            width: 100%;\n            height: 100px; /* 固定高度以确保正方形 */\n            object-fit: cover; /* 裁切图片以适应容器 */\n            object-position: center; /* 中心对齐裁切 */\n            display: block;\n            border-radius: 10px; \n        }\n</style>\n<div class=\"grid-container\">\n    <img src=\"/img/emoji/终于.png\" alt=\"终于上当了\">\n</div>\n<br>\n","date":"2024-07-18T15:56:00.000Z"}]},{"_id":"tool","data":"import os\nimport csv\nimport urllib.parse\n\n\ndef extract_urls_from_csv():\n    # 获取当前脚本所在的目录\n    directory = os.path.dirname(os.path.abspath(__file__))\n\n    # 获取目录下的所有文件\n    files = os.listdir(directory)\n\n    # 过滤出所有CSV文件\n    csv_files = [file for file in files if os.path.splitext(file)[\n        1].lower() == '.csv']\n\n    # 处理每个CSV文件\n    albums = []\n    for csv_file in csv_files:\n        csv_path = os.path.join(directory, csv_file)\n        with open(csv_path, newline='', encoding='utf-8') as f:\n            reader = csv.DictReader(f)\n            for row in reader:\n                if 'userDomainUrl' in row:\n                    url = row['userDomainUrl']\n                    decoded_url = urllib.parse.unquote(url)\n                    albums.append([decoded_url])\n\n    # 将 albums 列表写入到 albums.txt 文件中\n    output_file = os.path.join(directory, \"url.txt\")\n    with open(output_file, 'w', encoding='utf-8') as f:\n        for album in albums:\n            f.write(f'  - image: \"{album[0]}\"\\n  # title: \\n  # description: \\n')\n\n    print(f\"albums.txt 已生成在目录 {directory} 下\")\n\n\n# 调用函数\nextract_urls_from_csv()\n"},{"_id":"url","data":"object,url,userDomainUrl\npostcard%2F%E6%B5%B7%E5%B2%B1%E6%A5%BC.png,https://lray-iu.oss-cn-hangzhou.aliyuncs.com/postcard/%E6%B5%B7%E5%B2%B1%E6%A5%BC.png,https://store.lray-iu.ink/postcard/%E6%B5%B7%E5%B2%B1%E6%A5%BC.png\npostcard%2F%E8%B6%85%E7%84%B6%E6%A5%BC.png,https://lray-iu.oss-cn-hangzhou.aliyuncs.com/postcard/%E8%B6%85%E7%84%B6%E6%A5%BC.png,https://store.lray-iu.ink/postcard/%E8%B6%85%E7%84%B6%E6%A5%BC.png\npostcard%2F%E8%B6%B5%E7%AA%81%E6%B3%89.png,https://lray-iu.oss-cn-hangzhou.aliyuncs.com/postcard/%E8%B6%B5%E7%AA%81%E6%B3%89.png,https://store.lray-iu.ink/postcard/%E8%B6%B5%E7%AA%81%E6%B3%89.png\npostcard%2F%E9%99%B6%E7%93%B7%E8%8C%89%E8%8E%89%E8%8A%B1.png,https://lray-iu.oss-cn-hangzhou.aliyuncs.com/postcard/%E9%99%B6%E7%93%B7%E8%8C%89%E8%8E%89%E8%8A%B1.png,https://store.lray-iu.ink/postcard/%E9%99%B6%E7%93%B7%E8%8C%89%E8%8E%89%E8%8A%B1.png\npostcard%2F%E5%B2%B1%E5%BA%99.png,https://lray-iu.oss-cn-hangzhou.aliyuncs.com/postcard/%E5%B2%B1%E5%BA%99.png,https://store.lray-iu.ink/postcard/%E5%B2%B1%E5%BA%99.png\npostcard%2F%E5%A4%A9%E8%A1%97%E6%97%A5%E8%90%BD.png,https://lray-iu.oss-cn-hangzhou.aliyuncs.com/postcard/%E5%A4%A9%E8%A1%97%E6%97%A5%E8%90%BD.png,https://store.lray-iu.ink/postcard/%E5%A4%A9%E8%A1%97%E6%97%A5%E8%90%BD.png\npostcard%2F%E7%8E%89%E7%9A%87%E9%A1%B6%E6%97%A5%E5%87%BA.png,https://lray-iu.oss-cn-hangzhou.aliyuncs.com/postcard/%E7%8E%89%E7%9A%87%E9%A1%B6%E6%97%A5%E5%87%BA.png,https://store.lray-iu.ink/postcard/%E7%8E%89%E7%9A%87%E9%A1%B6%E6%97%A5%E5%87%BA.png\npostcard%2F%E6%B3%B0%E5%B1%B1%E6%B0%94%E8%B1%A1%E7%AB%99.png,https://lray-iu.oss-cn-hangzhou.aliyuncs.com/postcard/%E6%B3%B0%E5%B1%B1%E6%B0%94%E8%B1%A1%E7%AB%99.png,https://store.lray-iu.ink/postcard/%E6%B3%B0%E5%B1%B1%E6%B0%94%E8%B1%A1%E7%AB%99.png\npostcard%2F%E5%A4%A9%E8%A1%97%E7%81%AB%E7%83%A7%E4%BA%91.png,https://lray-iu.oss-cn-hangzhou.aliyuncs.com/postcard/%E5%A4%A9%E8%A1%97%E7%81%AB%E7%83%A7%E4%BA%91.png,https://store.lray-iu.ink/postcard/%E5%A4%A9%E8%A1%97%E7%81%AB%E7%83%A7%E4%BA%91.png\npostcard%2F%E5%86%9B%E5%B6%82%E5%8F%A4%E9%81%93.png,https://lray-iu.oss-cn-hangzhou.aliyuncs.com/postcard/%E5%86%9B%E5%B6%82%E5%8F%A4%E9%81%93.png,https://store.lray-iu.ink/postcard/%E5%86%9B%E5%B6%82%E5%8F%A4%E9%81%93.png\npostcard%2F%E5%8D%97%E9%95%BF%E8%A1%97%E6%AD%A5%E8%A1%8C%E8%A1%97.png,https://lray-iu.oss-cn-hangzhou.aliyuncs.com/postcard/%E5%8D%97%E9%95%BF%E8%A1%97%E6%AD%A5%E8%A1%8C%E8%A1%97.png,https://store.lray-iu.ink/postcard/%E5%8D%97%E9%95%BF%E8%A1%97%E6%AD%A5%E8%A1%8C%E8%A1%97.png\npostcard%2F%E5%A4%AA%E6%B9%96%E4%BB%99%E5%B2%9B.png,https://lray-iu.oss-cn-hangzhou.aliyuncs.com/postcard/%E5%A4%AA%E6%B9%96%E4%BB%99%E5%B2%9B.png,https://store.lray-iu.ink/postcard/%E5%A4%AA%E6%B9%96%E4%BB%99%E5%B2%9B.png\npostcard%2F%E5%A4%AA%E6%B9%96%E9%93%B6%E9%B1%BC.png,https://lray-iu.oss-cn-hangzhou.aliyuncs.com/postcard/%E5%A4%AA%E6%B9%96%E9%93%B6%E9%B1%BC.png,https://store.lray-iu.ink/postcard/%E5%A4%AA%E6%B9%96%E9%93%B6%E9%B1%BC.png\npostcard%2F%E6%83%A0%E5%B1%B1%E5%8F%A4%E9%95%87.png,https://lray-iu.oss-cn-hangzhou.aliyuncs.com/postcard/%E6%83%A0%E5%B1%B1%E5%8F%A4%E9%95%87.png,https://store.lray-iu.ink/postcard/%E6%83%A0%E5%B1%B1%E5%8F%A4%E9%95%87.png\npostcard%2F%E8%8C%B6%E9%A2%9C%E6%82%A6%E8%89%B2.png,https://lray-iu.oss-cn-hangzhou.aliyuncs.com/postcard/%E8%8C%B6%E9%A2%9C%E6%82%A6%E8%89%B2.png,https://store.lray-iu.ink/postcard/%E8%8C%B6%E9%A2%9C%E6%82%A6%E8%89%B2.png\n"},{"_id":"masonry","data":{"gallery":[{"image":"https://store.lray-iu.ink/galary/1018合照.png"},{"image":"https://store.lray-iu.ink/galary/陈珏&LRay.png"},{"image":"https://store.lray-iu.ink/galary/无锡合照.png"},{"image":"https://store.lray-iu.ink/galary/蔡昶安&LRay.png"},{"image":"https://store.lray-iu.ink/galary/南天门夕阳.jpg"},{"image":"https://store.lray-iu.ink/galary/五元纸币.png"},{"image":"https://store.lray-iu.ink/galary/一览众山小.jpg"},{"image":"https://store.lray-iu.ink/galary/勇闯天涯.jpg"},{"image":"https://store.lray-iu.ink/galary/朝阳2.png"},{"image":"https://store.lray-iu.ink/galary/岱庙2.png"},{"image":"https://store.lray-iu.ink/galary/泰山远景.png"},{"image":"https://store.lray-iu.ink/galary/陶瓷茉莉花.png"},{"image":"https://store.lray-iu.ink/galary/小烧烤(3).png"},{"image":"https://store.lray-iu.ink/galary/海岱楼.png"},{"image":"https://store.lray-iu.ink/galary/趵突泉.png"},{"image":"https://store.lray-iu.ink/galary/五龙迎宾.png"},{"image":"https://store.lray-iu.ink/galary/爱心红灯.png"},{"image":"https://store.lray-iu.ink/galary/大观园.png"},{"image":"https://store.lray-iu.ink/galary/夹心胡同.png"},{"image":"https://store.lray-iu.ink/galary/六安夕阳.png"},{"image":"https://store.lray-iu.ink/galary/2024烟花.jpg"},{"image":"https://store.lray-iu.ink/galary/宝龙广场猫猫.jpg"},{"image":"https://store.lray-iu.ink/galary/南京明城墙.png"},{"image":"https://store.lray-iu.ink/galary/匈牙利牛肉焗饭【LRay】特供版.jpg"},{"image":"https://store.lray-iu.ink/galary/崇明岛大鹅.png"},{"image":"https://store.lray-iu.ink/galary/笨笨机器人.jpg"}],"postcard":[{"image":"https://store.lray-iu.ink/postcard/岱庙.png"},{"image":"https://store.lray-iu.ink/postcard/天街日落.png"},{"image":"https://store.lray-iu.ink/postcard/玉皇顶日出.png"},{"image":"https://store.lray-iu.ink/postcard/泰山气象站.png"},{"image":"https://store.lray-iu.ink/postcard/天街火烧云.png"},{"image":"https://store.lray-iu.ink/postcard/海岱楼.png"},{"image":"https://store.lray-iu.ink/postcard/陶瓷茉莉花.png"},{"image":"https://store.lray-iu.ink/postcard/超然楼.png"},{"image":"https://store.lray-iu.ink/postcard/趵突泉.png"},{"image":"https://store.lray-iu.ink/postcard/军嶂古道.png"},{"image":"https://store.lray-iu.ink/postcard/南长街步行街.png"},{"image":"https://store.lray-iu.ink/postcard/太湖仙岛.png"},{"image":"https://store.lray-iu.ink/postcard/太湖银鱼.png"},{"image":"https://store.lray-iu.ink/postcard/惠山古镇.png"},{"image":"https://store.lray-iu.ink/postcard/茶颜悦色.png"}]}}],"Page":[{"title":"categories","date":"2024-08-23T13:19:58.000Z","_content":"\n","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2024-08-23 21:19:58\n---\n\n","updated":"2024-08-23T14:06:08.324Z","path":"categories/index.html","comments":1,"layout":"page","_id":"cm0b0qx710000jwur0mg927vw","content":"","excerpt":"","more":""},{"title":"关于","comment":true,"date":"2024-08-23T14:44:52.000Z","_content":"\n<div  style=\"padding:5%;margin-bottom:0%\">\n    <h1>关于</h1>\n</div>\n<center>\n        <img src=\"https://lray-iu.oss-cn-hangzhou.aliyuncs.com/tenten.png\" alt=\"cc544a61403ef581b24d56b3bb6f6b8\"\n            style=\"zoom: 20%;\" class=\"nofancybox\" />\n    </center>\n\n<center>\n\t<div style=\"height:10px\"></div>\n    大家好，我是<b>LRay</b><br>\n    <div style=\"height:10px\"></div>\n</center>\n<center>\n    你也可以叫我文师傅<br>\n    <div style=\"height:10px\"></div>\n</center>\n<center>\n    我来自安徽<br>\n    <div style=\"height:10px\"></div>\n</center>\n<center>\n    目前在上海的一家能源单位摸爬滚打<br>\n    <div style=\"height:10px\"></div>\n</center>\n<center>\n    马上×（已经√）要成为一只社畜了<br>\n    <div style=\"height:10px\"></div>\n</center>\n<center>\n    兴趣爱好有 🎵 听音乐，📕 看小说等等<br>\n    <div style=\"height:10px\"></div>\n</center>\n<center>\n    最喜欢的游戏是 <b>Minecraft</b><br>\n    <div style=\"height:10px\"></div>\n</center>\n<center>\n    闲暇的时候喜欢在河边散步<br>\n    <div style=\"height:10px\"></div>\n</center>\n<center>\n    希望能和各位做个朋友 ^__^ <br>\n    <div style=\"height:35px\"></div>\n</center>\n<center>\n    <h4>短期目标[2024年底前] </h4>\n</center>\n\n<div style=\"display: flex; justify-content: center;\">\n    <div style=\"display: flex; flex-direction: column; align-items: flex-start;\">\n        <div style=\"display: flex;\">\n            <input disabled type=\"checkbox\">&nbsp;&nbsp;购置一台Z30微单\n        </div>\n        <div style=\"display: flex;\">\n            <input disabled type=\"checkbox\">&nbsp;&nbsp;备考软考\n        </div>\n        <div style=\"display: flex;\">\n            <input disabled type=\"checkbox\">&nbsp;&nbsp;存够一个打不溜\n        </div>\n    </div>\n</div>\n\n<div style=\"height:100px\"></div>\n","source":"about/index.md","raw":"---\ntitle: 关于\ncomment: true\ndate: 2024-08-23 22:44:52\n---\n\n<div  style=\"padding:5%;margin-bottom:0%\">\n    <h1>关于</h1>\n</div>\n<center>\n        <img src=\"https://lray-iu.oss-cn-hangzhou.aliyuncs.com/tenten.png\" alt=\"cc544a61403ef581b24d56b3bb6f6b8\"\n            style=\"zoom: 20%;\" class=\"nofancybox\" />\n    </center>\n\n<center>\n\t<div style=\"height:10px\"></div>\n    大家好，我是<b>LRay</b><br>\n    <div style=\"height:10px\"></div>\n</center>\n<center>\n    你也可以叫我文师傅<br>\n    <div style=\"height:10px\"></div>\n</center>\n<center>\n    我来自安徽<br>\n    <div style=\"height:10px\"></div>\n</center>\n<center>\n    目前在上海的一家能源单位摸爬滚打<br>\n    <div style=\"height:10px\"></div>\n</center>\n<center>\n    马上×（已经√）要成为一只社畜了<br>\n    <div style=\"height:10px\"></div>\n</center>\n<center>\n    兴趣爱好有 🎵 听音乐，📕 看小说等等<br>\n    <div style=\"height:10px\"></div>\n</center>\n<center>\n    最喜欢的游戏是 <b>Minecraft</b><br>\n    <div style=\"height:10px\"></div>\n</center>\n<center>\n    闲暇的时候喜欢在河边散步<br>\n    <div style=\"height:10px\"></div>\n</center>\n<center>\n    希望能和各位做个朋友 ^__^ <br>\n    <div style=\"height:35px\"></div>\n</center>\n<center>\n    <h4>短期目标[2024年底前] </h4>\n</center>\n\n<div style=\"display: flex; justify-content: center;\">\n    <div style=\"display: flex; flex-direction: column; align-items: flex-start;\">\n        <div style=\"display: flex;\">\n            <input disabled type=\"checkbox\">&nbsp;&nbsp;购置一台Z30微单\n        </div>\n        <div style=\"display: flex;\">\n            <input disabled type=\"checkbox\">&nbsp;&nbsp;备考软考\n        </div>\n        <div style=\"display: flex;\">\n            <input disabled type=\"checkbox\">&nbsp;&nbsp;存够一个打不溜\n        </div>\n    </div>\n</div>\n\n<div style=\"height:100px\"></div>\n","updated":"2024-08-23T15:14:38.878Z","path":"about/index.html","comments":1,"layout":"page","_id":"cm0b0qx770002jwur8tl95d33","content":"<div style=\"padding:5%;margin-bottom:0%\">\n    <h1>关于</h1>\n</div>\n<center>\n        <img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"https://lray-iu.oss-cn-hangzhou.aliyuncs.com/tenten.png\" alt=\"cc544a61403ef581b24d56b3bb6f6b8\" style=\"zoom: 20%;\" class=\"nofancybox\">\n    </center>\n\n<center>\n    <div style=\"height:10px\"></div>\n    大家好，我是<b>LRay</b><br>\n    <div style=\"height:10px\"></div>\n</center>\n<center>\n    你也可以叫我文师傅<br>\n    <div style=\"height:10px\"></div>\n</center>\n<center>\n    我来自安徽<br>\n    <div style=\"height:10px\"></div>\n</center>\n<center>\n    目前在上海的一家能源单位摸爬滚打<br>\n    <div style=\"height:10px\"></div>\n</center>\n<center>\n    马上×（已经√）要成为一只社畜了<br>\n    <div style=\"height:10px\"></div>\n</center>\n<center>\n    兴趣爱好有 🎵 听音乐，📕 看小说等等<br>\n    <div style=\"height:10px\"></div>\n</center>\n<center>\n    最喜欢的游戏是 <b>Minecraft</b><br>\n    <div style=\"height:10px\"></div>\n</center>\n<center>\n    闲暇的时候喜欢在河边散步<br>\n    <div style=\"height:10px\"></div>\n</center>\n<center>\n    希望能和各位做个朋友 ^__^ <br>\n    <div style=\"height:35px\"></div>\n</center>\n<center>\n    <h4>短期目标[2024年底前] </h4>\n</center>\n\n<div style=\"display: flex; justify-content: center;\">\n    <div style=\"display: flex; flex-direction: column; align-items: flex-start;\">\n        <div style=\"display: flex;\">\n            <input disabled=\"\" type=\"checkbox\">  购置一台Z30微单\n        </div>\n        <div style=\"display: flex;\">\n            <input disabled=\"\" type=\"checkbox\">  备考软考\n        </div>\n        <div style=\"display: flex;\">\n            <input disabled=\"\" type=\"checkbox\">  存够一个打不溜\n        </div>\n    </div>\n</div>\n\n<div style=\"height:100px\"></div>\n","excerpt":"","more":"<div style=\"padding:5%;margin-bottom:0%\">\n    <h1>关于</h1>\n</div>\n<center>\n        <img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"https://lray-iu.oss-cn-hangzhou.aliyuncs.com/tenten.png\" alt=\"cc544a61403ef581b24d56b3bb6f6b8\" style=\"zoom: 20%;\" class=\"nofancybox\">\n    </center>\n\n<center>\n    <div style=\"height:10px\"></div>\n    大家好，我是<b>LRay</b><br>\n    <div style=\"height:10px\"></div>\n</center>\n<center>\n    你也可以叫我文师傅<br>\n    <div style=\"height:10px\"></div>\n</center>\n<center>\n    我来自安徽<br>\n    <div style=\"height:10px\"></div>\n</center>\n<center>\n    目前在上海的一家能源单位摸爬滚打<br>\n    <div style=\"height:10px\"></div>\n</center>\n<center>\n    马上×（已经√）要成为一只社畜了<br>\n    <div style=\"height:10px\"></div>\n</center>\n<center>\n    兴趣爱好有 🎵 听音乐，📕 看小说等等<br>\n    <div style=\"height:10px\"></div>\n</center>\n<center>\n    最喜欢的游戏是 <b>Minecraft</b><br>\n    <div style=\"height:10px\"></div>\n</center>\n<center>\n    闲暇的时候喜欢在河边散步<br>\n    <div style=\"height:10px\"></div>\n</center>\n<center>\n    希望能和各位做个朋友 ^__^ <br>\n    <div style=\"height:35px\"></div>\n</center>\n<center>\n    <h4>短期目标[2024年底前] </h4>\n</center>\n\n<div style=\"display: flex; justify-content: center;\">\n    <div style=\"display: flex; flex-direction: column; align-items: flex-start;\">\n        <div style=\"display: flex;\">\n            <input disabled=\"\" type=\"checkbox\">  购置一台Z30微单\n        </div>\n        <div style=\"display: flex;\">\n            <input disabled=\"\" type=\"checkbox\">  备考软考\n        </div>\n        <div style=\"display: flex;\">\n            <input disabled=\"\" type=\"checkbox\">  存够一个打不溜\n        </div>\n    </div>\n</div>\n\n<div style=\"height:100px\"></div>\n"},{"title":"说说","type":"shuoshuo","comment":true,"date":"2024-08-23T15:16:17.000Z","_content":"\n","source":"essays/index.md","raw":"---\ntitle: 说说\ntype: shuoshuo\ncomment: true\ndate: 2024-08-23 23:16:17\n---\n\n","updated":"2024-08-23T15:26:31.013Z","path":"essays/index.html","comments":1,"layout":"page","_id":"cm0b0qx7b0006jwur8f6202ay","content":"","excerpt":"","more":""},{"title":"友链","type":"links","date":"2024-08-23T12:55:35.000Z","_content":"","source":"links/index.md","raw":"---\ntitle: 友链\ntype: links\ndate: 2024-08-23 20:55:35\n---\n","updated":"2024-08-23T13:06:18.489Z","path":"links/index.html","comments":1,"layout":"page","_id":"cm0b0qx7d0008jwur41qg2hdz","content":"","excerpt":"","more":""},{"title":"tag","date":"2024-08-23T13:22:45.000Z","_content":"","source":"tags/index.md","raw":"---\ntitle: tag\ndate: 2024-08-23 21:22:45\n---\n","updated":"2024-08-23T14:06:24.715Z","path":"tags/index.html","comments":1,"layout":"page","_id":"cm0b0qx7e000ajwur3j895joc","content":"","excerpt":"","more":""},{"title":"相册","type":"masonry","masonry":"gallery","date":"2024-08-21T14:11:52.000Z","_content":"\n<!-- @format -->\n","source":"masonry/gallery/index.md","raw":"---\ntitle: 相册\ntype: masonry\nmasonry: gallery\ndate: 2024-08-21 22:11:52\n---\n\n<!-- @format -->\n","updated":"2024-08-22T14:46:47.219Z","path":"masonry/gallery/index.html","comments":1,"layout":"page","_id":"cm0b0qx7g000ejwurev967q9g","content":"<!-- @format -->\n","excerpt":"","more":"<!-- @format -->\n"},{"title":"明信片","type":"masonry","masonry":"postcard","date":"2024-08-21T14:11:52.000Z","_content":"\n<!-- @format -->\n","source":"masonry/postcard/index.md","raw":"---\ntitle: 明信片\ntype: masonry\nmasonry: postcard\ndate: 2024-08-21 22:11:52\n---\n\n<!-- @format -->\n","updated":"2024-08-22T14:46:44.926Z","path":"masonry/postcard/index.html","comments":1,"layout":"page","_id":"cm0b0qx7i000gjwur2tt27pdw","content":"<!-- @format -->\n","excerpt":"","more":"<!-- @format -->\n"}],"Post":[{"title":"Gin 笔记","description":"Patrick Collins-区块链学习笔记","date":"2024-04-01T06:11:40.000Z","excerpt":"Gin 是 Golang 常用的一种轻量型框架，可以快速部署且可以自定义项目结构，可塑性和操作性很强，搭配各种库可以实现非常不错的效果，精简的同时性能也丝毫不落下风，可以说是兼顾了性能和轻便程度，学习和开发难度较低于 Springboot 那种航空母舰型框架，但是想要使用的得心应手还需要对后端和 Golang 原生有一定的熟悉程度。","_content":"\n## 前言\n\n这也不知道是我开的第几份笔记了，主打的是记录 Gin 后端的**搭建**，内容应该不会很多，毕竟 Gin 和 Flask 一样，是一个轻量型的框架，主打的是快速开发，但是 Gin 的响应速度上比 Flask 快的不是一点点，语言原生支持上 Golang 不需要额外的库也能完成协程，管道，映射等等功能。但是和 Goframe、SpringBoot 那些航空母舰级的框架不太一样，Gin 本身像个光杆司令，有不少功能是需要引入其他模块来实现的，比如 Gorm，godotenv 等等；\n\n至于 Goframe，原先确实萌生过好好学习它的想法，不过现在情况特殊，一来是原先投的岗位貌似莫得了，二来是毕设老师催挺急的，没时间开新坑了，抓紧写完抓紧 Gap。\n\n## 工具包\n\nGin 快速搭建教程[来自 B 站'慕课网']：https://www.bilibili.com/video/BV1Jy4y1F7RG/\n\nGin 中文开发文档：[快速入门 | Gin Web Framework (gin-gonic.com)](https://gin-gonic.com/zh-cn/docs/quickstart/)\n\nGorm 中文开发文档：[GORM 指南 | GORM - The fantastic ORM library for Golang, aims to be developer friendly.](https://gorm.io/zh_CN/docs/)\n\n## 开发报错\n\n> - 如果开发过程中出现`404-not-found`，请先检查请求模式是`GET`还是`POST`\n>\n> - 如果 gorm 查询结果为空且数据库查询正常，请检查 gorm 标签是否正确`gorm:\"column:publicKey\"`\n>\n> - 如果开发过程中，在数据库`Mysql`中设置了默认值，但是不会启用，可能是 gorm 给覆盖了，需要在`gorm`这重新定义\n>\n>   ```go\n>   Isvisual       int     `gorm:\"column:isvisual;default:1\"`\n>   Status         int     `gorm:\"column:status;default:1\"`\n>   ```\n>\n> - 如果 json 绑定失败，请检查结构体定义的变量头是否小写（被定义成私有变量了）\n>\n> - `sqlx` 在把`timestamp`转为`go`的`time.Time`报错`Scan error on column index 6: unsupported Scan, storing driver.Value type []uint8 into type *time.Time`,需要在数据库配置时加上`parseTime=true`，即:\n>\n>   ```go\n>   Mysqldb = fmt.Sprintf(\"%s:%s@tcp(127.0.0.1:3306)/minato_sys?charset=utf8mb4&parseTime=true\", name, password)\n>   ```\n>\n>   不过，这一点我已经在数据库配置那一环修改过了，按着笔记走应该碰不到这个错误。\n>\n> -\n\n## Gin 创建工程\n\n```terminal\n# 初始化项目\n$ go mod init gin-Minato\n\n# 安装Gin框架\n$ go get github.com/gin-gonic/gin@latest\n\n# 安装热加载插件fresh\n$ go install github.com/pilu/fresh@latest\n$ go get github.com/pilu/fresh\n$ fresh\n\n# 安装godotenv插件\n$ go get github.com/joho/godotenv\n\n# 安装Gorm\n$ go get -u gorm.io/gorm\n$ go get -u gorm.io/driver/mysql  #你用什么就下什么，这边以mysql为例\n\n# 安装session和redis\n$ go get github.com/gin-contrib/sessions\n$ go get github.com/gin-contrib/sessions/redis\n\n# 安装JWT-go\n$ go get github.com/dgrijalva/jwt-go\n\n```\n\n### 测试代码\n\n```go\npackage main\n\nimport (\n\t\"github.com/gin-gonic/gin\"\n\t\"net/http\"\n)\n\nfunc main() {\n\tr := gin.Default()\n\tr.GET(\"/\", func(ctx *gin.Context) {\n\t\tctx.String(http.StatusOK, \"hello world!\")\n\t})\n\t//r.Run(\":8080\")\n\tr.Run()\n}\n```\n\n运行：\n\n```terminal\n# 启动\n$ go run main.go\n# 如果安装过fresh，则可以\n$ fresh\n```\n\n## 路由分配\n\n步骤：在`router.go`中创建`gin引擎`，在`main.go`里调用\n\n```go\n//routers.go\npackage router\n\nimport (\n\t\"github.com/gin-gonic/gin\"\n\t\"net/http\"\n)\n\nfunc Router() *gin.Engine {\n\tr := gin.Default()\n\n\tuser := r.Group(\"/user\")\n\t{\n\t\tuser.GET(\"/\", func(ctx *gin.Context) {\n\t\t\tctx.String(http.StatusOK, \"hello world1!\")\n\t\t})\n\t\tuser.PUT(\"/add\", func(ctx *gin.Context) {\n\t\t\tctx.String(http.StatusOK, \"hello world2!\")\n\t\t})\n\t\tuser.POST(\"/post\", func(ctx *gin.Context) {\n\t\t\tctx.String(http.StatusOK, \"hello world3!\")\n\t\t})\n\t\tuser.DELETE(\"/delete\", func(ctx *gin.Context) {\n\t\t\tctx.String(http.StatusOK, \"hello world4!\")\n\t\t})\n\t}\n\treturn r\n}\n\n```\n\n在`main.go`中调用\n\n```go\npackage main\n\nimport \"gin-Minato/router\"\n\nfunc main() {\n\tr := router.Router()\n\t//r.Run(\":8080\")\n\tr.Run()\n}\n\n```\n\nOK 完成，终于不用全写在 main 文件里了，不过这个写法还是不够简洁，并不符合官方文档\n\n## 将处理方法外置到其他包裹\n\n这是我个人对它的叫法，就是提一嘴，没什么技术含量，但是能够让项目更加简洁清晰，易于维护。\n\n定义控制器中常用的方法和数据结构\n\n```go\n//controller/commen.go\npackage controller\n\nimport \"github.com/gin-gonic/gin\"\n\ntype JsonStruct struct {\n\tCode  int         `json:\"code\"`  //返回状态码\n\tMsg   interface{} `json:\"msg\"`   //返回的提示语\n\tData  interface{} `json:\"data\"`  //返回数据\n\tCount interface{} `json:\"count\"` //返回条数\n}\n\ntype JsonErrStruct struct {\n\tCode int         `json:\"code\"` //返回状态码\n\tMsg  interface{} `json:\"msg\"`  //返回的提示语\n}\n\nfunc ReturnSuccess(c *gin.Context, code int, msg interface{}, data interface{}, count int64) {\n\tjson := &JsonStruct{Code: code, Msg: msg, Data: data, Count: count}\n\tc.JSON(200, json)\n}\nfunc ReturnFalse(c *gin.Context, code int, msg interface{}) {\n\tjson := &JsonErrStruct{Code: code, Msg: msg}\n\tc.JSON(200, json)\n}\n```\n\n在角色控制器中使用\n\n```go\n//controller/user.go\npackage controller\n\nimport \"github.com/gin-gonic/gin\"\n\ntype UserController struct {\n}\n\n//将其归进结构体中，避免与同一个包下的其他方法名字冲突。就是引用的时候稍微麻烦些\nfunc (u UserController) GetUserInfo(c *gin.Context) {\n\tReturnSuccess(c, 0, \"success\", \"user info\", 1)\n}\n```\n\n在`main.go`中引用\n\n```go\n//main.go\nuser.GET(\"/info\", controller.UserController{}.GetUserInfo)\nuser.GET(\"/err\", controller.UserController{}.GetUserList)\n```\n\nok 完成，已经有一个项目的雏形了\n\n## 从上下文获取数据\n\n`*c gin.context`显然不是吃干饭的，每回写方法都把它带上是有原因的\n\n```go\nfunc (U UserController) GetUserList(c *gin.Context) {\n\tcid := c.PostForm(\"cid\")\n\tname := c.DefaultPostForm(\"name\", \"李大壮\")//提供默认值\n\tReturnSuccess(c, 0, cid, name, 1)\n}\n```\n\n这是一个简单的接受数据的方法\n\n这里使用 Apifox（免费的，好使 👍）向它发送请求\n\n<img src=\"/img/Gin_note/image-20240329131341634.png\" alt=\"image-20240329131341634\" style=\"zoom: 67%;\" />\n\nok 完成，效果显著\n\n## 将请求获取的数据绑定到结构体\n\n上述方法不适合读取 json 数据报文\n\n第一种,以赋值的形式读过来\n\n```go\nfunc (U UserController) GetUserList(c *gin.Context) {\n\t//cid := c.PostForm(\"cid\")\n\t//name := c.DefaultPostForm(\"name\", \"李大壮\") //提供默认值\n\tparam := make(map[string]interface{})\n\terr := c.BindJSON(&param)\n\tif err == nil {\n\t\tReturnSuccess(c, 0, \"success\",param, 1)\n\t\treturn\n\t} else {\n\t\tReturnFalse(c, 4001, gin.H{\"err\": err})\n\t}\n}\n```\n\n第二种，绑定到结构体\n\n```go\ntype Search struct {\n\tName string `json:name`   //必须要json匹配上，否则可能读不到\n\tCid  int    `json:cid`\n}\n\nfunc (U UserController) GetUserList(c *gin.Context) {\n\tsearch := &Search{}\n\terr := c.BindJSON(&search)\n\tif err == nil {\n\t\tReturnSuccess(c, 0, search.Name, search.Cid, 1)\n\t\treturn\n\t} else {\n\t\tReturnFalse(c, 4001, gin.H{\"err\": err})\n\t}\n}\n```\n\n## defer 延迟捕获异常\n\n```go\n\tdefer func() {\n\t\tif err := recover(); err != nil {\n\t\t\tfmt.Println(\"捕获异常\", err)\n\t\t}\n\t}()\n```\n\n自动运行，塞在方法里面就行，但是前端得不到报错情况。\n\n## Gorm\n\n这是一个 SQL 映射库\n\n### 配置\n\n创建文件`config/dbconnect.go`\n\n```go\n/*\n初始化数据库链接\n*/\npackage config\n\nimport (\n\t\"fmt\"\n\t_ \"github.com/joho/godotenv/autoload\"\n\t\"gorm.io/driver/mysql\"\n\t\"gorm.io/gorm\"\n\t\"os\"\n\t\"time\"\n)\n\nvar (\n\tDb      *gorm.DB\n\terr     error\n\tMysqldb string\n)\n\nfunc init() {\n\t//初始化数据库的钥匙\n\tname := os.Getenv(\"name\")\n\tpassword := os.Getenv(\"password\")\n\tif name == \"\" || password == \"\" {\n\t\tpanic(\"缺少必要的环境变量 name 或 password\")\n\t}\n\tMysqldb = fmt.Sprintf(\"%s:%s@tcp(127.0.0.1:3306)/minato_sys?charset=utf8mb4&parseTime=true\", name, password)\n\t//链接数据库\n\tDb, err = gorm.Open(mysql.Open(Mysqldb), &gorm.Config{})\n\tif err != nil {\n\t\tfmt.Println(\"mysql connect error:\", err.Error())\n\t}\n\tif Db.Error != nil {\n\t\tfmt.Println(\"mysql connect error:\", Db.Error)\n\t}\n\t//设置连接池\n\tsqlDB, _ := Db.DB()\n\t// SetMaxIdleConns sets the maximum number of connections in the idle connection pool.\n\tsqlDB.SetMaxIdleConns(10)\n\n\t// SetMaxOpenConns sets the maximum number of open connections to the database.\n\tsqlDB.SetMaxOpenConns(100)\n\n\t// SetConnMaxLifetime sets the maximum amount of time a connection may be reused.\n\tsqlDB.SetConnMaxLifetime(time.Hour)\n}\n```\n\n后续可以根据自己需要，分别写在自己想要的文件里\n\n注：此处用到了 godotenv 插件，可以从环境变量中读取数据，使用时可以参考这位老哥写的：[Go 每日一库之 godotenv - 大俊的博客 (darjun.github.io)](https://darjun.github.io/2020/02/12/godailylib/godotenv/)\n\n```env\n#这是一个示例的env文件\nname = root\npassword = 88888888\n```\n\n### 测试数据库是否链接\n\n注：以下代码仅是测试使用，不可直接粘贴【直接粘贴和伪代码没啥区别】，根据需求进行改动\n\n```go\n//定义路由\nuser.GET(\"/info/:cid\", controller.UserController{}.GetUserInfo)\n//执行方法\nfunc (u UserController) GetUserInfo(c *gin.Context) {\n\tdefer func() {\n\t\tif err := recover(); err != nil {\n\t\t\tfmt.Println(\"捕获异常\", err)\n\t\t}\n\t}()\n\tcid := c.Param(\"cid\")\n\tid, err := strconv.Atoi(cid)\n\tif err != nil {\n\t\tfmt.Println(err)\n\t}\n\tuser, _ := model.GetUserTest(id)\n\tReturnSuccess(c, 0, \"success\", user, 1)\n}\n//定义数据库模型\ntype User struct {\n\tId   int\n\tName string\n}\n\nvar DB = config.Db\n\nfunc (User) TableName() string {\n\treturn \"user\"\n}\nfunc GetUserTest(id int) (User, error) {\n\tvar user User\n\terr := DB.Where(\"id=?\", id).First(&user).Error\n\treturn user, err\n}\n```\n\n且测试前，数据库需要建立好测试表\n\n<img src=\"/img/Gin_note/image-20240330175545744.png\" alt=\"image-20240330175545744\" style=\"zoom: 80%;\" />\n\n最终结果：\n\n<img src=\"/img/Gin_note/image-20240330175639344.png\" alt=\"image-20240330175639344\" style=\"zoom: 80%;\" />\n\nok 完成，这下项目基本结构就搭建好了\n\n### 基础 crud\n\n这个讲道理没啥好说的，官方文档写的蛮清晰的\n\n贴点样例\n\n```go\nfunc GetUserTest(id int) (User, error) {\n\tvar user User\n\terr := DB.Where(\"id=?\", id).First(&user).Error\n\treturn user, err\n}\n\nfunc AddUser(id int, name string) (int, error) {\n\tuser := User{Id: id, Name: name}\n\terr := DB.Create(&user).Error\n\treturn user.Id, err\n}\n\nfunc EditUser(id int, name string) {\n\tuser := User{\n\t\tId:   id,\n\t\tName: name,\n\t}\n\t//传对象修改\n    DB.Model(&User{}).Updates(&user)\n\t//修改单独的列\n\t//DB.Model(&User{}).Where(\"id=?\", id).Update(\"name\", name)\n\n}\n\nfunc Delete(id int) {\n\tDB.Delete(&User{}, 10)\n}\n\n```\n\n### 登录功能（附带使用 redis 存取 session）\n\n`Redis`部署进项目\n\n```go\npackage router\n\nimport (\n\t\"gin-Minato/config\"\n\t\"gin-Minato/controller\"\n\t\"github.com/gin-contrib/sessions\"\n\tsession_redis \"github.com/gin-contrib/sessions/redis\"\n\t\"github.com/gin-gonic/gin\"\n)\n\nfunc Router() *gin.Engine {\n\tr := gin.Default()\n\t//配置redis\n\tstore, _ := session_redis.NewStore(10, \"tcp\", config.RedisAddress, \"\", []byte(\"secret\"))\n\tr.Use(sessions.Sessions(\"mysession\", store))\n\tuser := r.Group(\"/user\")\n\t{\n\t\tuser.POST(\"/login\", controller.UserController{}.Login)\n\t\tuser.POST(\"/register\", controller.UserController{}.Register)\n\t}\n\treturn r\n}\n```\n\n`redis.go`\n\n```go\npackage config\n\nconst (\n\tRedisAddress = \"localhost:6379\"\n)\n\n```\n\n`controller/user.go`\n\n```go\nfunc (u UserController) Login(c *gin.Context) {\n\tusername := c.DefaultPostForm(\"username\", \"\")\n\tpassword := c.DefaultPostForm(\"password\", \"\")\n\tif username == \"\" || password == \"\" {\n\t\tReturnFalse(c, 4001, \"请输入账号和密码\")\n\t}\n\tuser, err := model.GetUserInfoByUsername(username)\n\tif user.Id == 0 {\n\t\tReturnFalse(c, 4002, \"用户名或密码不正确\")\n\t\treturn\n\t}\n\tif user.Password != EncryMd5(password) {\n\t\tReturnFalse(c, 4002, \"用户名或密码不正确\")\n\t\treturn\n\t}\n\tsession := sessions.Default(c)\n\tsession.set(\"login\"+strconv.Itoa(user.Id), user.Id)\n\tsession.Save()\n\tdata := UserApi{Id: user.id, Username: user.Username}\n\tReturnSuccess(c, 0, \"登陆成功\", data, 1)\n}\n```\n\n## JWT-go\n\n可以限制令牌持有者能访问的资源\n\n```go\nimport (\n\t\"fmt\"\n\t\"github.com/dgrijalva/jwt-go\"\n\t_ \"github.com/joho/godotenv/autoload\"\n\t\"os\"\n\t\"time\"\n)\n\n// 弄个简单一点的token\ntype Konoha struct {\n\tUsername string `json:\"username\"`\n\tjwt.StandardClaims\n}\n\n// 从env文件中读取密钥\nvar salt = os.Getenv(\"salt\")\nvar mySignkey = []byte(salt)\n\nfunc Tokencreate(username string) string {\n\tc := Konoha{\n\t\tUsername: username,\n\t\tStandardClaims: jwt.StandardClaims{\n\t\t\tNotBefore: time.Now().Unix() - 60,\n\t\t\t//设置过期时间在5秒后\n\t\t\tExpiresAt: time.Now().Unix() + 5,\n\t\t\tIssuer:    \"Minato\",\n\t\t},\n\t}\n\ttoken := jwt.NewWithClaims(jwt.SigningMethodHS256, c)\n\ttokenString, err := token.SignedString(mySignkey)\n\tif err != nil {\n\t\tfmt.Println(\"token加密出错\", err.Error)\n\t}\n\tfmt.Println(tokenString)\n\treturn tokenString\n}\n\nfunc ParseToken(tokenString string) {\n\ttoken, err := jwt.ParseWithClaims(tokenString, &Konoha{}, func(token *jwt.Token) (interface{}, error) {\n\t\treturn mySignkey, nil\n\t})\n\tif err != nil {\n\t\tfmt.Println(err.Error())\n\t\treturn\n\t}\n\tfmt.Println(token.Claims.(*Konoha))\n}\n\nfunc main() {\n    //制作token\n\ts := Tokencreate(\"minato\")\n    //等token过期\n\tfmt.Println(\"等六秒\")\n\ttime.Sleep(6 * time.Second)\n\tParseToken(s)\n}\n```\n\n结果：\n\n```terminal\neyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6Im1pbmF0byIsImV4cCI6MTcxMjAzNDY5NywiaXNzIjoiTWluYXRvIiwibmJmIjoxNzEyMDM0NjMyfQ.rUsDMCOgP4-Tvq09UO0YWXVcfaetFtqhWejSszb2DCc\n等六秒\ntoken is expired by 1s\n\n```\n\n将它写成中间件的形式：\n\n```go\npackage middleware\n\nimport (\n\t\"fmt\"\n\t\"gin-Minato/controller\"\n\t\"github.com/dgrijalva/jwt-go\"\n\t\"github.com/gin-gonic/gin\"\n\t_ \"github.com/joho/godotenv/autoload\"\n\t\"os\"\n\t\"time\"\n)\n\n// 弄个简单一点的token\ntype Konoha struct {\n\tUsername string `json:\"username\"`\n\tjwt.StandardClaims\n}\n\n// 从env文件中读取密钥\nvar salt = os.Getenv(\"salt\")\nvar mySignkey = []byte(salt)\n\nfunc Tokencreate(username string) string {\n\tc := Konoha{\n\t\tUsername: username,\n\t\tStandardClaims: jwt.StandardClaims{\n\t\t\tNotBefore: time.Now().Unix() - 60,\n\t\t\t//设置过期时间在60秒后\n\t\t\tExpiresAt: time.Now().Unix() + 60,\n\t\t\tIssuer:    \"Minato\",\n\t\t},\n\t}\n\ttoken := jwt.NewWithClaims(jwt.SigningMethodHS256, c)\n\tkonohaToken, err := token.SignedString(mySignkey)\n\tif err != nil {\n\t\tfmt.Println(\"token加密出错\", err.Error())\n\t}\n\tfmt.Println(konohaToken)\n\treturn konohaToken\n}\n//-----------------------------------------在这呢，中间件解析token------------------------------------\nfunc ParseToken(konohaToken string) string {\n\ttoken, err := jwt.ParseWithClaims(konohaToken, &Konoha{}, func(token *jwt.Token) (interface{}, error) {\n\t\treturn mySignkey, nil\n\t})\n\tif err != nil {\n\t\tfmt.Println(err.Error())\n\t\treturn \"1001\"\n\t}\n\tif !token.Valid {\n\t\tfmt.Println(\"token无效\")\n\t\treturn \"1002\" // 返回无效token的错误码\n\t}\n\tclaims, ok := token.Claims.(*Konoha)\n\tif !ok {\n\t\tfmt.Println(\"token claims类型错误\")\n\t\treturn \"1003\" // 返回token claims类型错误的错误码\n\t}\n\tif claims.Username != \"Minato\" {\n\t\treturn \"1004\"\n\t}\n\treturn \"200\"\n}\nfunc JWTAuth() gin.HandlerFunc {\n\treturn func(c *gin.Context) {\n\t\ttokenStr := c.Request.Header.Get(\"konohaToken\")\n\t\tif tokenStr == \"\" {\n\t\t\tcontroller.ReturnFalse(c, 1000, \"token缺失\")\n\t\t}\n\t\tstatus := ParseToken(tokenStr)\n\t\tswitch status {\n\t\tcase \"1000\":\n\t\t\tcontroller.ReturnFalse(c, 1001, \"token过期\")\n\t\tcase \"1001\":\n\t\t\tcontroller.ReturnFalse(c, 1002, \"token签发人不正确\")\n\t\tcase \"1002\":\n\t\t\tcontroller.ReturnFalse(c, 1003, \"token claims类型错误\")\n\t\tcase \"1003\":\n\t\t\tcontroller.ReturnFalse(c, 1004, \"token无效\")\n\t\tcase \"200\":\n\t\t\t// token验证通过\n\t\t\tfmt.Println(200)\n\t\t\treturn\n\t\tdefault:\n\t\t\t// 处理其他未知错误\n\t\t\tcontroller.ReturnFalse(c, 1999, \"未知错误\")\n\t\t}\n\t}\n}\n\n```\n\n## 跨域请求 CORS\n\n安装 CORS\n\n```terminal\n$ go get github.com/gin-contrib/cors\n```\n\n`main.go`中进行配置\n\n```go\npackage main\n\nimport (\n\t\"github.com/gin-contrib/cors\"\n\t\"github.com/gin-gonic/gin\"\n)\n\nfunc main() {\n\tr := gin.Default()\n\n\t// 使用 CORS 中间件，默认配置，谁都能访问\n\tr.Use(cors.Default())\n\n    // 使用CORS中间件，并只允许来自5173端口的请求（和上面不能同时出现）\n    router.Use(cors.New(cors.Config{\n        AllowOrigins:     []string{\"http://localhost:5173\"},\n        AllowMethods:     []string{\"GET\", \"POST\", \"PUT\", \"DELETE\"},\n        AllowHeaders:     []string{\"Origin\", \"Content-Type\"},\n        ExposeHeaders:    []string{\"Content-Length\"},\n        AllowCredentials: true,\n        MaxAge:           12,\n    }))\n\t// 其他路由处理逻辑\n\t// ...\n\n\tr.Run(\":8080\")\n}\n```\n","source":"_posts/Gin_note.md","raw":"---\ntitle: Gin 笔记\ncategories:\n  - 后端\ndescription: \"Patrick Collins-区块链学习笔记\"\ndate: 2024-04-01 14:11:40\nexcerpt: \"Gin 是 Golang 常用的一种轻量型框架，可以快速部署且可以自定义项目结构，可塑性和操作性很强，搭配各种库可以实现非常不错的效果，精简的同时性能也丝毫不落下风，可以说是兼顾了性能和轻便程度，学习和开发难度较低于 Springboot 那种航空母舰型框架，但是想要使用的得心应手还需要对后端和 Golang 原生有一定的熟悉程度。\"\ntags:\n  - Gin\n  - Golang\n---\n\n## 前言\n\n这也不知道是我开的第几份笔记了，主打的是记录 Gin 后端的**搭建**，内容应该不会很多，毕竟 Gin 和 Flask 一样，是一个轻量型的框架，主打的是快速开发，但是 Gin 的响应速度上比 Flask 快的不是一点点，语言原生支持上 Golang 不需要额外的库也能完成协程，管道，映射等等功能。但是和 Goframe、SpringBoot 那些航空母舰级的框架不太一样，Gin 本身像个光杆司令，有不少功能是需要引入其他模块来实现的，比如 Gorm，godotenv 等等；\n\n至于 Goframe，原先确实萌生过好好学习它的想法，不过现在情况特殊，一来是原先投的岗位貌似莫得了，二来是毕设老师催挺急的，没时间开新坑了，抓紧写完抓紧 Gap。\n\n## 工具包\n\nGin 快速搭建教程[来自 B 站'慕课网']：https://www.bilibili.com/video/BV1Jy4y1F7RG/\n\nGin 中文开发文档：[快速入门 | Gin Web Framework (gin-gonic.com)](https://gin-gonic.com/zh-cn/docs/quickstart/)\n\nGorm 中文开发文档：[GORM 指南 | GORM - The fantastic ORM library for Golang, aims to be developer friendly.](https://gorm.io/zh_CN/docs/)\n\n## 开发报错\n\n> - 如果开发过程中出现`404-not-found`，请先检查请求模式是`GET`还是`POST`\n>\n> - 如果 gorm 查询结果为空且数据库查询正常，请检查 gorm 标签是否正确`gorm:\"column:publicKey\"`\n>\n> - 如果开发过程中，在数据库`Mysql`中设置了默认值，但是不会启用，可能是 gorm 给覆盖了，需要在`gorm`这重新定义\n>\n>   ```go\n>   Isvisual       int     `gorm:\"column:isvisual;default:1\"`\n>   Status         int     `gorm:\"column:status;default:1\"`\n>   ```\n>\n> - 如果 json 绑定失败，请检查结构体定义的变量头是否小写（被定义成私有变量了）\n>\n> - `sqlx` 在把`timestamp`转为`go`的`time.Time`报错`Scan error on column index 6: unsupported Scan, storing driver.Value type []uint8 into type *time.Time`,需要在数据库配置时加上`parseTime=true`，即:\n>\n>   ```go\n>   Mysqldb = fmt.Sprintf(\"%s:%s@tcp(127.0.0.1:3306)/minato_sys?charset=utf8mb4&parseTime=true\", name, password)\n>   ```\n>\n>   不过，这一点我已经在数据库配置那一环修改过了，按着笔记走应该碰不到这个错误。\n>\n> -\n\n## Gin 创建工程\n\n```terminal\n# 初始化项目\n$ go mod init gin-Minato\n\n# 安装Gin框架\n$ go get github.com/gin-gonic/gin@latest\n\n# 安装热加载插件fresh\n$ go install github.com/pilu/fresh@latest\n$ go get github.com/pilu/fresh\n$ fresh\n\n# 安装godotenv插件\n$ go get github.com/joho/godotenv\n\n# 安装Gorm\n$ go get -u gorm.io/gorm\n$ go get -u gorm.io/driver/mysql  #你用什么就下什么，这边以mysql为例\n\n# 安装session和redis\n$ go get github.com/gin-contrib/sessions\n$ go get github.com/gin-contrib/sessions/redis\n\n# 安装JWT-go\n$ go get github.com/dgrijalva/jwt-go\n\n```\n\n### 测试代码\n\n```go\npackage main\n\nimport (\n\t\"github.com/gin-gonic/gin\"\n\t\"net/http\"\n)\n\nfunc main() {\n\tr := gin.Default()\n\tr.GET(\"/\", func(ctx *gin.Context) {\n\t\tctx.String(http.StatusOK, \"hello world!\")\n\t})\n\t//r.Run(\":8080\")\n\tr.Run()\n}\n```\n\n运行：\n\n```terminal\n# 启动\n$ go run main.go\n# 如果安装过fresh，则可以\n$ fresh\n```\n\n## 路由分配\n\n步骤：在`router.go`中创建`gin引擎`，在`main.go`里调用\n\n```go\n//routers.go\npackage router\n\nimport (\n\t\"github.com/gin-gonic/gin\"\n\t\"net/http\"\n)\n\nfunc Router() *gin.Engine {\n\tr := gin.Default()\n\n\tuser := r.Group(\"/user\")\n\t{\n\t\tuser.GET(\"/\", func(ctx *gin.Context) {\n\t\t\tctx.String(http.StatusOK, \"hello world1!\")\n\t\t})\n\t\tuser.PUT(\"/add\", func(ctx *gin.Context) {\n\t\t\tctx.String(http.StatusOK, \"hello world2!\")\n\t\t})\n\t\tuser.POST(\"/post\", func(ctx *gin.Context) {\n\t\t\tctx.String(http.StatusOK, \"hello world3!\")\n\t\t})\n\t\tuser.DELETE(\"/delete\", func(ctx *gin.Context) {\n\t\t\tctx.String(http.StatusOK, \"hello world4!\")\n\t\t})\n\t}\n\treturn r\n}\n\n```\n\n在`main.go`中调用\n\n```go\npackage main\n\nimport \"gin-Minato/router\"\n\nfunc main() {\n\tr := router.Router()\n\t//r.Run(\":8080\")\n\tr.Run()\n}\n\n```\n\nOK 完成，终于不用全写在 main 文件里了，不过这个写法还是不够简洁，并不符合官方文档\n\n## 将处理方法外置到其他包裹\n\n这是我个人对它的叫法，就是提一嘴，没什么技术含量，但是能够让项目更加简洁清晰，易于维护。\n\n定义控制器中常用的方法和数据结构\n\n```go\n//controller/commen.go\npackage controller\n\nimport \"github.com/gin-gonic/gin\"\n\ntype JsonStruct struct {\n\tCode  int         `json:\"code\"`  //返回状态码\n\tMsg   interface{} `json:\"msg\"`   //返回的提示语\n\tData  interface{} `json:\"data\"`  //返回数据\n\tCount interface{} `json:\"count\"` //返回条数\n}\n\ntype JsonErrStruct struct {\n\tCode int         `json:\"code\"` //返回状态码\n\tMsg  interface{} `json:\"msg\"`  //返回的提示语\n}\n\nfunc ReturnSuccess(c *gin.Context, code int, msg interface{}, data interface{}, count int64) {\n\tjson := &JsonStruct{Code: code, Msg: msg, Data: data, Count: count}\n\tc.JSON(200, json)\n}\nfunc ReturnFalse(c *gin.Context, code int, msg interface{}) {\n\tjson := &JsonErrStruct{Code: code, Msg: msg}\n\tc.JSON(200, json)\n}\n```\n\n在角色控制器中使用\n\n```go\n//controller/user.go\npackage controller\n\nimport \"github.com/gin-gonic/gin\"\n\ntype UserController struct {\n}\n\n//将其归进结构体中，避免与同一个包下的其他方法名字冲突。就是引用的时候稍微麻烦些\nfunc (u UserController) GetUserInfo(c *gin.Context) {\n\tReturnSuccess(c, 0, \"success\", \"user info\", 1)\n}\n```\n\n在`main.go`中引用\n\n```go\n//main.go\nuser.GET(\"/info\", controller.UserController{}.GetUserInfo)\nuser.GET(\"/err\", controller.UserController{}.GetUserList)\n```\n\nok 完成，已经有一个项目的雏形了\n\n## 从上下文获取数据\n\n`*c gin.context`显然不是吃干饭的，每回写方法都把它带上是有原因的\n\n```go\nfunc (U UserController) GetUserList(c *gin.Context) {\n\tcid := c.PostForm(\"cid\")\n\tname := c.DefaultPostForm(\"name\", \"李大壮\")//提供默认值\n\tReturnSuccess(c, 0, cid, name, 1)\n}\n```\n\n这是一个简单的接受数据的方法\n\n这里使用 Apifox（免费的，好使 👍）向它发送请求\n\n<img src=\"/img/Gin_note/image-20240329131341634.png\" alt=\"image-20240329131341634\" style=\"zoom: 67%;\" />\n\nok 完成，效果显著\n\n## 将请求获取的数据绑定到结构体\n\n上述方法不适合读取 json 数据报文\n\n第一种,以赋值的形式读过来\n\n```go\nfunc (U UserController) GetUserList(c *gin.Context) {\n\t//cid := c.PostForm(\"cid\")\n\t//name := c.DefaultPostForm(\"name\", \"李大壮\") //提供默认值\n\tparam := make(map[string]interface{})\n\terr := c.BindJSON(&param)\n\tif err == nil {\n\t\tReturnSuccess(c, 0, \"success\",param, 1)\n\t\treturn\n\t} else {\n\t\tReturnFalse(c, 4001, gin.H{\"err\": err})\n\t}\n}\n```\n\n第二种，绑定到结构体\n\n```go\ntype Search struct {\n\tName string `json:name`   //必须要json匹配上，否则可能读不到\n\tCid  int    `json:cid`\n}\n\nfunc (U UserController) GetUserList(c *gin.Context) {\n\tsearch := &Search{}\n\terr := c.BindJSON(&search)\n\tif err == nil {\n\t\tReturnSuccess(c, 0, search.Name, search.Cid, 1)\n\t\treturn\n\t} else {\n\t\tReturnFalse(c, 4001, gin.H{\"err\": err})\n\t}\n}\n```\n\n## defer 延迟捕获异常\n\n```go\n\tdefer func() {\n\t\tif err := recover(); err != nil {\n\t\t\tfmt.Println(\"捕获异常\", err)\n\t\t}\n\t}()\n```\n\n自动运行，塞在方法里面就行，但是前端得不到报错情况。\n\n## Gorm\n\n这是一个 SQL 映射库\n\n### 配置\n\n创建文件`config/dbconnect.go`\n\n```go\n/*\n初始化数据库链接\n*/\npackage config\n\nimport (\n\t\"fmt\"\n\t_ \"github.com/joho/godotenv/autoload\"\n\t\"gorm.io/driver/mysql\"\n\t\"gorm.io/gorm\"\n\t\"os\"\n\t\"time\"\n)\n\nvar (\n\tDb      *gorm.DB\n\terr     error\n\tMysqldb string\n)\n\nfunc init() {\n\t//初始化数据库的钥匙\n\tname := os.Getenv(\"name\")\n\tpassword := os.Getenv(\"password\")\n\tif name == \"\" || password == \"\" {\n\t\tpanic(\"缺少必要的环境变量 name 或 password\")\n\t}\n\tMysqldb = fmt.Sprintf(\"%s:%s@tcp(127.0.0.1:3306)/minato_sys?charset=utf8mb4&parseTime=true\", name, password)\n\t//链接数据库\n\tDb, err = gorm.Open(mysql.Open(Mysqldb), &gorm.Config{})\n\tif err != nil {\n\t\tfmt.Println(\"mysql connect error:\", err.Error())\n\t}\n\tif Db.Error != nil {\n\t\tfmt.Println(\"mysql connect error:\", Db.Error)\n\t}\n\t//设置连接池\n\tsqlDB, _ := Db.DB()\n\t// SetMaxIdleConns sets the maximum number of connections in the idle connection pool.\n\tsqlDB.SetMaxIdleConns(10)\n\n\t// SetMaxOpenConns sets the maximum number of open connections to the database.\n\tsqlDB.SetMaxOpenConns(100)\n\n\t// SetConnMaxLifetime sets the maximum amount of time a connection may be reused.\n\tsqlDB.SetConnMaxLifetime(time.Hour)\n}\n```\n\n后续可以根据自己需要，分别写在自己想要的文件里\n\n注：此处用到了 godotenv 插件，可以从环境变量中读取数据，使用时可以参考这位老哥写的：[Go 每日一库之 godotenv - 大俊的博客 (darjun.github.io)](https://darjun.github.io/2020/02/12/godailylib/godotenv/)\n\n```env\n#这是一个示例的env文件\nname = root\npassword = 88888888\n```\n\n### 测试数据库是否链接\n\n注：以下代码仅是测试使用，不可直接粘贴【直接粘贴和伪代码没啥区别】，根据需求进行改动\n\n```go\n//定义路由\nuser.GET(\"/info/:cid\", controller.UserController{}.GetUserInfo)\n//执行方法\nfunc (u UserController) GetUserInfo(c *gin.Context) {\n\tdefer func() {\n\t\tif err := recover(); err != nil {\n\t\t\tfmt.Println(\"捕获异常\", err)\n\t\t}\n\t}()\n\tcid := c.Param(\"cid\")\n\tid, err := strconv.Atoi(cid)\n\tif err != nil {\n\t\tfmt.Println(err)\n\t}\n\tuser, _ := model.GetUserTest(id)\n\tReturnSuccess(c, 0, \"success\", user, 1)\n}\n//定义数据库模型\ntype User struct {\n\tId   int\n\tName string\n}\n\nvar DB = config.Db\n\nfunc (User) TableName() string {\n\treturn \"user\"\n}\nfunc GetUserTest(id int) (User, error) {\n\tvar user User\n\terr := DB.Where(\"id=?\", id).First(&user).Error\n\treturn user, err\n}\n```\n\n且测试前，数据库需要建立好测试表\n\n<img src=\"/img/Gin_note/image-20240330175545744.png\" alt=\"image-20240330175545744\" style=\"zoom: 80%;\" />\n\n最终结果：\n\n<img src=\"/img/Gin_note/image-20240330175639344.png\" alt=\"image-20240330175639344\" style=\"zoom: 80%;\" />\n\nok 完成，这下项目基本结构就搭建好了\n\n### 基础 crud\n\n这个讲道理没啥好说的，官方文档写的蛮清晰的\n\n贴点样例\n\n```go\nfunc GetUserTest(id int) (User, error) {\n\tvar user User\n\terr := DB.Where(\"id=?\", id).First(&user).Error\n\treturn user, err\n}\n\nfunc AddUser(id int, name string) (int, error) {\n\tuser := User{Id: id, Name: name}\n\terr := DB.Create(&user).Error\n\treturn user.Id, err\n}\n\nfunc EditUser(id int, name string) {\n\tuser := User{\n\t\tId:   id,\n\t\tName: name,\n\t}\n\t//传对象修改\n    DB.Model(&User{}).Updates(&user)\n\t//修改单独的列\n\t//DB.Model(&User{}).Where(\"id=?\", id).Update(\"name\", name)\n\n}\n\nfunc Delete(id int) {\n\tDB.Delete(&User{}, 10)\n}\n\n```\n\n### 登录功能（附带使用 redis 存取 session）\n\n`Redis`部署进项目\n\n```go\npackage router\n\nimport (\n\t\"gin-Minato/config\"\n\t\"gin-Minato/controller\"\n\t\"github.com/gin-contrib/sessions\"\n\tsession_redis \"github.com/gin-contrib/sessions/redis\"\n\t\"github.com/gin-gonic/gin\"\n)\n\nfunc Router() *gin.Engine {\n\tr := gin.Default()\n\t//配置redis\n\tstore, _ := session_redis.NewStore(10, \"tcp\", config.RedisAddress, \"\", []byte(\"secret\"))\n\tr.Use(sessions.Sessions(\"mysession\", store))\n\tuser := r.Group(\"/user\")\n\t{\n\t\tuser.POST(\"/login\", controller.UserController{}.Login)\n\t\tuser.POST(\"/register\", controller.UserController{}.Register)\n\t}\n\treturn r\n}\n```\n\n`redis.go`\n\n```go\npackage config\n\nconst (\n\tRedisAddress = \"localhost:6379\"\n)\n\n```\n\n`controller/user.go`\n\n```go\nfunc (u UserController) Login(c *gin.Context) {\n\tusername := c.DefaultPostForm(\"username\", \"\")\n\tpassword := c.DefaultPostForm(\"password\", \"\")\n\tif username == \"\" || password == \"\" {\n\t\tReturnFalse(c, 4001, \"请输入账号和密码\")\n\t}\n\tuser, err := model.GetUserInfoByUsername(username)\n\tif user.Id == 0 {\n\t\tReturnFalse(c, 4002, \"用户名或密码不正确\")\n\t\treturn\n\t}\n\tif user.Password != EncryMd5(password) {\n\t\tReturnFalse(c, 4002, \"用户名或密码不正确\")\n\t\treturn\n\t}\n\tsession := sessions.Default(c)\n\tsession.set(\"login\"+strconv.Itoa(user.Id), user.Id)\n\tsession.Save()\n\tdata := UserApi{Id: user.id, Username: user.Username}\n\tReturnSuccess(c, 0, \"登陆成功\", data, 1)\n}\n```\n\n## JWT-go\n\n可以限制令牌持有者能访问的资源\n\n```go\nimport (\n\t\"fmt\"\n\t\"github.com/dgrijalva/jwt-go\"\n\t_ \"github.com/joho/godotenv/autoload\"\n\t\"os\"\n\t\"time\"\n)\n\n// 弄个简单一点的token\ntype Konoha struct {\n\tUsername string `json:\"username\"`\n\tjwt.StandardClaims\n}\n\n// 从env文件中读取密钥\nvar salt = os.Getenv(\"salt\")\nvar mySignkey = []byte(salt)\n\nfunc Tokencreate(username string) string {\n\tc := Konoha{\n\t\tUsername: username,\n\t\tStandardClaims: jwt.StandardClaims{\n\t\t\tNotBefore: time.Now().Unix() - 60,\n\t\t\t//设置过期时间在5秒后\n\t\t\tExpiresAt: time.Now().Unix() + 5,\n\t\t\tIssuer:    \"Minato\",\n\t\t},\n\t}\n\ttoken := jwt.NewWithClaims(jwt.SigningMethodHS256, c)\n\ttokenString, err := token.SignedString(mySignkey)\n\tif err != nil {\n\t\tfmt.Println(\"token加密出错\", err.Error)\n\t}\n\tfmt.Println(tokenString)\n\treturn tokenString\n}\n\nfunc ParseToken(tokenString string) {\n\ttoken, err := jwt.ParseWithClaims(tokenString, &Konoha{}, func(token *jwt.Token) (interface{}, error) {\n\t\treturn mySignkey, nil\n\t})\n\tif err != nil {\n\t\tfmt.Println(err.Error())\n\t\treturn\n\t}\n\tfmt.Println(token.Claims.(*Konoha))\n}\n\nfunc main() {\n    //制作token\n\ts := Tokencreate(\"minato\")\n    //等token过期\n\tfmt.Println(\"等六秒\")\n\ttime.Sleep(6 * time.Second)\n\tParseToken(s)\n}\n```\n\n结果：\n\n```terminal\neyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6Im1pbmF0byIsImV4cCI6MTcxMjAzNDY5NywiaXNzIjoiTWluYXRvIiwibmJmIjoxNzEyMDM0NjMyfQ.rUsDMCOgP4-Tvq09UO0YWXVcfaetFtqhWejSszb2DCc\n等六秒\ntoken is expired by 1s\n\n```\n\n将它写成中间件的形式：\n\n```go\npackage middleware\n\nimport (\n\t\"fmt\"\n\t\"gin-Minato/controller\"\n\t\"github.com/dgrijalva/jwt-go\"\n\t\"github.com/gin-gonic/gin\"\n\t_ \"github.com/joho/godotenv/autoload\"\n\t\"os\"\n\t\"time\"\n)\n\n// 弄个简单一点的token\ntype Konoha struct {\n\tUsername string `json:\"username\"`\n\tjwt.StandardClaims\n}\n\n// 从env文件中读取密钥\nvar salt = os.Getenv(\"salt\")\nvar mySignkey = []byte(salt)\n\nfunc Tokencreate(username string) string {\n\tc := Konoha{\n\t\tUsername: username,\n\t\tStandardClaims: jwt.StandardClaims{\n\t\t\tNotBefore: time.Now().Unix() - 60,\n\t\t\t//设置过期时间在60秒后\n\t\t\tExpiresAt: time.Now().Unix() + 60,\n\t\t\tIssuer:    \"Minato\",\n\t\t},\n\t}\n\ttoken := jwt.NewWithClaims(jwt.SigningMethodHS256, c)\n\tkonohaToken, err := token.SignedString(mySignkey)\n\tif err != nil {\n\t\tfmt.Println(\"token加密出错\", err.Error())\n\t}\n\tfmt.Println(konohaToken)\n\treturn konohaToken\n}\n//-----------------------------------------在这呢，中间件解析token------------------------------------\nfunc ParseToken(konohaToken string) string {\n\ttoken, err := jwt.ParseWithClaims(konohaToken, &Konoha{}, func(token *jwt.Token) (interface{}, error) {\n\t\treturn mySignkey, nil\n\t})\n\tif err != nil {\n\t\tfmt.Println(err.Error())\n\t\treturn \"1001\"\n\t}\n\tif !token.Valid {\n\t\tfmt.Println(\"token无效\")\n\t\treturn \"1002\" // 返回无效token的错误码\n\t}\n\tclaims, ok := token.Claims.(*Konoha)\n\tif !ok {\n\t\tfmt.Println(\"token claims类型错误\")\n\t\treturn \"1003\" // 返回token claims类型错误的错误码\n\t}\n\tif claims.Username != \"Minato\" {\n\t\treturn \"1004\"\n\t}\n\treturn \"200\"\n}\nfunc JWTAuth() gin.HandlerFunc {\n\treturn func(c *gin.Context) {\n\t\ttokenStr := c.Request.Header.Get(\"konohaToken\")\n\t\tif tokenStr == \"\" {\n\t\t\tcontroller.ReturnFalse(c, 1000, \"token缺失\")\n\t\t}\n\t\tstatus := ParseToken(tokenStr)\n\t\tswitch status {\n\t\tcase \"1000\":\n\t\t\tcontroller.ReturnFalse(c, 1001, \"token过期\")\n\t\tcase \"1001\":\n\t\t\tcontroller.ReturnFalse(c, 1002, \"token签发人不正确\")\n\t\tcase \"1002\":\n\t\t\tcontroller.ReturnFalse(c, 1003, \"token claims类型错误\")\n\t\tcase \"1003\":\n\t\t\tcontroller.ReturnFalse(c, 1004, \"token无效\")\n\t\tcase \"200\":\n\t\t\t// token验证通过\n\t\t\tfmt.Println(200)\n\t\t\treturn\n\t\tdefault:\n\t\t\t// 处理其他未知错误\n\t\t\tcontroller.ReturnFalse(c, 1999, \"未知错误\")\n\t\t}\n\t}\n}\n\n```\n\n## 跨域请求 CORS\n\n安装 CORS\n\n```terminal\n$ go get github.com/gin-contrib/cors\n```\n\n`main.go`中进行配置\n\n```go\npackage main\n\nimport (\n\t\"github.com/gin-contrib/cors\"\n\t\"github.com/gin-gonic/gin\"\n)\n\nfunc main() {\n\tr := gin.Default()\n\n\t// 使用 CORS 中间件，默认配置，谁都能访问\n\tr.Use(cors.Default())\n\n    // 使用CORS中间件，并只允许来自5173端口的请求（和上面不能同时出现）\n    router.Use(cors.New(cors.Config{\n        AllowOrigins:     []string{\"http://localhost:5173\"},\n        AllowMethods:     []string{\"GET\", \"POST\", \"PUT\", \"DELETE\"},\n        AllowHeaders:     []string{\"Origin\", \"Content-Type\"},\n        ExposeHeaders:    []string{\"Content-Length\"},\n        AllowCredentials: true,\n        MaxAge:           12,\n    }))\n\t// 其他路由处理逻辑\n\t// ...\n\n\tr.Run(\":8080\")\n}\n```\n","slug":"Gin_note","published":1,"updated":"2024-08-24T06:08:57.647Z","comments":1,"layout":"post","photos":[],"_id":"cm0b0qx740001jwurg5o7drud","content":"<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>这也不知道是我开的第几份笔记了，主打的是记录 Gin 后端的<strong>搭建</strong>，内容应该不会很多，毕竟 Gin 和 Flask 一样，是一个轻量型的框架，主打的是快速开发，但是 Gin 的响应速度上比 Flask 快的不是一点点，语言原生支持上 Golang 不需要额外的库也能完成协程，管道，映射等等功能。但是和 Goframe、SpringBoot 那些航空母舰级的框架不太一样，Gin 本身像个光杆司令，有不少功能是需要引入其他模块来实现的，比如 Gorm，godotenv 等等；</p>\n<p>至于 Goframe，原先确实萌生过好好学习它的想法，不过现在情况特殊，一来是原先投的岗位貌似莫得了，二来是毕设老师催挺急的，没时间开新坑了，抓紧写完抓紧 Gap。</p>\n<h2 id=\"工具包\"><a href=\"#工具包\" class=\"headerlink\" title=\"工具包\"></a>工具包</h2><p>Gin 快速搭建教程[来自 B 站’慕课网’]：<a class=\"link\" href=\"https://www.bilibili.com/video/BV1Jy4y1F7RG/\">https://www.bilibili.com/video/BV1Jy4y1F7RG/ <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a></p>\n<p>Gin 中文开发文档：<a class=\"link\" href=\"https://gin-gonic.com/zh-cn/docs/quickstart/\">快速入门 | Gin Web Framework (gin-gonic.com) <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a></p>\n<p>Gorm 中文开发文档：<a class=\"link\" href=\"https://gorm.io/zh_CN/docs/\">GORM 指南 | GORM - The fantastic ORM library for Golang, aims to be developer friendly. <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a></p>\n<h2 id=\"开发报错\"><a href=\"#开发报错\" class=\"headerlink\" title=\"开发报错\"></a>开发报错</h2><blockquote>\n<ul>\n<li><p>如果开发过程中出现<code>404-not-found</code>，请先检查请求模式是<code>GET</code>还是<code>POST</code></p>\n</li>\n<li><p>如果 gorm 查询结果为空且数据库查询正常，请检查 gorm 标签是否正确<code>gorm:\"column:publicKey\"</code></p>\n</li>\n<li><p>如果开发过程中，在数据库<code>Mysql</code>中设置了默认值，但是不会启用，可能是 gorm 给覆盖了，需要在<code>gorm</code>这重新定义</p>\n<div class=\"highlight-container\" data-rel=\"Go\"><figure class=\"iseeu highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Isvisual       <span class=\"type\">int</span>     <span class=\"string\">`gorm:\"column:isvisual;default:1\"`</span></span><br><span class=\"line\">Status         <span class=\"type\">int</span>     <span class=\"string\">`gorm:\"column:status;default:1\"`</span></span><br></pre></td></tr></table></figure></div>\n</li>\n<li><p>如果 json 绑定失败，请检查结构体定义的变量头是否小写（被定义成私有变量了）</p>\n</li>\n<li><p><code>sqlx</code> 在把<code>timestamp</code>转为<code>go</code>的<code>time.Time</code>报错<code>Scan error on column index 6: unsupported Scan, storing driver.Value type []uint8 into type *time.Time</code>,需要在数据库配置时加上<code>parseTime=true</code>，即:</p>\n<div class=\"highlight-container\" data-rel=\"Go\"><figure class=\"iseeu highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Mysqldb = fmt.Sprintf(<span class=\"string\">\"%s:%s@tcp(127.0.0.1:3306)/minato_sys?charset=utf8mb4&amp;parseTime=true\"</span>, name, password)</span><br></pre></td></tr></table></figure></div>\n\n<p>不过，这一点我已经在数据库配置那一环修改过了，按着笔记走应该碰不到这个错误。</p>\n</li>\n<li></li>\n</ul>\n</blockquote>\n<h2 id=\"Gin-创建工程\"><a href=\"#Gin-创建工程\" class=\"headerlink\" title=\"Gin 创建工程\"></a>Gin 创建工程</h2><div class=\"highlight-container\" data-rel=\"Plaintext\"><figure class=\"iseeu highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 初始化项目</span><br><span class=\"line\">$ go mod init gin-Minato</span><br><span class=\"line\"></span><br><span class=\"line\"># 安装Gin框架</span><br><span class=\"line\">$ go get github.com/gin-gonic/gin@latest</span><br><span class=\"line\"></span><br><span class=\"line\"># 安装热加载插件fresh</span><br><span class=\"line\">$ go install github.com/pilu/fresh@latest</span><br><span class=\"line\">$ go get github.com/pilu/fresh</span><br><span class=\"line\">$ fresh</span><br><span class=\"line\"></span><br><span class=\"line\"># 安装godotenv插件</span><br><span class=\"line\">$ go get github.com/joho/godotenv</span><br><span class=\"line\"></span><br><span class=\"line\"># 安装Gorm</span><br><span class=\"line\">$ go get -u gorm.io/gorm</span><br><span class=\"line\">$ go get -u gorm.io/driver/mysql  #你用什么就下什么，这边以mysql为例</span><br><span class=\"line\"></span><br><span class=\"line\"># 安装session和redis</span><br><span class=\"line\">$ go get github.com/gin-contrib/sessions</span><br><span class=\"line\">$ go get github.com/gin-contrib/sessions/redis</span><br><span class=\"line\"></span><br><span class=\"line\"># 安装JWT-go</span><br><span class=\"line\">$ go get github.com/dgrijalva/jwt-go</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></div>\n\n<h3 id=\"测试代码\"><a href=\"#测试代码\" class=\"headerlink\" title=\"测试代码\"></a>测试代码</h3><div class=\"highlight-container\" data-rel=\"Go\"><figure class=\"iseeu highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> main</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> (</span><br><span class=\"line\">\t<span class=\"string\">\"github.com/gin-gonic/gin\"</span></span><br><span class=\"line\">\t<span class=\"string\">\"net/http\"</span></span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span> {</span><br><span class=\"line\">\tr := gin.Default()</span><br><span class=\"line\">\tr.GET(<span class=\"string\">\"/\"</span>, <span class=\"function\"><span class=\"keyword\">func</span><span class=\"params\">(ctx *gin.Context)</span></span> {</span><br><span class=\"line\">\t\tctx.String(http.StatusOK, <span class=\"string\">\"hello world!\"</span>)</span><br><span class=\"line\">\t})</span><br><span class=\"line\">\t<span class=\"comment\">//r.Run(\":8080\")</span></span><br><span class=\"line\">\tr.Run()</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure></div>\n\n<p>运行：</p>\n<div class=\"highlight-container\" data-rel=\"Plaintext\"><figure class=\"iseeu highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 启动</span><br><span class=\"line\">$ go run main.go</span><br><span class=\"line\"># 如果安装过fresh，则可以</span><br><span class=\"line\">$ fresh</span><br></pre></td></tr></table></figure></div>\n\n<h2 id=\"路由分配\"><a href=\"#路由分配\" class=\"headerlink\" title=\"路由分配\"></a>路由分配</h2><p>步骤：在<code>router.go</code>中创建<code>gin引擎</code>，在<code>main.go</code>里调用</p>\n<div class=\"highlight-container\" data-rel=\"Go\"><figure class=\"iseeu highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//routers.go</span></span><br><span class=\"line\"><span class=\"keyword\">package</span> router</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> (</span><br><span class=\"line\">\t<span class=\"string\">\"github.com/gin-gonic/gin\"</span></span><br><span class=\"line\">\t<span class=\"string\">\"net/http\"</span></span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">Router</span><span class=\"params\">()</span></span> *gin.Engine {</span><br><span class=\"line\">\tr := gin.Default()</span><br><span class=\"line\"></span><br><span class=\"line\">\tuser := r.Group(<span class=\"string\">\"/user\"</span>)</span><br><span class=\"line\">\t{</span><br><span class=\"line\">\t\tuser.GET(<span class=\"string\">\"/\"</span>, <span class=\"function\"><span class=\"keyword\">func</span><span class=\"params\">(ctx *gin.Context)</span></span> {</span><br><span class=\"line\">\t\t\tctx.String(http.StatusOK, <span class=\"string\">\"hello world1!\"</span>)</span><br><span class=\"line\">\t\t})</span><br><span class=\"line\">\t\tuser.PUT(<span class=\"string\">\"/add\"</span>, <span class=\"function\"><span class=\"keyword\">func</span><span class=\"params\">(ctx *gin.Context)</span></span> {</span><br><span class=\"line\">\t\t\tctx.String(http.StatusOK, <span class=\"string\">\"hello world2!\"</span>)</span><br><span class=\"line\">\t\t})</span><br><span class=\"line\">\t\tuser.POST(<span class=\"string\">\"/post\"</span>, <span class=\"function\"><span class=\"keyword\">func</span><span class=\"params\">(ctx *gin.Context)</span></span> {</span><br><span class=\"line\">\t\t\tctx.String(http.StatusOK, <span class=\"string\">\"hello world3!\"</span>)</span><br><span class=\"line\">\t\t})</span><br><span class=\"line\">\t\tuser.DELETE(<span class=\"string\">\"/delete\"</span>, <span class=\"function\"><span class=\"keyword\">func</span><span class=\"params\">(ctx *gin.Context)</span></span> {</span><br><span class=\"line\">\t\t\tctx.String(http.StatusOK, <span class=\"string\">\"hello world4!\"</span>)</span><br><span class=\"line\">\t\t})</span><br><span class=\"line\">\t}</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> r</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></div>\n\n<p>在<code>main.go</code>中调用</p>\n<div class=\"highlight-container\" data-rel=\"Go\"><figure class=\"iseeu highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> main</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">\"gin-Minato/router\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span> {</span><br><span class=\"line\">\tr := router.Router()</span><br><span class=\"line\">\t<span class=\"comment\">//r.Run(\":8080\")</span></span><br><span class=\"line\">\tr.Run()</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></div>\n\n<p>OK 完成，终于不用全写在 main 文件里了，不过这个写法还是不够简洁，并不符合官方文档</p>\n<h2 id=\"将处理方法外置到其他包裹\"><a href=\"#将处理方法外置到其他包裹\" class=\"headerlink\" title=\"将处理方法外置到其他包裹\"></a>将处理方法外置到其他包裹</h2><p>这是我个人对它的叫法，就是提一嘴，没什么技术含量，但是能够让项目更加简洁清晰，易于维护。</p>\n<p>定义控制器中常用的方法和数据结构</p>\n<div class=\"highlight-container\" data-rel=\"Go\"><figure class=\"iseeu highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//controller/commen.go</span></span><br><span class=\"line\"><span class=\"keyword\">package</span> controller</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">\"github.com/gin-gonic/gin\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">type</span> JsonStruct <span class=\"keyword\">struct</span> {</span><br><span class=\"line\">\tCode  <span class=\"type\">int</span>         <span class=\"string\">`json:\"code\"`</span>  <span class=\"comment\">//返回状态码</span></span><br><span class=\"line\">\tMsg   <span class=\"keyword\">interface</span>{} <span class=\"string\">`json:\"msg\"`</span>   <span class=\"comment\">//返回的提示语</span></span><br><span class=\"line\">\tData  <span class=\"keyword\">interface</span>{} <span class=\"string\">`json:\"data\"`</span>  <span class=\"comment\">//返回数据</span></span><br><span class=\"line\">\tCount <span class=\"keyword\">interface</span>{} <span class=\"string\">`json:\"count\"`</span> <span class=\"comment\">//返回条数</span></span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">type</span> JsonErrStruct <span class=\"keyword\">struct</span> {</span><br><span class=\"line\">\tCode <span class=\"type\">int</span>         <span class=\"string\">`json:\"code\"`</span> <span class=\"comment\">//返回状态码</span></span><br><span class=\"line\">\tMsg  <span class=\"keyword\">interface</span>{} <span class=\"string\">`json:\"msg\"`</span>  <span class=\"comment\">//返回的提示语</span></span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">ReturnSuccess</span><span class=\"params\">(c *gin.Context, code <span class=\"type\">int</span>, msg <span class=\"keyword\">interface</span>{}, data <span class=\"keyword\">interface</span>{}, count <span class=\"type\">int64</span>)</span></span> {</span><br><span class=\"line\">\tjson := &amp;JsonStruct{Code: code, Msg: msg, Data: data, Count: count}</span><br><span class=\"line\">\tc.JSON(<span class=\"number\">200</span>, json)</span><br><span class=\"line\">}</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">ReturnFalse</span><span class=\"params\">(c *gin.Context, code <span class=\"type\">int</span>, msg <span class=\"keyword\">interface</span>{})</span></span> {</span><br><span class=\"line\">\tjson := &amp;JsonErrStruct{Code: code, Msg: msg}</span><br><span class=\"line\">\tc.JSON(<span class=\"number\">200</span>, json)</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure></div>\n\n<p>在角色控制器中使用</p>\n<div class=\"highlight-container\" data-rel=\"Go\"><figure class=\"iseeu highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//controller/user.go</span></span><br><span class=\"line\"><span class=\"keyword\">package</span> controller</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">\"github.com/gin-gonic/gin\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">type</span> UserController <span class=\"keyword\">struct</span> {</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//将其归进结构体中，避免与同一个包下的其他方法名字冲突。就是引用的时候稍微麻烦些</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(u UserController)</span></span> GetUserInfo(c *gin.Context) {</span><br><span class=\"line\">\tReturnSuccess(c, <span class=\"number\">0</span>, <span class=\"string\">\"success\"</span>, <span class=\"string\">\"user info\"</span>, <span class=\"number\">1</span>)</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure></div>\n\n<p>在<code>main.go</code>中引用</p>\n<div class=\"highlight-container\" data-rel=\"Go\"><figure class=\"iseeu highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//main.go</span></span><br><span class=\"line\">user.GET(<span class=\"string\">\"/info\"</span>, controller.UserController{}.GetUserInfo)</span><br><span class=\"line\">user.GET(<span class=\"string\">\"/err\"</span>, controller.UserController{}.GetUserList)</span><br></pre></td></tr></table></figure></div>\n\n<p>ok 完成，已经有一个项目的雏形了</p>\n<h2 id=\"从上下文获取数据\"><a href=\"#从上下文获取数据\" class=\"headerlink\" title=\"从上下文获取数据\"></a>从上下文获取数据</h2><p><code>*c gin.context</code>显然不是吃干饭的，每回写方法都把它带上是有原因的</p>\n<div class=\"highlight-container\" data-rel=\"Go\"><figure class=\"iseeu highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(U UserController)</span></span> GetUserList(c *gin.Context) {</span><br><span class=\"line\">\tcid := c.PostForm(<span class=\"string\">\"cid\"</span>)</span><br><span class=\"line\">\tname := c.DefaultPostForm(<span class=\"string\">\"name\"</span>, <span class=\"string\">\"李大壮\"</span>)<span class=\"comment\">//提供默认值</span></span><br><span class=\"line\">\tReturnSuccess(c, <span class=\"number\">0</span>, cid, name, <span class=\"number\">1</span>)</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure></div>\n\n<p>这是一个简单的接受数据的方法</p>\n<p>这里使用 Apifox（免费的，好使 👍）向它发送请求</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/Gin_note/image-20240329131341634.png\" alt=\"image-20240329131341634\" style=\"zoom: 67%;\">\n\n<p>ok 完成，效果显著</p>\n<h2 id=\"将请求获取的数据绑定到结构体\"><a href=\"#将请求获取的数据绑定到结构体\" class=\"headerlink\" title=\"将请求获取的数据绑定到结构体\"></a>将请求获取的数据绑定到结构体</h2><p>上述方法不适合读取 json 数据报文</p>\n<p>第一种,以赋值的形式读过来</p>\n<div class=\"highlight-container\" data-rel=\"Go\"><figure class=\"iseeu highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(U UserController)</span></span> GetUserList(c *gin.Context) {</span><br><span class=\"line\">\t<span class=\"comment\">//cid := c.PostForm(\"cid\")</span></span><br><span class=\"line\">\t<span class=\"comment\">//name := c.DefaultPostForm(\"name\", \"李大壮\") //提供默认值</span></span><br><span class=\"line\">\tparam := <span class=\"built_in\">make</span>(<span class=\"keyword\">map</span>[<span class=\"type\">string</span>]<span class=\"keyword\">interface</span>{})</span><br><span class=\"line\">\terr := c.BindJSON(&amp;param)</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> err == <span class=\"literal\">nil</span> {</span><br><span class=\"line\">\t\tReturnSuccess(c, <span class=\"number\">0</span>, <span class=\"string\">\"success\"</span>,param, <span class=\"number\">1</span>)</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span></span><br><span class=\"line\">\t} <span class=\"keyword\">else</span> {</span><br><span class=\"line\">\t\tReturnFalse(c, <span class=\"number\">4001</span>, gin.H{<span class=\"string\">\"err\"</span>: err})</span><br><span class=\"line\">\t}</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure></div>\n\n<p>第二种，绑定到结构体</p>\n<div class=\"highlight-container\" data-rel=\"Go\"><figure class=\"iseeu highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">type</span> Search <span class=\"keyword\">struct</span> {</span><br><span class=\"line\">\tName <span class=\"type\">string</span> <span class=\"string\">`json:name`</span>   <span class=\"comment\">//必须要json匹配上，否则可能读不到</span></span><br><span class=\"line\">\tCid  <span class=\"type\">int</span>    <span class=\"string\">`json:cid`</span></span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(U UserController)</span></span> GetUserList(c *gin.Context) {</span><br><span class=\"line\">\tsearch := &amp;Search{}</span><br><span class=\"line\">\terr := c.BindJSON(&amp;search)</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> err == <span class=\"literal\">nil</span> {</span><br><span class=\"line\">\t\tReturnSuccess(c, <span class=\"number\">0</span>, search.Name, search.Cid, <span class=\"number\">1</span>)</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span></span><br><span class=\"line\">\t} <span class=\"keyword\">else</span> {</span><br><span class=\"line\">\t\tReturnFalse(c, <span class=\"number\">4001</span>, gin.H{<span class=\"string\">\"err\"</span>: err})</span><br><span class=\"line\">\t}</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure></div>\n\n<h2 id=\"defer-延迟捕获异常\"><a href=\"#defer-延迟捕获异常\" class=\"headerlink\" title=\"defer 延迟捕获异常\"></a>defer 延迟捕获异常</h2><div class=\"highlight-container\" data-rel=\"Go\"><figure class=\"iseeu highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">defer</span> <span class=\"function\"><span class=\"keyword\">func</span><span class=\"params\">()</span></span> {</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> err := <span class=\"built_in\">recover</span>(); err != <span class=\"literal\">nil</span> {</span><br><span class=\"line\">\t\tfmt.Println(<span class=\"string\">\"捕获异常\"</span>, err)</span><br><span class=\"line\">\t}</span><br><span class=\"line\">}()</span><br></pre></td></tr></table></figure></div>\n\n<p>自动运行，塞在方法里面就行，但是前端得不到报错情况。</p>\n<h2 id=\"Gorm\"><a href=\"#Gorm\" class=\"headerlink\" title=\"Gorm\"></a>Gorm</h2><p>这是一个 SQL 映射库</p>\n<h3 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h3><p>创建文件<code>config/dbconnect.go</code></p>\n<div class=\"highlight-container\" data-rel=\"Go\"><figure class=\"iseeu highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">初始化数据库链接</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"><span class=\"keyword\">package</span> config</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> (</span><br><span class=\"line\">\t<span class=\"string\">\"fmt\"</span></span><br><span class=\"line\">\t_ <span class=\"string\">\"github.com/joho/godotenv/autoload\"</span></span><br><span class=\"line\">\t<span class=\"string\">\"gorm.io/driver/mysql\"</span></span><br><span class=\"line\">\t<span class=\"string\">\"gorm.io/gorm\"</span></span><br><span class=\"line\">\t<span class=\"string\">\"os\"</span></span><br><span class=\"line\">\t<span class=\"string\">\"time\"</span></span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> (</span><br><span class=\"line\">\tDb      *gorm.DB</span><br><span class=\"line\">\terr     <span class=\"type\">error</span></span><br><span class=\"line\">\tMysqldb <span class=\"type\">string</span></span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">init</span><span class=\"params\">()</span></span> {</span><br><span class=\"line\">\t<span class=\"comment\">//初始化数据库的钥匙</span></span><br><span class=\"line\">\tname := os.Getenv(<span class=\"string\">\"name\"</span>)</span><br><span class=\"line\">\tpassword := os.Getenv(<span class=\"string\">\"password\"</span>)</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> name == <span class=\"string\">\"\"</span> || password == <span class=\"string\">\"\"</span> {</span><br><span class=\"line\">\t\t<span class=\"built_in\">panic</span>(<span class=\"string\">\"缺少必要的环境变量 name 或 password\"</span>)</span><br><span class=\"line\">\t}</span><br><span class=\"line\">\tMysqldb = fmt.Sprintf(<span class=\"string\">\"%s:%s@tcp(127.0.0.1:3306)/minato_sys?charset=utf8mb4&amp;parseTime=true\"</span>, name, password)</span><br><span class=\"line\">\t<span class=\"comment\">//链接数据库</span></span><br><span class=\"line\">\tDb, err = gorm.Open(mysql.Open(Mysqldb), &amp;gorm.Config{})</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> err != <span class=\"literal\">nil</span> {</span><br><span class=\"line\">\t\tfmt.Println(<span class=\"string\">\"mysql connect error:\"</span>, err.Error())</span><br><span class=\"line\">\t}</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> Db.Error != <span class=\"literal\">nil</span> {</span><br><span class=\"line\">\t\tfmt.Println(<span class=\"string\">\"mysql connect error:\"</span>, Db.Error)</span><br><span class=\"line\">\t}</span><br><span class=\"line\">\t<span class=\"comment\">//设置连接池</span></span><br><span class=\"line\">\tsqlDB, _ := Db.DB()</span><br><span class=\"line\">\t<span class=\"comment\">// SetMaxIdleConns sets the maximum number of connections in the idle connection pool.</span></span><br><span class=\"line\">\tsqlDB.SetMaxIdleConns(<span class=\"number\">10</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">// SetMaxOpenConns sets the maximum number of open connections to the database.</span></span><br><span class=\"line\">\tsqlDB.SetMaxOpenConns(<span class=\"number\">100</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">// SetConnMaxLifetime sets the maximum amount of time a connection may be reused.</span></span><br><span class=\"line\">\tsqlDB.SetConnMaxLifetime(time.Hour)</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure></div>\n\n<p>后续可以根据自己需要，分别写在自己想要的文件里</p>\n<p>注：此处用到了 godotenv 插件，可以从环境变量中读取数据，使用时可以参考这位老哥写的：<a class=\"link\" href=\"https://darjun.github.io/2020/02/12/godailylib/godotenv/\">Go 每日一库之 godotenv - 大俊的博客 (darjun.github.io) <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a></p>\n<div class=\"highlight-container\" data-rel=\"Plaintext\"><figure class=\"iseeu highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#这是一个示例的env文件</span><br><span class=\"line\">name = root</span><br><span class=\"line\">password = 88888888</span><br></pre></td></tr></table></figure></div>\n\n<h3 id=\"测试数据库是否链接\"><a href=\"#测试数据库是否链接\" class=\"headerlink\" title=\"测试数据库是否链接\"></a>测试数据库是否链接</h3><p>注：以下代码仅是测试使用，不可直接粘贴【直接粘贴和伪代码没啥区别】，根据需求进行改动</p>\n<div class=\"highlight-container\" data-rel=\"Go\"><figure class=\"iseeu highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//定义路由</span></span><br><span class=\"line\">user.GET(<span class=\"string\">\"/info/:cid\"</span>, controller.UserController{}.GetUserInfo)</span><br><span class=\"line\"><span class=\"comment\">//执行方法</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(u UserController)</span></span> GetUserInfo(c *gin.Context) {</span><br><span class=\"line\">\t<span class=\"keyword\">defer</span> <span class=\"function\"><span class=\"keyword\">func</span><span class=\"params\">()</span></span> {</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> err := <span class=\"built_in\">recover</span>(); err != <span class=\"literal\">nil</span> {</span><br><span class=\"line\">\t\t\tfmt.Println(<span class=\"string\">\"捕获异常\"</span>, err)</span><br><span class=\"line\">\t\t}</span><br><span class=\"line\">\t}()</span><br><span class=\"line\">\tcid := c.Param(<span class=\"string\">\"cid\"</span>)</span><br><span class=\"line\">\tid, err := strconv.Atoi(cid)</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> err != <span class=\"literal\">nil</span> {</span><br><span class=\"line\">\t\tfmt.Println(err)</span><br><span class=\"line\">\t}</span><br><span class=\"line\">\tuser, _ := model.GetUserTest(id)</span><br><span class=\"line\">\tReturnSuccess(c, <span class=\"number\">0</span>, <span class=\"string\">\"success\"</span>, user, <span class=\"number\">1</span>)</span><br><span class=\"line\">}</span><br><span class=\"line\"><span class=\"comment\">//定义数据库模型</span></span><br><span class=\"line\"><span class=\"keyword\">type</span> User <span class=\"keyword\">struct</span> {</span><br><span class=\"line\">\tId   <span class=\"type\">int</span></span><br><span class=\"line\">\tName <span class=\"type\">string</span></span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> DB = config.Db</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(User)</span></span> TableName() <span class=\"type\">string</span> {</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"string\">\"user\"</span></span><br><span class=\"line\">}</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">GetUserTest</span><span class=\"params\">(id <span class=\"type\">int</span>)</span></span> (User, <span class=\"type\">error</span>) {</span><br><span class=\"line\">\t<span class=\"keyword\">var</span> user User</span><br><span class=\"line\">\terr := DB.Where(<span class=\"string\">\"id=?\"</span>, id).First(&amp;user).Error</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> user, err</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure></div>\n\n<p>且测试前，数据库需要建立好测试表</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/Gin_note/image-20240330175545744.png\" alt=\"image-20240330175545744\" style=\"zoom: 80%;\">\n\n<p>最终结果：</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/Gin_note/image-20240330175639344.png\" alt=\"image-20240330175639344\" style=\"zoom: 80%;\">\n\n<p>ok 完成，这下项目基本结构就搭建好了</p>\n<h3 id=\"基础-crud\"><a href=\"#基础-crud\" class=\"headerlink\" title=\"基础 crud\"></a>基础 crud</h3><p>这个讲道理没啥好说的，官方文档写的蛮清晰的</p>\n<p>贴点样例</p>\n<div class=\"highlight-container\" data-rel=\"Go\"><figure class=\"iseeu highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">GetUserTest</span><span class=\"params\">(id <span class=\"type\">int</span>)</span></span> (User, <span class=\"type\">error</span>) {</span><br><span class=\"line\">\t<span class=\"keyword\">var</span> user User</span><br><span class=\"line\">\terr := DB.Where(<span class=\"string\">\"id=?\"</span>, id).First(&amp;user).Error</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> user, err</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">AddUser</span><span class=\"params\">(id <span class=\"type\">int</span>, name <span class=\"type\">string</span>)</span></span> (<span class=\"type\">int</span>, <span class=\"type\">error</span>) {</span><br><span class=\"line\">\tuser := User{Id: id, Name: name}</span><br><span class=\"line\">\terr := DB.Create(&amp;user).Error</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> user.Id, err</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">EditUser</span><span class=\"params\">(id <span class=\"type\">int</span>, name <span class=\"type\">string</span>)</span></span> {</span><br><span class=\"line\">\tuser := User{</span><br><span class=\"line\">\t\tId:   id,</span><br><span class=\"line\">\t\tName: name,</span><br><span class=\"line\">\t}</span><br><span class=\"line\">\t<span class=\"comment\">//传对象修改</span></span><br><span class=\"line\">    DB.Model(&amp;User{}).Updates(&amp;user)</span><br><span class=\"line\">\t<span class=\"comment\">//修改单独的列</span></span><br><span class=\"line\">\t<span class=\"comment\">//DB.Model(&amp;User{}).Where(\"id=?\", id).Update(\"name\", name)</span></span><br><span class=\"line\"></span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">Delete</span><span class=\"params\">(id <span class=\"type\">int</span>)</span></span> {</span><br><span class=\"line\">\tDB.Delete(&amp;User{}, <span class=\"number\">10</span>)</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></div>\n\n<h3 id=\"登录功能（附带使用-redis-存取-session）\"><a href=\"#登录功能（附带使用-redis-存取-session）\" class=\"headerlink\" title=\"登录功能（附带使用 redis 存取 session）\"></a>登录功能（附带使用 redis 存取 session）</h3><p><code>Redis</code>部署进项目</p>\n<div class=\"highlight-container\" data-rel=\"Go\"><figure class=\"iseeu highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> router</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> (</span><br><span class=\"line\">\t<span class=\"string\">\"gin-Minato/config\"</span></span><br><span class=\"line\">\t<span class=\"string\">\"gin-Minato/controller\"</span></span><br><span class=\"line\">\t<span class=\"string\">\"github.com/gin-contrib/sessions\"</span></span><br><span class=\"line\">\tsession_redis <span class=\"string\">\"github.com/gin-contrib/sessions/redis\"</span></span><br><span class=\"line\">\t<span class=\"string\">\"github.com/gin-gonic/gin\"</span></span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">Router</span><span class=\"params\">()</span></span> *gin.Engine {</span><br><span class=\"line\">\tr := gin.Default()</span><br><span class=\"line\">\t<span class=\"comment\">//配置redis</span></span><br><span class=\"line\">\tstore, _ := session_redis.NewStore(<span class=\"number\">10</span>, <span class=\"string\">\"tcp\"</span>, config.RedisAddress, <span class=\"string\">\"\"</span>, []<span class=\"type\">byte</span>(<span class=\"string\">\"secret\"</span>))</span><br><span class=\"line\">\tr.Use(sessions.Sessions(<span class=\"string\">\"mysession\"</span>, store))</span><br><span class=\"line\">\tuser := r.Group(<span class=\"string\">\"/user\"</span>)</span><br><span class=\"line\">\t{</span><br><span class=\"line\">\t\tuser.POST(<span class=\"string\">\"/login\"</span>, controller.UserController{}.Login)</span><br><span class=\"line\">\t\tuser.POST(<span class=\"string\">\"/register\"</span>, controller.UserController{}.Register)</span><br><span class=\"line\">\t}</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> r</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure></div>\n\n<p><code>redis.go</code></p>\n<div class=\"highlight-container\" data-rel=\"Go\"><figure class=\"iseeu highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> config</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> (</span><br><span class=\"line\">\tRedisAddress = <span class=\"string\">\"localhost:6379\"</span></span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></div>\n\n<p><code>controller/user.go</code></p>\n<div class=\"highlight-container\" data-rel=\"Go\"><figure class=\"iseeu highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(u UserController)</span></span> Login(c *gin.Context) {</span><br><span class=\"line\">\tusername := c.DefaultPostForm(<span class=\"string\">\"username\"</span>, <span class=\"string\">\"\"</span>)</span><br><span class=\"line\">\tpassword := c.DefaultPostForm(<span class=\"string\">\"password\"</span>, <span class=\"string\">\"\"</span>)</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> username == <span class=\"string\">\"\"</span> || password == <span class=\"string\">\"\"</span> {</span><br><span class=\"line\">\t\tReturnFalse(c, <span class=\"number\">4001</span>, <span class=\"string\">\"请输入账号和密码\"</span>)</span><br><span class=\"line\">\t}</span><br><span class=\"line\">\tuser, err := model.GetUserInfoByUsername(username)</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> user.Id == <span class=\"number\">0</span> {</span><br><span class=\"line\">\t\tReturnFalse(c, <span class=\"number\">4002</span>, <span class=\"string\">\"用户名或密码不正确\"</span>)</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span></span><br><span class=\"line\">\t}</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> user.Password != EncryMd5(password) {</span><br><span class=\"line\">\t\tReturnFalse(c, <span class=\"number\">4002</span>, <span class=\"string\">\"用户名或密码不正确\"</span>)</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span></span><br><span class=\"line\">\t}</span><br><span class=\"line\">\tsession := sessions.Default(c)</span><br><span class=\"line\">\tsession.set(<span class=\"string\">\"login\"</span>+strconv.Itoa(user.Id), user.Id)</span><br><span class=\"line\">\tsession.Save()</span><br><span class=\"line\">\tdata := UserApi{Id: user.id, Username: user.Username}</span><br><span class=\"line\">\tReturnSuccess(c, <span class=\"number\">0</span>, <span class=\"string\">\"登陆成功\"</span>, data, <span class=\"number\">1</span>)</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure></div>\n\n<h2 id=\"JWT-go\"><a href=\"#JWT-go\" class=\"headerlink\" title=\"JWT-go\"></a>JWT-go</h2><p>可以限制令牌持有者能访问的资源</p>\n<div class=\"highlight-container\" data-rel=\"Go\"><figure class=\"iseeu highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> (</span><br><span class=\"line\">\t<span class=\"string\">\"fmt\"</span></span><br><span class=\"line\">\t<span class=\"string\">\"github.com/dgrijalva/jwt-go\"</span></span><br><span class=\"line\">\t_ <span class=\"string\">\"github.com/joho/godotenv/autoload\"</span></span><br><span class=\"line\">\t<span class=\"string\">\"os\"</span></span><br><span class=\"line\">\t<span class=\"string\">\"time\"</span></span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 弄个简单一点的token</span></span><br><span class=\"line\"><span class=\"keyword\">type</span> Konoha <span class=\"keyword\">struct</span> {</span><br><span class=\"line\">\tUsername <span class=\"type\">string</span> <span class=\"string\">`json:\"username\"`</span></span><br><span class=\"line\">\tjwt.StandardClaims</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 从env文件中读取密钥</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> salt = os.Getenv(<span class=\"string\">\"salt\"</span>)</span><br><span class=\"line\"><span class=\"keyword\">var</span> mySignkey = []<span class=\"type\">byte</span>(salt)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">Tokencreate</span><span class=\"params\">(username <span class=\"type\">string</span>)</span></span> <span class=\"type\">string</span> {</span><br><span class=\"line\">\tc := Konoha{</span><br><span class=\"line\">\t\tUsername: username,</span><br><span class=\"line\">\t\tStandardClaims: jwt.StandardClaims{</span><br><span class=\"line\">\t\t\tNotBefore: time.Now().Unix() - <span class=\"number\">60</span>,</span><br><span class=\"line\">\t\t\t<span class=\"comment\">//设置过期时间在5秒后</span></span><br><span class=\"line\">\t\t\tExpiresAt: time.Now().Unix() + <span class=\"number\">5</span>,</span><br><span class=\"line\">\t\t\tIssuer:    <span class=\"string\">\"Minato\"</span>,</span><br><span class=\"line\">\t\t},</span><br><span class=\"line\">\t}</span><br><span class=\"line\">\ttoken := jwt.NewWithClaims(jwt.SigningMethodHS256, c)</span><br><span class=\"line\">\ttokenString, err := token.SignedString(mySignkey)</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> err != <span class=\"literal\">nil</span> {</span><br><span class=\"line\">\t\tfmt.Println(<span class=\"string\">\"token加密出错\"</span>, err.Error)</span><br><span class=\"line\">\t}</span><br><span class=\"line\">\tfmt.Println(tokenString)</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> tokenString</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">ParseToken</span><span class=\"params\">(tokenString <span class=\"type\">string</span>)</span></span> {</span><br><span class=\"line\">\ttoken, err := jwt.ParseWithClaims(tokenString, &amp;Konoha{}, <span class=\"function\"><span class=\"keyword\">func</span><span class=\"params\">(token *jwt.Token)</span></span> (<span class=\"keyword\">interface</span>{}, <span class=\"type\">error</span>) {</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> mySignkey, <span class=\"literal\">nil</span></span><br><span class=\"line\">\t})</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> err != <span class=\"literal\">nil</span> {</span><br><span class=\"line\">\t\tfmt.Println(err.Error())</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span></span><br><span class=\"line\">\t}</span><br><span class=\"line\">\tfmt.Println(token.Claims.(*Konoha))</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span> {</span><br><span class=\"line\">    <span class=\"comment\">//制作token</span></span><br><span class=\"line\">\ts := Tokencreate(<span class=\"string\">\"minato\"</span>)</span><br><span class=\"line\">    <span class=\"comment\">//等token过期</span></span><br><span class=\"line\">\tfmt.Println(<span class=\"string\">\"等六秒\"</span>)</span><br><span class=\"line\">\ttime.Sleep(<span class=\"number\">6</span> * time.Second)</span><br><span class=\"line\">\tParseToken(s)</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure></div>\n\n<p>结果：</p>\n<div class=\"highlight-container\" data-rel=\"Plaintext\"><figure class=\"iseeu highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6Im1pbmF0byIsImV4cCI6MTcxMjAzNDY5NywiaXNzIjoiTWluYXRvIiwibmJmIjoxNzEyMDM0NjMyfQ.rUsDMCOgP4-Tvq09UO0YWXVcfaetFtqhWejSszb2DCc</span><br><span class=\"line\">等六秒</span><br><span class=\"line\">token is expired by 1s</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></div>\n\n<p>将它写成中间件的形式：</p>\n<div class=\"highlight-container\" data-rel=\"Go\"><figure class=\"iseeu highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> middleware</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> (</span><br><span class=\"line\">\t<span class=\"string\">\"fmt\"</span></span><br><span class=\"line\">\t<span class=\"string\">\"gin-Minato/controller\"</span></span><br><span class=\"line\">\t<span class=\"string\">\"github.com/dgrijalva/jwt-go\"</span></span><br><span class=\"line\">\t<span class=\"string\">\"github.com/gin-gonic/gin\"</span></span><br><span class=\"line\">\t_ <span class=\"string\">\"github.com/joho/godotenv/autoload\"</span></span><br><span class=\"line\">\t<span class=\"string\">\"os\"</span></span><br><span class=\"line\">\t<span class=\"string\">\"time\"</span></span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 弄个简单一点的token</span></span><br><span class=\"line\"><span class=\"keyword\">type</span> Konoha <span class=\"keyword\">struct</span> {</span><br><span class=\"line\">\tUsername <span class=\"type\">string</span> <span class=\"string\">`json:\"username\"`</span></span><br><span class=\"line\">\tjwt.StandardClaims</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 从env文件中读取密钥</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> salt = os.Getenv(<span class=\"string\">\"salt\"</span>)</span><br><span class=\"line\"><span class=\"keyword\">var</span> mySignkey = []<span class=\"type\">byte</span>(salt)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">Tokencreate</span><span class=\"params\">(username <span class=\"type\">string</span>)</span></span> <span class=\"type\">string</span> {</span><br><span class=\"line\">\tc := Konoha{</span><br><span class=\"line\">\t\tUsername: username,</span><br><span class=\"line\">\t\tStandardClaims: jwt.StandardClaims{</span><br><span class=\"line\">\t\t\tNotBefore: time.Now().Unix() - <span class=\"number\">60</span>,</span><br><span class=\"line\">\t\t\t<span class=\"comment\">//设置过期时间在60秒后</span></span><br><span class=\"line\">\t\t\tExpiresAt: time.Now().Unix() + <span class=\"number\">60</span>,</span><br><span class=\"line\">\t\t\tIssuer:    <span class=\"string\">\"Minato\"</span>,</span><br><span class=\"line\">\t\t},</span><br><span class=\"line\">\t}</span><br><span class=\"line\">\ttoken := jwt.NewWithClaims(jwt.SigningMethodHS256, c)</span><br><span class=\"line\">\tkonohaToken, err := token.SignedString(mySignkey)</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> err != <span class=\"literal\">nil</span> {</span><br><span class=\"line\">\t\tfmt.Println(<span class=\"string\">\"token加密出错\"</span>, err.Error())</span><br><span class=\"line\">\t}</span><br><span class=\"line\">\tfmt.Println(konohaToken)</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> konohaToken</span><br><span class=\"line\">}</span><br><span class=\"line\"><span class=\"comment\">//-----------------------------------------在这呢，中间件解析token------------------------------------</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">ParseToken</span><span class=\"params\">(konohaToken <span class=\"type\">string</span>)</span></span> <span class=\"type\">string</span> {</span><br><span class=\"line\">\ttoken, err := jwt.ParseWithClaims(konohaToken, &amp;Konoha{}, <span class=\"function\"><span class=\"keyword\">func</span><span class=\"params\">(token *jwt.Token)</span></span> (<span class=\"keyword\">interface</span>{}, <span class=\"type\">error</span>) {</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> mySignkey, <span class=\"literal\">nil</span></span><br><span class=\"line\">\t})</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> err != <span class=\"literal\">nil</span> {</span><br><span class=\"line\">\t\tfmt.Println(err.Error())</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"string\">\"1001\"</span></span><br><span class=\"line\">\t}</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> !token.Valid {</span><br><span class=\"line\">\t\tfmt.Println(<span class=\"string\">\"token无效\"</span>)</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"string\">\"1002\"</span> <span class=\"comment\">// 返回无效token的错误码</span></span><br><span class=\"line\">\t}</span><br><span class=\"line\">\tclaims, ok := token.Claims.(*Konoha)</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> !ok {</span><br><span class=\"line\">\t\tfmt.Println(<span class=\"string\">\"token claims类型错误\"</span>)</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"string\">\"1003\"</span> <span class=\"comment\">// 返回token claims类型错误的错误码</span></span><br><span class=\"line\">\t}</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> claims.Username != <span class=\"string\">\"Minato\"</span> {</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"string\">\"1004\"</span></span><br><span class=\"line\">\t}</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"string\">\"200\"</span></span><br><span class=\"line\">}</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">JWTAuth</span><span class=\"params\">()</span></span> gin.HandlerFunc {</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"function\"><span class=\"keyword\">func</span><span class=\"params\">(c *gin.Context)</span></span> {</span><br><span class=\"line\">\t\ttokenStr := c.Request.Header.Get(<span class=\"string\">\"konohaToken\"</span>)</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> tokenStr == <span class=\"string\">\"\"</span> {</span><br><span class=\"line\">\t\t\tcontroller.ReturnFalse(c, <span class=\"number\">1000</span>, <span class=\"string\">\"token缺失\"</span>)</span><br><span class=\"line\">\t\t}</span><br><span class=\"line\">\t\tstatus := ParseToken(tokenStr)</span><br><span class=\"line\">\t\t<span class=\"keyword\">switch</span> status {</span><br><span class=\"line\">\t\t<span class=\"keyword\">case</span> <span class=\"string\">\"1000\"</span>:</span><br><span class=\"line\">\t\t\tcontroller.ReturnFalse(c, <span class=\"number\">1001</span>, <span class=\"string\">\"token过期\"</span>)</span><br><span class=\"line\">\t\t<span class=\"keyword\">case</span> <span class=\"string\">\"1001\"</span>:</span><br><span class=\"line\">\t\t\tcontroller.ReturnFalse(c, <span class=\"number\">1002</span>, <span class=\"string\">\"token签发人不正确\"</span>)</span><br><span class=\"line\">\t\t<span class=\"keyword\">case</span> <span class=\"string\">\"1002\"</span>:</span><br><span class=\"line\">\t\t\tcontroller.ReturnFalse(c, <span class=\"number\">1003</span>, <span class=\"string\">\"token claims类型错误\"</span>)</span><br><span class=\"line\">\t\t<span class=\"keyword\">case</span> <span class=\"string\">\"1003\"</span>:</span><br><span class=\"line\">\t\t\tcontroller.ReturnFalse(c, <span class=\"number\">1004</span>, <span class=\"string\">\"token无效\"</span>)</span><br><span class=\"line\">\t\t<span class=\"keyword\">case</span> <span class=\"string\">\"200\"</span>:</span><br><span class=\"line\">\t\t\t<span class=\"comment\">// token验证通过</span></span><br><span class=\"line\">\t\t\tfmt.Println(<span class=\"number\">200</span>)</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">default</span>:</span><br><span class=\"line\">\t\t\t<span class=\"comment\">// 处理其他未知错误</span></span><br><span class=\"line\">\t\t\tcontroller.ReturnFalse(c, <span class=\"number\">1999</span>, <span class=\"string\">\"未知错误\"</span>)</span><br><span class=\"line\">\t\t}</span><br><span class=\"line\">\t}</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></div>\n\n<h2 id=\"跨域请求-CORS\"><a href=\"#跨域请求-CORS\" class=\"headerlink\" title=\"跨域请求 CORS\"></a>跨域请求 CORS</h2><p>安装 CORS</p>\n<div class=\"highlight-container\" data-rel=\"Plaintext\"><figure class=\"iseeu highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ go get github.com/gin-contrib/cors</span><br></pre></td></tr></table></figure></div>\n\n<p><code>main.go</code>中进行配置</p>\n<div class=\"highlight-container\" data-rel=\"Go\"><figure class=\"iseeu highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> main</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> (</span><br><span class=\"line\">\t<span class=\"string\">\"github.com/gin-contrib/cors\"</span></span><br><span class=\"line\">\t<span class=\"string\">\"github.com/gin-gonic/gin\"</span></span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span> {</span><br><span class=\"line\">\tr := gin.Default()</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">// 使用 CORS 中间件，默认配置，谁都能访问</span></span><br><span class=\"line\">\tr.Use(cors.Default())</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 使用CORS中间件，并只允许来自5173端口的请求（和上面不能同时出现）</span></span><br><span class=\"line\">    router.Use(cors.New(cors.Config{</span><br><span class=\"line\">        AllowOrigins:     []<span class=\"type\">string</span>{<span class=\"string\">\"http://localhost:5173\"</span>},</span><br><span class=\"line\">        AllowMethods:     []<span class=\"type\">string</span>{<span class=\"string\">\"GET\"</span>, <span class=\"string\">\"POST\"</span>, <span class=\"string\">\"PUT\"</span>, <span class=\"string\">\"DELETE\"</span>},</span><br><span class=\"line\">        AllowHeaders:     []<span class=\"type\">string</span>{<span class=\"string\">\"Origin\"</span>, <span class=\"string\">\"Content-Type\"</span>},</span><br><span class=\"line\">        ExposeHeaders:    []<span class=\"type\">string</span>{<span class=\"string\">\"Content-Length\"</span>},</span><br><span class=\"line\">        AllowCredentials: <span class=\"literal\">true</span>,</span><br><span class=\"line\">        MaxAge:           <span class=\"number\">12</span>,</span><br><span class=\"line\">    }))</span><br><span class=\"line\">\t<span class=\"comment\">// 其他路由处理逻辑</span></span><br><span class=\"line\">\t<span class=\"comment\">// ...</span></span><br><span class=\"line\"></span><br><span class=\"line\">\tr.Run(<span class=\"string\">\":8080\"</span>)</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure></div>\n","more":"<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>这也不知道是我开的第几份笔记了，主打的是记录 Gin 后端的<strong>搭建</strong>，内容应该不会很多，毕竟 Gin 和 Flask 一样，是一个轻量型的框架，主打的是快速开发，但是 Gin 的响应速度上比 Flask 快的不是一点点，语言原生支持上 Golang 不需要额外的库也能完成协程，管道，映射等等功能。但是和 Goframe、SpringBoot 那些航空母舰级的框架不太一样，Gin 本身像个光杆司令，有不少功能是需要引入其他模块来实现的，比如 Gorm，godotenv 等等；</p>\n<p>至于 Goframe，原先确实萌生过好好学习它的想法，不过现在情况特殊，一来是原先投的岗位貌似莫得了，二来是毕设老师催挺急的，没时间开新坑了，抓紧写完抓紧 Gap。</p>\n<h2 id=\"工具包\"><a href=\"#工具包\" class=\"headerlink\" title=\"工具包\"></a>工具包</h2><p>Gin 快速搭建教程[来自 B 站’慕课网’]：<a class=\"link\" href=\"https://www.bilibili.com/video/BV1Jy4y1F7RG/\">https://www.bilibili.com/video/BV1Jy4y1F7RG/ <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a></p>\n<p>Gin 中文开发文档：<a class=\"link\" href=\"https://gin-gonic.com/zh-cn/docs/quickstart/\">快速入门 | Gin Web Framework (gin-gonic.com) <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a></p>\n<p>Gorm 中文开发文档：<a class=\"link\" href=\"https://gorm.io/zh_CN/docs/\">GORM 指南 | GORM - The fantastic ORM library for Golang, aims to be developer friendly. <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a></p>\n<h2 id=\"开发报错\"><a href=\"#开发报错\" class=\"headerlink\" title=\"开发报错\"></a>开发报错</h2><blockquote>\n<ul>\n<li><p>如果开发过程中出现<code>404-not-found</code>，请先检查请求模式是<code>GET</code>还是<code>POST</code></p>\n</li>\n<li><p>如果 gorm 查询结果为空且数据库查询正常，请检查 gorm 标签是否正确<code>gorm:\"column:publicKey\"</code></p>\n</li>\n<li><p>如果开发过程中，在数据库<code>Mysql</code>中设置了默认值，但是不会启用，可能是 gorm 给覆盖了，需要在<code>gorm</code>这重新定义</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Isvisual       <span class=\"type\">int</span>     <span class=\"string\">`gorm:\"column:isvisual;default:1\"`</span></span><br><span class=\"line\">Status         <span class=\"type\">int</span>     <span class=\"string\">`gorm:\"column:status;default:1\"`</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>如果 json 绑定失败，请检查结构体定义的变量头是否小写（被定义成私有变量了）</p>\n</li>\n<li><p><code>sqlx</code> 在把<code>timestamp</code>转为<code>go</code>的<code>time.Time</code>报错<code>Scan error on column index 6: unsupported Scan, storing driver.Value type []uint8 into type *time.Time</code>,需要在数据库配置时加上<code>parseTime=true</code>，即:</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Mysqldb = fmt.Sprintf(<span class=\"string\">\"%s:%s@tcp(127.0.0.1:3306)/minato_sys?charset=utf8mb4&amp;parseTime=true\"</span>, name, password)</span><br></pre></td></tr></table></figure>\n\n<p>不过，这一点我已经在数据库配置那一环修改过了，按着笔记走应该碰不到这个错误。</p>\n</li>\n<li></li>\n</ul>\n</blockquote>\n<h2 id=\"Gin-创建工程\"><a href=\"#Gin-创建工程\" class=\"headerlink\" title=\"Gin 创建工程\"></a>Gin 创建工程</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 初始化项目</span><br><span class=\"line\">$ go mod init gin-Minato</span><br><span class=\"line\"></span><br><span class=\"line\"># 安装Gin框架</span><br><span class=\"line\">$ go get github.com/gin-gonic/gin@latest</span><br><span class=\"line\"></span><br><span class=\"line\"># 安装热加载插件fresh</span><br><span class=\"line\">$ go install github.com/pilu/fresh@latest</span><br><span class=\"line\">$ go get github.com/pilu/fresh</span><br><span class=\"line\">$ fresh</span><br><span class=\"line\"></span><br><span class=\"line\"># 安装godotenv插件</span><br><span class=\"line\">$ go get github.com/joho/godotenv</span><br><span class=\"line\"></span><br><span class=\"line\"># 安装Gorm</span><br><span class=\"line\">$ go get -u gorm.io/gorm</span><br><span class=\"line\">$ go get -u gorm.io/driver/mysql  #你用什么就下什么，这边以mysql为例</span><br><span class=\"line\"></span><br><span class=\"line\"># 安装session和redis</span><br><span class=\"line\">$ go get github.com/gin-contrib/sessions</span><br><span class=\"line\">$ go get github.com/gin-contrib/sessions/redis</span><br><span class=\"line\"></span><br><span class=\"line\"># 安装JWT-go</span><br><span class=\"line\">$ go get github.com/dgrijalva/jwt-go</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"测试代码\"><a href=\"#测试代码\" class=\"headerlink\" title=\"测试代码\"></a>测试代码</h3><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> main</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> (</span><br><span class=\"line\">\t<span class=\"string\">\"github.com/gin-gonic/gin\"</span></span><br><span class=\"line\">\t<span class=\"string\">\"net/http\"</span></span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span> {</span><br><span class=\"line\">\tr := gin.Default()</span><br><span class=\"line\">\tr.GET(<span class=\"string\">\"/\"</span>, <span class=\"function\"><span class=\"keyword\">func</span><span class=\"params\">(ctx *gin.Context)</span></span> {</span><br><span class=\"line\">\t\tctx.String(http.StatusOK, <span class=\"string\">\"hello world!\"</span>)</span><br><span class=\"line\">\t})</span><br><span class=\"line\">\t<span class=\"comment\">//r.Run(\":8080\")</span></span><br><span class=\"line\">\tr.Run()</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure>\n\n<p>运行：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 启动</span><br><span class=\"line\">$ go run main.go</span><br><span class=\"line\"># 如果安装过fresh，则可以</span><br><span class=\"line\">$ fresh</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"路由分配\"><a href=\"#路由分配\" class=\"headerlink\" title=\"路由分配\"></a>路由分配</h2><p>步骤：在<code>router.go</code>中创建<code>gin引擎</code>，在<code>main.go</code>里调用</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//routers.go</span></span><br><span class=\"line\"><span class=\"keyword\">package</span> router</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> (</span><br><span class=\"line\">\t<span class=\"string\">\"github.com/gin-gonic/gin\"</span></span><br><span class=\"line\">\t<span class=\"string\">\"net/http\"</span></span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">Router</span><span class=\"params\">()</span></span> *gin.Engine {</span><br><span class=\"line\">\tr := gin.Default()</span><br><span class=\"line\"></span><br><span class=\"line\">\tuser := r.Group(<span class=\"string\">\"/user\"</span>)</span><br><span class=\"line\">\t{</span><br><span class=\"line\">\t\tuser.GET(<span class=\"string\">\"/\"</span>, <span class=\"function\"><span class=\"keyword\">func</span><span class=\"params\">(ctx *gin.Context)</span></span> {</span><br><span class=\"line\">\t\t\tctx.String(http.StatusOK, <span class=\"string\">\"hello world1!\"</span>)</span><br><span class=\"line\">\t\t})</span><br><span class=\"line\">\t\tuser.PUT(<span class=\"string\">\"/add\"</span>, <span class=\"function\"><span class=\"keyword\">func</span><span class=\"params\">(ctx *gin.Context)</span></span> {</span><br><span class=\"line\">\t\t\tctx.String(http.StatusOK, <span class=\"string\">\"hello world2!\"</span>)</span><br><span class=\"line\">\t\t})</span><br><span class=\"line\">\t\tuser.POST(<span class=\"string\">\"/post\"</span>, <span class=\"function\"><span class=\"keyword\">func</span><span class=\"params\">(ctx *gin.Context)</span></span> {</span><br><span class=\"line\">\t\t\tctx.String(http.StatusOK, <span class=\"string\">\"hello world3!\"</span>)</span><br><span class=\"line\">\t\t})</span><br><span class=\"line\">\t\tuser.DELETE(<span class=\"string\">\"/delete\"</span>, <span class=\"function\"><span class=\"keyword\">func</span><span class=\"params\">(ctx *gin.Context)</span></span> {</span><br><span class=\"line\">\t\t\tctx.String(http.StatusOK, <span class=\"string\">\"hello world4!\"</span>)</span><br><span class=\"line\">\t\t})</span><br><span class=\"line\">\t}</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> r</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>在<code>main.go</code>中调用</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> main</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">\"gin-Minato/router\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span> {</span><br><span class=\"line\">\tr := router.Router()</span><br><span class=\"line\">\t<span class=\"comment\">//r.Run(\":8080\")</span></span><br><span class=\"line\">\tr.Run()</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>OK 完成，终于不用全写在 main 文件里了，不过这个写法还是不够简洁，并不符合官方文档</p>\n<h2 id=\"将处理方法外置到其他包裹\"><a href=\"#将处理方法外置到其他包裹\" class=\"headerlink\" title=\"将处理方法外置到其他包裹\"></a>将处理方法外置到其他包裹</h2><p>这是我个人对它的叫法，就是提一嘴，没什么技术含量，但是能够让项目更加简洁清晰，易于维护。</p>\n<p>定义控制器中常用的方法和数据结构</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//controller/commen.go</span></span><br><span class=\"line\"><span class=\"keyword\">package</span> controller</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">\"github.com/gin-gonic/gin\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">type</span> JsonStruct <span class=\"keyword\">struct</span> {</span><br><span class=\"line\">\tCode  <span class=\"type\">int</span>         <span class=\"string\">`json:\"code\"`</span>  <span class=\"comment\">//返回状态码</span></span><br><span class=\"line\">\tMsg   <span class=\"keyword\">interface</span>{} <span class=\"string\">`json:\"msg\"`</span>   <span class=\"comment\">//返回的提示语</span></span><br><span class=\"line\">\tData  <span class=\"keyword\">interface</span>{} <span class=\"string\">`json:\"data\"`</span>  <span class=\"comment\">//返回数据</span></span><br><span class=\"line\">\tCount <span class=\"keyword\">interface</span>{} <span class=\"string\">`json:\"count\"`</span> <span class=\"comment\">//返回条数</span></span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">type</span> JsonErrStruct <span class=\"keyword\">struct</span> {</span><br><span class=\"line\">\tCode <span class=\"type\">int</span>         <span class=\"string\">`json:\"code\"`</span> <span class=\"comment\">//返回状态码</span></span><br><span class=\"line\">\tMsg  <span class=\"keyword\">interface</span>{} <span class=\"string\">`json:\"msg\"`</span>  <span class=\"comment\">//返回的提示语</span></span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">ReturnSuccess</span><span class=\"params\">(c *gin.Context, code <span class=\"type\">int</span>, msg <span class=\"keyword\">interface</span>{}, data <span class=\"keyword\">interface</span>{}, count <span class=\"type\">int64</span>)</span></span> {</span><br><span class=\"line\">\tjson := &amp;JsonStruct{Code: code, Msg: msg, Data: data, Count: count}</span><br><span class=\"line\">\tc.JSON(<span class=\"number\">200</span>, json)</span><br><span class=\"line\">}</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">ReturnFalse</span><span class=\"params\">(c *gin.Context, code <span class=\"type\">int</span>, msg <span class=\"keyword\">interface</span>{})</span></span> {</span><br><span class=\"line\">\tjson := &amp;JsonErrStruct{Code: code, Msg: msg}</span><br><span class=\"line\">\tc.JSON(<span class=\"number\">200</span>, json)</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure>\n\n<p>在角色控制器中使用</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//controller/user.go</span></span><br><span class=\"line\"><span class=\"keyword\">package</span> controller</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">\"github.com/gin-gonic/gin\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">type</span> UserController <span class=\"keyword\">struct</span> {</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//将其归进结构体中，避免与同一个包下的其他方法名字冲突。就是引用的时候稍微麻烦些</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(u UserController)</span></span> GetUserInfo(c *gin.Context) {</span><br><span class=\"line\">\tReturnSuccess(c, <span class=\"number\">0</span>, <span class=\"string\">\"success\"</span>, <span class=\"string\">\"user info\"</span>, <span class=\"number\">1</span>)</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure>\n\n<p>在<code>main.go</code>中引用</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//main.go</span></span><br><span class=\"line\">user.GET(<span class=\"string\">\"/info\"</span>, controller.UserController{}.GetUserInfo)</span><br><span class=\"line\">user.GET(<span class=\"string\">\"/err\"</span>, controller.UserController{}.GetUserList)</span><br></pre></td></tr></table></figure>\n\n<p>ok 完成，已经有一个项目的雏形了</p>\n<h2 id=\"从上下文获取数据\"><a href=\"#从上下文获取数据\" class=\"headerlink\" title=\"从上下文获取数据\"></a>从上下文获取数据</h2><p><code>*c gin.context</code>显然不是吃干饭的，每回写方法都把它带上是有原因的</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(U UserController)</span></span> GetUserList(c *gin.Context) {</span><br><span class=\"line\">\tcid := c.PostForm(<span class=\"string\">\"cid\"</span>)</span><br><span class=\"line\">\tname := c.DefaultPostForm(<span class=\"string\">\"name\"</span>, <span class=\"string\">\"李大壮\"</span>)<span class=\"comment\">//提供默认值</span></span><br><span class=\"line\">\tReturnSuccess(c, <span class=\"number\">0</span>, cid, name, <span class=\"number\">1</span>)</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure>\n\n<p>这是一个简单的接受数据的方法</p>\n<p>这里使用 Apifox（免费的，好使 👍）向它发送请求</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/Gin_note/image-20240329131341634.png\" alt=\"image-20240329131341634\" style=\"zoom: 67%;\">\n\n<p>ok 完成，效果显著</p>\n<h2 id=\"将请求获取的数据绑定到结构体\"><a href=\"#将请求获取的数据绑定到结构体\" class=\"headerlink\" title=\"将请求获取的数据绑定到结构体\"></a>将请求获取的数据绑定到结构体</h2><p>上述方法不适合读取 json 数据报文</p>\n<p>第一种,以赋值的形式读过来</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(U UserController)</span></span> GetUserList(c *gin.Context) {</span><br><span class=\"line\">\t<span class=\"comment\">//cid := c.PostForm(\"cid\")</span></span><br><span class=\"line\">\t<span class=\"comment\">//name := c.DefaultPostForm(\"name\", \"李大壮\") //提供默认值</span></span><br><span class=\"line\">\tparam := <span class=\"built_in\">make</span>(<span class=\"keyword\">map</span>[<span class=\"type\">string</span>]<span class=\"keyword\">interface</span>{})</span><br><span class=\"line\">\terr := c.BindJSON(&amp;param)</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> err == <span class=\"literal\">nil</span> {</span><br><span class=\"line\">\t\tReturnSuccess(c, <span class=\"number\">0</span>, <span class=\"string\">\"success\"</span>,param, <span class=\"number\">1</span>)</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span></span><br><span class=\"line\">\t} <span class=\"keyword\">else</span> {</span><br><span class=\"line\">\t\tReturnFalse(c, <span class=\"number\">4001</span>, gin.H{<span class=\"string\">\"err\"</span>: err})</span><br><span class=\"line\">\t}</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure>\n\n<p>第二种，绑定到结构体</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">type</span> Search <span class=\"keyword\">struct</span> {</span><br><span class=\"line\">\tName <span class=\"type\">string</span> <span class=\"string\">`json:name`</span>   <span class=\"comment\">//必须要json匹配上，否则可能读不到</span></span><br><span class=\"line\">\tCid  <span class=\"type\">int</span>    <span class=\"string\">`json:cid`</span></span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(U UserController)</span></span> GetUserList(c *gin.Context) {</span><br><span class=\"line\">\tsearch := &amp;Search{}</span><br><span class=\"line\">\terr := c.BindJSON(&amp;search)</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> err == <span class=\"literal\">nil</span> {</span><br><span class=\"line\">\t\tReturnSuccess(c, <span class=\"number\">0</span>, search.Name, search.Cid, <span class=\"number\">1</span>)</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span></span><br><span class=\"line\">\t} <span class=\"keyword\">else</span> {</span><br><span class=\"line\">\t\tReturnFalse(c, <span class=\"number\">4001</span>, gin.H{<span class=\"string\">\"err\"</span>: err})</span><br><span class=\"line\">\t}</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"defer-延迟捕获异常\"><a href=\"#defer-延迟捕获异常\" class=\"headerlink\" title=\"defer 延迟捕获异常\"></a>defer 延迟捕获异常</h2><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">defer</span> <span class=\"function\"><span class=\"keyword\">func</span><span class=\"params\">()</span></span> {</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> err := <span class=\"built_in\">recover</span>(); err != <span class=\"literal\">nil</span> {</span><br><span class=\"line\">\t\tfmt.Println(<span class=\"string\">\"捕获异常\"</span>, err)</span><br><span class=\"line\">\t}</span><br><span class=\"line\">}()</span><br></pre></td></tr></table></figure>\n\n<p>自动运行，塞在方法里面就行，但是前端得不到报错情况。</p>\n<h2 id=\"Gorm\"><a href=\"#Gorm\" class=\"headerlink\" title=\"Gorm\"></a>Gorm</h2><p>这是一个 SQL 映射库</p>\n<h3 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h3><p>创建文件<code>config/dbconnect.go</code></p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">初始化数据库链接</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"><span class=\"keyword\">package</span> config</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> (</span><br><span class=\"line\">\t<span class=\"string\">\"fmt\"</span></span><br><span class=\"line\">\t_ <span class=\"string\">\"github.com/joho/godotenv/autoload\"</span></span><br><span class=\"line\">\t<span class=\"string\">\"gorm.io/driver/mysql\"</span></span><br><span class=\"line\">\t<span class=\"string\">\"gorm.io/gorm\"</span></span><br><span class=\"line\">\t<span class=\"string\">\"os\"</span></span><br><span class=\"line\">\t<span class=\"string\">\"time\"</span></span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> (</span><br><span class=\"line\">\tDb      *gorm.DB</span><br><span class=\"line\">\terr     <span class=\"type\">error</span></span><br><span class=\"line\">\tMysqldb <span class=\"type\">string</span></span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">init</span><span class=\"params\">()</span></span> {</span><br><span class=\"line\">\t<span class=\"comment\">//初始化数据库的钥匙</span></span><br><span class=\"line\">\tname := os.Getenv(<span class=\"string\">\"name\"</span>)</span><br><span class=\"line\">\tpassword := os.Getenv(<span class=\"string\">\"password\"</span>)</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> name == <span class=\"string\">\"\"</span> || password == <span class=\"string\">\"\"</span> {</span><br><span class=\"line\">\t\t<span class=\"built_in\">panic</span>(<span class=\"string\">\"缺少必要的环境变量 name 或 password\"</span>)</span><br><span class=\"line\">\t}</span><br><span class=\"line\">\tMysqldb = fmt.Sprintf(<span class=\"string\">\"%s:%s@tcp(127.0.0.1:3306)/minato_sys?charset=utf8mb4&amp;parseTime=true\"</span>, name, password)</span><br><span class=\"line\">\t<span class=\"comment\">//链接数据库</span></span><br><span class=\"line\">\tDb, err = gorm.Open(mysql.Open(Mysqldb), &amp;gorm.Config{})</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> err != <span class=\"literal\">nil</span> {</span><br><span class=\"line\">\t\tfmt.Println(<span class=\"string\">\"mysql connect error:\"</span>, err.Error())</span><br><span class=\"line\">\t}</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> Db.Error != <span class=\"literal\">nil</span> {</span><br><span class=\"line\">\t\tfmt.Println(<span class=\"string\">\"mysql connect error:\"</span>, Db.Error)</span><br><span class=\"line\">\t}</span><br><span class=\"line\">\t<span class=\"comment\">//设置连接池</span></span><br><span class=\"line\">\tsqlDB, _ := Db.DB()</span><br><span class=\"line\">\t<span class=\"comment\">// SetMaxIdleConns sets the maximum number of connections in the idle connection pool.</span></span><br><span class=\"line\">\tsqlDB.SetMaxIdleConns(<span class=\"number\">10</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">// SetMaxOpenConns sets the maximum number of open connections to the database.</span></span><br><span class=\"line\">\tsqlDB.SetMaxOpenConns(<span class=\"number\">100</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">// SetConnMaxLifetime sets the maximum amount of time a connection may be reused.</span></span><br><span class=\"line\">\tsqlDB.SetConnMaxLifetime(time.Hour)</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure>\n\n<p>后续可以根据自己需要，分别写在自己想要的文件里</p>\n<p>注：此处用到了 godotenv 插件，可以从环境变量中读取数据，使用时可以参考这位老哥写的：<a class=\"link\" href=\"https://darjun.github.io/2020/02/12/godailylib/godotenv/\">Go 每日一库之 godotenv - 大俊的博客 (darjun.github.io) <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#这是一个示例的env文件</span><br><span class=\"line\">name = root</span><br><span class=\"line\">password = 88888888</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"测试数据库是否链接\"><a href=\"#测试数据库是否链接\" class=\"headerlink\" title=\"测试数据库是否链接\"></a>测试数据库是否链接</h3><p>注：以下代码仅是测试使用，不可直接粘贴【直接粘贴和伪代码没啥区别】，根据需求进行改动</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//定义路由</span></span><br><span class=\"line\">user.GET(<span class=\"string\">\"/info/:cid\"</span>, controller.UserController{}.GetUserInfo)</span><br><span class=\"line\"><span class=\"comment\">//执行方法</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(u UserController)</span></span> GetUserInfo(c *gin.Context) {</span><br><span class=\"line\">\t<span class=\"keyword\">defer</span> <span class=\"function\"><span class=\"keyword\">func</span><span class=\"params\">()</span></span> {</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> err := <span class=\"built_in\">recover</span>(); err != <span class=\"literal\">nil</span> {</span><br><span class=\"line\">\t\t\tfmt.Println(<span class=\"string\">\"捕获异常\"</span>, err)</span><br><span class=\"line\">\t\t}</span><br><span class=\"line\">\t}()</span><br><span class=\"line\">\tcid := c.Param(<span class=\"string\">\"cid\"</span>)</span><br><span class=\"line\">\tid, err := strconv.Atoi(cid)</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> err != <span class=\"literal\">nil</span> {</span><br><span class=\"line\">\t\tfmt.Println(err)</span><br><span class=\"line\">\t}</span><br><span class=\"line\">\tuser, _ := model.GetUserTest(id)</span><br><span class=\"line\">\tReturnSuccess(c, <span class=\"number\">0</span>, <span class=\"string\">\"success\"</span>, user, <span class=\"number\">1</span>)</span><br><span class=\"line\">}</span><br><span class=\"line\"><span class=\"comment\">//定义数据库模型</span></span><br><span class=\"line\"><span class=\"keyword\">type</span> User <span class=\"keyword\">struct</span> {</span><br><span class=\"line\">\tId   <span class=\"type\">int</span></span><br><span class=\"line\">\tName <span class=\"type\">string</span></span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> DB = config.Db</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(User)</span></span> TableName() <span class=\"type\">string</span> {</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"string\">\"user\"</span></span><br><span class=\"line\">}</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">GetUserTest</span><span class=\"params\">(id <span class=\"type\">int</span>)</span></span> (User, <span class=\"type\">error</span>) {</span><br><span class=\"line\">\t<span class=\"keyword\">var</span> user User</span><br><span class=\"line\">\terr := DB.Where(<span class=\"string\">\"id=?\"</span>, id).First(&amp;user).Error</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> user, err</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure>\n\n<p>且测试前，数据库需要建立好测试表</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/Gin_note/image-20240330175545744.png\" alt=\"image-20240330175545744\" style=\"zoom: 80%;\">\n\n<p>最终结果：</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/Gin_note/image-20240330175639344.png\" alt=\"image-20240330175639344\" style=\"zoom: 80%;\">\n\n<p>ok 完成，这下项目基本结构就搭建好了</p>\n<h3 id=\"基础-crud\"><a href=\"#基础-crud\" class=\"headerlink\" title=\"基础 crud\"></a>基础 crud</h3><p>这个讲道理没啥好说的，官方文档写的蛮清晰的</p>\n<p>贴点样例</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">GetUserTest</span><span class=\"params\">(id <span class=\"type\">int</span>)</span></span> (User, <span class=\"type\">error</span>) {</span><br><span class=\"line\">\t<span class=\"keyword\">var</span> user User</span><br><span class=\"line\">\terr := DB.Where(<span class=\"string\">\"id=?\"</span>, id).First(&amp;user).Error</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> user, err</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">AddUser</span><span class=\"params\">(id <span class=\"type\">int</span>, name <span class=\"type\">string</span>)</span></span> (<span class=\"type\">int</span>, <span class=\"type\">error</span>) {</span><br><span class=\"line\">\tuser := User{Id: id, Name: name}</span><br><span class=\"line\">\terr := DB.Create(&amp;user).Error</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> user.Id, err</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">EditUser</span><span class=\"params\">(id <span class=\"type\">int</span>, name <span class=\"type\">string</span>)</span></span> {</span><br><span class=\"line\">\tuser := User{</span><br><span class=\"line\">\t\tId:   id,</span><br><span class=\"line\">\t\tName: name,</span><br><span class=\"line\">\t}</span><br><span class=\"line\">\t<span class=\"comment\">//传对象修改</span></span><br><span class=\"line\">    DB.Model(&amp;User{}).Updates(&amp;user)</span><br><span class=\"line\">\t<span class=\"comment\">//修改单独的列</span></span><br><span class=\"line\">\t<span class=\"comment\">//DB.Model(&amp;User{}).Where(\"id=?\", id).Update(\"name\", name)</span></span><br><span class=\"line\"></span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">Delete</span><span class=\"params\">(id <span class=\"type\">int</span>)</span></span> {</span><br><span class=\"line\">\tDB.Delete(&amp;User{}, <span class=\"number\">10</span>)</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"登录功能（附带使用-redis-存取-session）\"><a href=\"#登录功能（附带使用-redis-存取-session）\" class=\"headerlink\" title=\"登录功能（附带使用 redis 存取 session）\"></a>登录功能（附带使用 redis 存取 session）</h3><p><code>Redis</code>部署进项目</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> router</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> (</span><br><span class=\"line\">\t<span class=\"string\">\"gin-Minato/config\"</span></span><br><span class=\"line\">\t<span class=\"string\">\"gin-Minato/controller\"</span></span><br><span class=\"line\">\t<span class=\"string\">\"github.com/gin-contrib/sessions\"</span></span><br><span class=\"line\">\tsession_redis <span class=\"string\">\"github.com/gin-contrib/sessions/redis\"</span></span><br><span class=\"line\">\t<span class=\"string\">\"github.com/gin-gonic/gin\"</span></span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">Router</span><span class=\"params\">()</span></span> *gin.Engine {</span><br><span class=\"line\">\tr := gin.Default()</span><br><span class=\"line\">\t<span class=\"comment\">//配置redis</span></span><br><span class=\"line\">\tstore, _ := session_redis.NewStore(<span class=\"number\">10</span>, <span class=\"string\">\"tcp\"</span>, config.RedisAddress, <span class=\"string\">\"\"</span>, []<span class=\"type\">byte</span>(<span class=\"string\">\"secret\"</span>))</span><br><span class=\"line\">\tr.Use(sessions.Sessions(<span class=\"string\">\"mysession\"</span>, store))</span><br><span class=\"line\">\tuser := r.Group(<span class=\"string\">\"/user\"</span>)</span><br><span class=\"line\">\t{</span><br><span class=\"line\">\t\tuser.POST(<span class=\"string\">\"/login\"</span>, controller.UserController{}.Login)</span><br><span class=\"line\">\t\tuser.POST(<span class=\"string\">\"/register\"</span>, controller.UserController{}.Register)</span><br><span class=\"line\">\t}</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> r</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure>\n\n<p><code>redis.go</code></p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> config</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> (</span><br><span class=\"line\">\tRedisAddress = <span class=\"string\">\"localhost:6379\"</span></span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p><code>controller/user.go</code></p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(u UserController)</span></span> Login(c *gin.Context) {</span><br><span class=\"line\">\tusername := c.DefaultPostForm(<span class=\"string\">\"username\"</span>, <span class=\"string\">\"\"</span>)</span><br><span class=\"line\">\tpassword := c.DefaultPostForm(<span class=\"string\">\"password\"</span>, <span class=\"string\">\"\"</span>)</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> username == <span class=\"string\">\"\"</span> || password == <span class=\"string\">\"\"</span> {</span><br><span class=\"line\">\t\tReturnFalse(c, <span class=\"number\">4001</span>, <span class=\"string\">\"请输入账号和密码\"</span>)</span><br><span class=\"line\">\t}</span><br><span class=\"line\">\tuser, err := model.GetUserInfoByUsername(username)</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> user.Id == <span class=\"number\">0</span> {</span><br><span class=\"line\">\t\tReturnFalse(c, <span class=\"number\">4002</span>, <span class=\"string\">\"用户名或密码不正确\"</span>)</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span></span><br><span class=\"line\">\t}</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> user.Password != EncryMd5(password) {</span><br><span class=\"line\">\t\tReturnFalse(c, <span class=\"number\">4002</span>, <span class=\"string\">\"用户名或密码不正确\"</span>)</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span></span><br><span class=\"line\">\t}</span><br><span class=\"line\">\tsession := sessions.Default(c)</span><br><span class=\"line\">\tsession.set(<span class=\"string\">\"login\"</span>+strconv.Itoa(user.Id), user.Id)</span><br><span class=\"line\">\tsession.Save()</span><br><span class=\"line\">\tdata := UserApi{Id: user.id, Username: user.Username}</span><br><span class=\"line\">\tReturnSuccess(c, <span class=\"number\">0</span>, <span class=\"string\">\"登陆成功\"</span>, data, <span class=\"number\">1</span>)</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"JWT-go\"><a href=\"#JWT-go\" class=\"headerlink\" title=\"JWT-go\"></a>JWT-go</h2><p>可以限制令牌持有者能访问的资源</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> (</span><br><span class=\"line\">\t<span class=\"string\">\"fmt\"</span></span><br><span class=\"line\">\t<span class=\"string\">\"github.com/dgrijalva/jwt-go\"</span></span><br><span class=\"line\">\t_ <span class=\"string\">\"github.com/joho/godotenv/autoload\"</span></span><br><span class=\"line\">\t<span class=\"string\">\"os\"</span></span><br><span class=\"line\">\t<span class=\"string\">\"time\"</span></span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 弄个简单一点的token</span></span><br><span class=\"line\"><span class=\"keyword\">type</span> Konoha <span class=\"keyword\">struct</span> {</span><br><span class=\"line\">\tUsername <span class=\"type\">string</span> <span class=\"string\">`json:\"username\"`</span></span><br><span class=\"line\">\tjwt.StandardClaims</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 从env文件中读取密钥</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> salt = os.Getenv(<span class=\"string\">\"salt\"</span>)</span><br><span class=\"line\"><span class=\"keyword\">var</span> mySignkey = []<span class=\"type\">byte</span>(salt)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">Tokencreate</span><span class=\"params\">(username <span class=\"type\">string</span>)</span></span> <span class=\"type\">string</span> {</span><br><span class=\"line\">\tc := Konoha{</span><br><span class=\"line\">\t\tUsername: username,</span><br><span class=\"line\">\t\tStandardClaims: jwt.StandardClaims{</span><br><span class=\"line\">\t\t\tNotBefore: time.Now().Unix() - <span class=\"number\">60</span>,</span><br><span class=\"line\">\t\t\t<span class=\"comment\">//设置过期时间在5秒后</span></span><br><span class=\"line\">\t\t\tExpiresAt: time.Now().Unix() + <span class=\"number\">5</span>,</span><br><span class=\"line\">\t\t\tIssuer:    <span class=\"string\">\"Minato\"</span>,</span><br><span class=\"line\">\t\t},</span><br><span class=\"line\">\t}</span><br><span class=\"line\">\ttoken := jwt.NewWithClaims(jwt.SigningMethodHS256, c)</span><br><span class=\"line\">\ttokenString, err := token.SignedString(mySignkey)</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> err != <span class=\"literal\">nil</span> {</span><br><span class=\"line\">\t\tfmt.Println(<span class=\"string\">\"token加密出错\"</span>, err.Error)</span><br><span class=\"line\">\t}</span><br><span class=\"line\">\tfmt.Println(tokenString)</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> tokenString</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">ParseToken</span><span class=\"params\">(tokenString <span class=\"type\">string</span>)</span></span> {</span><br><span class=\"line\">\ttoken, err := jwt.ParseWithClaims(tokenString, &amp;Konoha{}, <span class=\"function\"><span class=\"keyword\">func</span><span class=\"params\">(token *jwt.Token)</span></span> (<span class=\"keyword\">interface</span>{}, <span class=\"type\">error</span>) {</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> mySignkey, <span class=\"literal\">nil</span></span><br><span class=\"line\">\t})</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> err != <span class=\"literal\">nil</span> {</span><br><span class=\"line\">\t\tfmt.Println(err.Error())</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span></span><br><span class=\"line\">\t}</span><br><span class=\"line\">\tfmt.Println(token.Claims.(*Konoha))</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span> {</span><br><span class=\"line\">    <span class=\"comment\">//制作token</span></span><br><span class=\"line\">\ts := Tokencreate(<span class=\"string\">\"minato\"</span>)</span><br><span class=\"line\">    <span class=\"comment\">//等token过期</span></span><br><span class=\"line\">\tfmt.Println(<span class=\"string\">\"等六秒\"</span>)</span><br><span class=\"line\">\ttime.Sleep(<span class=\"number\">6</span> * time.Second)</span><br><span class=\"line\">\tParseToken(s)</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure>\n\n<p>结果：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6Im1pbmF0byIsImV4cCI6MTcxMjAzNDY5NywiaXNzIjoiTWluYXRvIiwibmJmIjoxNzEyMDM0NjMyfQ.rUsDMCOgP4-Tvq09UO0YWXVcfaetFtqhWejSszb2DCc</span><br><span class=\"line\">等六秒</span><br><span class=\"line\">token is expired by 1s</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>将它写成中间件的形式：</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> middleware</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> (</span><br><span class=\"line\">\t<span class=\"string\">\"fmt\"</span></span><br><span class=\"line\">\t<span class=\"string\">\"gin-Minato/controller\"</span></span><br><span class=\"line\">\t<span class=\"string\">\"github.com/dgrijalva/jwt-go\"</span></span><br><span class=\"line\">\t<span class=\"string\">\"github.com/gin-gonic/gin\"</span></span><br><span class=\"line\">\t_ <span class=\"string\">\"github.com/joho/godotenv/autoload\"</span></span><br><span class=\"line\">\t<span class=\"string\">\"os\"</span></span><br><span class=\"line\">\t<span class=\"string\">\"time\"</span></span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 弄个简单一点的token</span></span><br><span class=\"line\"><span class=\"keyword\">type</span> Konoha <span class=\"keyword\">struct</span> {</span><br><span class=\"line\">\tUsername <span class=\"type\">string</span> <span class=\"string\">`json:\"username\"`</span></span><br><span class=\"line\">\tjwt.StandardClaims</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 从env文件中读取密钥</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> salt = os.Getenv(<span class=\"string\">\"salt\"</span>)</span><br><span class=\"line\"><span class=\"keyword\">var</span> mySignkey = []<span class=\"type\">byte</span>(salt)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">Tokencreate</span><span class=\"params\">(username <span class=\"type\">string</span>)</span></span> <span class=\"type\">string</span> {</span><br><span class=\"line\">\tc := Konoha{</span><br><span class=\"line\">\t\tUsername: username,</span><br><span class=\"line\">\t\tStandardClaims: jwt.StandardClaims{</span><br><span class=\"line\">\t\t\tNotBefore: time.Now().Unix() - <span class=\"number\">60</span>,</span><br><span class=\"line\">\t\t\t<span class=\"comment\">//设置过期时间在60秒后</span></span><br><span class=\"line\">\t\t\tExpiresAt: time.Now().Unix() + <span class=\"number\">60</span>,</span><br><span class=\"line\">\t\t\tIssuer:    <span class=\"string\">\"Minato\"</span>,</span><br><span class=\"line\">\t\t},</span><br><span class=\"line\">\t}</span><br><span class=\"line\">\ttoken := jwt.NewWithClaims(jwt.SigningMethodHS256, c)</span><br><span class=\"line\">\tkonohaToken, err := token.SignedString(mySignkey)</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> err != <span class=\"literal\">nil</span> {</span><br><span class=\"line\">\t\tfmt.Println(<span class=\"string\">\"token加密出错\"</span>, err.Error())</span><br><span class=\"line\">\t}</span><br><span class=\"line\">\tfmt.Println(konohaToken)</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> konohaToken</span><br><span class=\"line\">}</span><br><span class=\"line\"><span class=\"comment\">//-----------------------------------------在这呢，中间件解析token------------------------------------</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">ParseToken</span><span class=\"params\">(konohaToken <span class=\"type\">string</span>)</span></span> <span class=\"type\">string</span> {</span><br><span class=\"line\">\ttoken, err := jwt.ParseWithClaims(konohaToken, &amp;Konoha{}, <span class=\"function\"><span class=\"keyword\">func</span><span class=\"params\">(token *jwt.Token)</span></span> (<span class=\"keyword\">interface</span>{}, <span class=\"type\">error</span>) {</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> mySignkey, <span class=\"literal\">nil</span></span><br><span class=\"line\">\t})</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> err != <span class=\"literal\">nil</span> {</span><br><span class=\"line\">\t\tfmt.Println(err.Error())</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"string\">\"1001\"</span></span><br><span class=\"line\">\t}</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> !token.Valid {</span><br><span class=\"line\">\t\tfmt.Println(<span class=\"string\">\"token无效\"</span>)</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"string\">\"1002\"</span> <span class=\"comment\">// 返回无效token的错误码</span></span><br><span class=\"line\">\t}</span><br><span class=\"line\">\tclaims, ok := token.Claims.(*Konoha)</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> !ok {</span><br><span class=\"line\">\t\tfmt.Println(<span class=\"string\">\"token claims类型错误\"</span>)</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"string\">\"1003\"</span> <span class=\"comment\">// 返回token claims类型错误的错误码</span></span><br><span class=\"line\">\t}</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> claims.Username != <span class=\"string\">\"Minato\"</span> {</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"string\">\"1004\"</span></span><br><span class=\"line\">\t}</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"string\">\"200\"</span></span><br><span class=\"line\">}</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">JWTAuth</span><span class=\"params\">()</span></span> gin.HandlerFunc {</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"function\"><span class=\"keyword\">func</span><span class=\"params\">(c *gin.Context)</span></span> {</span><br><span class=\"line\">\t\ttokenStr := c.Request.Header.Get(<span class=\"string\">\"konohaToken\"</span>)</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> tokenStr == <span class=\"string\">\"\"</span> {</span><br><span class=\"line\">\t\t\tcontroller.ReturnFalse(c, <span class=\"number\">1000</span>, <span class=\"string\">\"token缺失\"</span>)</span><br><span class=\"line\">\t\t}</span><br><span class=\"line\">\t\tstatus := ParseToken(tokenStr)</span><br><span class=\"line\">\t\t<span class=\"keyword\">switch</span> status {</span><br><span class=\"line\">\t\t<span class=\"keyword\">case</span> <span class=\"string\">\"1000\"</span>:</span><br><span class=\"line\">\t\t\tcontroller.ReturnFalse(c, <span class=\"number\">1001</span>, <span class=\"string\">\"token过期\"</span>)</span><br><span class=\"line\">\t\t<span class=\"keyword\">case</span> <span class=\"string\">\"1001\"</span>:</span><br><span class=\"line\">\t\t\tcontroller.ReturnFalse(c, <span class=\"number\">1002</span>, <span class=\"string\">\"token签发人不正确\"</span>)</span><br><span class=\"line\">\t\t<span class=\"keyword\">case</span> <span class=\"string\">\"1002\"</span>:</span><br><span class=\"line\">\t\t\tcontroller.ReturnFalse(c, <span class=\"number\">1003</span>, <span class=\"string\">\"token claims类型错误\"</span>)</span><br><span class=\"line\">\t\t<span class=\"keyword\">case</span> <span class=\"string\">\"1003\"</span>:</span><br><span class=\"line\">\t\t\tcontroller.ReturnFalse(c, <span class=\"number\">1004</span>, <span class=\"string\">\"token无效\"</span>)</span><br><span class=\"line\">\t\t<span class=\"keyword\">case</span> <span class=\"string\">\"200\"</span>:</span><br><span class=\"line\">\t\t\t<span class=\"comment\">// token验证通过</span></span><br><span class=\"line\">\t\t\tfmt.Println(<span class=\"number\">200</span>)</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">default</span>:</span><br><span class=\"line\">\t\t\t<span class=\"comment\">// 处理其他未知错误</span></span><br><span class=\"line\">\t\t\tcontroller.ReturnFalse(c, <span class=\"number\">1999</span>, <span class=\"string\">\"未知错误\"</span>)</span><br><span class=\"line\">\t\t}</span><br><span class=\"line\">\t}</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"跨域请求-CORS\"><a href=\"#跨域请求-CORS\" class=\"headerlink\" title=\"跨域请求 CORS\"></a>跨域请求 CORS</h2><p>安装 CORS</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ go get github.com/gin-contrib/cors</span><br></pre></td></tr></table></figure>\n\n<p><code>main.go</code>中进行配置</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> main</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> (</span><br><span class=\"line\">\t<span class=\"string\">\"github.com/gin-contrib/cors\"</span></span><br><span class=\"line\">\t<span class=\"string\">\"github.com/gin-gonic/gin\"</span></span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span> {</span><br><span class=\"line\">\tr := gin.Default()</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">// 使用 CORS 中间件，默认配置，谁都能访问</span></span><br><span class=\"line\">\tr.Use(cors.Default())</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 使用CORS中间件，并只允许来自5173端口的请求（和上面不能同时出现）</span></span><br><span class=\"line\">    router.Use(cors.New(cors.Config{</span><br><span class=\"line\">        AllowOrigins:     []<span class=\"type\">string</span>{<span class=\"string\">\"http://localhost:5173\"</span>},</span><br><span class=\"line\">        AllowMethods:     []<span class=\"type\">string</span>{<span class=\"string\">\"GET\"</span>, <span class=\"string\">\"POST\"</span>, <span class=\"string\">\"PUT\"</span>, <span class=\"string\">\"DELETE\"</span>},</span><br><span class=\"line\">        AllowHeaders:     []<span class=\"type\">string</span>{<span class=\"string\">\"Origin\"</span>, <span class=\"string\">\"Content-Type\"</span>},</span><br><span class=\"line\">        ExposeHeaders:    []<span class=\"type\">string</span>{<span class=\"string\">\"Content-Length\"</span>},</span><br><span class=\"line\">        AllowCredentials: <span class=\"literal\">true</span>,</span><br><span class=\"line\">        MaxAge:           <span class=\"number\">12</span>,</span><br><span class=\"line\">    }))</span><br><span class=\"line\">\t<span class=\"comment\">// 其他路由处理逻辑</span></span><br><span class=\"line\">\t<span class=\"comment\">// ...</span></span><br><span class=\"line\"></span><br><span class=\"line\">\tr.Run(<span class=\"string\">\":8080\"</span>)</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure>\n"},{"title":"2024/07/20","date":"2024-08-05T08:09:00.000Z","thumbnail":"img/thumbnail/yourname.png","cover":"img/cover/yourname.png","password":10181024,"excerpt":"这里有东西被加密了，需要输入密码查看哦。","message":"前面的区域以后再来探索吧.","wrong_pass_message":"抱歉, 这个密码看着不太对, 请再试试.","wrong_hash_message":"抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.","copyright":"无","_content":"\n​\t\t当初被关在小黑屋里面的时候为数不多能看的下去的电影，刷了很多遍，最开始是看剧情和细节，后面几遍就纯粹是听里面的配乐（真的很好听），S还问这配乐是不是重新做的，纯云😭。小曲一响，当初在那台做听说的电脑前反复观看的感觉蹭蹭蹭地一下又回来了。\n\n​\t大学前看->大学毕业补票看，贯穿了人生最开心的四年时光，时间过得是真的快\n\n<img src=\"/img/20240721_1727/yourName(5).png\" alt=\"yourName(5)\" style=\"zoom:10%;\" />\n\n<br>\n\n<img src=\"/img/20240721_1727/yourName(6).png\" alt=\"yourName(6)\" style=\"zoom:12%;\" />\n\n<br>\n\n<img src=\"/img/20240721_1727/yourName(7).png\" alt=\"yourName(7)\" style=\"zoom:14%;\" />\n\n<br>\n\n<img src=\"/img/20240721_1727/yourName(4).png\" alt=\"yourName(4)\" style=\"zoom:25%;\" />\n\n<br>\n\n<img src=\"/img/20240721_1727/yourName(3).png\" alt=\"yourName(3)\" style=\"zoom:15%;\" />\n\n<br>\n\n<img src=\"/img/20240721_1727/yourName(1).png\" alt=\"yourName(1)\" style=\"zoom:17%;\" />\n\n<br>\n\n<img src=\"/img/20240721_1727/yourName(2).png\" alt=\"yourName(2)\" style=\"zoom:25%;\" />\n\n<br>\n\n<center><b>————分割线————</b></center>\n\n说实话，新海诚之后的作品我都有看，但是之后的作品都很难吊起我这么强烈的情绪反馈了。我的青春已经像风一样飘散了，逐渐对主角们的奔跑失去兴趣，更不用说和主角们产生情感上的共鸣；即便是这次的重映，之所以能引起我的情绪波动，也不过是因为它十分难得地让我想起了自己曾经的时光，那段自由热烈，对未来憧憬着渴望的青春。\n\n分享一点我拿的周边吧。\n\n<img src=\"/img/20240721_1727/IMG_20240721_204959.png\" alt=\"IMG_20240721_204959\" style=\"zoom:20%;\" />\n\n<br>\n\n奉贤龙湖的星轶影院只给了我三叶的特典卡，后来发现少了一张，实在是不甘心，去咸鱼花了10.9元又淘了一张泷的特典卡，后面到货了我再把照片补上\n\n<center><b>————2024.7.27———</b></center>\n\n今天家里人不在，我又跑去电影院二刷了，拍拍照片，虽然说周边没有拿到【实际上也没有我想要的，那家影院全是海报，不是很合我胃口】，不过最后咸鱼上全部收齐了。\n\n<center><b>————2024.8.10———</b></center>\n\n东西其实一周多前就齐了，只是一直没上传照片，收集之路坎坷啊，快递丢件、物流破损，什么奇奇怪怪的事情都叫我碰上了\n\n<img src=\"/img/20240721_1727/yourName(8).png\" alt=\"yourName(8)\" style=\"zoom:20%;\" />\n\n","source":"_posts/20240721_1727.md","raw":"---\ntitle: 2024/07/20\ncategories:\n  - 生活记录\ndate: 2024-08-05 16:09\nthumbnail: \"img/thumbnail/yourname.png\"\ncover: \"img/cover/yourname.png\"\npassword: 10181024\nexcerpt: false\nmessage: 前面的区域以后再来探索吧.\nwrong_pass_message: 抱歉, 这个密码看着不太对, 请再试试.\nwrong_hash_message: 抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.\ncopyright: 无\ntags:\n  - 碎碎念\n---\n\n​\t\t当初被关在小黑屋里面的时候为数不多能看的下去的电影，刷了很多遍，最开始是看剧情和细节，后面几遍就纯粹是听里面的配乐（真的很好听），S还问这配乐是不是重新做的，纯云😭。小曲一响，当初在那台做听说的电脑前反复观看的感觉蹭蹭蹭地一下又回来了。\n\n​\t大学前看->大学毕业补票看，贯穿了人生最开心的四年时光，时间过得是真的快\n\n<img src=\"/img/20240721_1727/yourName(5).png\" alt=\"yourName(5)\" style=\"zoom:10%;\" />\n\n<br>\n\n<img src=\"/img/20240721_1727/yourName(6).png\" alt=\"yourName(6)\" style=\"zoom:12%;\" />\n\n<br>\n\n<img src=\"/img/20240721_1727/yourName(7).png\" alt=\"yourName(7)\" style=\"zoom:14%;\" />\n\n<br>\n\n<img src=\"/img/20240721_1727/yourName(4).png\" alt=\"yourName(4)\" style=\"zoom:25%;\" />\n\n<br>\n\n<img src=\"/img/20240721_1727/yourName(3).png\" alt=\"yourName(3)\" style=\"zoom:15%;\" />\n\n<br>\n\n<img src=\"/img/20240721_1727/yourName(1).png\" alt=\"yourName(1)\" style=\"zoom:17%;\" />\n\n<br>\n\n<img src=\"/img/20240721_1727/yourName(2).png\" alt=\"yourName(2)\" style=\"zoom:25%;\" />\n\n<br>\n\n<center><b>————分割线————</b></center>\n\n说实话，新海诚之后的作品我都有看，但是之后的作品都很难吊起我这么强烈的情绪反馈了。我的青春已经像风一样飘散了，逐渐对主角们的奔跑失去兴趣，更不用说和主角们产生情感上的共鸣；即便是这次的重映，之所以能引起我的情绪波动，也不过是因为它十分难得地让我想起了自己曾经的时光，那段自由热烈，对未来憧憬着渴望的青春。\n\n分享一点我拿的周边吧。\n\n<img src=\"/img/20240721_1727/IMG_20240721_204959.png\" alt=\"IMG_20240721_204959\" style=\"zoom:20%;\" />\n\n<br>\n\n奉贤龙湖的星轶影院只给了我三叶的特典卡，后来发现少了一张，实在是不甘心，去咸鱼花了10.9元又淘了一张泷的特典卡，后面到货了我再把照片补上\n\n<center><b>————2024.7.27———</b></center>\n\n今天家里人不在，我又跑去电影院二刷了，拍拍照片，虽然说周边没有拿到【实际上也没有我想要的，那家影院全是海报，不是很合我胃口】，不过最后咸鱼上全部收齐了。\n\n<center><b>————2024.8.10———</b></center>\n\n东西其实一周多前就齐了，只是一直没上传照片，收集之路坎坷啊，快递丢件、物流破损，什么奇奇怪怪的事情都叫我碰上了\n\n<img src=\"/img/20240721_1727/yourName(8).png\" alt=\"yourName(8)\" style=\"zoom:20%;\" />\n\n","slug":"20240721_1727","published":1,"updated":"2024-08-25T14:23:14.334Z","comments":1,"layout":"post","photos":[],"_id":"cm0b0qx780003jwur3pfth1dp","content":"\n<div class=\"hbe hbe-container\" id=\"hexo-blog-encrypt\" data-wpm=\"抱歉, 这个密码看着不太对, 请再试试.\" data-whm=\"抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.\">\n  <script id=\"hbeData\" type=\"hbeData\" data-hmacdigest=\"f8d8fb2441913da381773139c2fac09c21fe8100e2846b8d895b5dcb384ef896\">791c67f3fce95daa3d7c46cb95136f6eaf47cdc7a05868cf373d6c6ba7ecf18e24fe697deebc5b1863f7705ebbfafa1d4f2076b95ba7c6481694b658873ea22e65ed30f267a1fd121e2a8f20e5fd18618952dfd52208464e10adeeeec5ece2c45bee9196f131de6177b41c4eee25b92ba0789ed1c193322652dd6a5c56736c2fb077d054b326b2ff4ac9c44305cce2e660168d180138d0c40f763e79ac38e8296c59cb2619d94c447de52d007f2db6ae8253ca86790336da422d5eb6b1d4910a81e318a8b6f6d2681c2b19106a60ed361751c3af315e5b17d55717595d821e6a975c387513cdbf375abdd5bff50b14ceff62efe10db9902af7bf997c444f88cc09e4d664b271feda0b5a13fa66a2d69ae57a12878318561f9bd7e812a30ef10d2ea8e9b694c78f90785427b0b111db5a223d4a595ecab96886236cca8da6fe6eb39148037d4cbed0893a0aa977ecb0c50ef5af99befaf0f57e284b60ae36ca826a315f9f89e03ecd1fc9bc2de8d96415c9e59abe4d02423fc30717a751cc0e35b310a52c0a502344257e216ec5633b66a5826b1ec967d2ded4cec5c63084284358757a291d088e6e62ecc2fa904ec24e18780f7c588b72e3d27011e3ce904cce52ade44c1c5463ded0e9203be979475e631228c202db1800f5604a04f5da678131891ad71a548c497cd59c666c67cad539cbb4317b564aeaade2999f156ee3c7a2a940a861175f7bfdfe9fd835cb0a1c143fe187179351d9f5e128caaa5fc970aba73e3fef5b6886456c66ec10537fa98f14ba1457e3d78a7c03297d3185f4fc6b5a6daf0d4d2aee74a24958c06a2b796f715e57b35493bd7a5e7e826b2d2277996ec5df8c97f434d72cc78c13eaf1e670aaa6af38ac2687f5fc2e746b17bf417536ca0a7d7bc02fcb5ff8e0af01ccd1aeebd84cc8ced3b02548a9d384888ca0a72422c11aa35363107db25d3d7e90be575685bef0b4f7027fd3f872d895022eddbc46a88e31841b6ca016d0aaaafad2040ab616c6695f9bb473dab06df5e7ac36742d76d80c5dc7829a067f0340bcc596b67e7f23eae44fc8aa953059419c05c801b4ee7496271b0e5a3297b763044127d6fcbdc4b256236b68139b03e84079989fae27dfba84aed238587eeb0ea537747ca91d6fac7796840703dcdc51bc5840c57916c9b7548f18f592c2898e7f7000546ad7a499e2d75150b660ec15bfb3ce62abe115284d9a41ef74d4407ded97392ae9441a259fc25774e5c72f3da15652ac7adbc72ab9ff7c6a33e456bcf19c1fb79ccdc7e61ca81bacd19f66d8a940e84115f74950b82560ea0f4ee69ef9dc5ad972d8c48a181f6460eece64ad4116c739403fb22ba99924832520a9f76e25ccc33d96efff4979f27d687e280fccd18a7aec041a1240d747829513495497621dad1845a8b024fcd52419d230c53280a24a4f73be11894294d816d4592a384a6a57b4575812960868caae8cc78c1d7d58c2da5045c130bf2582616cc2b65d811a978812831d2b926339e99a8efc8fe3047b22b570ff85f4ffecded4cc473361f440ccb7650dd600caca065c8bbf9e47e558059ac12add039c43ce7234258740a9523300e07b2d07cb4fcc47192bdf7a0bbca6773cd46e6d1a8e5a84d5d86a85f491f03826d0a596d920438dd62aba09f253691bfd12a725e42c685dc0fa21aed0d73b00cfc7f16fc88c7ffcdfc1c9558246a378f9b4f0b5b72741e2c2837d69e2dfc5ec6fe274689b49982f58dc8d3fb7c6343b49e665eea827c3ee5066ad2f717bcfe5d1aa0ffc82d77506bcec4336e8ddb3e3aa0f2aef778c7f8da8781deabd1e971e9b36848f92dad6e4c43107266e9caa1987f825ba27a5ddbd14e6d628312ac7ddd33b962889a69359fe44387c1bd65d72203868f618621dfac99a64ddfcac1dd1c905ad4ae1da1445e56ab7aae55cbf2740f3270c99d2b9f337c86963979b88cb1052f2b35a92789c2f3e7e04cbab9c7af535d3dc05419e79e95043d67c51362ff98fc8d684d390c7bb09519b5582206ea305c0d84c5e0340bf441f4ceff51d53c142b6062372edff8e9984e602a439e65bd525260f047975862bf8243304486d63cb45b43c90ea37e421b9961a4453a948074d4bb40ebf7e729b59e241d92e28f4de9d058d214f09ce8a0caaf0fd6565f63571998cc4916eb6642c2f7b24b60667b1d7f1550001d95967e5f97aa1acffbb9f8ca633c7ae0268b76b1bf5401fbcf51b498ba1ddacdd6edb95c481a30d59e073ecd090ca0e9ff0bc0d3e2f71ce4b5e224cb01017f52f563247b986f0ec8f446bbb38d1faaf2227e467196e3ec430c2002a858c0429ef01e7559dfc753cbbff0d270def5889fc0a7b51e3b9c9b3f3230cb8d262cff9b180c0e1965d783a674f2de02065138fcf161c30de578eafd5f741793b9598071a0b824abfff6b5a06c1740c38795e36d1a363082279a56f2550c33fdfac927272e441158a0eaa77e9c81980a8b13dba4d62b70d0ac0ece8c9f53be05955caccee1bfc4e05873355859545d1b1c4f589d4af4414ea073b3834cb7f315d8eb09bd083f8c8224263ae972c13e6fbeff4b580cf0b0e8f0289a05986f4e7747b55568e19547076df287e8d9f9b61048e14a9f03432434853d31a60eacb2e092f8c591476e497e368808b7cdccb14b7b9afd1222fd49b2790602f3b1dd19e68653cb77d34234644643b85d1f70c2a8dba3ebabe3f475644f8d553bd3b090da46bc721f65a4a66a914ba0f4e49becd6fd46ac591e7c2ee31af6177554d23ce929d8816d43621ba467b6ae0a8ad815ac8a7d2194b7cf1fe06bf6cbc1e9671e7ebd496aae7de7fa2db744ba67ce09eb2e683d5e57e8c5ca0611fc7be92a0cffc17d9f48c9b6863acd8b74ce6ce183e5cfa23287e1de5348d0e8323fa1ca6698ea26235a54ad0a074493bebe522edc9961e1a18d4975996f28e0bb468fc2e09a0f158130d089ae3fa3ecf1ba5e44e5e5b3ea7098af8cb856f06ae3346c1d1ab7cc8bd9e899847a1892744d8f4dc0d542f77d1e137ecf1afb0d100f206eae14b82d301f60edcbd28e03daa64999809971c7a507e7430ba1c5022a2895728cdaf4483eb71edce8c66ecc2d16459898507d909507b57b06142a86885ffa4ce1e3f463a237ed5ada498d6916233fbe296943839f6859463413e96883e6058b09e0794ef948ca6034bec0a84db03a9a994797767311a2666e7cf1cb696adf4d3cf3a3cf0fbc5b8a0fc2dd0bb16c37aa2a25343ab8a7d7cae705eca8245768dea9eb0818373cbf6113a49bd45ce67bfc2783ee169f4ee64953b8fad12df4a1566d2e18481b5aee68227d5d96256f6a31a6fad7118261883cb5c9f36a54020653d5ab508118b84e5723bea39c68bd7356c53803ff2b8e6c0117037a91f714a6a2ac6dce0f6fe1e43493124f34bc83e4967f94117ce7c270aee4ba608e8f41fa6af19ccf9b8ba1b015023fa484eb3c3ec01171922b918542c98e2fb641ae63fe06806df7eaa03143e0d746ec483e3603310a75026739f872f579d0cf7d8d99d59e8ffcd406f028dfa4ab52948b04b65b7ba923feee82783ba4a51f2f50744faf9704b2947b28199e7a124b0749a119712bfb57ab1bbff143c98459c21d58f3efcc00fe387c15e68e0ebce8f3d41a10c5c76e77538c1cf8d450148c8a1cba22b286d7d2afa78bd31cd70925395beb25009fb59fd33754d3de8290fa7f4a1f0432c8c68278fb41e0c6de38caeadabc49911b612c905ccd831d58b406c020f122ee925af1e732f876d0ad87f2c3692f54679d4eb8365ba58d28dc61cdcc51ba7a0610f7887687b196b3a4e853faed172a78f937ab4dbc3db34244cedf7fdff9c7bd5c6fb4dfe88fdcaa390fb3f1cbb336cdfcf041f8111ba2d614b50a08a585bc9ff9c215bfefec601db4d28ede21411f10bba541bdf2a816f1ee82938673ce179f9d910415ab8f6cd48132e7f95c274df68bacbab26fc5bd814c062317f6df2475244df23872997b20e4456ba73337840fc28569a555693f019c117c52f192e66a3c70abcf03046d01ff73c10b1b4a1a88eb6d9e408acf71f546922b118c58c1cc2d7fb95016da132b40dab358e478f69eafe4a932cb3b80afc91d9d48401d24b7a4819047284b76d6f97921c8d3b178e4c99b65fa99395575f1c29b69154db8b74dc5f906601fe7cc234c43ce36e7697d08da140a1b4d19119629d2341d0e5171d60524723a13ead11b2462a9dee</script>\n  <div class=\"hbe hbe-content\">\n    <div class=\"hbe hbe-input hbe-input-default\">\n      <input class=\"hbe hbe-input-field hbe-input-field-default\" type=\"password\" id=\"hbePass\">\n      <label class=\"hbe hbe-input-label hbe-input-label-default\" for=\"hbePass\">\n        <span class=\"hbe hbe-input-label-content hbe-input-label-content-default\">前面的区域以后再来探索吧.</span>\n      </label>\n    </div>\n  </div>\n</div>\n<script data-swup-reload-script src=\"/lib/hbe.js\"></script><link href=\"/css/hbe.style.css\" rel=\"stylesheet\" type=\"text/css\">","more":"这里有东西被加密了，需要输入密码查看哦。","origin":"<p>​\t\t当初被关在小黑屋里面的时候为数不多能看的下去的电影，刷了很多遍，最开始是看剧情和细节，后面几遍就纯粹是听里面的配乐（真的很好听），S还问这配乐是不是重新做的，纯云😭。小曲一响，当初在那台做听说的电脑前反复观看的感觉蹭蹭蹭地一下又回来了。</p>\n<p>​\t大学前看-&gt;大学毕业补票看，贯穿了人生最开心的四年时光，时间过得是真的快</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/20240721_1727/yourName(5).png\" alt=\"yourName(5)\" style=\"zoom:10%;\">\n\n<br>\n\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/20240721_1727/yourName(6).png\" alt=\"yourName(6)\" style=\"zoom:12%;\">\n\n<br>\n\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/20240721_1727/yourName(7).png\" alt=\"yourName(7)\" style=\"zoom:14%;\">\n\n<br>\n\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/20240721_1727/yourName(4).png\" alt=\"yourName(4)\" style=\"zoom:25%;\">\n\n<br>\n\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/20240721_1727/yourName(3).png\" alt=\"yourName(3)\" style=\"zoom:15%;\">\n\n<br>\n\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/20240721_1727/yourName(1).png\" alt=\"yourName(1)\" style=\"zoom:17%;\">\n\n<br>\n\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/20240721_1727/yourName(2).png\" alt=\"yourName(2)\" style=\"zoom:25%;\">\n\n<br>\n\n<center><b>————分割线————</b></center>\n\n<p>说实话，新海诚之后的作品我都有看，但是之后的作品都很难吊起我这么强烈的情绪反馈了。我的青春已经像风一样飘散了，逐渐对主角们的奔跑失去兴趣，更不用说和主角们产生情感上的共鸣；即便是这次的重映，之所以能引起我的情绪波动，也不过是因为它十分难得地让我想起了自己曾经的时光，那段自由热烈，对未来憧憬着渴望的青春。</p>\n<p>分享一点我拿的周边吧。</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/20240721_1727/IMG_20240721_204959.png\" alt=\"IMG_20240721_204959\" style=\"zoom:20%;\">\n\n<br>\n\n<p>奉贤龙湖的星轶影院只给了我三叶的特典卡，后来发现少了一张，实在是不甘心，去咸鱼花了10.9元又淘了一张泷的特典卡，后面到货了我再把照片补上</p>\n<center><b>————2024.7.27———</b></center>\n\n<p>今天家里人不在，我又跑去电影院二刷了，拍拍照片，虽然说周边没有拿到【实际上也没有我想要的，那家影院全是海报，不是很合我胃口】，不过最后咸鱼上全部收齐了。</p>\n<center><b>————2024.8.10———</b></center>\n\n<p>东西其实一周多前就齐了，只是一直没上传照片，收集之路坎坷啊，快递丢件、物流破损，什么奇奇怪怪的事情都叫我碰上了</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/20240721_1727/yourName(8).png\" alt=\"yourName(8)\" style=\"zoom:20%;\">\n\n","encrypt":true},{"title":"Patrick Collins-区块链 笔记","description":"Patrick Collins-区块链学习笔记","date":"2024-04-25T06:11:40.000Z","excerpt":"有关区块链和WEB3全栈开发的课程笔记，来源是Patrick Collins 讲解的区块链课程，使用了Solidity，Javascript进行了智能合约的编写，部署和交互。这是比较流行的写法，当然合约不止Solidity一种编写方法，在引入库的之后，Javascript、Python、Golang都可以做到。","_content":"\n## 工具包\n\n课程链接：【（32 小时最全课程）区块链，智能合约 & 全栈 Web3 开发】 https://www.bilibili.com/video/BV1Ca411n7ta\n\n原视频链接（生肉）：https://www.youtube.com/watch?v=gyMwXuJrbJQ\n\n课程Repo链接：https://github.com/smartcontractkit/full-blockchain-solidity-course-js\n\nRemix网址：https://remix.ethereum.org/\n\n测试币水龙头：https://faucets.chain.link\n\nSepolia区块链浏览器：https://sepolia.etherscan.io/\n\nChainlink官方文档：https://docs.chain.link\n\n以太坊货币换算：https://eth-converter.com/\n\nAggregatorV3Interface接口源码：https://github.com/smartcontractkit/chainlink/blob/develop/contracts/src/v0.6/interfaces/AggregatorV3Interface.sol\n\nSolidity 使用文档：https://solidity-by-example.org\n\n## 智能合约\n\n智能合约是约定多个参与方的一些列指令。不同的是，传统合同是写在纸上的，而智能合约是代码写的，并且嵌入到一个去中心化区块链平台，在这个去中心化区块链平台中被执行；\n\n将链上去中心化逻辑和链下去中心化数据和计算相结合，这个东西就叫做混合型智能合约。\n\n混合智能合约会用到`Chainlink`。这是一个组件化，去中心化的预言机网络；不仅可以为智能合约提供外部数据，还可以提供链下计算。本课程和笔记都将基于这个进行开展。\n\n> from Chatgpt : 预言机网络（Oracle network）是一种基于区块链技术的系统，它的主要目标是将现实世界的数据引入区块链中，从而使智能合约能够访问并使用这些数据。智能合约通常无法直接获取外部数据，因为它们在区块链内部运行，并且无法直接连接到外部世界的数据源。预言机网络解决了这个问题，允许区块链与外部数据进行交互。\n\n### 应用\n\n不容易被机构欺骗，通过智能合约可以亲身进入这个行业，所有记录都是公开，透明且不可篡改的。\n\n## 第一笔交易\n\n在chrome浏览器中安装插件METAMASK，注册一个账户并开通两个钱包，分别叫Account 1和 Account 2\n\n因为是学习与测试用的钱包，所以哈希地址就不打码了（反正里面也没钱）\n\n<img src=\"img/Patrick Collins_blockchain_note/image-20240109233040953.png\" alt=\"image-20240109233040953\" style=\"zoom:80%;\" />\n\n连接测试网络 Sepolia：\n\n<img src=\"img/Patrick Collins_blockchain_note/image-20240109233120241.png\" alt=\"image-20240109233120241\" style=\"zoom:80%;\" />\n\n前往测试网络的水龙头，获取测试币[https://faucets.chain.link](https://faucets.chain.link/)\n\n<img src=\"img/Patrick Collins_blockchain_note/image-20240110144901761.png\" alt=\"image-20240110144901761\" style=\"zoom: 67%;\" />\n\n在METAMASK中也能看到已经获取到了测试币\n\n<img src=\"img/Patrick Collins_blockchain_note/image-20240110145343247.png\" alt=\"image-20240110145343247\" style=\"zoom:50%;\" />\n\n在https://sepolia.etherscan.io/中也可以查询到对应的交易\n\n<img src=\"img/Patrick Collins_blockchain_note/image-20240112093457519.png\" alt=\"image-20240112093457519\"  />\n\n对于上图，交易手续费价格计算：\n$$\nTransaction(交易手续费) = Gas\\,\\,Price(燃气价格)\\,\\, * \\,\\, Usage\\,\\,by\\,\\,Txn(使用了的燃气量)\n$$\n有Account 1 向 Account 2 发送 0.05个测试币\n\n<img src=\"img/Patrick Collins_blockchain_note/image-20240112094858855.png\" alt=\"image-20240112094858855\"  />\n\n<img src=\"img/Patrick Collins_blockchain_note/image-20240112095159024.png\" alt=\"image-20240112095159024\" style=\"zoom:50%;\" />\n\n<img src=\"img/Patrick Collins_blockchain_note/image-20240112095206377.png\" alt=\"image-20240112095206377\" style=\"zoom:50%;\" />\n\n<center><b>OKay，恭喜你已经完整地完成了一笔交易！</b></center>\n\n\n\n## 概念知识快速总结\n\n*// P.S说到底，这份笔记更多是为了记载实战方面的，因此，关于概念的概括一下就过了*\n\n### 权益机制\n\n比特币和前期的以太坊使用的是工作量证明机制（具体见\"北京大学肖臻老师《区块链技术与应用》公开课 笔记.md\"），而在以太坊2.0中，改为了权益机制；\n\n不同于工作量的证明，在权益机制中，参与区块创建以及验证的叫验证者，而成为验证者需要抵押一定数量的以太币用来确保不会恶意发布交易区块；之后系统会根据算法选举出是哪一个验证者来负责创建新的区块（算法在未来可能更新换代，作为开发者没什么必要学习），在其他验证者验证这个区块交易的真实性以及有效性之后会给予他奖励，如果出现不正当行为，可能会被踢出验证者甚至失去那部分抵押的比特币；\n\n以太坊 2.0 的权益机制还包括社区治理，即验证者可以参与提案和投票，对网络的升级和改变提出建议，并共同决定网络的发展方向。\n\n关于验证者退出：验证者可以随时退出，但是抵押的以太币不会立刻归还，这是为了防止恶意进出的问题\n\n### 关于攻击\n\n区块链攻击主要分为女巫攻击以及51%攻击\n\n在权益证明机制中，由于成为验证者需要支付一定量的以太币，并且存在验证这一环节，导致试图创建假帐号影响区块链这一行为需要付出高额成本，这可以很好地预防女巫攻击。\n\n关于51%攻击，当其掌握足够多的算力，直接创造一条区块链，长度比中心链的一半还要长，那么就可以影响中心链到它之上运行，但是随着区块链不断使用，中心链不断加长，51%攻击所需要的算力也在不断提高，直至近乎不可能做到。\n\n\n\n## Solidity(Remix)\n\n网站地址：https://remix.ethereum.org/\n\n一个集成开发环境，编写和交互智能合约的地方\n\n### 第一个智能合约\n\n新建一个sol文件，输入以下内容\n\n```solidity\n//SPDX-License-Identifier: MIT\n//因为solidity更新频率极高，我们需要在文件开头告诉代码，solidity的版本\npragma solidity 0.8.7;\n\n//关键字，告诉接下来是定义智能合约的内容\ncontract SimpleStorage{\n    //↓这个初始化默认是0\n    uint256 favNum;\n    function store(uint256 _favNum) public{\n        favNum = _favNum;\n    } \n}\n```\n\n如果想定义其他类型的数据变量：\n\n```solidity\n    bool judge = true;\n    //↓这个初始化默认是0,256代表分配空间，不写的话默认是256\n    uint256 favNum;\n    string word = \"helloworld\";\n    int256 num2= 1018;\n    address myadress = 0xE9f22C0cB28f58a74574d88679B4A3F933e3d51c;\n    //byte最大为32\n    bytes32 A = \"good\";\n```\n\n在虚拟环境部署合约：\n\n<img src=\"img/Patrick Collins_blockchain_note/image-20240123155705037.png\" alt=\"image-20240123155705037\"  />\n\n使用合约中的方法，修改区块中的数据，相当于发布一条“交易”\n\n<img src=\"img/Patrick Collins_blockchain_note/image-20240123155823210.png\" alt=\"image-20240123155823210\" style=\"zoom:67%;\" />\n\n观察到交易成功，且产生燃气费\n\n<img src=\"img/Patrick Collins_blockchain_note/image-20240123155927054.png\" alt=\"image-20240123155927054\" style=\"zoom:67%;\" />\n\n<img src=\"img/Patrick Collins_blockchain_note/image-20240123155959166.png\" alt=\"image-20240123155959166\" style=\"zoom:67%;\" />\n\n在此基础上更进一步\n\n```solidity\n     //view,pure\n    function retrieve() public view returns (uint256){\n        return favNum;\n    }\n    function add() public pure returns (uint256){\n        return (1+1);\n    }\n```\n\n`view`：`solidity`得一个关键字，代表了这个函数只会读取合约的状态，因而不会产生燃气费；\n\n`pure`：`solidity`得一个关键字，代表了这个函数既不会修改合约状态也读取不了合约状态，通常会做一些常用算法或者是一些不需要读取数据的算法，因而也\t不会产生燃气费；\n\n图形界面上的效果：\n\n<img src=\"img/Patrick Collins_blockchain_note/image-20240125150543392.png\" alt=\"image-20240125150543392\" style=\"zoom: 67%;\" />\n\n\n\n点击蓝色按钮，不发送交易，我们只是在链下读取数值，因此不产生燃气费，调用这些方法是免费的，但如果在消耗gas的函数中调用它，就会产生执行费用。\n\n### 结构体和数组\n\n结构体定义全部是分号，只有使用的时候内部是逗号；\n\n效果如下：\n\n```solidity\nstruct People {\n        uint256 favNum;\n        string name;\n    }\n    // People 结构体的实例化\nPeople public person = People({favNum: 2, name: \"Peter\"});\n```\n\n<img src=\"img/Patrick Collins_blockchain_note/image-20240125153122214.png\" alt=\"image-20240125153122214\" style=\"zoom:67%;\" />\n\n声明变量的类型，然后是对象的可见性，最后是变量名。\n\n```solidity\n    People[] public people;\n    function addperson(string memory _name,uint256 _favNum) public{\n        People memory newperson = People({favNum:_favNum,name:_name});\n        people.push(newperson);\n    }\n```\n\n也可以对数组长度进行限制：\n\n```solidity\n\tPeople[3] public people;\n```\n\n最终效果：\n\n<img src=\"img/Patrick Collins_blockchain_note/image-20240125155456902.png\" alt=\"image-20240125155456902\" style=\"zoom:67%;\" />\n\n\n\n值得一提的是，在solidity中有6种方式可以用于存储数,分别是`stack`、`memory`、`storage`、`calldata`、`code`、`logs`\n\n其中，`memory`表示可以被修改的临时变量，`calldata`表示不可以被临时修改的临时变量，二者在方法结束过后会自行销毁，案例如下：\n\n```solidity\n    function addperson(string memory _name,uint256 _favNum) public{\n        _name = 'cat'; //不会报错\n        People memory newperson = People({favNum:_favNum,name:_name});\n        people.push(newperson);\n    }\n    function addperson(string calldata _name,uint256 _favNum) public{\n        _name = 'cat' ;//会报错:TypeError: Type literal_string \"cat\" is not implicitly convertible to expected type string calldata.--> contracts/SimpeStorage.sol:18:17:\n        People memory newperson = People({favNum:_favNum,name:_name});\n        people.push(newperson);\n    }\n```\n\n而storage表示可以被修改的永久变量，不写关键字的话默认存储在storage；\n\n\n\n### Mapping映射\n\n```solidity\n//SPDX-License-Identifier: MIT\n//因为solidity更新频率极高，我们需要在文件开头告诉代码，solidity的版本\npragma solidity 0.8.7;\n\n//关键字，告诉接下来是定义智能合约的内容\ncontract SimpleStorage{\n    //↓这个初始化默认是0\n    uint256 favNum;\n    mapping (string=>uint256) public nameToFavNum;\n    // People 结构体的定义\n    struct People {\n        uint256 favNum;\n        string name;\n    }\n    People[] public people;\n    function addperson(string memory _name,uint256 _favNum) public{\n        People memory newperson = People({favNum:_favNum,name:_name});\n        people.push(newperson);\n        nameToFavNum[_name]=_favNum;\n    }\n}\n```\n\n\n\n提供了一个字符转uint的索引，效果如下：\n\n\n\n<img src=\"img/Patrick Collins_blockchain_note/image-20240125222714288.png\" alt=\"image-20240125222714288\" style=\"zoom: 67%;\" />\n\n\n\n### 在测试网络上布置智能合约\n\n<img src=\"img/Patrick Collins_blockchain_note/image-20240125230207782.png\" alt=\"image-20240125230207782\" style=\"zoom: 67%;\" />\n\n修改环境，选择账户，部署，\n\n<img src=\"img/Patrick Collins_blockchain_note/image-20240125230239939.png\" alt=\"image-20240125230239939\" style=\"zoom:80%;\" />\n\n账单：\n\n<img src=\"img/Patrick Collins_blockchain_note/image-20240125230536425.png\" alt=\"image-20240125230536425\" style=\"zoom: 67%;\" />\n\n<img src=\"img/Patrick Collins_blockchain_note/image-20240125230559283.png\" alt=\"image-20240125230559283\"  />\n\n发送交易：\n\n<img src=\"img/Patrick Collins_blockchain_note/image-20240125231013855.png\" alt=\"image-20240125231013855\" style=\"zoom:80%;\" />\n\n点击蓝色按钮，不会产生交易面板提示\n\n<img src=\"img/Patrick Collins_blockchain_note/image-20240125231634552.png\" alt=\"image-20240125231634552\" style=\"zoom: 67%;\" />\n\n查看合约：\n\n<img src=\"img/Patrick Collins_blockchain_note/image-20240125230758121.png\" alt=\"image-20240125230758121\" style=\"zoom:80%;\" />\n\n进入交易链接，可以看到具体交易内容：\n\n<img src=\"img/Patrick Collins_blockchain_note/image-20240125231517791.png\" alt=\"image-20240125231517791\" style=\"zoom:80%;\" />\n\n这是由于区块链的公开透明的特性。\n\n### 合约交互\n\n创建新的文件`SimpleFactory.sol`\n\n```solidity\n/*\nSimpleFactory.sol\n*/\n//SPDX-License-Identifier:MIT\npragma solidity ^0.8.7;\n//引用其他合约\nimport \"./SimpleDemo.sol\";\n\ncontract SimpleFactory{\n    SimpleDemo[] public simpleDemoArray;\n    function createSimpleStorageContract() public{\n        SimpleDemo simpleDemo = new SimpleDemo();\n        //存进去的其实是每一个simpleDemo的地址\n        simpleDemoArray.push(simpleDemo);\n    }\n    function sfStore (uint256 _simpleDemoIndex,uint256 _simpleStorageNumber) public {\n        //Address\n        //ABI 应用二进制接口\n        //通过下标查的simpleDemo的地址\n        SimpleDemo simpleDemo = simpleDemoArray[_simpleDemoIndex];\n        //调用其他合约里的方法\n        simpleDemo.FavNumEdit(_simpleStorageNumber);\n    }\n    function sfGet(uint256 _simpleDemoIndex) public view returns(uint256){\n        return simpleDemoArray[_simpleDemoIndex].retrieve();\n    }\n}\n```\n\n结果：\n\n<img src=\"img/Patrick Collins_blockchain_note/image-20240127234611622.png\" alt=\"image-20240127234611622\" style=\"zoom:67%;\" />\n\n### 继承和重载\n\n在`SimpleDemo.sol`中\n\n```solidity\n/*\n父类SimpleDemo.sol\n*/\ncontract SimpleDemo{\n    //↓这个初始化默认是0\n    uint256 favNum;\n    function store(uint256 _favNum) public virtual{\n        favNum = _favNum;\n    } \n}\n```\n\n在子类`ExtraDemo.sol`中\n\n```solidity\n/*\n子类ExtraDemo.sol\n*/\nimport \"./SimpleDemo.sol\";\ncontract ExtraDemo is SimpleDemo{\n    //override\n    //virtual override\n    function store(uint256 _favNum) public override{\n        favNum = _favNum + 5;\n    }\n}\n```\n\n*//在父类中用`virtual`标注可以重载的方法，在子类中用`override`标注并实现重载*\n\n效果：\n\n<img src=\"img/Patrick Collins_blockchain_note/image-20240129210306564.png\" alt=\"image-20240129210306564\" style=\"zoom:67%;\" />\n\n### 使用dataFeed并向合约打钱\n\n本节资料来源：[使用Data Feeds 关于 EVM 链 | Chainlink 文档](https://docs.chain.link/data-feeds/using-data-feeds)\n\n> 为了发送ETH或其他区块链原生通证，函数需要被标记为payable\n>\n> Chainlink可以在去中心化环境中为智能合约获取外部数据和进行外部计算\n>\n> Chainlink喂价是从现实世界中读取定价信息或其他数据的方法\n>\n> Chainlink VRF 是一种将可证明的随机数从现实世界获取到智能合约中的方法。\n>\n> Chainlink Keepers是一种去中心化驱动事件的方法\n\n<img src=\"img/Patrick Collins_blockchain_note/image-20240205130649419.png\" alt=\"image-20240205130649419\" style=\"zoom:50%;\" />\n\n```solidity\n/*\nFundeme.sol\n从用户那里拿钱\n把赚来的钱从合约取出来\n*/\n//SPDX-License-Identifier:MIT\npragma solidity 0.8.7;\nimport \"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\";\n//EVM,Ethereum Virtual Machine\ncontract FundMe{\n    //注意交易的单位是wei\n    uint256 public minimumUsd = 50;\n    function fund() public payable{// 把钱转进合约里\n        //检查msg.value是否大于一定数量的美元,为否时会revert fund()回滚并报错\n        // msg.value == 0.03*1e18\n        require(getConversionRate(msg.value)>= minimumUsd,\"Didn't send enough\");\n    }\n\n    function getPrice() public view returns(uint256){//得到汇率(USD/ETH)\n        //ABIw\n        //Address 0x694AA1769357215DE4FAC081bf1f309aDC325306\n        AggregatorV3Interface priceFeed = AggregatorV3Interface(0x694AA1769357215DE4FAC081bf1f309aDC325306);\n        ( ,int256 answer,,,) = priceFeed.latestRoundData();\n        \n        return uint256(answer*1e10);\n    }\n\n    function getVersion() public view returns (uint256){//获取了链外数据源的版本信息，并将其作为uint256类型返回\n        AggregatorV3Interface priceFeed = AggregatorV3Interface(0x694AA1769357215DE4FAC081bf1f309aDC325306);\n        return priceFeed.version();\n    }\n    function getConversionRate(uint256 ethAmount)public view returns (uint256){\n        uint256 ethPrice = getPrice();\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18;\n        return ethAmountInUsd;\n    }\n}\n```\n\n此处`( ,int256 answer,,,) = priceFeed.latestRoundData();`使用`,`接受不需要的返回值\n\n```solidity\n  //注意latestRoundData()返回值\n  function latestRoundData()\n    external\n    view\n    returns (\n      uint80 roundId,\n      int256 answer,\n      uint256 startedAt,\n      uint256 updatedAt,\n      uint80 answeredInRound\n    );\n```\n\n执行Fundme合约\n\n<img src=\"img/Patrick Collins_blockchain_note/image-20240205140809591.png\" alt=\"image-20240205140809591\" style=\"zoom: 67%;\" />\n\n50/2290==0.0218150087260035，因此低于这个价格的交易会失败并回滚\n\n<img src=\"img/Patrick Collins_blockchain_note/image-20240205140823024.png\" alt=\"image-20240205140823024\" style=\"zoom:67%;\" />\n\n### 库\n\n库的作用的是可以将一些方法写入指定文件，方便开发时调用它们\n\n新建文件`PriceConverter.sol`\n\n```solidity\n/*\nPriceConverter.sol\n*/\n//SPDX-License-Identifier: MIT\npragma solidity 0.8.7;\nimport \"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\";\nlibrary PriceConverter{\n    function getPrice() internal view returns(uint256){//得到汇率(USD/ETH)\n        //ABIw\n        //Address 0x694AA1769357215DE4FAC081bf1f309aDC325306\n        AggregatorV3Interface priceFeed = AggregatorV3Interface(0x694AA1769357215DE4FAC081bf1f309aDC325306);\n        ( ,int256 answer,,,) = priceFeed.latestRoundData();\n        \n        return uint256(answer*1e10);\n    }\n\n    function getVersion() internal view returns (uint256){//获取了链外数据源的版本信息，并将其作为uint256类型返回\n        AggregatorV3Interface priceFeed = AggregatorV3Interface(0x694AA1769357215DE4FAC081bf1f309aDC325306);\n        return priceFeed.version();\n    }\n    function getConversionRate(uint256 ethAmount) internal view returns (uint256){\n        uint256 ethPrice = getPrice();\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18;\n        return ethAmountInUsd;\n    }\n}\n```\n\n将刚才`Fundme.sol`中的`getPrice() , getVersion() , getConversionRate(uint256 ethAmount)`取出并放入新文件中。\n\n```solidity\n/*\nFundme.sol\n*/\n//EVM,Ethereum Virtual Machine\ncontract FundMe{\n    using PriceConverter for uint256;//会将PriceConverter放到uint256下\n    //注意交易的单位是wei\n    uint256 public minimumUsd = 50;\n    address[] public funders;\n    mapping(address=>uint256) public addressToAccountFunded;\n    function fund() public payable{// 把钱转进合约里\n        //检查msg.value是否大于一定数量的美元,为否时会revert fund()回滚并报错\n        // msg.value == 0.03*1e18\n        require(msg.value.getConversionRate()>= minimumUsd,\"Didn't send enough\");\n        funders.push(msg.sender);\n        addressToAccountFunded[msg.sender]=msg.value;\n    }\n    // function withdraw(){}\n}\n```\n\n`msg.value.getConversionRate()`会自动将`msg.value`作为`getConversionRate()`的第一参数，第二第三参数则依次写入括号内。\n\n### 从合约提取资金\n\n三种提取资金的方式\n\n```solidity\n        //transfer\n        payable(msg.sender).transfer(address(this).balance);\n        //send\n        bool sendSuccess = payable(msg.sender).send(address(this).balance);\n        require(sendSuccess,\"Send failed\");\n        //call\n        (bool callSuccess, )=payable(msg.sender).call{value:address(this).balance}.(\"\")\n        require(callSuccess,\"call failed\");\n```\n\n前两种会受到燃气费的制约，推荐最后一种\n\n```solidity\n/*\n从用户那里拿钱\n把赚来的钱从合约取出来\n*/\n//SPDX-License-Identifier:MIT\npragma solidity 0.8.7;\nimport \"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\";\nimport \"./PriceConverter.sol\";\n//EVM,Ethereum Virtual Machine\ncontract FundMe{\n    using PriceConverter for uint256;\n    //注意交易的单位是wei\n    uint256 public minimumUsd = 50;\n    address public owner;\n    address[] public funders;\n    mapping(address=>uint256) public addressToAccountFunded;\n    constructor(){\n        owner = msg.sender;\n    }\n    function fund() public payable{// 把钱转进合约里\n        //检查msg.value是否大于一定数量的美元,为否时会revert fund()回滚并报错\n        // msg.value == 0.03*1e18\n        require(msg.value.getConversionRate()>= minimumUsd,\"Didn't send enough\");\n        funders.push(msg.sender);\n        addressToAccountFunded[msg.sender]=msg.value;\n    }\n    function withdraw() public onlyOwner{\n        // for(/*start index, ending index, step amount*/)\n        for (uint256 funderIndex = 0;funderIndex < funders.length;funderIndex ++){\n            address funder = funders[funderIndex];\n            addressToAccountFunded[funder] = 0;//清零账户余额\n        }\n        //重置数组\n        funders = new address[](0); //0个初始元素\n        //call\n        (bool callSuccess,)=payable(msg.sender).call{value:address(this).balance}(\"\");\n        require(callSuccess,\"call failed\");\n    }\n    modifier onlyOwner{\n        require(msg.sender == owner,\"Sender is not owner\");\n        _;  \n    }\n}\n```\n\nonlyOwner对withdraw的执行者进行了约束，在withdraw执行前会判断合约发起人喝执行人是否相同，只有执行人才可以使用此方法，否则回滚并报错。\n\n<img src=\"img/Patrick Collins_blockchain_note/image-20240219154857856.png\" alt=\"image-20240219154857856\" style=\"zoom:80%;\" />\n\n<img src=\"img/Patrick Collins_blockchain_note/image-20240219154902367.png\" alt=\"image-20240219154902367\" style=\"zoom: 80%;\" />\n\n### 优化措施\n\n#### 修改require\n\n```solidity\npragma solidity 0.8.7;\nimport \"*******\"\n//EVM,Ethereum Virtual Machine\nerror NotOwner();\ncontract FundMe{\n    ***********\n    function fund() public payable{// 把钱转进合约里\n        ***********\n    }\n    function withdraw() public onlyOwner{\n\t\t***********\n    }\n    modifier onlyOwner{\n        // require(msg.sender == i_owner,\"Sender is not owner\");\n        if(msg.sender == i_owner){revert NotOwner();}\n        _;  \n    }\n}\n```\n\n使用require会单独保存`Sender is not owner`，相比`error`会增加`gas`\n\n### recieve和fallback\n\n<img src=\"img/Patrick Collins_blockchain_note/image-20240220135504952.png\" alt=\"image-20240220135504952\" style=\"zoom:80%;\" />\n\n```solidity\n//SPDX-License-Identifier:MIT\npragma solidity 0.8.7;\n\ncontract FallbackExample{\n    uint256 public result;\n\n    receive() external payable {\n        result = 1;\n    }\n\n    fallback() external payable { \n        result = 2;\n    }\n}\n```\n\n## Javascript异步编程\n\n关键字`async`，`await`\n\n只有标注了`async`了的方法中才能使用`await`关键词\n\n```js\nasync function main() {\n  await console.log(\"hi\");\n  let variable = 5;\n  console.log(variable);\n}\nmain()\n  .then(() => process.exit(0))\n  .catch((error) => {\n    console.log(error);\n  });\n```\n\n## 将私密数据保存到环境变量中\n\n创建.env文件\n\n```env\nPRIVATE_KEY=0xE9f22C0cB28f58a74574d88679B4A3F933e3d51cyarn\n```\n\n引包，使用\n\n```js\nrequire(\"dotenv\").config(); // 调用 config 方法加载环境变量 \nconsole.log(process.env.PRIVATE_KEY);\n```\n\n## 进阶：私钥管理\n\n资料来源 P57\n\n## HardHat\n\n### 配置项目\n\n1）准备一个空文件夹，终端`yarn add --dev hardhat`\n\n2）`yarn hardhat`\n\n<img src=\"img/Patrick Collins_blockchain_note/image-20240225225217144.png\" alt=\"image-20240225225217144\"  />\n\n3）检查solidity版本\n\n<img src=\"img/Patrick Collins_blockchain_note/image-20240225231333402.png\" alt=\"image-20240225231333402\"  />\n\n4）编译，`yarn hardhat compile`\n\n5）`yarn add --dev hardhat-deploy`用于简化和管理以太坊智能合约的部署过程\n\n6）删除`deploy.js`, 在`hardhat.config.js`中写入`require(\"hardhat-deploy\");`之后执行`yarn hardhat`，在新`task`中应有`deploy`\n\n7）建立deploy文件夹，之后的编译脚本就写在这里面\n\n<img src=\"img/Patrick Collins_blockchain_note/image-20240225234449556.png\" alt=\"image-20240225234449556\"  />\n\n8）编写脚本，并编译`yarn hardhat deploy`\n\n```js\n//01-deploy-fund-me.js\n//引包，import\n//方法定义\n//方法使用\nfunction deployFunc() {\n    console.log(\"hi\")\n}\nmodule.exports.default = deployFunc //将deplyFunc设置为默认要找的函数\n\n```\n\n```terminal\nPS D:\\study_test\\Hardhat\\hardhat-fund-me-fcc> yarn hardhat deploy\nyarn run v1.22.21\n$ D:\\study_test\\Hardhat\\hardhat-fund-me-fcc\\node_modules\\.bin\\hardhat deploy\nCompiled 3 Solidity files successfully (evm target: london).\nhi\nDone in 3.12s.\n```\n\n使用`yarn add --dev @chainlink/contracts@0.8.0`下载chainlink预言机中的合约\n\n### Hardhat部署智能合约\n\n#### 关于node.js的脚本的接口开放和使用\n\n这是一个TIP：\n\n```js\n// helper-hardhat-config.js\nconst networkConfig = {\n    11155111: {\n        name: \"Sepolia\",\n        ethUsdPriceFeed: \"0x694AA1769357215DE4FAC081bf1f309aDC325306\",\n    },\n    5: {\n        name: \"Goerli\",\n        ethUsdPriceFeed: \"0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e\",\n    },\n}\nmodule.exports = {//开放对其他脚本使用的接口\n    networkConfig,\n}\n```\n\n```js\n//01-deploy-fund-me.js\n//使用刚才的接口\n//helpconfig代表了helper-hardhat-config.js这个文件\nconst helperconfig = require(\"../helper-hardhat-config.js\")\nconst networkconfig = helperconfig.networkConfig\n```\n\n当然也可以这么写\n\n```js\nconst { networkconfig } = require(\"../helper-hardhat-config.js\")\n```\n\n#### 本地/测试网络部署\n\n如果我们没有使用任何测试网\n\n我们需要写一个`Mock`脚本，即如果某个合约不存在，我们就部署一个最小化的版本来进行我们的本地测试，\n\n**hardhat-config.js**\n\n```js\nrequire(\"@nomicfoundation/hardhat-toolbox\");\nrequire(\"hardhat-deploy\");\nrequire(\"dotenv\").config();\n\n/** @type import('hardhat/config').HardhatUserConfig */\n\n// const COINMARKETCAP_API_KEY = process.env.COINMARKETCAP_API_KEY;\nconst SEPOLIA_RPC_URL = process.env.SEPOLIA_RPC_URL;\nconst PRIVATE_KEY = process.env.PRIVATE_KEY;\nconst ETHERSCAN_API_KEY = process.env.ETHERSCAN_API_KEY;\n\nmodule.exports = {\n  solidity: {\n    compilers: [\n      {\n        version: \"0.8.7\",\n      },\n      {\n        version: \"0.6.6\",\n      },\n    ],\n  },\n  defaultNetwork: \"hardhat\",\n  networks: {\n    hardhat: {\n      chainId: 31337,\n      // gasPrice: 130000000000,\n    },\n    sepolia: {\n      url: SEPOLIA_RPC_URL,\n      accounts: [PRIVATE_KEY],\n      chainId: 11155111,\n      blockConfirmations: 6,\n    },\n  },\n  gasReporter: {\n    enabled: true,\n    currency: \"USD\",\n    outputFile: \"gas-report.txt\",\n    noColors: true,\n    // coinmarketcap: COINMARKETCAP_API_KEY,\n  },\n  etherscan: {\n    apiKey: ETHERSCAN_API_KEY,\n  },\n  namedAccounts: {\n    deployer: {\n      default: 0, // here this will by default take the first account as deployer\n      1: 0, // similarly on mainnet it will take the first account as deployer. Note though that depending on how hardhat network are configured, the account 0 on one network can be different than on another\n    },\n  },\n  mocha: {\n    timeout: 500000,\n  },\n};\n\n```\n\n**helper-hardhat-config.js**\n\n```js\n// helper-hardhat-config.js\nconst networkConfig = {\n  31337: {\n    name: \"localhost\",\n  },\n  // Price Feed Address, values can be obtained at https://docs.chain.link/data-feeds/price-feeds/addresses\n  11155111: {\n    name: \"sepolia\",\n    ethUsdPriceFeed: \"0x694AA1769357215DE4FAC081bf1f309aDC325306\",\n  },\n};\n\nconst developmentChains = [\"hardhat\", \"localhost\"];\n\nmodule.exports = {\n  networkConfig,\n  developmentChains,\n};\n\n```\n\n\n\n**MockV3Aggregator.sol**\n\n```solidity\n//MockV3Aggregator.sol\n//SPDX-License-Identifier:MIT\npragma solidity ^0.6.0;\n\nimport \"@chainlink/contracts/src/v0.6/tests/MockV3Aggregator.sol\";\n```\n\n**00-deploy-mocks.js**\n\n//用以部署到本地网络（快）\n\n```solidity\n//00-deploy-mocks.js\n//这段是部署本地预言机\nconst { network } = require(\"hardhat\");\n\nconst DECIMALS = \"8\";\nconst INITIAL_PRICE = \"200000000000\"; // 2000\n\nmodule.exports = async ({ getNamedAccounts, deployments }) => {\n  const { deploy, log } = deployments;\n  const { deployer } = await getNamedAccounts();\n  const chainId = network.config.chainId;\n  log(network.name);\n  if (chainId == 31337) {\n    log(\"Local network detected!Deploying mocks...\");\n    await deploy(\"MockV3Aggregator\", {\n      contract: \"MockV3Aggregator\",\n      from: deployer,\n      log: true,\n      args: [DECIMALS, INITIAL_PRICE],\n    });\n    log(\"Mocks deployed!\");\n    log(\"--------------------------------------------------------\");\n  }\n};\n// 这段代码指定了当前部署脚本相关的标签。在这里，使用了两个标签：\"all\" 和 \"mocks\"。\n// \"all\" 标签： 这个标签可能用于将部署脚本与整个项目的所有部署任务关联起来。\n// 当运行 npx hardhat deploy --tags all 时，将运行所有带有 \"all\" 标签的部署任务。\n// \"mocks\" 标签： 这个标签可能用于将部署脚本与与模拟合约相关的其他部署任务关联起来。\n// 当运行 npx hardhat deploy --tags mocks 时，将运行所有带有 \"mocks\" 标签的部署任务。\n//yarn hardhat deploy --tags mocks\nmodule.exports.tags = [\"all\", \"mocks\"];\n```\n\n使用`yarn hardhat deploy --tags mocks`可以精准执行`00-deploy-mocks.js`\n\n也可以对当前`chainId`加以判断，使其能够自动判断部署在哪条链上\n\n**01-deploy-fund-me.js**\n\n//用以部署到测试网络（慢）\n\n```solidity\n//01-deploy-fund-me.js\n//helpconfig代表了helper-hardhat-config.js这个文件\n// const helperconfig = require(\"../helper-hardhat-config.js\")\n// const networkconfig = helperconfig.networkConfig\n//node.js的快捷写法，写法等同于上方的\nconst {\n  networkConfig,\n  developmentChains,\n} = require(\"../helper-hardhat-config.js\");\nconst { network } = require(\"hardhat\");\nconst { verify } = require(\"../utils/verify.js\");\n//async function deployFunc(hre) {\n//     hre.getNameAccounts()\n//     hre.deployments\n// }\n// module.exports.default = deployFunc //将deplyFunc设置为默认要找的函数\n\n//hre代表hardhat运行环境\n//写法等同于上方的\n// module.exports = async (hre) => {\n//     const {getNameAccounts,deployments} = hre\n// }\n//node.js的语法糖，写法等同于上方的\nmodule.exports = async ({ getNamedAccounts, deployments }) => {\n  //将deploy和log从deployments这个对象中提取出来，等同于\n  //const deploy = deployments.deploy;\n  //const log = deployments.log\n  const { deploy, log } = deployments;\n  //getNameAccounts() 返回一个包含 deployer 属性的对象，等同于\n  //const getNameAccountsResult = await getNameAccounts();\n  //const deployer = getNameAccountsResult.deployer;\n  log(\"Deploy Fundme...\");\n  const { deployer } = await getNamedAccounts();\n  const chainId = network.config.chainId;\n\n  //---------------确认预言机地址-----------------\n  if (developmentChains.includes(network.name)) {\n    const ethUsdAggregator = await deployments.get(\"MockV3Aggregator\");\n    ethUsdPriceFeedAddress = ethUsdAggregator.address;\n  } else {\n    // ethUsdPriceFeedAddress的格式：0x694AA1769357215DE4FAC081bf1f309aDC325306\n    ethUsdPriceFeedAddress = networkConfig[chainId][\"ethUsdPriceFeed\"];\n  }\n\n  // log(ethUsdPriceFeedAddress);\n  //-----------------deploy-----------------------\n  const args = [ethUsdPriceFeedAddress];\n  const Fundme = await deploy(\"Fundme\", {\n    from: deployer,\n    args: args, //喂价地址\n    log: true,\n    waitConfirmation: network.config.blockConfirmations || 1,\n  });\n  //-------------------verify-----------------------\n  //当合约部署网络与指定的不符时会进行检查\n  if (\n    !developmentChains.includes(network.name) &&\n    process.env.ETHERSCAN_API_KEY\n  ) {\n    //verify\n    await verify(Fundme.address, args);\n  }\n  log(\"--------------------------------------------------------\");\n};\n\nmodule.exports.tags = [\"all\", \"fundme\"];\n```\n\n输入`yarn hardhat deploy --network sepolia`或者`yarn hardhat deploy --network hardhat`，会识别到`network.name`的值并部署`Fundme`合约到**具体的网络**中，同时使用`MockV3Aggregator.sol`或者 `ethUsdPriceFeed: \"0x694AA1769357215DE4FAC081bf1f309aDC325306\"`作为喂价合约\n\n`utils`文件夹，用于验证合约的合法性和安全性\n\n**verify.js**\n\n```js\n//verify.js\nconst { run } = require(\"hardhat\");\nconst verify = async (contractAddress, args) => {\n  console.log(\"Verifying Contract...\");\n  try {\n    await run(\"verify:verify\", {\n      address: contractAddress,\n      constructorArguments: args,\n    });\n  } catch (e) {\n    if (e.message.toLowerCase().includes(\"already verified\")) {\n      console.log(\"Already Verified!\");\n    } else {\n      console.log(e);\n    }\n  }\n};\nmodule.exports = { verify };\n\n```\n\n效果如下：\n\n（1）部署到本地网络\n\n```terminal\nPS D:\\study_test\\Hardhat\\Harhat-Fundme> yarn hardhat deploy --network hardhat\nyarn run v1.22.21\nwarning package.json: No license field\n$ D:\\study_test\\Hardhat\\Harhat-Fundme\\node_modules\\.bin\\hardhat deploy --network hardhat\nhttps://eth-sepolia.api.onfinality.io/public\nNothing to compile\nLocal network detected!Deploying mocks...\ndeploying \"MockV3Aggregator\" (tx: 0x3d732abdeda8235691578f5eae48ec57c18e6860c18196ab7b211ca8f74dce2b)...: deployed at 0x5FbDB2315678afecb367f032d93F642f64180aa3 with 569759 gas\nMocks deployed!\n--------------------------------------------------------\nDeploy Fundme...\ndeploying \"Fundme\" (tx: 0x9275acdb459bd3d25e3dbf786faa9a18efb9edf2bcaa93cf56f4a7dc5b97b1e8)...: deployed at 0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512 with 846785 gas\n--------------------------------------------------------\nDone in 2.94s.\n```\n\n（2）部署到测试网络\n\n```terminal\n$ D:\\study_test\\Hardhat\\Harhat-Fundme\\node_modules\\.bin\\hardhat deploy --network sepolia\nhttps://eth-sepolia.api.onfinality.io/public\nNothing to compile\nDeploy Fundme...\ndeploying \"Fundme\" (tx: 0x8c2e8759b86f8076702ed50b0abaa5d082ed8ac47589f380f367e2b62aeefc3d)...: deployed at 0x58962eaA9001b9C3F1Eb908Ac1347213b2D39A5D with 846785 gas\nVerifying Contract...\nUnexpectedError: An unexpected error occurred during the verification process.\nPlease report this issue to the Hardhat team.\nError Details: Connect Timeout Error\n    at Etherscan.isVerified (D:\\study_test\\Hardhat\\Harhat-Fundme\\node_modules\\@nomicfoundation\\hardhat-verify\\src\\internal\\etherscan.ts:126:13)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at SimpleTaskDefinition.action (D:\\study_test\\Hardhat\\Harhat-Fundme\\node_modules\\@nomicfoundation\\hardhat-verify\\src\\internal\\tasks\\etherscan.ts:101:24)\n    at Environment._runTaskDefinition (D:\\study_test\\Hardhat\\Harhat-Fundme\\node_modules\\hardhat\\src\\internal\\core\\runtime-environment.ts:358:14)\n    at Environment.run (D:\\study_test\\Hardhat\\Harhat-Fundme\\node_modules\\hardhat\\src\\internal\\core\\runtime-environment.ts:191:14)        \n    at SimpleTaskDefinition.action (D:\\study_test\\Hardhat\\Harhat-Fundme\\node_modules\\@nomicfoundation\\hardhat-verify\\src\\index.ts:284:9) \n    at Environment._runTaskDefinition (D:\\study_test\\Hardhat\\Harhat-Fundme\\node_modules\\hardhat\\src\\internal\\core\\runtime-environment.ts:358:14)\n    at Environment.run (D:\\study_test\\Hardhat\\Harhat-Fundme\\node_modules\\hardhat\\src\\internal\\core\\runtime-environment.ts:191:14)        \n    at verify (D:\\study_test\\Hardhat\\Harhat-Fundme\\utils\\verify.js:6:5)\n    at Object.module.exports [as func] (D:\\study_test\\Hardhat\\Harhat-Fundme\\deploy\\01-deploy-fund-me.js:64:5)\n--------------------------------------------------------\nDone in 84.60s.\n```\n\n合约`0x8c2e8759b86f8076702ed50b0abaa5d082ed8ac47589f380f367e2b62aeefc3d`\n\n被部署在以太坊地址`0x58962eaA9001b9C3F1Eb908Ac1347213b2D39A5D`\n\n<img src=\"img/Patrick Collins_blockchain_note/image-20240305002127313.png\" alt=\"image-20240305002127313\" style=\"zoom:67%;\" />\n\n#### 编写脚本注入资金\n\nP.S 在本地Hardhat环境中运行\n\n```js\n//fund.js\nconst { ethers, getNamedAccounts } = require(\"hardhat\");\n\nasync function main() {\n  const { deployer } = await getNamedAccounts();\n  console.log(`Deployer address: ${deployer}`);\n  const fundme = await ethers.getContractAt(\"Fundme\", deployer);\n  // console.log(`Got contract Fundme at ${fundme.address}`);\n  console.log(\"Funding contract...\");\n  const transactionResponse = await fundme.fund({\n    value: ethers.parseEther(\"0.1\"),\n  });\n  await transactionResponse.wait(1);\n  console.log(\"Funded!\");\n  const balance = await ethers.provider.getBalance(deployer);\n  console.log(balance);\n}\n\nmain()\n  .then(() => process.exit(0))\n  .catch((error) => {\n    console.error(error);\n    process.exit(1);\n  });\n```\n\n效果：\n\n```terminal\nPS D:\\study_test\\Hardhat\\Harhat-Fundme> yarn hardhat run scripts/fund.js --network hardhat\nyarn run v1.22.21\nwarning package.json: No license field\n$ D:\\study_test\\Hardhat\\Harhat-Fundme\\node_modules\\.bin\\hardhat run scripts/fund.js --network hardhat\nDeployer address: 0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\nFunding contract...\nFunded!\n9999999960505000000000n\nDone in 5.54s.\n```\n\n#### 编写脚本提取资金\n\nP.S 在本地Hardhat环境中运行\n\n```js\n//withdraw.js\nconst { ethers, getNamedAccounts } = require(\"hardhat\");\n\nasync function main() {\n  const { deployer } = await getNamedAccounts();\n  console.log(`Deployer address: ${deployer}`);\n  const fundme = await ethers.getContractAt(\"Fundme\", deployer);\n  // console.log(`Got contract Fundme at ${fundme.address}`);\n  console.log(\"Funding contract...\");\n  const transactionResponse = await fundme.withdraw();\n  await transactionResponse.wait(1);\n  console.log(\"Got it back!\");\n  const balance = await ethers.provider.getBalance(deployer);\n  console.log(balance);\n}\n\nmain()\n  .then(() => process.exit(0))\n  .catch((error) => {\n    console.error(error);\n    process.exit(1);\n  });\n\n```\n\n\n\n## HTML连接到Metamask \n\n```js\n<body>\n    that is good\n    <button onclick=\" connect()\">Connect</button>\n</body>\n<script>\nasync function connect(){\n    if (typeof window.ethereum !==\"undefined\"){\n        await window.ethereum.request({method:\"eth_requestAccounts\"})\n        document.getElementById(\"connectBUtton\").innerHTML=\"Connected!\" //将按钮中文字改为Connected\n    }else{\n        console.log(\"No metamask!\")\n    }\n}\n</script>\n```\n\n也可以\n\n```js\n<!-- index.html -->\n<body>\n    that is good\n    <button id =\"connectButton\" onclick=\" connect()\">Connect</button>\n</body>\n<script src=\"./index.js\" type=\"text/javascript\"></script>\n```\n\n```js\n// index.js\nasync function connect() {\n    if (typeof window.ethereum !== \"undefined\") {\n        await window.ethereum.request({ method: \"eth_requestAccounts\" })\n        document.getElementById(\"connectButton\").innerHTML = \"Connected!\"\n    } else {\n        console.log(\"No metamask!\")\n    }\n}\n```\n\n## HTML结合js实现web端交易\n\n[使用Ethers.js代码库发送交易和部署合约 | Moonbeam Docs](https://docs.moonbeam.network/cn/builders/build/eth-api/libraries/ethersjs/)\n","source":"_posts/Patrick Collins_blockchain_note.md","raw":"---\ntitle: Patrick Collins-区块链 笔记\ncategories:\n  - Web3\ndescription: \"Patrick Collins-区块链学习笔记\"\ndate: 2024-04-25 14:11:40\nexcerpt: \"有关区块链和WEB3全栈开发的课程笔记，来源是Patrick Collins 讲解的区块链课程，使用了Solidity，Javascript进行了智能合约的编写，部署和交互。这是比较流行的写法，当然合约不止Solidity一种编写方法，在引入库的之后，Javascript、Python、Golang都可以做到。\"\ntags:\n    - 区块链\n    - 以太坊\n    - 智能合约\n---\n\n## 工具包\n\n课程链接：【（32 小时最全课程）区块链，智能合约 & 全栈 Web3 开发】 https://www.bilibili.com/video/BV1Ca411n7ta\n\n原视频链接（生肉）：https://www.youtube.com/watch?v=gyMwXuJrbJQ\n\n课程Repo链接：https://github.com/smartcontractkit/full-blockchain-solidity-course-js\n\nRemix网址：https://remix.ethereum.org/\n\n测试币水龙头：https://faucets.chain.link\n\nSepolia区块链浏览器：https://sepolia.etherscan.io/\n\nChainlink官方文档：https://docs.chain.link\n\n以太坊货币换算：https://eth-converter.com/\n\nAggregatorV3Interface接口源码：https://github.com/smartcontractkit/chainlink/blob/develop/contracts/src/v0.6/interfaces/AggregatorV3Interface.sol\n\nSolidity 使用文档：https://solidity-by-example.org\n\n## 智能合约\n\n智能合约是约定多个参与方的一些列指令。不同的是，传统合同是写在纸上的，而智能合约是代码写的，并且嵌入到一个去中心化区块链平台，在这个去中心化区块链平台中被执行；\n\n将链上去中心化逻辑和链下去中心化数据和计算相结合，这个东西就叫做混合型智能合约。\n\n混合智能合约会用到`Chainlink`。这是一个组件化，去中心化的预言机网络；不仅可以为智能合约提供外部数据，还可以提供链下计算。本课程和笔记都将基于这个进行开展。\n\n> from Chatgpt : 预言机网络（Oracle network）是一种基于区块链技术的系统，它的主要目标是将现实世界的数据引入区块链中，从而使智能合约能够访问并使用这些数据。智能合约通常无法直接获取外部数据，因为它们在区块链内部运行，并且无法直接连接到外部世界的数据源。预言机网络解决了这个问题，允许区块链与外部数据进行交互。\n\n### 应用\n\n不容易被机构欺骗，通过智能合约可以亲身进入这个行业，所有记录都是公开，透明且不可篡改的。\n\n## 第一笔交易\n\n在chrome浏览器中安装插件METAMASK，注册一个账户并开通两个钱包，分别叫Account 1和 Account 2\n\n因为是学习与测试用的钱包，所以哈希地址就不打码了（反正里面也没钱）\n\n<img src=\"img/Patrick Collins_blockchain_note/image-20240109233040953.png\" alt=\"image-20240109233040953\" style=\"zoom:80%;\" />\n\n连接测试网络 Sepolia：\n\n<img src=\"img/Patrick Collins_blockchain_note/image-20240109233120241.png\" alt=\"image-20240109233120241\" style=\"zoom:80%;\" />\n\n前往测试网络的水龙头，获取测试币[https://faucets.chain.link](https://faucets.chain.link/)\n\n<img src=\"img/Patrick Collins_blockchain_note/image-20240110144901761.png\" alt=\"image-20240110144901761\" style=\"zoom: 67%;\" />\n\n在METAMASK中也能看到已经获取到了测试币\n\n<img src=\"img/Patrick Collins_blockchain_note/image-20240110145343247.png\" alt=\"image-20240110145343247\" style=\"zoom:50%;\" />\n\n在https://sepolia.etherscan.io/中也可以查询到对应的交易\n\n<img src=\"img/Patrick Collins_blockchain_note/image-20240112093457519.png\" alt=\"image-20240112093457519\"  />\n\n对于上图，交易手续费价格计算：\n$$\nTransaction(交易手续费) = Gas\\,\\,Price(燃气价格)\\,\\, * \\,\\, Usage\\,\\,by\\,\\,Txn(使用了的燃气量)\n$$\n有Account 1 向 Account 2 发送 0.05个测试币\n\n<img src=\"img/Patrick Collins_blockchain_note/image-20240112094858855.png\" alt=\"image-20240112094858855\"  />\n\n<img src=\"img/Patrick Collins_blockchain_note/image-20240112095159024.png\" alt=\"image-20240112095159024\" style=\"zoom:50%;\" />\n\n<img src=\"img/Patrick Collins_blockchain_note/image-20240112095206377.png\" alt=\"image-20240112095206377\" style=\"zoom:50%;\" />\n\n<center><b>OKay，恭喜你已经完整地完成了一笔交易！</b></center>\n\n\n\n## 概念知识快速总结\n\n*// P.S说到底，这份笔记更多是为了记载实战方面的，因此，关于概念的概括一下就过了*\n\n### 权益机制\n\n比特币和前期的以太坊使用的是工作量证明机制（具体见\"北京大学肖臻老师《区块链技术与应用》公开课 笔记.md\"），而在以太坊2.0中，改为了权益机制；\n\n不同于工作量的证明，在权益机制中，参与区块创建以及验证的叫验证者，而成为验证者需要抵押一定数量的以太币用来确保不会恶意发布交易区块；之后系统会根据算法选举出是哪一个验证者来负责创建新的区块（算法在未来可能更新换代，作为开发者没什么必要学习），在其他验证者验证这个区块交易的真实性以及有效性之后会给予他奖励，如果出现不正当行为，可能会被踢出验证者甚至失去那部分抵押的比特币；\n\n以太坊 2.0 的权益机制还包括社区治理，即验证者可以参与提案和投票，对网络的升级和改变提出建议，并共同决定网络的发展方向。\n\n关于验证者退出：验证者可以随时退出，但是抵押的以太币不会立刻归还，这是为了防止恶意进出的问题\n\n### 关于攻击\n\n区块链攻击主要分为女巫攻击以及51%攻击\n\n在权益证明机制中，由于成为验证者需要支付一定量的以太币，并且存在验证这一环节，导致试图创建假帐号影响区块链这一行为需要付出高额成本，这可以很好地预防女巫攻击。\n\n关于51%攻击，当其掌握足够多的算力，直接创造一条区块链，长度比中心链的一半还要长，那么就可以影响中心链到它之上运行，但是随着区块链不断使用，中心链不断加长，51%攻击所需要的算力也在不断提高，直至近乎不可能做到。\n\n\n\n## Solidity(Remix)\n\n网站地址：https://remix.ethereum.org/\n\n一个集成开发环境，编写和交互智能合约的地方\n\n### 第一个智能合约\n\n新建一个sol文件，输入以下内容\n\n```solidity\n//SPDX-License-Identifier: MIT\n//因为solidity更新频率极高，我们需要在文件开头告诉代码，solidity的版本\npragma solidity 0.8.7;\n\n//关键字，告诉接下来是定义智能合约的内容\ncontract SimpleStorage{\n    //↓这个初始化默认是0\n    uint256 favNum;\n    function store(uint256 _favNum) public{\n        favNum = _favNum;\n    } \n}\n```\n\n如果想定义其他类型的数据变量：\n\n```solidity\n    bool judge = true;\n    //↓这个初始化默认是0,256代表分配空间，不写的话默认是256\n    uint256 favNum;\n    string word = \"helloworld\";\n    int256 num2= 1018;\n    address myadress = 0xE9f22C0cB28f58a74574d88679B4A3F933e3d51c;\n    //byte最大为32\n    bytes32 A = \"good\";\n```\n\n在虚拟环境部署合约：\n\n<img src=\"img/Patrick Collins_blockchain_note/image-20240123155705037.png\" alt=\"image-20240123155705037\"  />\n\n使用合约中的方法，修改区块中的数据，相当于发布一条“交易”\n\n<img src=\"img/Patrick Collins_blockchain_note/image-20240123155823210.png\" alt=\"image-20240123155823210\" style=\"zoom:67%;\" />\n\n观察到交易成功，且产生燃气费\n\n<img src=\"img/Patrick Collins_blockchain_note/image-20240123155927054.png\" alt=\"image-20240123155927054\" style=\"zoom:67%;\" />\n\n<img src=\"img/Patrick Collins_blockchain_note/image-20240123155959166.png\" alt=\"image-20240123155959166\" style=\"zoom:67%;\" />\n\n在此基础上更进一步\n\n```solidity\n     //view,pure\n    function retrieve() public view returns (uint256){\n        return favNum;\n    }\n    function add() public pure returns (uint256){\n        return (1+1);\n    }\n```\n\n`view`：`solidity`得一个关键字，代表了这个函数只会读取合约的状态，因而不会产生燃气费；\n\n`pure`：`solidity`得一个关键字，代表了这个函数既不会修改合约状态也读取不了合约状态，通常会做一些常用算法或者是一些不需要读取数据的算法，因而也\t不会产生燃气费；\n\n图形界面上的效果：\n\n<img src=\"img/Patrick Collins_blockchain_note/image-20240125150543392.png\" alt=\"image-20240125150543392\" style=\"zoom: 67%;\" />\n\n\n\n点击蓝色按钮，不发送交易，我们只是在链下读取数值，因此不产生燃气费，调用这些方法是免费的，但如果在消耗gas的函数中调用它，就会产生执行费用。\n\n### 结构体和数组\n\n结构体定义全部是分号，只有使用的时候内部是逗号；\n\n效果如下：\n\n```solidity\nstruct People {\n        uint256 favNum;\n        string name;\n    }\n    // People 结构体的实例化\nPeople public person = People({favNum: 2, name: \"Peter\"});\n```\n\n<img src=\"img/Patrick Collins_blockchain_note/image-20240125153122214.png\" alt=\"image-20240125153122214\" style=\"zoom:67%;\" />\n\n声明变量的类型，然后是对象的可见性，最后是变量名。\n\n```solidity\n    People[] public people;\n    function addperson(string memory _name,uint256 _favNum) public{\n        People memory newperson = People({favNum:_favNum,name:_name});\n        people.push(newperson);\n    }\n```\n\n也可以对数组长度进行限制：\n\n```solidity\n\tPeople[3] public people;\n```\n\n最终效果：\n\n<img src=\"img/Patrick Collins_blockchain_note/image-20240125155456902.png\" alt=\"image-20240125155456902\" style=\"zoom:67%;\" />\n\n\n\n值得一提的是，在solidity中有6种方式可以用于存储数,分别是`stack`、`memory`、`storage`、`calldata`、`code`、`logs`\n\n其中，`memory`表示可以被修改的临时变量，`calldata`表示不可以被临时修改的临时变量，二者在方法结束过后会自行销毁，案例如下：\n\n```solidity\n    function addperson(string memory _name,uint256 _favNum) public{\n        _name = 'cat'; //不会报错\n        People memory newperson = People({favNum:_favNum,name:_name});\n        people.push(newperson);\n    }\n    function addperson(string calldata _name,uint256 _favNum) public{\n        _name = 'cat' ;//会报错:TypeError: Type literal_string \"cat\" is not implicitly convertible to expected type string calldata.--> contracts/SimpeStorage.sol:18:17:\n        People memory newperson = People({favNum:_favNum,name:_name});\n        people.push(newperson);\n    }\n```\n\n而storage表示可以被修改的永久变量，不写关键字的话默认存储在storage；\n\n\n\n### Mapping映射\n\n```solidity\n//SPDX-License-Identifier: MIT\n//因为solidity更新频率极高，我们需要在文件开头告诉代码，solidity的版本\npragma solidity 0.8.7;\n\n//关键字，告诉接下来是定义智能合约的内容\ncontract SimpleStorage{\n    //↓这个初始化默认是0\n    uint256 favNum;\n    mapping (string=>uint256) public nameToFavNum;\n    // People 结构体的定义\n    struct People {\n        uint256 favNum;\n        string name;\n    }\n    People[] public people;\n    function addperson(string memory _name,uint256 _favNum) public{\n        People memory newperson = People({favNum:_favNum,name:_name});\n        people.push(newperson);\n        nameToFavNum[_name]=_favNum;\n    }\n}\n```\n\n\n\n提供了一个字符转uint的索引，效果如下：\n\n\n\n<img src=\"img/Patrick Collins_blockchain_note/image-20240125222714288.png\" alt=\"image-20240125222714288\" style=\"zoom: 67%;\" />\n\n\n\n### 在测试网络上布置智能合约\n\n<img src=\"img/Patrick Collins_blockchain_note/image-20240125230207782.png\" alt=\"image-20240125230207782\" style=\"zoom: 67%;\" />\n\n修改环境，选择账户，部署，\n\n<img src=\"img/Patrick Collins_blockchain_note/image-20240125230239939.png\" alt=\"image-20240125230239939\" style=\"zoom:80%;\" />\n\n账单：\n\n<img src=\"img/Patrick Collins_blockchain_note/image-20240125230536425.png\" alt=\"image-20240125230536425\" style=\"zoom: 67%;\" />\n\n<img src=\"img/Patrick Collins_blockchain_note/image-20240125230559283.png\" alt=\"image-20240125230559283\"  />\n\n发送交易：\n\n<img src=\"img/Patrick Collins_blockchain_note/image-20240125231013855.png\" alt=\"image-20240125231013855\" style=\"zoom:80%;\" />\n\n点击蓝色按钮，不会产生交易面板提示\n\n<img src=\"img/Patrick Collins_blockchain_note/image-20240125231634552.png\" alt=\"image-20240125231634552\" style=\"zoom: 67%;\" />\n\n查看合约：\n\n<img src=\"img/Patrick Collins_blockchain_note/image-20240125230758121.png\" alt=\"image-20240125230758121\" style=\"zoom:80%;\" />\n\n进入交易链接，可以看到具体交易内容：\n\n<img src=\"img/Patrick Collins_blockchain_note/image-20240125231517791.png\" alt=\"image-20240125231517791\" style=\"zoom:80%;\" />\n\n这是由于区块链的公开透明的特性。\n\n### 合约交互\n\n创建新的文件`SimpleFactory.sol`\n\n```solidity\n/*\nSimpleFactory.sol\n*/\n//SPDX-License-Identifier:MIT\npragma solidity ^0.8.7;\n//引用其他合约\nimport \"./SimpleDemo.sol\";\n\ncontract SimpleFactory{\n    SimpleDemo[] public simpleDemoArray;\n    function createSimpleStorageContract() public{\n        SimpleDemo simpleDemo = new SimpleDemo();\n        //存进去的其实是每一个simpleDemo的地址\n        simpleDemoArray.push(simpleDemo);\n    }\n    function sfStore (uint256 _simpleDemoIndex,uint256 _simpleStorageNumber) public {\n        //Address\n        //ABI 应用二进制接口\n        //通过下标查的simpleDemo的地址\n        SimpleDemo simpleDemo = simpleDemoArray[_simpleDemoIndex];\n        //调用其他合约里的方法\n        simpleDemo.FavNumEdit(_simpleStorageNumber);\n    }\n    function sfGet(uint256 _simpleDemoIndex) public view returns(uint256){\n        return simpleDemoArray[_simpleDemoIndex].retrieve();\n    }\n}\n```\n\n结果：\n\n<img src=\"img/Patrick Collins_blockchain_note/image-20240127234611622.png\" alt=\"image-20240127234611622\" style=\"zoom:67%;\" />\n\n### 继承和重载\n\n在`SimpleDemo.sol`中\n\n```solidity\n/*\n父类SimpleDemo.sol\n*/\ncontract SimpleDemo{\n    //↓这个初始化默认是0\n    uint256 favNum;\n    function store(uint256 _favNum) public virtual{\n        favNum = _favNum;\n    } \n}\n```\n\n在子类`ExtraDemo.sol`中\n\n```solidity\n/*\n子类ExtraDemo.sol\n*/\nimport \"./SimpleDemo.sol\";\ncontract ExtraDemo is SimpleDemo{\n    //override\n    //virtual override\n    function store(uint256 _favNum) public override{\n        favNum = _favNum + 5;\n    }\n}\n```\n\n*//在父类中用`virtual`标注可以重载的方法，在子类中用`override`标注并实现重载*\n\n效果：\n\n<img src=\"img/Patrick Collins_blockchain_note/image-20240129210306564.png\" alt=\"image-20240129210306564\" style=\"zoom:67%;\" />\n\n### 使用dataFeed并向合约打钱\n\n本节资料来源：[使用Data Feeds 关于 EVM 链 | Chainlink 文档](https://docs.chain.link/data-feeds/using-data-feeds)\n\n> 为了发送ETH或其他区块链原生通证，函数需要被标记为payable\n>\n> Chainlink可以在去中心化环境中为智能合约获取外部数据和进行外部计算\n>\n> Chainlink喂价是从现实世界中读取定价信息或其他数据的方法\n>\n> Chainlink VRF 是一种将可证明的随机数从现实世界获取到智能合约中的方法。\n>\n> Chainlink Keepers是一种去中心化驱动事件的方法\n\n<img src=\"img/Patrick Collins_blockchain_note/image-20240205130649419.png\" alt=\"image-20240205130649419\" style=\"zoom:50%;\" />\n\n```solidity\n/*\nFundeme.sol\n从用户那里拿钱\n把赚来的钱从合约取出来\n*/\n//SPDX-License-Identifier:MIT\npragma solidity 0.8.7;\nimport \"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\";\n//EVM,Ethereum Virtual Machine\ncontract FundMe{\n    //注意交易的单位是wei\n    uint256 public minimumUsd = 50;\n    function fund() public payable{// 把钱转进合约里\n        //检查msg.value是否大于一定数量的美元,为否时会revert fund()回滚并报错\n        // msg.value == 0.03*1e18\n        require(getConversionRate(msg.value)>= minimumUsd,\"Didn't send enough\");\n    }\n\n    function getPrice() public view returns(uint256){//得到汇率(USD/ETH)\n        //ABIw\n        //Address 0x694AA1769357215DE4FAC081bf1f309aDC325306\n        AggregatorV3Interface priceFeed = AggregatorV3Interface(0x694AA1769357215DE4FAC081bf1f309aDC325306);\n        ( ,int256 answer,,,) = priceFeed.latestRoundData();\n        \n        return uint256(answer*1e10);\n    }\n\n    function getVersion() public view returns (uint256){//获取了链外数据源的版本信息，并将其作为uint256类型返回\n        AggregatorV3Interface priceFeed = AggregatorV3Interface(0x694AA1769357215DE4FAC081bf1f309aDC325306);\n        return priceFeed.version();\n    }\n    function getConversionRate(uint256 ethAmount)public view returns (uint256){\n        uint256 ethPrice = getPrice();\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18;\n        return ethAmountInUsd;\n    }\n}\n```\n\n此处`( ,int256 answer,,,) = priceFeed.latestRoundData();`使用`,`接受不需要的返回值\n\n```solidity\n  //注意latestRoundData()返回值\n  function latestRoundData()\n    external\n    view\n    returns (\n      uint80 roundId,\n      int256 answer,\n      uint256 startedAt,\n      uint256 updatedAt,\n      uint80 answeredInRound\n    );\n```\n\n执行Fundme合约\n\n<img src=\"img/Patrick Collins_blockchain_note/image-20240205140809591.png\" alt=\"image-20240205140809591\" style=\"zoom: 67%;\" />\n\n50/2290==0.0218150087260035，因此低于这个价格的交易会失败并回滚\n\n<img src=\"img/Patrick Collins_blockchain_note/image-20240205140823024.png\" alt=\"image-20240205140823024\" style=\"zoom:67%;\" />\n\n### 库\n\n库的作用的是可以将一些方法写入指定文件，方便开发时调用它们\n\n新建文件`PriceConverter.sol`\n\n```solidity\n/*\nPriceConverter.sol\n*/\n//SPDX-License-Identifier: MIT\npragma solidity 0.8.7;\nimport \"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\";\nlibrary PriceConverter{\n    function getPrice() internal view returns(uint256){//得到汇率(USD/ETH)\n        //ABIw\n        //Address 0x694AA1769357215DE4FAC081bf1f309aDC325306\n        AggregatorV3Interface priceFeed = AggregatorV3Interface(0x694AA1769357215DE4FAC081bf1f309aDC325306);\n        ( ,int256 answer,,,) = priceFeed.latestRoundData();\n        \n        return uint256(answer*1e10);\n    }\n\n    function getVersion() internal view returns (uint256){//获取了链外数据源的版本信息，并将其作为uint256类型返回\n        AggregatorV3Interface priceFeed = AggregatorV3Interface(0x694AA1769357215DE4FAC081bf1f309aDC325306);\n        return priceFeed.version();\n    }\n    function getConversionRate(uint256 ethAmount) internal view returns (uint256){\n        uint256 ethPrice = getPrice();\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18;\n        return ethAmountInUsd;\n    }\n}\n```\n\n将刚才`Fundme.sol`中的`getPrice() , getVersion() , getConversionRate(uint256 ethAmount)`取出并放入新文件中。\n\n```solidity\n/*\nFundme.sol\n*/\n//EVM,Ethereum Virtual Machine\ncontract FundMe{\n    using PriceConverter for uint256;//会将PriceConverter放到uint256下\n    //注意交易的单位是wei\n    uint256 public minimumUsd = 50;\n    address[] public funders;\n    mapping(address=>uint256) public addressToAccountFunded;\n    function fund() public payable{// 把钱转进合约里\n        //检查msg.value是否大于一定数量的美元,为否时会revert fund()回滚并报错\n        // msg.value == 0.03*1e18\n        require(msg.value.getConversionRate()>= minimumUsd,\"Didn't send enough\");\n        funders.push(msg.sender);\n        addressToAccountFunded[msg.sender]=msg.value;\n    }\n    // function withdraw(){}\n}\n```\n\n`msg.value.getConversionRate()`会自动将`msg.value`作为`getConversionRate()`的第一参数，第二第三参数则依次写入括号内。\n\n### 从合约提取资金\n\n三种提取资金的方式\n\n```solidity\n        //transfer\n        payable(msg.sender).transfer(address(this).balance);\n        //send\n        bool sendSuccess = payable(msg.sender).send(address(this).balance);\n        require(sendSuccess,\"Send failed\");\n        //call\n        (bool callSuccess, )=payable(msg.sender).call{value:address(this).balance}.(\"\")\n        require(callSuccess,\"call failed\");\n```\n\n前两种会受到燃气费的制约，推荐最后一种\n\n```solidity\n/*\n从用户那里拿钱\n把赚来的钱从合约取出来\n*/\n//SPDX-License-Identifier:MIT\npragma solidity 0.8.7;\nimport \"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\";\nimport \"./PriceConverter.sol\";\n//EVM,Ethereum Virtual Machine\ncontract FundMe{\n    using PriceConverter for uint256;\n    //注意交易的单位是wei\n    uint256 public minimumUsd = 50;\n    address public owner;\n    address[] public funders;\n    mapping(address=>uint256) public addressToAccountFunded;\n    constructor(){\n        owner = msg.sender;\n    }\n    function fund() public payable{// 把钱转进合约里\n        //检查msg.value是否大于一定数量的美元,为否时会revert fund()回滚并报错\n        // msg.value == 0.03*1e18\n        require(msg.value.getConversionRate()>= minimumUsd,\"Didn't send enough\");\n        funders.push(msg.sender);\n        addressToAccountFunded[msg.sender]=msg.value;\n    }\n    function withdraw() public onlyOwner{\n        // for(/*start index, ending index, step amount*/)\n        for (uint256 funderIndex = 0;funderIndex < funders.length;funderIndex ++){\n            address funder = funders[funderIndex];\n            addressToAccountFunded[funder] = 0;//清零账户余额\n        }\n        //重置数组\n        funders = new address[](0); //0个初始元素\n        //call\n        (bool callSuccess,)=payable(msg.sender).call{value:address(this).balance}(\"\");\n        require(callSuccess,\"call failed\");\n    }\n    modifier onlyOwner{\n        require(msg.sender == owner,\"Sender is not owner\");\n        _;  \n    }\n}\n```\n\nonlyOwner对withdraw的执行者进行了约束，在withdraw执行前会判断合约发起人喝执行人是否相同，只有执行人才可以使用此方法，否则回滚并报错。\n\n<img src=\"img/Patrick Collins_blockchain_note/image-20240219154857856.png\" alt=\"image-20240219154857856\" style=\"zoom:80%;\" />\n\n<img src=\"img/Patrick Collins_blockchain_note/image-20240219154902367.png\" alt=\"image-20240219154902367\" style=\"zoom: 80%;\" />\n\n### 优化措施\n\n#### 修改require\n\n```solidity\npragma solidity 0.8.7;\nimport \"*******\"\n//EVM,Ethereum Virtual Machine\nerror NotOwner();\ncontract FundMe{\n    ***********\n    function fund() public payable{// 把钱转进合约里\n        ***********\n    }\n    function withdraw() public onlyOwner{\n\t\t***********\n    }\n    modifier onlyOwner{\n        // require(msg.sender == i_owner,\"Sender is not owner\");\n        if(msg.sender == i_owner){revert NotOwner();}\n        _;  \n    }\n}\n```\n\n使用require会单独保存`Sender is not owner`，相比`error`会增加`gas`\n\n### recieve和fallback\n\n<img src=\"img/Patrick Collins_blockchain_note/image-20240220135504952.png\" alt=\"image-20240220135504952\" style=\"zoom:80%;\" />\n\n```solidity\n//SPDX-License-Identifier:MIT\npragma solidity 0.8.7;\n\ncontract FallbackExample{\n    uint256 public result;\n\n    receive() external payable {\n        result = 1;\n    }\n\n    fallback() external payable { \n        result = 2;\n    }\n}\n```\n\n## Javascript异步编程\n\n关键字`async`，`await`\n\n只有标注了`async`了的方法中才能使用`await`关键词\n\n```js\nasync function main() {\n  await console.log(\"hi\");\n  let variable = 5;\n  console.log(variable);\n}\nmain()\n  .then(() => process.exit(0))\n  .catch((error) => {\n    console.log(error);\n  });\n```\n\n## 将私密数据保存到环境变量中\n\n创建.env文件\n\n```env\nPRIVATE_KEY=0xE9f22C0cB28f58a74574d88679B4A3F933e3d51cyarn\n```\n\n引包，使用\n\n```js\nrequire(\"dotenv\").config(); // 调用 config 方法加载环境变量 \nconsole.log(process.env.PRIVATE_KEY);\n```\n\n## 进阶：私钥管理\n\n资料来源 P57\n\n## HardHat\n\n### 配置项目\n\n1）准备一个空文件夹，终端`yarn add --dev hardhat`\n\n2）`yarn hardhat`\n\n<img src=\"img/Patrick Collins_blockchain_note/image-20240225225217144.png\" alt=\"image-20240225225217144\"  />\n\n3）检查solidity版本\n\n<img src=\"img/Patrick Collins_blockchain_note/image-20240225231333402.png\" alt=\"image-20240225231333402\"  />\n\n4）编译，`yarn hardhat compile`\n\n5）`yarn add --dev hardhat-deploy`用于简化和管理以太坊智能合约的部署过程\n\n6）删除`deploy.js`, 在`hardhat.config.js`中写入`require(\"hardhat-deploy\");`之后执行`yarn hardhat`，在新`task`中应有`deploy`\n\n7）建立deploy文件夹，之后的编译脚本就写在这里面\n\n<img src=\"img/Patrick Collins_blockchain_note/image-20240225234449556.png\" alt=\"image-20240225234449556\"  />\n\n8）编写脚本，并编译`yarn hardhat deploy`\n\n```js\n//01-deploy-fund-me.js\n//引包，import\n//方法定义\n//方法使用\nfunction deployFunc() {\n    console.log(\"hi\")\n}\nmodule.exports.default = deployFunc //将deplyFunc设置为默认要找的函数\n\n```\n\n```terminal\nPS D:\\study_test\\Hardhat\\hardhat-fund-me-fcc> yarn hardhat deploy\nyarn run v1.22.21\n$ D:\\study_test\\Hardhat\\hardhat-fund-me-fcc\\node_modules\\.bin\\hardhat deploy\nCompiled 3 Solidity files successfully (evm target: london).\nhi\nDone in 3.12s.\n```\n\n使用`yarn add --dev @chainlink/contracts@0.8.0`下载chainlink预言机中的合约\n\n### Hardhat部署智能合约\n\n#### 关于node.js的脚本的接口开放和使用\n\n这是一个TIP：\n\n```js\n// helper-hardhat-config.js\nconst networkConfig = {\n    11155111: {\n        name: \"Sepolia\",\n        ethUsdPriceFeed: \"0x694AA1769357215DE4FAC081bf1f309aDC325306\",\n    },\n    5: {\n        name: \"Goerli\",\n        ethUsdPriceFeed: \"0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e\",\n    },\n}\nmodule.exports = {//开放对其他脚本使用的接口\n    networkConfig,\n}\n```\n\n```js\n//01-deploy-fund-me.js\n//使用刚才的接口\n//helpconfig代表了helper-hardhat-config.js这个文件\nconst helperconfig = require(\"../helper-hardhat-config.js\")\nconst networkconfig = helperconfig.networkConfig\n```\n\n当然也可以这么写\n\n```js\nconst { networkconfig } = require(\"../helper-hardhat-config.js\")\n```\n\n#### 本地/测试网络部署\n\n如果我们没有使用任何测试网\n\n我们需要写一个`Mock`脚本，即如果某个合约不存在，我们就部署一个最小化的版本来进行我们的本地测试，\n\n**hardhat-config.js**\n\n```js\nrequire(\"@nomicfoundation/hardhat-toolbox\");\nrequire(\"hardhat-deploy\");\nrequire(\"dotenv\").config();\n\n/** @type import('hardhat/config').HardhatUserConfig */\n\n// const COINMARKETCAP_API_KEY = process.env.COINMARKETCAP_API_KEY;\nconst SEPOLIA_RPC_URL = process.env.SEPOLIA_RPC_URL;\nconst PRIVATE_KEY = process.env.PRIVATE_KEY;\nconst ETHERSCAN_API_KEY = process.env.ETHERSCAN_API_KEY;\n\nmodule.exports = {\n  solidity: {\n    compilers: [\n      {\n        version: \"0.8.7\",\n      },\n      {\n        version: \"0.6.6\",\n      },\n    ],\n  },\n  defaultNetwork: \"hardhat\",\n  networks: {\n    hardhat: {\n      chainId: 31337,\n      // gasPrice: 130000000000,\n    },\n    sepolia: {\n      url: SEPOLIA_RPC_URL,\n      accounts: [PRIVATE_KEY],\n      chainId: 11155111,\n      blockConfirmations: 6,\n    },\n  },\n  gasReporter: {\n    enabled: true,\n    currency: \"USD\",\n    outputFile: \"gas-report.txt\",\n    noColors: true,\n    // coinmarketcap: COINMARKETCAP_API_KEY,\n  },\n  etherscan: {\n    apiKey: ETHERSCAN_API_KEY,\n  },\n  namedAccounts: {\n    deployer: {\n      default: 0, // here this will by default take the first account as deployer\n      1: 0, // similarly on mainnet it will take the first account as deployer. Note though that depending on how hardhat network are configured, the account 0 on one network can be different than on another\n    },\n  },\n  mocha: {\n    timeout: 500000,\n  },\n};\n\n```\n\n**helper-hardhat-config.js**\n\n```js\n// helper-hardhat-config.js\nconst networkConfig = {\n  31337: {\n    name: \"localhost\",\n  },\n  // Price Feed Address, values can be obtained at https://docs.chain.link/data-feeds/price-feeds/addresses\n  11155111: {\n    name: \"sepolia\",\n    ethUsdPriceFeed: \"0x694AA1769357215DE4FAC081bf1f309aDC325306\",\n  },\n};\n\nconst developmentChains = [\"hardhat\", \"localhost\"];\n\nmodule.exports = {\n  networkConfig,\n  developmentChains,\n};\n\n```\n\n\n\n**MockV3Aggregator.sol**\n\n```solidity\n//MockV3Aggregator.sol\n//SPDX-License-Identifier:MIT\npragma solidity ^0.6.0;\n\nimport \"@chainlink/contracts/src/v0.6/tests/MockV3Aggregator.sol\";\n```\n\n**00-deploy-mocks.js**\n\n//用以部署到本地网络（快）\n\n```solidity\n//00-deploy-mocks.js\n//这段是部署本地预言机\nconst { network } = require(\"hardhat\");\n\nconst DECIMALS = \"8\";\nconst INITIAL_PRICE = \"200000000000\"; // 2000\n\nmodule.exports = async ({ getNamedAccounts, deployments }) => {\n  const { deploy, log } = deployments;\n  const { deployer } = await getNamedAccounts();\n  const chainId = network.config.chainId;\n  log(network.name);\n  if (chainId == 31337) {\n    log(\"Local network detected!Deploying mocks...\");\n    await deploy(\"MockV3Aggregator\", {\n      contract: \"MockV3Aggregator\",\n      from: deployer,\n      log: true,\n      args: [DECIMALS, INITIAL_PRICE],\n    });\n    log(\"Mocks deployed!\");\n    log(\"--------------------------------------------------------\");\n  }\n};\n// 这段代码指定了当前部署脚本相关的标签。在这里，使用了两个标签：\"all\" 和 \"mocks\"。\n// \"all\" 标签： 这个标签可能用于将部署脚本与整个项目的所有部署任务关联起来。\n// 当运行 npx hardhat deploy --tags all 时，将运行所有带有 \"all\" 标签的部署任务。\n// \"mocks\" 标签： 这个标签可能用于将部署脚本与与模拟合约相关的其他部署任务关联起来。\n// 当运行 npx hardhat deploy --tags mocks 时，将运行所有带有 \"mocks\" 标签的部署任务。\n//yarn hardhat deploy --tags mocks\nmodule.exports.tags = [\"all\", \"mocks\"];\n```\n\n使用`yarn hardhat deploy --tags mocks`可以精准执行`00-deploy-mocks.js`\n\n也可以对当前`chainId`加以判断，使其能够自动判断部署在哪条链上\n\n**01-deploy-fund-me.js**\n\n//用以部署到测试网络（慢）\n\n```solidity\n//01-deploy-fund-me.js\n//helpconfig代表了helper-hardhat-config.js这个文件\n// const helperconfig = require(\"../helper-hardhat-config.js\")\n// const networkconfig = helperconfig.networkConfig\n//node.js的快捷写法，写法等同于上方的\nconst {\n  networkConfig,\n  developmentChains,\n} = require(\"../helper-hardhat-config.js\");\nconst { network } = require(\"hardhat\");\nconst { verify } = require(\"../utils/verify.js\");\n//async function deployFunc(hre) {\n//     hre.getNameAccounts()\n//     hre.deployments\n// }\n// module.exports.default = deployFunc //将deplyFunc设置为默认要找的函数\n\n//hre代表hardhat运行环境\n//写法等同于上方的\n// module.exports = async (hre) => {\n//     const {getNameAccounts,deployments} = hre\n// }\n//node.js的语法糖，写法等同于上方的\nmodule.exports = async ({ getNamedAccounts, deployments }) => {\n  //将deploy和log从deployments这个对象中提取出来，等同于\n  //const deploy = deployments.deploy;\n  //const log = deployments.log\n  const { deploy, log } = deployments;\n  //getNameAccounts() 返回一个包含 deployer 属性的对象，等同于\n  //const getNameAccountsResult = await getNameAccounts();\n  //const deployer = getNameAccountsResult.deployer;\n  log(\"Deploy Fundme...\");\n  const { deployer } = await getNamedAccounts();\n  const chainId = network.config.chainId;\n\n  //---------------确认预言机地址-----------------\n  if (developmentChains.includes(network.name)) {\n    const ethUsdAggregator = await deployments.get(\"MockV3Aggregator\");\n    ethUsdPriceFeedAddress = ethUsdAggregator.address;\n  } else {\n    // ethUsdPriceFeedAddress的格式：0x694AA1769357215DE4FAC081bf1f309aDC325306\n    ethUsdPriceFeedAddress = networkConfig[chainId][\"ethUsdPriceFeed\"];\n  }\n\n  // log(ethUsdPriceFeedAddress);\n  //-----------------deploy-----------------------\n  const args = [ethUsdPriceFeedAddress];\n  const Fundme = await deploy(\"Fundme\", {\n    from: deployer,\n    args: args, //喂价地址\n    log: true,\n    waitConfirmation: network.config.blockConfirmations || 1,\n  });\n  //-------------------verify-----------------------\n  //当合约部署网络与指定的不符时会进行检查\n  if (\n    !developmentChains.includes(network.name) &&\n    process.env.ETHERSCAN_API_KEY\n  ) {\n    //verify\n    await verify(Fundme.address, args);\n  }\n  log(\"--------------------------------------------------------\");\n};\n\nmodule.exports.tags = [\"all\", \"fundme\"];\n```\n\n输入`yarn hardhat deploy --network sepolia`或者`yarn hardhat deploy --network hardhat`，会识别到`network.name`的值并部署`Fundme`合约到**具体的网络**中，同时使用`MockV3Aggregator.sol`或者 `ethUsdPriceFeed: \"0x694AA1769357215DE4FAC081bf1f309aDC325306\"`作为喂价合约\n\n`utils`文件夹，用于验证合约的合法性和安全性\n\n**verify.js**\n\n```js\n//verify.js\nconst { run } = require(\"hardhat\");\nconst verify = async (contractAddress, args) => {\n  console.log(\"Verifying Contract...\");\n  try {\n    await run(\"verify:verify\", {\n      address: contractAddress,\n      constructorArguments: args,\n    });\n  } catch (e) {\n    if (e.message.toLowerCase().includes(\"already verified\")) {\n      console.log(\"Already Verified!\");\n    } else {\n      console.log(e);\n    }\n  }\n};\nmodule.exports = { verify };\n\n```\n\n效果如下：\n\n（1）部署到本地网络\n\n```terminal\nPS D:\\study_test\\Hardhat\\Harhat-Fundme> yarn hardhat deploy --network hardhat\nyarn run v1.22.21\nwarning package.json: No license field\n$ D:\\study_test\\Hardhat\\Harhat-Fundme\\node_modules\\.bin\\hardhat deploy --network hardhat\nhttps://eth-sepolia.api.onfinality.io/public\nNothing to compile\nLocal network detected!Deploying mocks...\ndeploying \"MockV3Aggregator\" (tx: 0x3d732abdeda8235691578f5eae48ec57c18e6860c18196ab7b211ca8f74dce2b)...: deployed at 0x5FbDB2315678afecb367f032d93F642f64180aa3 with 569759 gas\nMocks deployed!\n--------------------------------------------------------\nDeploy Fundme...\ndeploying \"Fundme\" (tx: 0x9275acdb459bd3d25e3dbf786faa9a18efb9edf2bcaa93cf56f4a7dc5b97b1e8)...: deployed at 0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512 with 846785 gas\n--------------------------------------------------------\nDone in 2.94s.\n```\n\n（2）部署到测试网络\n\n```terminal\n$ D:\\study_test\\Hardhat\\Harhat-Fundme\\node_modules\\.bin\\hardhat deploy --network sepolia\nhttps://eth-sepolia.api.onfinality.io/public\nNothing to compile\nDeploy Fundme...\ndeploying \"Fundme\" (tx: 0x8c2e8759b86f8076702ed50b0abaa5d082ed8ac47589f380f367e2b62aeefc3d)...: deployed at 0x58962eaA9001b9C3F1Eb908Ac1347213b2D39A5D with 846785 gas\nVerifying Contract...\nUnexpectedError: An unexpected error occurred during the verification process.\nPlease report this issue to the Hardhat team.\nError Details: Connect Timeout Error\n    at Etherscan.isVerified (D:\\study_test\\Hardhat\\Harhat-Fundme\\node_modules\\@nomicfoundation\\hardhat-verify\\src\\internal\\etherscan.ts:126:13)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at SimpleTaskDefinition.action (D:\\study_test\\Hardhat\\Harhat-Fundme\\node_modules\\@nomicfoundation\\hardhat-verify\\src\\internal\\tasks\\etherscan.ts:101:24)\n    at Environment._runTaskDefinition (D:\\study_test\\Hardhat\\Harhat-Fundme\\node_modules\\hardhat\\src\\internal\\core\\runtime-environment.ts:358:14)\n    at Environment.run (D:\\study_test\\Hardhat\\Harhat-Fundme\\node_modules\\hardhat\\src\\internal\\core\\runtime-environment.ts:191:14)        \n    at SimpleTaskDefinition.action (D:\\study_test\\Hardhat\\Harhat-Fundme\\node_modules\\@nomicfoundation\\hardhat-verify\\src\\index.ts:284:9) \n    at Environment._runTaskDefinition (D:\\study_test\\Hardhat\\Harhat-Fundme\\node_modules\\hardhat\\src\\internal\\core\\runtime-environment.ts:358:14)\n    at Environment.run (D:\\study_test\\Hardhat\\Harhat-Fundme\\node_modules\\hardhat\\src\\internal\\core\\runtime-environment.ts:191:14)        \n    at verify (D:\\study_test\\Hardhat\\Harhat-Fundme\\utils\\verify.js:6:5)\n    at Object.module.exports [as func] (D:\\study_test\\Hardhat\\Harhat-Fundme\\deploy\\01-deploy-fund-me.js:64:5)\n--------------------------------------------------------\nDone in 84.60s.\n```\n\n合约`0x8c2e8759b86f8076702ed50b0abaa5d082ed8ac47589f380f367e2b62aeefc3d`\n\n被部署在以太坊地址`0x58962eaA9001b9C3F1Eb908Ac1347213b2D39A5D`\n\n<img src=\"img/Patrick Collins_blockchain_note/image-20240305002127313.png\" alt=\"image-20240305002127313\" style=\"zoom:67%;\" />\n\n#### 编写脚本注入资金\n\nP.S 在本地Hardhat环境中运行\n\n```js\n//fund.js\nconst { ethers, getNamedAccounts } = require(\"hardhat\");\n\nasync function main() {\n  const { deployer } = await getNamedAccounts();\n  console.log(`Deployer address: ${deployer}`);\n  const fundme = await ethers.getContractAt(\"Fundme\", deployer);\n  // console.log(`Got contract Fundme at ${fundme.address}`);\n  console.log(\"Funding contract...\");\n  const transactionResponse = await fundme.fund({\n    value: ethers.parseEther(\"0.1\"),\n  });\n  await transactionResponse.wait(1);\n  console.log(\"Funded!\");\n  const balance = await ethers.provider.getBalance(deployer);\n  console.log(balance);\n}\n\nmain()\n  .then(() => process.exit(0))\n  .catch((error) => {\n    console.error(error);\n    process.exit(1);\n  });\n```\n\n效果：\n\n```terminal\nPS D:\\study_test\\Hardhat\\Harhat-Fundme> yarn hardhat run scripts/fund.js --network hardhat\nyarn run v1.22.21\nwarning package.json: No license field\n$ D:\\study_test\\Hardhat\\Harhat-Fundme\\node_modules\\.bin\\hardhat run scripts/fund.js --network hardhat\nDeployer address: 0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\nFunding contract...\nFunded!\n9999999960505000000000n\nDone in 5.54s.\n```\n\n#### 编写脚本提取资金\n\nP.S 在本地Hardhat环境中运行\n\n```js\n//withdraw.js\nconst { ethers, getNamedAccounts } = require(\"hardhat\");\n\nasync function main() {\n  const { deployer } = await getNamedAccounts();\n  console.log(`Deployer address: ${deployer}`);\n  const fundme = await ethers.getContractAt(\"Fundme\", deployer);\n  // console.log(`Got contract Fundme at ${fundme.address}`);\n  console.log(\"Funding contract...\");\n  const transactionResponse = await fundme.withdraw();\n  await transactionResponse.wait(1);\n  console.log(\"Got it back!\");\n  const balance = await ethers.provider.getBalance(deployer);\n  console.log(balance);\n}\n\nmain()\n  .then(() => process.exit(0))\n  .catch((error) => {\n    console.error(error);\n    process.exit(1);\n  });\n\n```\n\n\n\n## HTML连接到Metamask \n\n```js\n<body>\n    that is good\n    <button onclick=\" connect()\">Connect</button>\n</body>\n<script>\nasync function connect(){\n    if (typeof window.ethereum !==\"undefined\"){\n        await window.ethereum.request({method:\"eth_requestAccounts\"})\n        document.getElementById(\"connectBUtton\").innerHTML=\"Connected!\" //将按钮中文字改为Connected\n    }else{\n        console.log(\"No metamask!\")\n    }\n}\n</script>\n```\n\n也可以\n\n```js\n<!-- index.html -->\n<body>\n    that is good\n    <button id =\"connectButton\" onclick=\" connect()\">Connect</button>\n</body>\n<script src=\"./index.js\" type=\"text/javascript\"></script>\n```\n\n```js\n// index.js\nasync function connect() {\n    if (typeof window.ethereum !== \"undefined\") {\n        await window.ethereum.request({ method: \"eth_requestAccounts\" })\n        document.getElementById(\"connectButton\").innerHTML = \"Connected!\"\n    } else {\n        console.log(\"No metamask!\")\n    }\n}\n```\n\n## HTML结合js实现web端交易\n\n[使用Ethers.js代码库发送交易和部署合约 | Moonbeam Docs](https://docs.moonbeam.network/cn/builders/build/eth-api/libraries/ethersjs/)\n","slug":"Patrick Collins_blockchain_note","published":1,"updated":"2024-08-24T06:09:11.014Z","comments":1,"layout":"post","photos":[],"_id":"cm0b0qx7c0007jwurbyp9dq2b","content":"<h2 id=\"工具包\"><a href=\"#工具包\" class=\"headerlink\" title=\"工具包\"></a>工具包</h2><p>课程链接：【（32 小时最全课程）区块链，智能合约 &amp; 全栈 Web3 开发】 <a class=\"link\" href=\"https://www.bilibili.com/video/BV1Ca411n7ta\">https://www.bilibili.com/video/BV1Ca411n7ta <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a></p>\n<p>原视频链接（生肉）：<a class=\"link\" href=\"https://www.youtube.com/watch?v=gyMwXuJrbJQ\">https://www.youtube.com/watch?v=gyMwXuJrbJQ <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a></p>\n<p>课程Repo链接：<a class=\"link\" href=\"https://github.com/smartcontractkit/full-blockchain-solidity-course-js\">https://github.com/smartcontractkit/full-blockchain-solidity-course-js <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a></p>\n<p>Remix网址：<a class=\"link\" href=\"https://remix.ethereum.org/\">https://remix.ethereum.org/ <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a></p>\n<p>测试币水龙头：<a class=\"link\" href=\"https://faucets.chain.link/\">https://faucets.chain.link <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a></p>\n<p>Sepolia区块链浏览器：<a class=\"link\" href=\"https://sepolia.etherscan.io/\">https://sepolia.etherscan.io/ <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a></p>\n<p>Chainlink官方文档：<a class=\"link\" href=\"https://docs.chain.link/\">https://docs.chain.link <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a></p>\n<p>以太坊货币换算：<a class=\"link\" href=\"https://eth-converter.com/\">https://eth-converter.com/ <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a></p>\n<p>AggregatorV3Interface接口源码：<a class=\"link\" href=\"https://github.com/smartcontractkit/chainlink/blob/develop/contracts/src/v0.6/interfaces/AggregatorV3Interface.sol\">https://github.com/smartcontractkit/chainlink/blob/develop/contracts/src/v0.6/interfaces/AggregatorV3Interface.sol <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a></p>\n<p>Solidity 使用文档：<a class=\"link\" href=\"https://solidity-by-example.org/\">https://solidity-by-example.org <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a></p>\n<h2 id=\"智能合约\"><a href=\"#智能合约\" class=\"headerlink\" title=\"智能合约\"></a>智能合约</h2><p>智能合约是约定多个参与方的一些列指令。不同的是，传统合同是写在纸上的，而智能合约是代码写的，并且嵌入到一个去中心化区块链平台，在这个去中心化区块链平台中被执行；</p>\n<p>将链上去中心化逻辑和链下去中心化数据和计算相结合，这个东西就叫做混合型智能合约。</p>\n<p>混合智能合约会用到<code>Chainlink</code>。这是一个组件化，去中心化的预言机网络；不仅可以为智能合约提供外部数据，还可以提供链下计算。本课程和笔记都将基于这个进行开展。</p>\n<blockquote>\n<p>from Chatgpt : 预言机网络（Oracle network）是一种基于区块链技术的系统，它的主要目标是将现实世界的数据引入区块链中，从而使智能合约能够访问并使用这些数据。智能合约通常无法直接获取外部数据，因为它们在区块链内部运行，并且无法直接连接到外部世界的数据源。预言机网络解决了这个问题，允许区块链与外部数据进行交互。</p>\n</blockquote>\n<h3 id=\"应用\"><a href=\"#应用\" class=\"headerlink\" title=\"应用\"></a>应用</h3><p>不容易被机构欺骗，通过智能合约可以亲身进入这个行业，所有记录都是公开，透明且不可篡改的。</p>\n<h2 id=\"第一笔交易\"><a href=\"#第一笔交易\" class=\"headerlink\" title=\"第一笔交易\"></a>第一笔交易</h2><p>在chrome浏览器中安装插件METAMASK，注册一个账户并开通两个钱包，分别叫Account 1和 Account 2</p>\n<p>因为是学习与测试用的钱包，所以哈希地址就不打码了（反正里面也没钱）</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"img/Patrick Collins_blockchain_note/image-20240109233040953.png\" alt=\"image-20240109233040953\" style=\"zoom:80%;\">\n\n<p>连接测试网络 Sepolia：</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"img/Patrick Collins_blockchain_note/image-20240109233120241.png\" alt=\"image-20240109233120241\" style=\"zoom:80%;\">\n\n<p>前往测试网络的水龙头，获取测试币<a class=\"link\" href=\"https://faucets.chain.link/\">https://faucets.chain.link <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a></p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"img/Patrick Collins_blockchain_note/image-20240110144901761.png\" alt=\"image-20240110144901761\" style=\"zoom: 67%;\">\n\n<p>在METAMASK中也能看到已经获取到了测试币</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"img/Patrick Collins_blockchain_note/image-20240110145343247.png\" alt=\"image-20240110145343247\" style=\"zoom:50%;\">\n\n<p>在<a class=\"link\" href=\"https://sepolia.etherscan.io/%E4%B8%AD%E4%B9%9F%E5%8F%AF%E4%BB%A5%E6%9F%A5%E8%AF%A2%E5%88%B0%E5%AF%B9%E5%BA%94%E7%9A%84%E4%BA%A4%E6%98%93\">https://sepolia.etherscan.io/中也可以查询到对应的交易 <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a></p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"img/Patrick Collins_blockchain_note/image-20240112093457519.png\" alt=\"image-20240112093457519\">\n\n<p>对于上图，交易手续费价格计算：<br><mjx-container class=\"MathJax\" jax=\"SVG\" display=\"true\"><svg style=\"vertical-align: -0.566ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"90.166ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 39853.2 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D447\" d=\"M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(704,0)\"><path data-c=\"1D45F\" d=\"M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1155,0)\"><path data-c=\"1D44E\" d=\"M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1684,0)\"><path data-c=\"1D45B\" d=\"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(2284,0)\"><path data-c=\"1D460\" d=\"M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(2753,0)\"><path data-c=\"1D44E\" d=\"M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(3282,0)\"><path data-c=\"1D450\" d=\"M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(3715,0)\"><path data-c=\"1D461\" d=\"M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(4076,0)\"><path data-c=\"1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(4421,0)\"><path data-c=\"1D45C\" d=\"M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(4906,0)\"><path data-c=\"1D45B\" d=\"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(5506,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(5895,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">交</text></g><g data-mml-node=\"mi\" transform=\"translate(6895,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">易</text></g><g data-mml-node=\"mi\" transform=\"translate(7895,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">手</text></g><g data-mml-node=\"mi\" transform=\"translate(8895,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">续</text></g><g data-mml-node=\"mi\" transform=\"translate(9895,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">费</text></g><g data-mml-node=\"mo\" transform=\"translate(10895,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(11561.8,0)\"><path data-c=\"3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(12617.6,0)\"><path data-c=\"1D43A\" d=\"M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q492 659 471 656T418 643T357 615T294 567T236 496T189 394T158 260Q156 242 156 221Q156 173 170 136T206 79T256 45T308 28T353 24Q407 24 452 47T514 106Q517 114 529 161T541 214Q541 222 528 224T468 227H431Q425 233 425 235T427 254Q431 267 437 273H454Q494 271 594 271Q634 271 659 271T695 272T707 272Q721 272 721 263Q721 261 719 249Q714 230 709 228Q706 227 694 227Q674 227 653 224Q646 221 643 215T629 164Q620 131 614 108Q589 6 586 3Q584 1 581 1Q571 1 553 21T530 52Q530 53 528 52T522 47Q448 -22 322 -22Q201 -22 126 55T50 252Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(13403.6,0)\"><path data-c=\"1D44E\" d=\"M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(13932.6,0)\"><path data-c=\"1D460\" d=\"M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(14401.6,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(14846.2,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(15290.9,0)\"><path data-c=\"1D443\" d=\"M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(16041.9,0)\"><path data-c=\"1D45F\" d=\"M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(16492.9,0)\"><path data-c=\"1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(16837.9,0)\"><path data-c=\"1D450\" d=\"M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(17270.9,0)\"><path data-c=\"1D452\" d=\"M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(17736.9,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(18125.9,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">燃</text></g><g data-mml-node=\"mi\" transform=\"translate(19125.9,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">气</text></g><g data-mml-node=\"mi\" transform=\"translate(20125.9,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">价</text></g><g data-mml-node=\"mi\" transform=\"translate(21125.9,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">格</text></g><g data-mml-node=\"mo\" transform=\"translate(22125.9,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(22514.9,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(22959.6,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(23404.2,0)\"><path data-c=\"2217\" d=\"M229 286Q216 420 216 436Q216 454 240 464Q241 464 245 464T251 465Q263 464 273 456T283 436Q283 419 277 356T270 286L328 328Q384 369 389 372T399 375Q412 375 423 365T435 338Q435 325 425 315Q420 312 357 282T289 250L355 219L425 184Q434 175 434 161Q434 146 425 136T401 125Q393 125 383 131T328 171L270 213Q283 79 283 63Q283 53 276 44T250 35Q231 35 224 44T216 63Q216 80 222 143T229 213L171 171Q115 130 110 127Q106 124 100 124Q87 124 76 134T64 161Q64 166 64 169T67 175T72 181T81 188T94 195T113 204T138 215T170 230T210 250L74 315Q65 324 65 338Q65 353 74 363T98 374Q106 374 116 368T171 328L229 286Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(23904.2,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(24348.9,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(24793.6,0)\"><path data-c=\"1D448\" d=\"M107 637Q73 637 71 641Q70 643 70 649Q70 673 81 682Q83 683 98 683Q139 681 234 681Q268 681 297 681T342 682T362 682Q378 682 378 672Q378 670 376 658Q371 641 366 638H364Q362 638 359 638T352 638T343 637T334 637Q295 636 284 634T266 623Q265 621 238 518T184 302T154 169Q152 155 152 140Q152 86 183 55T269 24Q336 24 403 69T501 205L552 406Q599 598 599 606Q599 633 535 637Q511 637 511 648Q511 650 513 660Q517 676 519 679T529 683Q532 683 561 682T645 680Q696 680 723 681T752 682Q767 682 767 672Q767 650 759 642Q756 637 737 637Q666 633 648 597Q646 592 598 404Q557 235 548 205Q515 105 433 42T263 -22Q171 -22 116 34T60 167V183Q60 201 115 421Q164 622 164 628Q164 635 107 637Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(25560.6,0)\"><path data-c=\"1D460\" d=\"M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(26029.6,0)\"><path data-c=\"1D44E\" d=\"M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(26558.6,0)\"><path data-c=\"1D454\" d=\"M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(27035.6,0)\"><path data-c=\"1D452\" d=\"M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(27501.6,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(27946.2,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(28390.9,0)\"><path data-c=\"1D44F\" d=\"M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(28819.9,0)\"><path data-c=\"1D466\" d=\"M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(29309.9,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(29754.6,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(30199.2,0)\"><path data-c=\"1D447\" d=\"M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(30903.2,0)\"><path data-c=\"1D465\" d=\"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(31475.2,0)\"><path data-c=\"1D45B\" d=\"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(32075.2,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(32464.2,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">使</text></g><g data-mml-node=\"mi\" transform=\"translate(33464.2,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">用</text></g><g data-mml-node=\"mi\" transform=\"translate(34464.2,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">了</text></g><g data-mml-node=\"mi\" transform=\"translate(35464.2,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">的</text></g><g data-mml-node=\"mi\" transform=\"translate(36464.2,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">燃</text></g><g data-mml-node=\"mi\" transform=\"translate(37464.2,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">气</text></g><g data-mml-node=\"mi\" transform=\"translate(38464.2,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">量</text></g><g data-mml-node=\"mo\" transform=\"translate(39464.2,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container><br>有Account 1 向 Account 2 发送 0.05个测试币</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"img/Patrick Collins_blockchain_note/image-20240112094858855.png\" alt=\"image-20240112094858855\">\n\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"img/Patrick Collins_blockchain_note/image-20240112095159024.png\" alt=\"image-20240112095159024\" style=\"zoom:50%;\">\n\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"img/Patrick Collins_blockchain_note/image-20240112095206377.png\" alt=\"image-20240112095206377\" style=\"zoom:50%;\">\n\n<center><b>OKay，恭喜你已经完整地完成了一笔交易！</b></center>\n\n\n\n<h2 id=\"概念知识快速总结\"><a href=\"#概念知识快速总结\" class=\"headerlink\" title=\"概念知识快速总结\"></a>概念知识快速总结</h2><p><em>// P.S说到底，这份笔记更多是为了记载实战方面的，因此，关于概念的概括一下就过了</em></p>\n<h3 id=\"权益机制\"><a href=\"#权益机制\" class=\"headerlink\" title=\"权益机制\"></a>权益机制</h3><p>比特币和前期的以太坊使用的是工作量证明机制（具体见”北京大学肖臻老师《区块链技术与应用》公开课 笔记.md”），而在以太坊2.0中，改为了权益机制；</p>\n<p>不同于工作量的证明，在权益机制中，参与区块创建以及验证的叫验证者，而成为验证者需要抵押一定数量的以太币用来确保不会恶意发布交易区块；之后系统会根据算法选举出是哪一个验证者来负责创建新的区块（算法在未来可能更新换代，作为开发者没什么必要学习），在其他验证者验证这个区块交易的真实性以及有效性之后会给予他奖励，如果出现不正当行为，可能会被踢出验证者甚至失去那部分抵押的比特币；</p>\n<p>以太坊 2.0 的权益机制还包括社区治理，即验证者可以参与提案和投票，对网络的升级和改变提出建议，并共同决定网络的发展方向。</p>\n<p>关于验证者退出：验证者可以随时退出，但是抵押的以太币不会立刻归还，这是为了防止恶意进出的问题</p>\n<h3 id=\"关于攻击\"><a href=\"#关于攻击\" class=\"headerlink\" title=\"关于攻击\"></a>关于攻击</h3><p>区块链攻击主要分为女巫攻击以及51%攻击</p>\n<p>在权益证明机制中，由于成为验证者需要支付一定量的以太币，并且存在验证这一环节，导致试图创建假帐号影响区块链这一行为需要付出高额成本，这可以很好地预防女巫攻击。</p>\n<p>关于51%攻击，当其掌握足够多的算力，直接创造一条区块链，长度比中心链的一半还要长，那么就可以影响中心链到它之上运行，但是随着区块链不断使用，中心链不断加长，51%攻击所需要的算力也在不断提高，直至近乎不可能做到。</p>\n<h2 id=\"Solidity-Remix\"><a href=\"#Solidity-Remix\" class=\"headerlink\" title=\"Solidity(Remix)\"></a>Solidity(Remix)</h2><p>网站地址：<a class=\"link\" href=\"https://remix.ethereum.org/\">https://remix.ethereum.org/ <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a></p>\n<p>一个集成开发环境，编写和交互智能合约的地方</p>\n<h3 id=\"第一个智能合约\"><a href=\"#第一个智能合约\" class=\"headerlink\" title=\"第一个智能合约\"></a>第一个智能合约</h3><p>新建一个sol文件，输入以下内容</p>\n<div class=\"highlight-container\" data-rel=\"Plaintext\"><figure class=\"iseeu highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//SPDX-License-Identifier: MIT</span><br><span class=\"line\">//因为solidity更新频率极高，我们需要在文件开头告诉代码，solidity的版本</span><br><span class=\"line\">pragma solidity 0.8.7;</span><br><span class=\"line\"></span><br><span class=\"line\">//关键字，告诉接下来是定义智能合约的内容</span><br><span class=\"line\">contract SimpleStorage{</span><br><span class=\"line\">    //↓这个初始化默认是0</span><br><span class=\"line\">    uint256 favNum;</span><br><span class=\"line\">    function store(uint256 _favNum) public{</span><br><span class=\"line\">        favNum = _favNum;</span><br><span class=\"line\">    } </span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure></div>\n\n<p>如果想定义其他类型的数据变量：</p>\n<div class=\"highlight-container\" data-rel=\"Plaintext\"><figure class=\"iseeu highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">bool judge = true;</span><br><span class=\"line\">//↓这个初始化默认是0,256代表分配空间，不写的话默认是256</span><br><span class=\"line\">uint256 favNum;</span><br><span class=\"line\">string word = \"helloworld\";</span><br><span class=\"line\">int256 num2= 1018;</span><br><span class=\"line\">address myadress = 0xE9f22C0cB28f58a74574d88679B4A3F933e3d51c;</span><br><span class=\"line\">//byte最大为32</span><br><span class=\"line\">bytes32 A = \"good\";</span><br></pre></td></tr></table></figure></div>\n\n<p>在虚拟环境部署合约：</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"img/Patrick Collins_blockchain_note/image-20240123155705037.png\" alt=\"image-20240123155705037\">\n\n<p>使用合约中的方法，修改区块中的数据，相当于发布一条“交易”</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"img/Patrick Collins_blockchain_note/image-20240123155823210.png\" alt=\"image-20240123155823210\" style=\"zoom:67%;\">\n\n<p>观察到交易成功，且产生燃气费</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"img/Patrick Collins_blockchain_note/image-20240123155927054.png\" alt=\"image-20240123155927054\" style=\"zoom:67%;\">\n\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"img/Patrick Collins_blockchain_note/image-20240123155959166.png\" alt=\"image-20240123155959166\" style=\"zoom:67%;\">\n\n<p>在此基础上更进一步</p>\n<div class=\"highlight-container\" data-rel=\"Plaintext\"><figure class=\"iseeu highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> //view,pure</span><br><span class=\"line\">function retrieve() public view returns (uint256){</span><br><span class=\"line\">    return favNum;</span><br><span class=\"line\">}</span><br><span class=\"line\">function add() public pure returns (uint256){</span><br><span class=\"line\">    return (1+1);</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure></div>\n\n<p><code>view</code>：<code>solidity</code>得一个关键字，代表了这个函数只会读取合约的状态，因而不会产生燃气费；</p>\n<p><code>pure</code>：<code>solidity</code>得一个关键字，代表了这个函数既不会修改合约状态也读取不了合约状态，通常会做一些常用算法或者是一些不需要读取数据的算法，因而也\t不会产生燃气费；</p>\n<p>图形界面上的效果：</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"img/Patrick Collins_blockchain_note/image-20240125150543392.png\" alt=\"image-20240125150543392\" style=\"zoom: 67%;\">\n\n\n\n<p>点击蓝色按钮，不发送交易，我们只是在链下读取数值，因此不产生燃气费，调用这些方法是免费的，但如果在消耗gas的函数中调用它，就会产生执行费用。</p>\n<h3 id=\"结构体和数组\"><a href=\"#结构体和数组\" class=\"headerlink\" title=\"结构体和数组\"></a>结构体和数组</h3><p>结构体定义全部是分号，只有使用的时候内部是逗号；</p>\n<p>效果如下：</p>\n<div class=\"highlight-container\" data-rel=\"Plaintext\"><figure class=\"iseeu highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">struct People {</span><br><span class=\"line\">        uint256 favNum;</span><br><span class=\"line\">        string name;</span><br><span class=\"line\">    }</span><br><span class=\"line\">    // People 结构体的实例化</span><br><span class=\"line\">People public person = People({favNum: 2, name: \"Peter\"});</span><br></pre></td></tr></table></figure></div>\n\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"img/Patrick Collins_blockchain_note/image-20240125153122214.png\" alt=\"image-20240125153122214\" style=\"zoom:67%;\">\n\n<p>声明变量的类型，然后是对象的可见性，最后是变量名。</p>\n<div class=\"highlight-container\" data-rel=\"Plaintext\"><figure class=\"iseeu highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">People[] public people;</span><br><span class=\"line\">function addperson(string memory _name,uint256 _favNum) public{</span><br><span class=\"line\">    People memory newperson = People({favNum:_favNum,name:_name});</span><br><span class=\"line\">    people.push(newperson);</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure></div>\n\n<p>也可以对数组长度进行限制：</p>\n<div class=\"highlight-container\" data-rel=\"Plaintext\"><figure class=\"iseeu highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">People[3] public people;</span><br></pre></td></tr></table></figure></div>\n\n<p>最终效果：</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"img/Patrick Collins_blockchain_note/image-20240125155456902.png\" alt=\"image-20240125155456902\" style=\"zoom:67%;\">\n\n\n\n<p>值得一提的是，在solidity中有6种方式可以用于存储数,分别是<code>stack</code>、<code>memory</code>、<code>storage</code>、<code>calldata</code>、<code>code</code>、<code>logs</code></p>\n<p>其中，<code>memory</code>表示可以被修改的临时变量，<code>calldata</code>表示不可以被临时修改的临时变量，二者在方法结束过后会自行销毁，案例如下：</p>\n<div class=\"highlight-container\" data-rel=\"Plaintext\"><figure class=\"iseeu highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">function addperson(string memory _name,uint256 _favNum) public{</span><br><span class=\"line\">    _name = 'cat'; //不会报错</span><br><span class=\"line\">    People memory newperson = People({favNum:_favNum,name:_name});</span><br><span class=\"line\">    people.push(newperson);</span><br><span class=\"line\">}</span><br><span class=\"line\">function addperson(string calldata _name,uint256 _favNum) public{</span><br><span class=\"line\">    _name = 'cat' ;//会报错:TypeError: Type literal_string \"cat\" is not implicitly convertible to expected type string calldata.--&gt; contracts/SimpeStorage.sol:18:17:</span><br><span class=\"line\">    People memory newperson = People({favNum:_favNum,name:_name});</span><br><span class=\"line\">    people.push(newperson);</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure></div>\n\n<p>而storage表示可以被修改的永久变量，不写关键字的话默认存储在storage；</p>\n<h3 id=\"Mapping映射\"><a href=\"#Mapping映射\" class=\"headerlink\" title=\"Mapping映射\"></a>Mapping映射</h3><div class=\"highlight-container\" data-rel=\"Plaintext\"><figure class=\"iseeu highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//SPDX-License-Identifier: MIT</span><br><span class=\"line\">//因为solidity更新频率极高，我们需要在文件开头告诉代码，solidity的版本</span><br><span class=\"line\">pragma solidity 0.8.7;</span><br><span class=\"line\"></span><br><span class=\"line\">//关键字，告诉接下来是定义智能合约的内容</span><br><span class=\"line\">contract SimpleStorage{</span><br><span class=\"line\">    //↓这个初始化默认是0</span><br><span class=\"line\">    uint256 favNum;</span><br><span class=\"line\">    mapping (string=&gt;uint256) public nameToFavNum;</span><br><span class=\"line\">    // People 结构体的定义</span><br><span class=\"line\">    struct People {</span><br><span class=\"line\">        uint256 favNum;</span><br><span class=\"line\">        string name;</span><br><span class=\"line\">    }</span><br><span class=\"line\">    People[] public people;</span><br><span class=\"line\">    function addperson(string memory _name,uint256 _favNum) public{</span><br><span class=\"line\">        People memory newperson = People({favNum:_favNum,name:_name});</span><br><span class=\"line\">        people.push(newperson);</span><br><span class=\"line\">        nameToFavNum[_name]=_favNum;</span><br><span class=\"line\">    }</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure></div>\n\n\n\n<p>提供了一个字符转uint的索引，效果如下：</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"img/Patrick Collins_blockchain_note/image-20240125222714288.png\" alt=\"image-20240125222714288\" style=\"zoom: 67%;\">\n\n\n\n<h3 id=\"在测试网络上布置智能合约\"><a href=\"#在测试网络上布置智能合约\" class=\"headerlink\" title=\"在测试网络上布置智能合约\"></a>在测试网络上布置智能合约</h3><img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"img/Patrick Collins_blockchain_note/image-20240125230207782.png\" alt=\"image-20240125230207782\" style=\"zoom: 67%;\">\n\n<p>修改环境，选择账户，部署，</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"img/Patrick Collins_blockchain_note/image-20240125230239939.png\" alt=\"image-20240125230239939\" style=\"zoom:80%;\">\n\n<p>账单：</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"img/Patrick Collins_blockchain_note/image-20240125230536425.png\" alt=\"image-20240125230536425\" style=\"zoom: 67%;\">\n\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"img/Patrick Collins_blockchain_note/image-20240125230559283.png\" alt=\"image-20240125230559283\">\n\n<p>发送交易：</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"img/Patrick Collins_blockchain_note/image-20240125231013855.png\" alt=\"image-20240125231013855\" style=\"zoom:80%;\">\n\n<p>点击蓝色按钮，不会产生交易面板提示</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"img/Patrick Collins_blockchain_note/image-20240125231634552.png\" alt=\"image-20240125231634552\" style=\"zoom: 67%;\">\n\n<p>查看合约：</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"img/Patrick Collins_blockchain_note/image-20240125230758121.png\" alt=\"image-20240125230758121\" style=\"zoom:80%;\">\n\n<p>进入交易链接，可以看到具体交易内容：</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"img/Patrick Collins_blockchain_note/image-20240125231517791.png\" alt=\"image-20240125231517791\" style=\"zoom:80%;\">\n\n<p>这是由于区块链的公开透明的特性。</p>\n<h3 id=\"合约交互\"><a href=\"#合约交互\" class=\"headerlink\" title=\"合约交互\"></a>合约交互</h3><p>创建新的文件<code>SimpleFactory.sol</code></p>\n<div class=\"highlight-container\" data-rel=\"Plaintext\"><figure class=\"iseeu highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/*</span><br><span class=\"line\">SimpleFactory.sol</span><br><span class=\"line\">*/</span><br><span class=\"line\">//SPDX-License-Identifier:MIT</span><br><span class=\"line\">pragma solidity ^0.8.7;</span><br><span class=\"line\">//引用其他合约</span><br><span class=\"line\">import \"./SimpleDemo.sol\";</span><br><span class=\"line\"></span><br><span class=\"line\">contract SimpleFactory{</span><br><span class=\"line\">    SimpleDemo[] public simpleDemoArray;</span><br><span class=\"line\">    function createSimpleStorageContract() public{</span><br><span class=\"line\">        SimpleDemo simpleDemo = new SimpleDemo();</span><br><span class=\"line\">        //存进去的其实是每一个simpleDemo的地址</span><br><span class=\"line\">        simpleDemoArray.push(simpleDemo);</span><br><span class=\"line\">    }</span><br><span class=\"line\">    function sfStore (uint256 _simpleDemoIndex,uint256 _simpleStorageNumber) public {</span><br><span class=\"line\">        //Address</span><br><span class=\"line\">        //ABI 应用二进制接口</span><br><span class=\"line\">        //通过下标查的simpleDemo的地址</span><br><span class=\"line\">        SimpleDemo simpleDemo = simpleDemoArray[_simpleDemoIndex];</span><br><span class=\"line\">        //调用其他合约里的方法</span><br><span class=\"line\">        simpleDemo.FavNumEdit(_simpleStorageNumber);</span><br><span class=\"line\">    }</span><br><span class=\"line\">    function sfGet(uint256 _simpleDemoIndex) public view returns(uint256){</span><br><span class=\"line\">        return simpleDemoArray[_simpleDemoIndex].retrieve();</span><br><span class=\"line\">    }</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure></div>\n\n<p>结果：</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"img/Patrick Collins_blockchain_note/image-20240127234611622.png\" alt=\"image-20240127234611622\" style=\"zoom:67%;\">\n\n<h3 id=\"继承和重载\"><a href=\"#继承和重载\" class=\"headerlink\" title=\"继承和重载\"></a>继承和重载</h3><p>在<code>SimpleDemo.sol</code>中</p>\n<div class=\"highlight-container\" data-rel=\"Plaintext\"><figure class=\"iseeu highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/*</span><br><span class=\"line\">父类SimpleDemo.sol</span><br><span class=\"line\">*/</span><br><span class=\"line\">contract SimpleDemo{</span><br><span class=\"line\">    //↓这个初始化默认是0</span><br><span class=\"line\">    uint256 favNum;</span><br><span class=\"line\">    function store(uint256 _favNum) public virtual{</span><br><span class=\"line\">        favNum = _favNum;</span><br><span class=\"line\">    } </span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure></div>\n\n<p>在子类<code>ExtraDemo.sol</code>中</p>\n<div class=\"highlight-container\" data-rel=\"Plaintext\"><figure class=\"iseeu highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/*</span><br><span class=\"line\">子类ExtraDemo.sol</span><br><span class=\"line\">*/</span><br><span class=\"line\">import \"./SimpleDemo.sol\";</span><br><span class=\"line\">contract ExtraDemo is SimpleDemo{</span><br><span class=\"line\">    //override</span><br><span class=\"line\">    //virtual override</span><br><span class=\"line\">    function store(uint256 _favNum) public override{</span><br><span class=\"line\">        favNum = _favNum + 5;</span><br><span class=\"line\">    }</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure></div>\n\n<p><em>//在父类中用<code>virtual</code>标注可以重载的方法，在子类中用<code>override</code>标注并实现重载</em></p>\n<p>效果：</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"img/Patrick Collins_blockchain_note/image-20240129210306564.png\" alt=\"image-20240129210306564\" style=\"zoom:67%;\">\n\n<h3 id=\"使用dataFeed并向合约打钱\"><a href=\"#使用dataFeed并向合约打钱\" class=\"headerlink\" title=\"使用dataFeed并向合约打钱\"></a>使用dataFeed并向合约打钱</h3><p>本节资料来源：<a class=\"link\" href=\"https://docs.chain.link/data-feeds/using-data-feeds\">使用Data Feeds 关于 EVM 链 | Chainlink 文档 <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a></p>\n<blockquote>\n<p>为了发送ETH或其他区块链原生通证，函数需要被标记为payable</p>\n<p>Chainlink可以在去中心化环境中为智能合约获取外部数据和进行外部计算</p>\n<p>Chainlink喂价是从现实世界中读取定价信息或其他数据的方法</p>\n<p>Chainlink VRF 是一种将可证明的随机数从现实世界获取到智能合约中的方法。</p>\n<p>Chainlink Keepers是一种去中心化驱动事件的方法</p>\n</blockquote>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"img/Patrick Collins_blockchain_note/image-20240205130649419.png\" alt=\"image-20240205130649419\" style=\"zoom:50%;\">\n\n<div class=\"highlight-container\" data-rel=\"Plaintext\"><figure class=\"iseeu highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/*</span><br><span class=\"line\">Fundeme.sol</span><br><span class=\"line\">从用户那里拿钱</span><br><span class=\"line\">把赚来的钱从合约取出来</span><br><span class=\"line\">*/</span><br><span class=\"line\">//SPDX-License-Identifier:MIT</span><br><span class=\"line\">pragma solidity 0.8.7;</span><br><span class=\"line\">import \"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\";</span><br><span class=\"line\">//EVM,Ethereum Virtual Machine</span><br><span class=\"line\">contract FundMe{</span><br><span class=\"line\">    //注意交易的单位是wei</span><br><span class=\"line\">    uint256 public minimumUsd = 50;</span><br><span class=\"line\">    function fund() public payable{// 把钱转进合约里</span><br><span class=\"line\">        //检查msg.value是否大于一定数量的美元,为否时会revert fund()回滚并报错</span><br><span class=\"line\">        // msg.value == 0.03*1e18</span><br><span class=\"line\">        require(getConversionRate(msg.value)&gt;= minimumUsd,\"Didn't send enough\");</span><br><span class=\"line\">    }</span><br><span class=\"line\"></span><br><span class=\"line\">    function getPrice() public view returns(uint256){//得到汇率(USD/ETH)</span><br><span class=\"line\">        //ABIw</span><br><span class=\"line\">        //Address 0x694AA1769357215DE4FAC081bf1f309aDC325306</span><br><span class=\"line\">        AggregatorV3Interface priceFeed = AggregatorV3Interface(0x694AA1769357215DE4FAC081bf1f309aDC325306);</span><br><span class=\"line\">        ( ,int256 answer,,,) = priceFeed.latestRoundData();</span><br><span class=\"line\">        </span><br><span class=\"line\">        return uint256(answer*1e10);</span><br><span class=\"line\">    }</span><br><span class=\"line\"></span><br><span class=\"line\">    function getVersion() public view returns (uint256){//获取了链外数据源的版本信息，并将其作为uint256类型返回</span><br><span class=\"line\">        AggregatorV3Interface priceFeed = AggregatorV3Interface(0x694AA1769357215DE4FAC081bf1f309aDC325306);</span><br><span class=\"line\">        return priceFeed.version();</span><br><span class=\"line\">    }</span><br><span class=\"line\">    function getConversionRate(uint256 ethAmount)public view returns (uint256){</span><br><span class=\"line\">        uint256 ethPrice = getPrice();</span><br><span class=\"line\">        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18;</span><br><span class=\"line\">        return ethAmountInUsd;</span><br><span class=\"line\">    }</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure></div>\n\n<p>此处<code>( ,int256 answer,,,) = priceFeed.latestRoundData();</code>使用<code>,</code>接受不需要的返回值</p>\n<div class=\"highlight-container\" data-rel=\"Plaintext\"><figure class=\"iseeu highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//注意latestRoundData()返回值</span><br><span class=\"line\">function latestRoundData()</span><br><span class=\"line\">  external</span><br><span class=\"line\">  view</span><br><span class=\"line\">  returns (</span><br><span class=\"line\">    uint80 roundId,</span><br><span class=\"line\">    int256 answer,</span><br><span class=\"line\">    uint256 startedAt,</span><br><span class=\"line\">    uint256 updatedAt,</span><br><span class=\"line\">    uint80 answeredInRound</span><br><span class=\"line\">  );</span><br></pre></td></tr></table></figure></div>\n\n<p>执行Fundme合约</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"img/Patrick Collins_blockchain_note/image-20240205140809591.png\" alt=\"image-20240205140809591\" style=\"zoom: 67%;\">\n\n<p>50/2290==0.0218150087260035，因此低于这个价格的交易会失败并回滚</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"img/Patrick Collins_blockchain_note/image-20240205140823024.png\" alt=\"image-20240205140823024\" style=\"zoom:67%;\">\n\n<h3 id=\"库\"><a href=\"#库\" class=\"headerlink\" title=\"库\"></a>库</h3><p>库的作用的是可以将一些方法写入指定文件，方便开发时调用它们</p>\n<p>新建文件<code>PriceConverter.sol</code></p>\n<div class=\"highlight-container\" data-rel=\"Plaintext\"><figure class=\"iseeu highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/*</span><br><span class=\"line\">PriceConverter.sol</span><br><span class=\"line\">*/</span><br><span class=\"line\">//SPDX-License-Identifier: MIT</span><br><span class=\"line\">pragma solidity 0.8.7;</span><br><span class=\"line\">import \"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\";</span><br><span class=\"line\">library PriceConverter{</span><br><span class=\"line\">    function getPrice() internal view returns(uint256){//得到汇率(USD/ETH)</span><br><span class=\"line\">        //ABIw</span><br><span class=\"line\">        //Address 0x694AA1769357215DE4FAC081bf1f309aDC325306</span><br><span class=\"line\">        AggregatorV3Interface priceFeed = AggregatorV3Interface(0x694AA1769357215DE4FAC081bf1f309aDC325306);</span><br><span class=\"line\">        ( ,int256 answer,,,) = priceFeed.latestRoundData();</span><br><span class=\"line\">        </span><br><span class=\"line\">        return uint256(answer*1e10);</span><br><span class=\"line\">    }</span><br><span class=\"line\"></span><br><span class=\"line\">    function getVersion() internal view returns (uint256){//获取了链外数据源的版本信息，并将其作为uint256类型返回</span><br><span class=\"line\">        AggregatorV3Interface priceFeed = AggregatorV3Interface(0x694AA1769357215DE4FAC081bf1f309aDC325306);</span><br><span class=\"line\">        return priceFeed.version();</span><br><span class=\"line\">    }</span><br><span class=\"line\">    function getConversionRate(uint256 ethAmount) internal view returns (uint256){</span><br><span class=\"line\">        uint256 ethPrice = getPrice();</span><br><span class=\"line\">        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18;</span><br><span class=\"line\">        return ethAmountInUsd;</span><br><span class=\"line\">    }</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure></div>\n\n<p>将刚才<code>Fundme.sol</code>中的<code>getPrice() , getVersion() , getConversionRate(uint256 ethAmount)</code>取出并放入新文件中。</p>\n<div class=\"highlight-container\" data-rel=\"Plaintext\"><figure class=\"iseeu highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/*</span><br><span class=\"line\">Fundme.sol</span><br><span class=\"line\">*/</span><br><span class=\"line\">//EVM,Ethereum Virtual Machine</span><br><span class=\"line\">contract FundMe{</span><br><span class=\"line\">    using PriceConverter for uint256;//会将PriceConverter放到uint256下</span><br><span class=\"line\">    //注意交易的单位是wei</span><br><span class=\"line\">    uint256 public minimumUsd = 50;</span><br><span class=\"line\">    address[] public funders;</span><br><span class=\"line\">    mapping(address=&gt;uint256) public addressToAccountFunded;</span><br><span class=\"line\">    function fund() public payable{// 把钱转进合约里</span><br><span class=\"line\">        //检查msg.value是否大于一定数量的美元,为否时会revert fund()回滚并报错</span><br><span class=\"line\">        // msg.value == 0.03*1e18</span><br><span class=\"line\">        require(msg.value.getConversionRate()&gt;= minimumUsd,\"Didn't send enough\");</span><br><span class=\"line\">        funders.push(msg.sender);</span><br><span class=\"line\">        addressToAccountFunded[msg.sender]=msg.value;</span><br><span class=\"line\">    }</span><br><span class=\"line\">    // function withdraw(){}</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure></div>\n\n<p><code>msg.value.getConversionRate()</code>会自动将<code>msg.value</code>作为<code>getConversionRate()</code>的第一参数，第二第三参数则依次写入括号内。</p>\n<h3 id=\"从合约提取资金\"><a href=\"#从合约提取资金\" class=\"headerlink\" title=\"从合约提取资金\"></a>从合约提取资金</h3><p>三种提取资金的方式</p>\n<div class=\"highlight-container\" data-rel=\"Plaintext\"><figure class=\"iseeu highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//transfer</span><br><span class=\"line\">payable(msg.sender).transfer(address(this).balance);</span><br><span class=\"line\">//send</span><br><span class=\"line\">bool sendSuccess = payable(msg.sender).send(address(this).balance);</span><br><span class=\"line\">require(sendSuccess,\"Send failed\");</span><br><span class=\"line\">//call</span><br><span class=\"line\">(bool callSuccess, )=payable(msg.sender).call{value:address(this).balance}.(\"\")</span><br><span class=\"line\">require(callSuccess,\"call failed\");</span><br></pre></td></tr></table></figure></div>\n\n<p>前两种会受到燃气费的制约，推荐最后一种</p>\n<div class=\"highlight-container\" data-rel=\"Plaintext\"><figure class=\"iseeu highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/*</span><br><span class=\"line\">从用户那里拿钱</span><br><span class=\"line\">把赚来的钱从合约取出来</span><br><span class=\"line\">*/</span><br><span class=\"line\">//SPDX-License-Identifier:MIT</span><br><span class=\"line\">pragma solidity 0.8.7;</span><br><span class=\"line\">import \"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\";</span><br><span class=\"line\">import \"./PriceConverter.sol\";</span><br><span class=\"line\">//EVM,Ethereum Virtual Machine</span><br><span class=\"line\">contract FundMe{</span><br><span class=\"line\">    using PriceConverter for uint256;</span><br><span class=\"line\">    //注意交易的单位是wei</span><br><span class=\"line\">    uint256 public minimumUsd = 50;</span><br><span class=\"line\">    address public owner;</span><br><span class=\"line\">    address[] public funders;</span><br><span class=\"line\">    mapping(address=&gt;uint256) public addressToAccountFunded;</span><br><span class=\"line\">    constructor(){</span><br><span class=\"line\">        owner = msg.sender;</span><br><span class=\"line\">    }</span><br><span class=\"line\">    function fund() public payable{// 把钱转进合约里</span><br><span class=\"line\">        //检查msg.value是否大于一定数量的美元,为否时会revert fund()回滚并报错</span><br><span class=\"line\">        // msg.value == 0.03*1e18</span><br><span class=\"line\">        require(msg.value.getConversionRate()&gt;= minimumUsd,\"Didn't send enough\");</span><br><span class=\"line\">        funders.push(msg.sender);</span><br><span class=\"line\">        addressToAccountFunded[msg.sender]=msg.value;</span><br><span class=\"line\">    }</span><br><span class=\"line\">    function withdraw() public onlyOwner{</span><br><span class=\"line\">        // for(/*start index, ending index, step amount*/)</span><br><span class=\"line\">        for (uint256 funderIndex = 0;funderIndex &lt; funders.length;funderIndex ++){</span><br><span class=\"line\">            address funder = funders[funderIndex];</span><br><span class=\"line\">            addressToAccountFunded[funder] = 0;//清零账户余额</span><br><span class=\"line\">        }</span><br><span class=\"line\">        //重置数组</span><br><span class=\"line\">        funders = new address[](0); //0个初始元素</span><br><span class=\"line\">        //call</span><br><span class=\"line\">        (bool callSuccess,)=payable(msg.sender).call{value:address(this).balance}(\"\");</span><br><span class=\"line\">        require(callSuccess,\"call failed\");</span><br><span class=\"line\">    }</span><br><span class=\"line\">    modifier onlyOwner{</span><br><span class=\"line\">        require(msg.sender == owner,\"Sender is not owner\");</span><br><span class=\"line\">        _;  </span><br><span class=\"line\">    }</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure></div>\n\n<p>onlyOwner对withdraw的执行者进行了约束，在withdraw执行前会判断合约发起人喝执行人是否相同，只有执行人才可以使用此方法，否则回滚并报错。</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"img/Patrick Collins_blockchain_note/image-20240219154857856.png\" alt=\"image-20240219154857856\" style=\"zoom:80%;\">\n\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"img/Patrick Collins_blockchain_note/image-20240219154902367.png\" alt=\"image-20240219154902367\" style=\"zoom: 80%;\">\n\n<h3 id=\"优化措施\"><a href=\"#优化措施\" class=\"headerlink\" title=\"优化措施\"></a>优化措施</h3><h4 id=\"修改require\"><a href=\"#修改require\" class=\"headerlink\" title=\"修改require\"></a>修改require</h4><div class=\"highlight-container\" data-rel=\"Plaintext\"><figure class=\"iseeu highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pragma solidity 0.8.7;</span><br><span class=\"line\">import \"*******\"</span><br><span class=\"line\">//EVM,Ethereum Virtual Machine</span><br><span class=\"line\">error NotOwner();</span><br><span class=\"line\">contract FundMe{</span><br><span class=\"line\">    ***********</span><br><span class=\"line\">    function fund() public payable{// 把钱转进合约里</span><br><span class=\"line\">        ***********</span><br><span class=\"line\">    }</span><br><span class=\"line\">    function withdraw() public onlyOwner{</span><br><span class=\"line\">\t\t***********</span><br><span class=\"line\">    }</span><br><span class=\"line\">    modifier onlyOwner{</span><br><span class=\"line\">        // require(msg.sender == i_owner,\"Sender is not owner\");</span><br><span class=\"line\">        if(msg.sender == i_owner){revert NotOwner();}</span><br><span class=\"line\">        _;  </span><br><span class=\"line\">    }</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure></div>\n\n<p>使用require会单独保存<code>Sender is not owner</code>，相比<code>error</code>会增加<code>gas</code></p>\n<h3 id=\"recieve和fallback\"><a href=\"#recieve和fallback\" class=\"headerlink\" title=\"recieve和fallback\"></a>recieve和fallback</h3><img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"img/Patrick Collins_blockchain_note/image-20240220135504952.png\" alt=\"image-20240220135504952\" style=\"zoom:80%;\">\n\n<div class=\"highlight-container\" data-rel=\"Plaintext\"><figure class=\"iseeu highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//SPDX-License-Identifier:MIT</span><br><span class=\"line\">pragma solidity 0.8.7;</span><br><span class=\"line\"></span><br><span class=\"line\">contract FallbackExample{</span><br><span class=\"line\">    uint256 public result;</span><br><span class=\"line\"></span><br><span class=\"line\">    receive() external payable {</span><br><span class=\"line\">        result = 1;</span><br><span class=\"line\">    }</span><br><span class=\"line\"></span><br><span class=\"line\">    fallback() external payable { </span><br><span class=\"line\">        result = 2;</span><br><span class=\"line\">    }</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure></div>\n\n<h2 id=\"Javascript异步编程\"><a href=\"#Javascript异步编程\" class=\"headerlink\" title=\"Javascript异步编程\"></a>Javascript异步编程</h2><p>关键字<code>async</code>，<code>await</code></p>\n<p>只有标注了<code>async</code>了的方法中才能使用<code>await</code>关键词</p>\n<div class=\"highlight-container\" data-rel=\"Js\"><figure class=\"iseeu highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">async</span> <span class=\"keyword\">function</span> <span class=\"title function_\">main</span>(<span class=\"params\"></span>) {</span><br><span class=\"line\">  <span class=\"keyword\">await</span> <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">\"hi\"</span>);</span><br><span class=\"line\">  <span class=\"keyword\">let</span> variable = <span class=\"number\">5</span>;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(variable);</span><br><span class=\"line\">}</span><br><span class=\"line\"><span class=\"title function_\">main</span>()</span><br><span class=\"line\">  .<span class=\"title function_\">then</span>(<span class=\"function\">() =&gt;</span> process.<span class=\"title function_\">exit</span>(<span class=\"number\">0</span>))</span><br><span class=\"line\">  .<span class=\"title function_\">catch</span>(<span class=\"function\">(<span class=\"params\">error</span>) =&gt;</span> {</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(error);</span><br><span class=\"line\">  });</span><br></pre></td></tr></table></figure></div>\n\n<h2 id=\"将私密数据保存到环境变量中\"><a href=\"#将私密数据保存到环境变量中\" class=\"headerlink\" title=\"将私密数据保存到环境变量中\"></a>将私密数据保存到环境变量中</h2><p>创建.env文件</p>\n<div class=\"highlight-container\" data-rel=\"Plaintext\"><figure class=\"iseeu highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">PRIVATE_KEY=0xE9f22C0cB28f58a74574d88679B4A3F933e3d51cyarn</span><br></pre></td></tr></table></figure></div>\n\n<p>引包，使用</p>\n<div class=\"highlight-container\" data-rel=\"Js\"><figure class=\"iseeu highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">require</span>(<span class=\"string\">\"dotenv\"</span>).<span class=\"title function_\">config</span>(); <span class=\"comment\">// 调用 config 方法加载环境变量 </span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(process.<span class=\"property\">env</span>.<span class=\"property\">PRIVATE_KEY</span>);</span><br></pre></td></tr></table></figure></div>\n\n<h2 id=\"进阶：私钥管理\"><a href=\"#进阶：私钥管理\" class=\"headerlink\" title=\"进阶：私钥管理\"></a>进阶：私钥管理</h2><p>资料来源 P57</p>\n<h2 id=\"HardHat\"><a href=\"#HardHat\" class=\"headerlink\" title=\"HardHat\"></a>HardHat</h2><h3 id=\"配置项目\"><a href=\"#配置项目\" class=\"headerlink\" title=\"配置项目\"></a>配置项目</h3><p>1）准备一个空文件夹，终端<code>yarn add --dev hardhat</code></p>\n<p>2）<code>yarn hardhat</code></p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"img/Patrick Collins_blockchain_note/image-20240225225217144.png\" alt=\"image-20240225225217144\">\n\n<p>3）检查solidity版本</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"img/Patrick Collins_blockchain_note/image-20240225231333402.png\" alt=\"image-20240225231333402\">\n\n<p>4）编译，<code>yarn hardhat compile</code></p>\n<p>5）<code>yarn add --dev hardhat-deploy</code>用于简化和管理以太坊智能合约的部署过程</p>\n<p>6）删除<code>deploy.js</code>, 在<code>hardhat.config.js</code>中写入<code>require(\"hardhat-deploy\");</code>之后执行<code>yarn hardhat</code>，在新<code>task</code>中应有<code>deploy</code></p>\n<p>7）建立deploy文件夹，之后的编译脚本就写在这里面</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"img/Patrick Collins_blockchain_note/image-20240225234449556.png\" alt=\"image-20240225234449556\">\n\n<p>8）编写脚本，并编译<code>yarn hardhat deploy</code></p>\n<div class=\"highlight-container\" data-rel=\"Js\"><figure class=\"iseeu highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//01-deploy-fund-me.js</span></span><br><span class=\"line\"><span class=\"comment\">//引包，import</span></span><br><span class=\"line\"><span class=\"comment\">//方法定义</span></span><br><span class=\"line\"><span class=\"comment\">//方法使用</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">deployFunc</span>(<span class=\"params\"></span>) {</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">\"hi\"</span>)</span><br><span class=\"line\">}</span><br><span class=\"line\"><span class=\"variable language_\">module</span>.<span class=\"property\">exports</span>.<span class=\"property\">default</span> = deployFunc <span class=\"comment\">//将deplyFunc设置为默认要找的函数</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></div>\n\n<div class=\"highlight-container\" data-rel=\"Plaintext\"><figure class=\"iseeu highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">PS D:\\study_test\\Hardhat\\hardhat-fund-me-fcc&gt; yarn hardhat deploy</span><br><span class=\"line\">yarn run v1.22.21</span><br><span class=\"line\">$ D:\\study_test\\Hardhat\\hardhat-fund-me-fcc\\node_modules\\.bin\\hardhat deploy</span><br><span class=\"line\">Compiled 3 Solidity files successfully (evm target: london).</span><br><span class=\"line\">hi</span><br><span class=\"line\">Done in 3.12s.</span><br></pre></td></tr></table></figure></div>\n\n<p>使用<code>yarn add --dev @chainlink/contracts@0.8.0</code>下载chainlink预言机中的合约</p>\n<h3 id=\"Hardhat部署智能合约\"><a href=\"#Hardhat部署智能合约\" class=\"headerlink\" title=\"Hardhat部署智能合约\"></a>Hardhat部署智能合约</h3><h4 id=\"关于node-js的脚本的接口开放和使用\"><a href=\"#关于node-js的脚本的接口开放和使用\" class=\"headerlink\" title=\"关于node.js的脚本的接口开放和使用\"></a>关于node.js的脚本的接口开放和使用</h4><p>这是一个TIP：</p>\n<div class=\"highlight-container\" data-rel=\"Js\"><figure class=\"iseeu highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// helper-hardhat-config.js</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> networkConfig = {</span><br><span class=\"line\">    <span class=\"number\">11155111</span>: {</span><br><span class=\"line\">        <span class=\"attr\">name</span>: <span class=\"string\">\"Sepolia\"</span>,</span><br><span class=\"line\">        <span class=\"attr\">ethUsdPriceFeed</span>: <span class=\"string\">\"0x694AA1769357215DE4FAC081bf1f309aDC325306\"</span>,</span><br><span class=\"line\">    },</span><br><span class=\"line\">    <span class=\"number\">5</span>: {</span><br><span class=\"line\">        <span class=\"attr\">name</span>: <span class=\"string\">\"Goerli\"</span>,</span><br><span class=\"line\">        <span class=\"attr\">ethUsdPriceFeed</span>: <span class=\"string\">\"0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e\"</span>,</span><br><span class=\"line\">    },</span><br><span class=\"line\">}</span><br><span class=\"line\"><span class=\"variable language_\">module</span>.<span class=\"property\">exports</span> = {<span class=\"comment\">//开放对其他脚本使用的接口</span></span><br><span class=\"line\">    networkConfig,</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure></div>\n\n<div class=\"highlight-container\" data-rel=\"Js\"><figure class=\"iseeu highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//01-deploy-fund-me.js</span></span><br><span class=\"line\"><span class=\"comment\">//使用刚才的接口</span></span><br><span class=\"line\"><span class=\"comment\">//helpconfig代表了helper-hardhat-config.js这个文件</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> helperconfig = <span class=\"built_in\">require</span>(<span class=\"string\">\"../helper-hardhat-config.js\"</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> networkconfig = helperconfig.<span class=\"property\">networkConfig</span></span><br></pre></td></tr></table></figure></div>\n\n<p>当然也可以这么写</p>\n<div class=\"highlight-container\" data-rel=\"Js\"><figure class=\"iseeu highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> { networkconfig } = <span class=\"built_in\">require</span>(<span class=\"string\">\"../helper-hardhat-config.js\"</span>)</span><br></pre></td></tr></table></figure></div>\n\n<h4 id=\"本地-测试网络部署\"><a href=\"#本地-测试网络部署\" class=\"headerlink\" title=\"本地/测试网络部署\"></a>本地/测试网络部署</h4><p>如果我们没有使用任何测试网</p>\n<p>我们需要写一个<code>Mock</code>脚本，即如果某个合约不存在，我们就部署一个最小化的版本来进行我们的本地测试，</p>\n<p><strong>hardhat-config.js</strong></p>\n<div class=\"highlight-container\" data-rel=\"Js\"><figure class=\"iseeu highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">require</span>(<span class=\"string\">\"@nomicfoundation/hardhat-toolbox\"</span>);</span><br><span class=\"line\"><span class=\"built_in\">require</span>(<span class=\"string\">\"hardhat-deploy\"</span>);</span><br><span class=\"line\"><span class=\"built_in\">require</span>(<span class=\"string\">\"dotenv\"</span>).<span class=\"title function_\">config</span>();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/** <span class=\"doctag\">@type</span> import('hardhat/config').HardhatUserConfig */</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// const COINMARKETCAP_API_KEY = process.env.COINMARKETCAP_API_KEY;</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"variable constant_\">SEPOLIA_RPC_URL</span> = process.<span class=\"property\">env</span>.<span class=\"property\">SEPOLIA_RPC_URL</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"variable constant_\">PRIVATE_KEY</span> = process.<span class=\"property\">env</span>.<span class=\"property\">PRIVATE_KEY</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"variable constant_\">ETHERSCAN_API_KEY</span> = process.<span class=\"property\">env</span>.<span class=\"property\">ETHERSCAN_API_KEY</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">module</span>.<span class=\"property\">exports</span> = {</span><br><span class=\"line\">  <span class=\"attr\">solidity</span>: {</span><br><span class=\"line\">    <span class=\"attr\">compilers</span>: [</span><br><span class=\"line\">      {</span><br><span class=\"line\">        <span class=\"attr\">version</span>: <span class=\"string\">\"0.8.7\"</span>,</span><br><span class=\"line\">      },</span><br><span class=\"line\">      {</span><br><span class=\"line\">        <span class=\"attr\">version</span>: <span class=\"string\">\"0.6.6\"</span>,</span><br><span class=\"line\">      },</span><br><span class=\"line\">    ],</span><br><span class=\"line\">  },</span><br><span class=\"line\">  <span class=\"attr\">defaultNetwork</span>: <span class=\"string\">\"hardhat\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">networks</span>: {</span><br><span class=\"line\">    <span class=\"attr\">hardhat</span>: {</span><br><span class=\"line\">      <span class=\"attr\">chainId</span>: <span class=\"number\">31337</span>,</span><br><span class=\"line\">      <span class=\"comment\">// gasPrice: 130000000000,</span></span><br><span class=\"line\">    },</span><br><span class=\"line\">    <span class=\"attr\">sepolia</span>: {</span><br><span class=\"line\">      <span class=\"attr\">url</span>: <span class=\"variable constant_\">SEPOLIA_RPC_URL</span>,</span><br><span class=\"line\">      <span class=\"attr\">accounts</span>: [<span class=\"variable constant_\">PRIVATE_KEY</span>],</span><br><span class=\"line\">      <span class=\"attr\">chainId</span>: <span class=\"number\">11155111</span>,</span><br><span class=\"line\">      <span class=\"attr\">blockConfirmations</span>: <span class=\"number\">6</span>,</span><br><span class=\"line\">    },</span><br><span class=\"line\">  },</span><br><span class=\"line\">  <span class=\"attr\">gasReporter</span>: {</span><br><span class=\"line\">    <span class=\"attr\">enabled</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">    <span class=\"attr\">currency</span>: <span class=\"string\">\"USD\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">outputFile</span>: <span class=\"string\">\"gas-report.txt\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">noColors</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">    <span class=\"comment\">// coinmarketcap: COINMARKETCAP_API_KEY,</span></span><br><span class=\"line\">  },</span><br><span class=\"line\">  <span class=\"attr\">etherscan</span>: {</span><br><span class=\"line\">    <span class=\"attr\">apiKey</span>: <span class=\"variable constant_\">ETHERSCAN_API_KEY</span>,</span><br><span class=\"line\">  },</span><br><span class=\"line\">  <span class=\"attr\">namedAccounts</span>: {</span><br><span class=\"line\">    <span class=\"attr\">deployer</span>: {</span><br><span class=\"line\">      <span class=\"attr\">default</span>: <span class=\"number\">0</span>, <span class=\"comment\">// here this will by default take the first account as deployer</span></span><br><span class=\"line\">      <span class=\"number\">1</span>: <span class=\"number\">0</span>, <span class=\"comment\">// similarly on mainnet it will take the first account as deployer. Note though that depending on how hardhat network are configured, the account 0 on one network can be different than on another</span></span><br><span class=\"line\">    },</span><br><span class=\"line\">  },</span><br><span class=\"line\">  <span class=\"attr\">mocha</span>: {</span><br><span class=\"line\">    <span class=\"attr\">timeout</span>: <span class=\"number\">500000</span>,</span><br><span class=\"line\">  },</span><br><span class=\"line\">};</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></div>\n\n<p><strong>helper-hardhat-config.js</strong></p>\n<div class=\"highlight-container\" data-rel=\"Js\"><figure class=\"iseeu highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// helper-hardhat-config.js</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> networkConfig = {</span><br><span class=\"line\">  <span class=\"number\">31337</span>: {</span><br><span class=\"line\">    <span class=\"attr\">name</span>: <span class=\"string\">\"localhost\"</span>,</span><br><span class=\"line\">  },</span><br><span class=\"line\">  <span class=\"comment\">// Price Feed Address, values can be obtained at https://docs.chain.link/data-feeds/price-feeds/addresses</span></span><br><span class=\"line\">  <span class=\"number\">11155111</span>: {</span><br><span class=\"line\">    <span class=\"attr\">name</span>: <span class=\"string\">\"sepolia\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">ethUsdPriceFeed</span>: <span class=\"string\">\"0x694AA1769357215DE4FAC081bf1f309aDC325306\"</span>,</span><br><span class=\"line\">  },</span><br><span class=\"line\">};</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> developmentChains = [<span class=\"string\">\"hardhat\"</span>, <span class=\"string\">\"localhost\"</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">module</span>.<span class=\"property\">exports</span> = {</span><br><span class=\"line\">  networkConfig,</span><br><span class=\"line\">  developmentChains,</span><br><span class=\"line\">};</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></div>\n\n\n\n<p><strong>MockV3Aggregator.sol</strong></p>\n<div class=\"highlight-container\" data-rel=\"Plaintext\"><figure class=\"iseeu highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//MockV3Aggregator.sol</span><br><span class=\"line\">//SPDX-License-Identifier:MIT</span><br><span class=\"line\">pragma solidity ^0.6.0;</span><br><span class=\"line\"></span><br><span class=\"line\">import \"@chainlink/contracts/src/v0.6/tests/MockV3Aggregator.sol\";</span><br></pre></td></tr></table></figure></div>\n\n<p><strong>00-deploy-mocks.js</strong></p>\n<p>//用以部署到本地网络（快）</p>\n<div class=\"highlight-container\" data-rel=\"Plaintext\"><figure class=\"iseeu highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//00-deploy-mocks.js</span><br><span class=\"line\">//这段是部署本地预言机</span><br><span class=\"line\">const { network } = require(\"hardhat\");</span><br><span class=\"line\"></span><br><span class=\"line\">const DECIMALS = \"8\";</span><br><span class=\"line\">const INITIAL_PRICE = \"200000000000\"; // 2000</span><br><span class=\"line\"></span><br><span class=\"line\">module.exports = async ({ getNamedAccounts, deployments }) =&gt; {</span><br><span class=\"line\">  const { deploy, log } = deployments;</span><br><span class=\"line\">  const { deployer } = await getNamedAccounts();</span><br><span class=\"line\">  const chainId = network.config.chainId;</span><br><span class=\"line\">  log(network.name);</span><br><span class=\"line\">  if (chainId == 31337) {</span><br><span class=\"line\">    log(\"Local network detected!Deploying mocks...\");</span><br><span class=\"line\">    await deploy(\"MockV3Aggregator\", {</span><br><span class=\"line\">      contract: \"MockV3Aggregator\",</span><br><span class=\"line\">      from: deployer,</span><br><span class=\"line\">      log: true,</span><br><span class=\"line\">      args: [DECIMALS, INITIAL_PRICE],</span><br><span class=\"line\">    });</span><br><span class=\"line\">    log(\"Mocks deployed!\");</span><br><span class=\"line\">    log(\"--------------------------------------------------------\");</span><br><span class=\"line\">  }</span><br><span class=\"line\">};</span><br><span class=\"line\">// 这段代码指定了当前部署脚本相关的标签。在这里，使用了两个标签：\"all\" 和 \"mocks\"。</span><br><span class=\"line\">// \"all\" 标签： 这个标签可能用于将部署脚本与整个项目的所有部署任务关联起来。</span><br><span class=\"line\">// 当运行 npx hardhat deploy --tags all 时，将运行所有带有 \"all\" 标签的部署任务。</span><br><span class=\"line\">// \"mocks\" 标签： 这个标签可能用于将部署脚本与与模拟合约相关的其他部署任务关联起来。</span><br><span class=\"line\">// 当运行 npx hardhat deploy --tags mocks 时，将运行所有带有 \"mocks\" 标签的部署任务。</span><br><span class=\"line\">//yarn hardhat deploy --tags mocks</span><br><span class=\"line\">module.exports.tags = [\"all\", \"mocks\"];</span><br></pre></td></tr></table></figure></div>\n\n<p>使用<code>yarn hardhat deploy --tags mocks</code>可以精准执行<code>00-deploy-mocks.js</code></p>\n<p>也可以对当前<code>chainId</code>加以判断，使其能够自动判断部署在哪条链上</p>\n<p><strong>01-deploy-fund-me.js</strong></p>\n<p>//用以部署到测试网络（慢）</p>\n<div class=\"highlight-container\" data-rel=\"Plaintext\"><figure class=\"iseeu highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//01-deploy-fund-me.js</span><br><span class=\"line\">//helpconfig代表了helper-hardhat-config.js这个文件</span><br><span class=\"line\">// const helperconfig = require(\"../helper-hardhat-config.js\")</span><br><span class=\"line\">// const networkconfig = helperconfig.networkConfig</span><br><span class=\"line\">//node.js的快捷写法，写法等同于上方的</span><br><span class=\"line\">const {</span><br><span class=\"line\">  networkConfig,</span><br><span class=\"line\">  developmentChains,</span><br><span class=\"line\">} = require(\"../helper-hardhat-config.js\");</span><br><span class=\"line\">const { network } = require(\"hardhat\");</span><br><span class=\"line\">const { verify } = require(\"../utils/verify.js\");</span><br><span class=\"line\">//async function deployFunc(hre) {</span><br><span class=\"line\">//     hre.getNameAccounts()</span><br><span class=\"line\">//     hre.deployments</span><br><span class=\"line\">// }</span><br><span class=\"line\">// module.exports.default = deployFunc //将deplyFunc设置为默认要找的函数</span><br><span class=\"line\"></span><br><span class=\"line\">//hre代表hardhat运行环境</span><br><span class=\"line\">//写法等同于上方的</span><br><span class=\"line\">// module.exports = async (hre) =&gt; {</span><br><span class=\"line\">//     const {getNameAccounts,deployments} = hre</span><br><span class=\"line\">// }</span><br><span class=\"line\">//node.js的语法糖，写法等同于上方的</span><br><span class=\"line\">module.exports = async ({ getNamedAccounts, deployments }) =&gt; {</span><br><span class=\"line\">  //将deploy和log从deployments这个对象中提取出来，等同于</span><br><span class=\"line\">  //const deploy = deployments.deploy;</span><br><span class=\"line\">  //const log = deployments.log</span><br><span class=\"line\">  const { deploy, log } = deployments;</span><br><span class=\"line\">  //getNameAccounts() 返回一个包含 deployer 属性的对象，等同于</span><br><span class=\"line\">  //const getNameAccountsResult = await getNameAccounts();</span><br><span class=\"line\">  //const deployer = getNameAccountsResult.deployer;</span><br><span class=\"line\">  log(\"Deploy Fundme...\");</span><br><span class=\"line\">  const { deployer } = await getNamedAccounts();</span><br><span class=\"line\">  const chainId = network.config.chainId;</span><br><span class=\"line\"></span><br><span class=\"line\">  //---------------确认预言机地址-----------------</span><br><span class=\"line\">  if (developmentChains.includes(network.name)) {</span><br><span class=\"line\">    const ethUsdAggregator = await deployments.get(\"MockV3Aggregator\");</span><br><span class=\"line\">    ethUsdPriceFeedAddress = ethUsdAggregator.address;</span><br><span class=\"line\">  } else {</span><br><span class=\"line\">    // ethUsdPriceFeedAddress的格式：0x694AA1769357215DE4FAC081bf1f309aDC325306</span><br><span class=\"line\">    ethUsdPriceFeedAddress = networkConfig[chainId][\"ethUsdPriceFeed\"];</span><br><span class=\"line\">  }</span><br><span class=\"line\"></span><br><span class=\"line\">  // log(ethUsdPriceFeedAddress);</span><br><span class=\"line\">  //-----------------deploy-----------------------</span><br><span class=\"line\">  const args = [ethUsdPriceFeedAddress];</span><br><span class=\"line\">  const Fundme = await deploy(\"Fundme\", {</span><br><span class=\"line\">    from: deployer,</span><br><span class=\"line\">    args: args, //喂价地址</span><br><span class=\"line\">    log: true,</span><br><span class=\"line\">    waitConfirmation: network.config.blockConfirmations || 1,</span><br><span class=\"line\">  });</span><br><span class=\"line\">  //-------------------verify-----------------------</span><br><span class=\"line\">  //当合约部署网络与指定的不符时会进行检查</span><br><span class=\"line\">  if (</span><br><span class=\"line\">    !developmentChains.includes(network.name) &amp;&amp;</span><br><span class=\"line\">    process.env.ETHERSCAN_API_KEY</span><br><span class=\"line\">  ) {</span><br><span class=\"line\">    //verify</span><br><span class=\"line\">    await verify(Fundme.address, args);</span><br><span class=\"line\">  }</span><br><span class=\"line\">  log(\"--------------------------------------------------------\");</span><br><span class=\"line\">};</span><br><span class=\"line\"></span><br><span class=\"line\">module.exports.tags = [\"all\", \"fundme\"];</span><br></pre></td></tr></table></figure></div>\n\n<p>输入<code>yarn hardhat deploy --network sepolia</code>或者<code>yarn hardhat deploy --network hardhat</code>，会识别到<code>network.name</code>的值并部署<code>Fundme</code>合约到<strong>具体的网络</strong>中，同时使用<code>MockV3Aggregator.sol</code>或者 <code>ethUsdPriceFeed: \"0x694AA1769357215DE4FAC081bf1f309aDC325306\"</code>作为喂价合约</p>\n<p><code>utils</code>文件夹，用于验证合约的合法性和安全性</p>\n<p><strong>verify.js</strong></p>\n<div class=\"highlight-container\" data-rel=\"Js\"><figure class=\"iseeu highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//verify.js</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> { run } = <span class=\"built_in\">require</span>(<span class=\"string\">\"hardhat\"</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">verify</span> = <span class=\"keyword\">async</span> (<span class=\"params\">contractAddress, args</span>) =&gt; {</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">\"Verifying Contract...\"</span>);</span><br><span class=\"line\">  <span class=\"keyword\">try</span> {</span><br><span class=\"line\">    <span class=\"keyword\">await</span> <span class=\"title function_\">run</span>(<span class=\"string\">\"verify:verify\"</span>, {</span><br><span class=\"line\">      <span class=\"attr\">address</span>: contractAddress,</span><br><span class=\"line\">      <span class=\"attr\">constructorArguments</span>: args,</span><br><span class=\"line\">    });</span><br><span class=\"line\">  } <span class=\"keyword\">catch</span> (e) {</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (e.<span class=\"property\">message</span>.<span class=\"title function_\">toLowerCase</span>().<span class=\"title function_\">includes</span>(<span class=\"string\">\"already verified\"</span>)) {</span><br><span class=\"line\">      <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">\"Already Verified!\"</span>);</span><br><span class=\"line\">    } <span class=\"keyword\">else</span> {</span><br><span class=\"line\">      <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(e);</span><br><span class=\"line\">    }</span><br><span class=\"line\">  }</span><br><span class=\"line\">};</span><br><span class=\"line\"><span class=\"variable language_\">module</span>.<span class=\"property\">exports</span> = { verify };</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></div>\n\n<p>效果如下：</p>\n<p>（1）部署到本地网络</p>\n<div class=\"highlight-container\" data-rel=\"Plaintext\"><figure class=\"iseeu highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">PS D:\\study_test\\Hardhat\\Harhat-Fundme&gt; yarn hardhat deploy --network hardhat</span><br><span class=\"line\">yarn run v1.22.21</span><br><span class=\"line\">warning package.json: No license field</span><br><span class=\"line\">$ D:\\study_test\\Hardhat\\Harhat-Fundme\\node_modules\\.bin\\hardhat deploy --network hardhat</span><br><span class=\"line\">https://eth-sepolia.api.onfinality.io/public</span><br><span class=\"line\">Nothing to compile</span><br><span class=\"line\">Local network detected!Deploying mocks...</span><br><span class=\"line\">deploying \"MockV3Aggregator\" (tx: 0x3d732abdeda8235691578f5eae48ec57c18e6860c18196ab7b211ca8f74dce2b)...: deployed at 0x5FbDB2315678afecb367f032d93F642f64180aa3 with 569759 gas</span><br><span class=\"line\">Mocks deployed!</span><br><span class=\"line\">--------------------------------------------------------</span><br><span class=\"line\">Deploy Fundme...</span><br><span class=\"line\">deploying \"Fundme\" (tx: 0x9275acdb459bd3d25e3dbf786faa9a18efb9edf2bcaa93cf56f4a7dc5b97b1e8)...: deployed at 0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512 with 846785 gas</span><br><span class=\"line\">--------------------------------------------------------</span><br><span class=\"line\">Done in 2.94s.</span><br></pre></td></tr></table></figure></div>\n\n<p>（2）部署到测试网络</p>\n<div class=\"highlight-container\" data-rel=\"Plaintext\"><figure class=\"iseeu highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ D:\\study_test\\Hardhat\\Harhat-Fundme\\node_modules\\.bin\\hardhat deploy --network sepolia</span><br><span class=\"line\">https://eth-sepolia.api.onfinality.io/public</span><br><span class=\"line\">Nothing to compile</span><br><span class=\"line\">Deploy Fundme...</span><br><span class=\"line\">deploying \"Fundme\" (tx: 0x8c2e8759b86f8076702ed50b0abaa5d082ed8ac47589f380f367e2b62aeefc3d)...: deployed at 0x58962eaA9001b9C3F1Eb908Ac1347213b2D39A5D with 846785 gas</span><br><span class=\"line\">Verifying Contract...</span><br><span class=\"line\">UnexpectedError: An unexpected error occurred during the verification process.</span><br><span class=\"line\">Please report this issue to the Hardhat team.</span><br><span class=\"line\">Error Details: Connect Timeout Error</span><br><span class=\"line\">    at Etherscan.isVerified (D:\\study_test\\Hardhat\\Harhat-Fundme\\node_modules\\@nomicfoundation\\hardhat-verify\\src\\internal\\etherscan.ts:126:13)</span><br><span class=\"line\">    at processTicksAndRejections (node:internal/process/task_queues:95:5)</span><br><span class=\"line\">    at SimpleTaskDefinition.action (D:\\study_test\\Hardhat\\Harhat-Fundme\\node_modules\\@nomicfoundation\\hardhat-verify\\src\\internal\\tasks\\etherscan.ts:101:24)</span><br><span class=\"line\">    at Environment._runTaskDefinition (D:\\study_test\\Hardhat\\Harhat-Fundme\\node_modules\\hardhat\\src\\internal\\core\\runtime-environment.ts:358:14)</span><br><span class=\"line\">    at Environment.run (D:\\study_test\\Hardhat\\Harhat-Fundme\\node_modules\\hardhat\\src\\internal\\core\\runtime-environment.ts:191:14)        </span><br><span class=\"line\">    at SimpleTaskDefinition.action (D:\\study_test\\Hardhat\\Harhat-Fundme\\node_modules\\@nomicfoundation\\hardhat-verify\\src\\index.ts:284:9) </span><br><span class=\"line\">    at Environment._runTaskDefinition (D:\\study_test\\Hardhat\\Harhat-Fundme\\node_modules\\hardhat\\src\\internal\\core\\runtime-environment.ts:358:14)</span><br><span class=\"line\">    at Environment.run (D:\\study_test\\Hardhat\\Harhat-Fundme\\node_modules\\hardhat\\src\\internal\\core\\runtime-environment.ts:191:14)        </span><br><span class=\"line\">    at verify (D:\\study_test\\Hardhat\\Harhat-Fundme\\utils\\verify.js:6:5)</span><br><span class=\"line\">    at Object.module.exports [as func] (D:\\study_test\\Hardhat\\Harhat-Fundme\\deploy\\01-deploy-fund-me.js:64:5)</span><br><span class=\"line\">--------------------------------------------------------</span><br><span class=\"line\">Done in 84.60s.</span><br></pre></td></tr></table></figure></div>\n\n<p>合约<code>0x8c2e8759b86f8076702ed50b0abaa5d082ed8ac47589f380f367e2b62aeefc3d</code></p>\n<p>被部署在以太坊地址<code>0x58962eaA9001b9C3F1Eb908Ac1347213b2D39A5D</code></p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"img/Patrick Collins_blockchain_note/image-20240305002127313.png\" alt=\"image-20240305002127313\" style=\"zoom:67%;\">\n\n<h4 id=\"编写脚本注入资金\"><a href=\"#编写脚本注入资金\" class=\"headerlink\" title=\"编写脚本注入资金\"></a>编写脚本注入资金</h4><p>P.S 在本地Hardhat环境中运行</p>\n<div class=\"highlight-container\" data-rel=\"Js\"><figure class=\"iseeu highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//fund.js</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> { ethers, getNamedAccounts } = <span class=\"built_in\">require</span>(<span class=\"string\">\"hardhat\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">async</span> <span class=\"keyword\">function</span> <span class=\"title function_\">main</span>(<span class=\"params\"></span>) {</span><br><span class=\"line\">  <span class=\"keyword\">const</span> { deployer } = <span class=\"keyword\">await</span> <span class=\"title function_\">getNamedAccounts</span>();</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">`Deployer address: <span class=\"subst\">${deployer}</span>`</span>);</span><br><span class=\"line\">  <span class=\"keyword\">const</span> fundme = <span class=\"keyword\">await</span> ethers.<span class=\"title function_\">getContractAt</span>(<span class=\"string\">\"Fundme\"</span>, deployer);</span><br><span class=\"line\">  <span class=\"comment\">// console.log(`Got contract Fundme at ${fundme.address}`);</span></span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">\"Funding contract...\"</span>);</span><br><span class=\"line\">  <span class=\"keyword\">const</span> transactionResponse = <span class=\"keyword\">await</span> fundme.<span class=\"title function_\">fund</span>({</span><br><span class=\"line\">    <span class=\"attr\">value</span>: ethers.<span class=\"title function_\">parseEther</span>(<span class=\"string\">\"0.1\"</span>),</span><br><span class=\"line\">  });</span><br><span class=\"line\">  <span class=\"keyword\">await</span> transactionResponse.<span class=\"title function_\">wait</span>(<span class=\"number\">1</span>);</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">\"Funded!\"</span>);</span><br><span class=\"line\">  <span class=\"keyword\">const</span> balance = <span class=\"keyword\">await</span> ethers.<span class=\"property\">provider</span>.<span class=\"title function_\">getBalance</span>(deployer);</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(balance);</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_\">main</span>()</span><br><span class=\"line\">  .<span class=\"title function_\">then</span>(<span class=\"function\">() =&gt;</span> process.<span class=\"title function_\">exit</span>(<span class=\"number\">0</span>))</span><br><span class=\"line\">  .<span class=\"title function_\">catch</span>(<span class=\"function\">(<span class=\"params\">error</span>) =&gt;</span> {</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">error</span>(error);</span><br><span class=\"line\">    process.<span class=\"title function_\">exit</span>(<span class=\"number\">1</span>);</span><br><span class=\"line\">  });</span><br></pre></td></tr></table></figure></div>\n\n<p>效果：</p>\n<div class=\"highlight-container\" data-rel=\"Plaintext\"><figure class=\"iseeu highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">PS D:\\study_test\\Hardhat\\Harhat-Fundme&gt; yarn hardhat run scripts/fund.js --network hardhat</span><br><span class=\"line\">yarn run v1.22.21</span><br><span class=\"line\">warning package.json: No license field</span><br><span class=\"line\">$ D:\\study_test\\Hardhat\\Harhat-Fundme\\node_modules\\.bin\\hardhat run scripts/fund.js --network hardhat</span><br><span class=\"line\">Deployer address: 0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266</span><br><span class=\"line\">Funding contract...</span><br><span class=\"line\">Funded!</span><br><span class=\"line\">9999999960505000000000n</span><br><span class=\"line\">Done in 5.54s.</span><br></pre></td></tr></table></figure></div>\n\n<h4 id=\"编写脚本提取资金\"><a href=\"#编写脚本提取资金\" class=\"headerlink\" title=\"编写脚本提取资金\"></a>编写脚本提取资金</h4><p>P.S 在本地Hardhat环境中运行</p>\n<div class=\"highlight-container\" data-rel=\"Js\"><figure class=\"iseeu highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//withdraw.js</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> { ethers, getNamedAccounts } = <span class=\"built_in\">require</span>(<span class=\"string\">\"hardhat\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">async</span> <span class=\"keyword\">function</span> <span class=\"title function_\">main</span>(<span class=\"params\"></span>) {</span><br><span class=\"line\">  <span class=\"keyword\">const</span> { deployer } = <span class=\"keyword\">await</span> <span class=\"title function_\">getNamedAccounts</span>();</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">`Deployer address: <span class=\"subst\">${deployer}</span>`</span>);</span><br><span class=\"line\">  <span class=\"keyword\">const</span> fundme = <span class=\"keyword\">await</span> ethers.<span class=\"title function_\">getContractAt</span>(<span class=\"string\">\"Fundme\"</span>, deployer);</span><br><span class=\"line\">  <span class=\"comment\">// console.log(`Got contract Fundme at ${fundme.address}`);</span></span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">\"Funding contract...\"</span>);</span><br><span class=\"line\">  <span class=\"keyword\">const</span> transactionResponse = <span class=\"keyword\">await</span> fundme.<span class=\"title function_\">withdraw</span>();</span><br><span class=\"line\">  <span class=\"keyword\">await</span> transactionResponse.<span class=\"title function_\">wait</span>(<span class=\"number\">1</span>);</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">\"Got it back!\"</span>);</span><br><span class=\"line\">  <span class=\"keyword\">const</span> balance = <span class=\"keyword\">await</span> ethers.<span class=\"property\">provider</span>.<span class=\"title function_\">getBalance</span>(deployer);</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(balance);</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_\">main</span>()</span><br><span class=\"line\">  .<span class=\"title function_\">then</span>(<span class=\"function\">() =&gt;</span> process.<span class=\"title function_\">exit</span>(<span class=\"number\">0</span>))</span><br><span class=\"line\">  .<span class=\"title function_\">catch</span>(<span class=\"function\">(<span class=\"params\">error</span>) =&gt;</span> {</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">error</span>(error);</span><br><span class=\"line\">    process.<span class=\"title function_\">exit</span>(<span class=\"number\">1</span>);</span><br><span class=\"line\">  });</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></div>\n\n\n\n<h2 id=\"HTML连接到Metamask\"><a href=\"#HTML连接到Metamask\" class=\"headerlink\" title=\"HTML连接到Metamask\"></a>HTML连接到Metamask</h2><div class=\"highlight-container\" data-rel=\"Js\"><figure class=\"iseeu highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">    that is good</span><br><span class=\"line\">    &lt;button onclick=<span class=\"string\">\" connect()\"</span>&gt;<span class=\"title class_\">Connect</span>&lt;/button&gt;</span><br><span class=\"line\">&lt;/body&gt;</span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\"><span class=\"keyword\">async</span> <span class=\"keyword\">function</span> <span class=\"title function_\">connect</span>(<span class=\"params\"></span>){</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    <span class=\"keyword\">if</span> (<span class=\"keyword\">typeof</span> <span class=\"variable language_\">window</span>.<span class=\"property\">ethereum</span> !==<span class=\"string\">\"undefined\"</span>){</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">        <span class=\"keyword\">await</span> <span class=\"variable language_\">window</span>.<span class=\"property\">ethereum</span>.<span class=\"title function_\">request</span>({<span class=\"attr\">method</span>:<span class=\"string\">\"eth_requestAccounts\"</span>})</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">        <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">\"connectBUtton\"</span>).<span class=\"property\">innerHTML</span>=<span class=\"string\">\"Connected!\"</span> <span class=\"comment\">//将按钮中文字改为Connected</span></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    }<span class=\"keyword\">else</span>{</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">\"No metamask!\"</span>)</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    }</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">}</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure></div>\n\n<p>也可以</p>\n<div class=\"highlight-container\" data-rel=\"Js\"><figure class=\"iseeu highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!-- index.<span class=\"property\">html</span> --&gt;</span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    that is good</span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">id</span> =<span class=\"string\">\"connectButton\"</span> <span class=\"attr\">onclick</span>=<span class=\"string\">\" connect()\"</span>&gt;</span>Connect<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"./index.js\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/javascript\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure></div>\n\n<div class=\"highlight-container\" data-rel=\"Js\"><figure class=\"iseeu highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// index.js</span></span><br><span class=\"line\"><span class=\"keyword\">async</span> <span class=\"keyword\">function</span> <span class=\"title function_\">connect</span>(<span class=\"params\"></span>) {</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"keyword\">typeof</span> <span class=\"variable language_\">window</span>.<span class=\"property\">ethereum</span> !== <span class=\"string\">\"undefined\"</span>) {</span><br><span class=\"line\">        <span class=\"keyword\">await</span> <span class=\"variable language_\">window</span>.<span class=\"property\">ethereum</span>.<span class=\"title function_\">request</span>({ <span class=\"attr\">method</span>: <span class=\"string\">\"eth_requestAccounts\"</span> })</span><br><span class=\"line\">        <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">\"connectButton\"</span>).<span class=\"property\">innerHTML</span> = <span class=\"string\">\"Connected!\"</span></span><br><span class=\"line\">    } <span class=\"keyword\">else</span> {</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">\"No metamask!\"</span>)</span><br><span class=\"line\">    }</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure></div>\n\n<h2 id=\"HTML结合js实现web端交易\"><a href=\"#HTML结合js实现web端交易\" class=\"headerlink\" title=\"HTML结合js实现web端交易\"></a>HTML结合js实现web端交易</h2><p><a class=\"link\" href=\"https://docs.moonbeam.network/cn/builders/build/eth-api/libraries/ethersjs/\">使用Ethers.js代码库发送交易和部署合约 | Moonbeam Docs <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a></p>\n","more":"<h2 id=\"工具包\"><a href=\"#工具包\" class=\"headerlink\" title=\"工具包\"></a>工具包</h2><p>课程链接：【（32 小时最全课程）区块链，智能合约 &amp; 全栈 Web3 开发】 <a class=\"link\" href=\"https://www.bilibili.com/video/BV1Ca411n7ta\">https://www.bilibili.com/video/BV1Ca411n7ta <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a></p>\n<p>原视频链接（生肉）：<a class=\"link\" href=\"https://www.youtube.com/watch?v=gyMwXuJrbJQ\">https://www.youtube.com/watch?v=gyMwXuJrbJQ <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a></p>\n<p>课程Repo链接：<a class=\"link\" href=\"https://github.com/smartcontractkit/full-blockchain-solidity-course-js\">https://github.com/smartcontractkit/full-blockchain-solidity-course-js <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a></p>\n<p>Remix网址：<a class=\"link\" href=\"https://remix.ethereum.org/\">https://remix.ethereum.org/ <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a></p>\n<p>测试币水龙头：<a class=\"link\" href=\"https://faucets.chain.link/\">https://faucets.chain.link <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a></p>\n<p>Sepolia区块链浏览器：<a class=\"link\" href=\"https://sepolia.etherscan.io/\">https://sepolia.etherscan.io/ <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a></p>\n<p>Chainlink官方文档：<a class=\"link\" href=\"https://docs.chain.link/\">https://docs.chain.link <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a></p>\n<p>以太坊货币换算：<a class=\"link\" href=\"https://eth-converter.com/\">https://eth-converter.com/ <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a></p>\n<p>AggregatorV3Interface接口源码：<a class=\"link\" href=\"https://github.com/smartcontractkit/chainlink/blob/develop/contracts/src/v0.6/interfaces/AggregatorV3Interface.sol\">https://github.com/smartcontractkit/chainlink/blob/develop/contracts/src/v0.6/interfaces/AggregatorV3Interface.sol <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a></p>\n<p>Solidity 使用文档：<a class=\"link\" href=\"https://solidity-by-example.org/\">https://solidity-by-example.org <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a></p>\n<h2 id=\"智能合约\"><a href=\"#智能合约\" class=\"headerlink\" title=\"智能合约\"></a>智能合约</h2><p>智能合约是约定多个参与方的一些列指令。不同的是，传统合同是写在纸上的，而智能合约是代码写的，并且嵌入到一个去中心化区块链平台，在这个去中心化区块链平台中被执行；</p>\n<p>将链上去中心化逻辑和链下去中心化数据和计算相结合，这个东西就叫做混合型智能合约。</p>\n<p>混合智能合约会用到<code>Chainlink</code>。这是一个组件化，去中心化的预言机网络；不仅可以为智能合约提供外部数据，还可以提供链下计算。本课程和笔记都将基于这个进行开展。</p>\n<blockquote>\n<p>from Chatgpt : 预言机网络（Oracle network）是一种基于区块链技术的系统，它的主要目标是将现实世界的数据引入区块链中，从而使智能合约能够访问并使用这些数据。智能合约通常无法直接获取外部数据，因为它们在区块链内部运行，并且无法直接连接到外部世界的数据源。预言机网络解决了这个问题，允许区块链与外部数据进行交互。</p>\n</blockquote>\n<h3 id=\"应用\"><a href=\"#应用\" class=\"headerlink\" title=\"应用\"></a>应用</h3><p>不容易被机构欺骗，通过智能合约可以亲身进入这个行业，所有记录都是公开，透明且不可篡改的。</p>\n<h2 id=\"第一笔交易\"><a href=\"#第一笔交易\" class=\"headerlink\" title=\"第一笔交易\"></a>第一笔交易</h2><p>在chrome浏览器中安装插件METAMASK，注册一个账户并开通两个钱包，分别叫Account 1和 Account 2</p>\n<p>因为是学习与测试用的钱包，所以哈希地址就不打码了（反正里面也没钱）</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"img/Patrick Collins_blockchain_note/image-20240109233040953.png\" alt=\"image-20240109233040953\" style=\"zoom:80%;\">\n\n<p>连接测试网络 Sepolia：</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"img/Patrick Collins_blockchain_note/image-20240109233120241.png\" alt=\"image-20240109233120241\" style=\"zoom:80%;\">\n\n<p>前往测试网络的水龙头，获取测试币<a class=\"link\" href=\"https://faucets.chain.link/\">https://faucets.chain.link <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a></p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"img/Patrick Collins_blockchain_note/image-20240110144901761.png\" alt=\"image-20240110144901761\" style=\"zoom: 67%;\">\n\n<p>在METAMASK中也能看到已经获取到了测试币</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"img/Patrick Collins_blockchain_note/image-20240110145343247.png\" alt=\"image-20240110145343247\" style=\"zoom:50%;\">\n\n<p>在<a class=\"link\" href=\"https://sepolia.etherscan.io/%E4%B8%AD%E4%B9%9F%E5%8F%AF%E4%BB%A5%E6%9F%A5%E8%AF%A2%E5%88%B0%E5%AF%B9%E5%BA%94%E7%9A%84%E4%BA%A4%E6%98%93\">https://sepolia.etherscan.io/中也可以查询到对应的交易 <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a></p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"img/Patrick Collins_blockchain_note/image-20240112093457519.png\" alt=\"image-20240112093457519\">\n\n<p>对于上图，交易手续费价格计算：<br><mjx-container class=\"MathJax\" jax=\"SVG\" display=\"true\"><svg style=\"vertical-align: -0.566ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"90.166ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 39853.2 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D447\" d=\"M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(704,0)\"><path data-c=\"1D45F\" d=\"M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1155,0)\"><path data-c=\"1D44E\" d=\"M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1684,0)\"><path data-c=\"1D45B\" d=\"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(2284,0)\"><path data-c=\"1D460\" d=\"M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(2753,0)\"><path data-c=\"1D44E\" d=\"M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(3282,0)\"><path data-c=\"1D450\" d=\"M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(3715,0)\"><path data-c=\"1D461\" d=\"M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(4076,0)\"><path data-c=\"1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(4421,0)\"><path data-c=\"1D45C\" d=\"M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(4906,0)\"><path data-c=\"1D45B\" d=\"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(5506,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(5895,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">交</text></g><g data-mml-node=\"mi\" transform=\"translate(6895,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">易</text></g><g data-mml-node=\"mi\" transform=\"translate(7895,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">手</text></g><g data-mml-node=\"mi\" transform=\"translate(8895,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">续</text></g><g data-mml-node=\"mi\" transform=\"translate(9895,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">费</text></g><g data-mml-node=\"mo\" transform=\"translate(10895,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(11561.8,0)\"><path data-c=\"3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(12617.6,0)\"><path data-c=\"1D43A\" d=\"M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q492 659 471 656T418 643T357 615T294 567T236 496T189 394T158 260Q156 242 156 221Q156 173 170 136T206 79T256 45T308 28T353 24Q407 24 452 47T514 106Q517 114 529 161T541 214Q541 222 528 224T468 227H431Q425 233 425 235T427 254Q431 267 437 273H454Q494 271 594 271Q634 271 659 271T695 272T707 272Q721 272 721 263Q721 261 719 249Q714 230 709 228Q706 227 694 227Q674 227 653 224Q646 221 643 215T629 164Q620 131 614 108Q589 6 586 3Q584 1 581 1Q571 1 553 21T530 52Q530 53 528 52T522 47Q448 -22 322 -22Q201 -22 126 55T50 252Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(13403.6,0)\"><path data-c=\"1D44E\" d=\"M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(13932.6,0)\"><path data-c=\"1D460\" d=\"M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(14401.6,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(14846.2,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(15290.9,0)\"><path data-c=\"1D443\" d=\"M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(16041.9,0)\"><path data-c=\"1D45F\" d=\"M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(16492.9,0)\"><path data-c=\"1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(16837.9,0)\"><path data-c=\"1D450\" d=\"M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(17270.9,0)\"><path data-c=\"1D452\" d=\"M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(17736.9,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(18125.9,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">燃</text></g><g data-mml-node=\"mi\" transform=\"translate(19125.9,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">气</text></g><g data-mml-node=\"mi\" transform=\"translate(20125.9,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">价</text></g><g data-mml-node=\"mi\" transform=\"translate(21125.9,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">格</text></g><g data-mml-node=\"mo\" transform=\"translate(22125.9,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(22514.9,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(22959.6,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(23404.2,0)\"><path data-c=\"2217\" d=\"M229 286Q216 420 216 436Q216 454 240 464Q241 464 245 464T251 465Q263 464 273 456T283 436Q283 419 277 356T270 286L328 328Q384 369 389 372T399 375Q412 375 423 365T435 338Q435 325 425 315Q420 312 357 282T289 250L355 219L425 184Q434 175 434 161Q434 146 425 136T401 125Q393 125 383 131T328 171L270 213Q283 79 283 63Q283 53 276 44T250 35Q231 35 224 44T216 63Q216 80 222 143T229 213L171 171Q115 130 110 127Q106 124 100 124Q87 124 76 134T64 161Q64 166 64 169T67 175T72 181T81 188T94 195T113 204T138 215T170 230T210 250L74 315Q65 324 65 338Q65 353 74 363T98 374Q106 374 116 368T171 328L229 286Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(23904.2,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(24348.9,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(24793.6,0)\"><path data-c=\"1D448\" d=\"M107 637Q73 637 71 641Q70 643 70 649Q70 673 81 682Q83 683 98 683Q139 681 234 681Q268 681 297 681T342 682T362 682Q378 682 378 672Q378 670 376 658Q371 641 366 638H364Q362 638 359 638T352 638T343 637T334 637Q295 636 284 634T266 623Q265 621 238 518T184 302T154 169Q152 155 152 140Q152 86 183 55T269 24Q336 24 403 69T501 205L552 406Q599 598 599 606Q599 633 535 637Q511 637 511 648Q511 650 513 660Q517 676 519 679T529 683Q532 683 561 682T645 680Q696 680 723 681T752 682Q767 682 767 672Q767 650 759 642Q756 637 737 637Q666 633 648 597Q646 592 598 404Q557 235 548 205Q515 105 433 42T263 -22Q171 -22 116 34T60 167V183Q60 201 115 421Q164 622 164 628Q164 635 107 637Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(25560.6,0)\"><path data-c=\"1D460\" d=\"M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(26029.6,0)\"><path data-c=\"1D44E\" d=\"M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(26558.6,0)\"><path data-c=\"1D454\" d=\"M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(27035.6,0)\"><path data-c=\"1D452\" d=\"M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(27501.6,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(27946.2,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(28390.9,0)\"><path data-c=\"1D44F\" d=\"M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(28819.9,0)\"><path data-c=\"1D466\" d=\"M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(29309.9,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(29754.6,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(30199.2,0)\"><path data-c=\"1D447\" d=\"M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(30903.2,0)\"><path data-c=\"1D465\" d=\"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(31475.2,0)\"><path data-c=\"1D45B\" d=\"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(32075.2,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(32464.2,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">使</text></g><g data-mml-node=\"mi\" transform=\"translate(33464.2,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">用</text></g><g data-mml-node=\"mi\" transform=\"translate(34464.2,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">了</text></g><g data-mml-node=\"mi\" transform=\"translate(35464.2,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">的</text></g><g data-mml-node=\"mi\" transform=\"translate(36464.2,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">燃</text></g><g data-mml-node=\"mi\" transform=\"translate(37464.2,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">气</text></g><g data-mml-node=\"mi\" transform=\"translate(38464.2,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">量</text></g><g data-mml-node=\"mo\" transform=\"translate(39464.2,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container><br>有Account 1 向 Account 2 发送 0.05个测试币</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"img/Patrick Collins_blockchain_note/image-20240112094858855.png\" alt=\"image-20240112094858855\">\n\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"img/Patrick Collins_blockchain_note/image-20240112095159024.png\" alt=\"image-20240112095159024\" style=\"zoom:50%;\">\n\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"img/Patrick Collins_blockchain_note/image-20240112095206377.png\" alt=\"image-20240112095206377\" style=\"zoom:50%;\">\n\n<center><b>OKay，恭喜你已经完整地完成了一笔交易！</b></center>\n\n\n\n<h2 id=\"概念知识快速总结\"><a href=\"#概念知识快速总结\" class=\"headerlink\" title=\"概念知识快速总结\"></a>概念知识快速总结</h2><p><em>// P.S说到底，这份笔记更多是为了记载实战方面的，因此，关于概念的概括一下就过了</em></p>\n<h3 id=\"权益机制\"><a href=\"#权益机制\" class=\"headerlink\" title=\"权益机制\"></a>权益机制</h3><p>比特币和前期的以太坊使用的是工作量证明机制（具体见”北京大学肖臻老师《区块链技术与应用》公开课 笔记.md”），而在以太坊2.0中，改为了权益机制；</p>\n<p>不同于工作量的证明，在权益机制中，参与区块创建以及验证的叫验证者，而成为验证者需要抵押一定数量的以太币用来确保不会恶意发布交易区块；之后系统会根据算法选举出是哪一个验证者来负责创建新的区块（算法在未来可能更新换代，作为开发者没什么必要学习），在其他验证者验证这个区块交易的真实性以及有效性之后会给予他奖励，如果出现不正当行为，可能会被踢出验证者甚至失去那部分抵押的比特币；</p>\n<p>以太坊 2.0 的权益机制还包括社区治理，即验证者可以参与提案和投票，对网络的升级和改变提出建议，并共同决定网络的发展方向。</p>\n<p>关于验证者退出：验证者可以随时退出，但是抵押的以太币不会立刻归还，这是为了防止恶意进出的问题</p>\n<h3 id=\"关于攻击\"><a href=\"#关于攻击\" class=\"headerlink\" title=\"关于攻击\"></a>关于攻击</h3><p>区块链攻击主要分为女巫攻击以及51%攻击</p>\n<p>在权益证明机制中，由于成为验证者需要支付一定量的以太币，并且存在验证这一环节，导致试图创建假帐号影响区块链这一行为需要付出高额成本，这可以很好地预防女巫攻击。</p>\n<p>关于51%攻击，当其掌握足够多的算力，直接创造一条区块链，长度比中心链的一半还要长，那么就可以影响中心链到它之上运行，但是随着区块链不断使用，中心链不断加长，51%攻击所需要的算力也在不断提高，直至近乎不可能做到。</p>\n<h2 id=\"Solidity-Remix\"><a href=\"#Solidity-Remix\" class=\"headerlink\" title=\"Solidity(Remix)\"></a>Solidity(Remix)</h2><p>网站地址：<a class=\"link\" href=\"https://remix.ethereum.org/\">https://remix.ethereum.org/ <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a></p>\n<p>一个集成开发环境，编写和交互智能合约的地方</p>\n<h3 id=\"第一个智能合约\"><a href=\"#第一个智能合约\" class=\"headerlink\" title=\"第一个智能合约\"></a>第一个智能合约</h3><p>新建一个sol文件，输入以下内容</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//SPDX-License-Identifier: MIT</span><br><span class=\"line\">//因为solidity更新频率极高，我们需要在文件开头告诉代码，solidity的版本</span><br><span class=\"line\">pragma solidity 0.8.7;</span><br><span class=\"line\"></span><br><span class=\"line\">//关键字，告诉接下来是定义智能合约的内容</span><br><span class=\"line\">contract SimpleStorage{</span><br><span class=\"line\">    //↓这个初始化默认是0</span><br><span class=\"line\">    uint256 favNum;</span><br><span class=\"line\">    function store(uint256 _favNum) public{</span><br><span class=\"line\">        favNum = _favNum;</span><br><span class=\"line\">    } </span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure>\n\n<p>如果想定义其他类型的数据变量：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">bool judge = true;</span><br><span class=\"line\">//↓这个初始化默认是0,256代表分配空间，不写的话默认是256</span><br><span class=\"line\">uint256 favNum;</span><br><span class=\"line\">string word = \"helloworld\";</span><br><span class=\"line\">int256 num2= 1018;</span><br><span class=\"line\">address myadress = 0xE9f22C0cB28f58a74574d88679B4A3F933e3d51c;</span><br><span class=\"line\">//byte最大为32</span><br><span class=\"line\">bytes32 A = \"good\";</span><br></pre></td></tr></table></figure>\n\n<p>在虚拟环境部署合约：</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"img/Patrick Collins_blockchain_note/image-20240123155705037.png\" alt=\"image-20240123155705037\">\n\n<p>使用合约中的方法，修改区块中的数据，相当于发布一条“交易”</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"img/Patrick Collins_blockchain_note/image-20240123155823210.png\" alt=\"image-20240123155823210\" style=\"zoom:67%;\">\n\n<p>观察到交易成功，且产生燃气费</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"img/Patrick Collins_blockchain_note/image-20240123155927054.png\" alt=\"image-20240123155927054\" style=\"zoom:67%;\">\n\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"img/Patrick Collins_blockchain_note/image-20240123155959166.png\" alt=\"image-20240123155959166\" style=\"zoom:67%;\">\n\n<p>在此基础上更进一步</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> //view,pure</span><br><span class=\"line\">function retrieve() public view returns (uint256){</span><br><span class=\"line\">    return favNum;</span><br><span class=\"line\">}</span><br><span class=\"line\">function add() public pure returns (uint256){</span><br><span class=\"line\">    return (1+1);</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure>\n\n<p><code>view</code>：<code>solidity</code>得一个关键字，代表了这个函数只会读取合约的状态，因而不会产生燃气费；</p>\n<p><code>pure</code>：<code>solidity</code>得一个关键字，代表了这个函数既不会修改合约状态也读取不了合约状态，通常会做一些常用算法或者是一些不需要读取数据的算法，因而也\t不会产生燃气费；</p>\n<p>图形界面上的效果：</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"img/Patrick Collins_blockchain_note/image-20240125150543392.png\" alt=\"image-20240125150543392\" style=\"zoom: 67%;\">\n\n\n\n<p>点击蓝色按钮，不发送交易，我们只是在链下读取数值，因此不产生燃气费，调用这些方法是免费的，但如果在消耗gas的函数中调用它，就会产生执行费用。</p>\n<h3 id=\"结构体和数组\"><a href=\"#结构体和数组\" class=\"headerlink\" title=\"结构体和数组\"></a>结构体和数组</h3><p>结构体定义全部是分号，只有使用的时候内部是逗号；</p>\n<p>效果如下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">struct People {</span><br><span class=\"line\">        uint256 favNum;</span><br><span class=\"line\">        string name;</span><br><span class=\"line\">    }</span><br><span class=\"line\">    // People 结构体的实例化</span><br><span class=\"line\">People public person = People({favNum: 2, name: \"Peter\"});</span><br></pre></td></tr></table></figure>\n\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"img/Patrick Collins_blockchain_note/image-20240125153122214.png\" alt=\"image-20240125153122214\" style=\"zoom:67%;\">\n\n<p>声明变量的类型，然后是对象的可见性，最后是变量名。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">People[] public people;</span><br><span class=\"line\">function addperson(string memory _name,uint256 _favNum) public{</span><br><span class=\"line\">    People memory newperson = People({favNum:_favNum,name:_name});</span><br><span class=\"line\">    people.push(newperson);</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure>\n\n<p>也可以对数组长度进行限制：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">People[3] public people;</span><br></pre></td></tr></table></figure>\n\n<p>最终效果：</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"img/Patrick Collins_blockchain_note/image-20240125155456902.png\" alt=\"image-20240125155456902\" style=\"zoom:67%;\">\n\n\n\n<p>值得一提的是，在solidity中有6种方式可以用于存储数,分别是<code>stack</code>、<code>memory</code>、<code>storage</code>、<code>calldata</code>、<code>code</code>、<code>logs</code></p>\n<p>其中，<code>memory</code>表示可以被修改的临时变量，<code>calldata</code>表示不可以被临时修改的临时变量，二者在方法结束过后会自行销毁，案例如下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">function addperson(string memory _name,uint256 _favNum) public{</span><br><span class=\"line\">    _name = 'cat'; //不会报错</span><br><span class=\"line\">    People memory newperson = People({favNum:_favNum,name:_name});</span><br><span class=\"line\">    people.push(newperson);</span><br><span class=\"line\">}</span><br><span class=\"line\">function addperson(string calldata _name,uint256 _favNum) public{</span><br><span class=\"line\">    _name = 'cat' ;//会报错:TypeError: Type literal_string \"cat\" is not implicitly convertible to expected type string calldata.--&gt; contracts/SimpeStorage.sol:18:17:</span><br><span class=\"line\">    People memory newperson = People({favNum:_favNum,name:_name});</span><br><span class=\"line\">    people.push(newperson);</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure>\n\n<p>而storage表示可以被修改的永久变量，不写关键字的话默认存储在storage；</p>\n<h3 id=\"Mapping映射\"><a href=\"#Mapping映射\" class=\"headerlink\" title=\"Mapping映射\"></a>Mapping映射</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//SPDX-License-Identifier: MIT</span><br><span class=\"line\">//因为solidity更新频率极高，我们需要在文件开头告诉代码，solidity的版本</span><br><span class=\"line\">pragma solidity 0.8.7;</span><br><span class=\"line\"></span><br><span class=\"line\">//关键字，告诉接下来是定义智能合约的内容</span><br><span class=\"line\">contract SimpleStorage{</span><br><span class=\"line\">    //↓这个初始化默认是0</span><br><span class=\"line\">    uint256 favNum;</span><br><span class=\"line\">    mapping (string=&gt;uint256) public nameToFavNum;</span><br><span class=\"line\">    // People 结构体的定义</span><br><span class=\"line\">    struct People {</span><br><span class=\"line\">        uint256 favNum;</span><br><span class=\"line\">        string name;</span><br><span class=\"line\">    }</span><br><span class=\"line\">    People[] public people;</span><br><span class=\"line\">    function addperson(string memory _name,uint256 _favNum) public{</span><br><span class=\"line\">        People memory newperson = People({favNum:_favNum,name:_name});</span><br><span class=\"line\">        people.push(newperson);</span><br><span class=\"line\">        nameToFavNum[_name]=_favNum;</span><br><span class=\"line\">    }</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure>\n\n\n\n<p>提供了一个字符转uint的索引，效果如下：</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"img/Patrick Collins_blockchain_note/image-20240125222714288.png\" alt=\"image-20240125222714288\" style=\"zoom: 67%;\">\n\n\n\n<h3 id=\"在测试网络上布置智能合约\"><a href=\"#在测试网络上布置智能合约\" class=\"headerlink\" title=\"在测试网络上布置智能合约\"></a>在测试网络上布置智能合约</h3><img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"img/Patrick Collins_blockchain_note/image-20240125230207782.png\" alt=\"image-20240125230207782\" style=\"zoom: 67%;\">\n\n<p>修改环境，选择账户，部署，</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"img/Patrick Collins_blockchain_note/image-20240125230239939.png\" alt=\"image-20240125230239939\" style=\"zoom:80%;\">\n\n<p>账单：</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"img/Patrick Collins_blockchain_note/image-20240125230536425.png\" alt=\"image-20240125230536425\" style=\"zoom: 67%;\">\n\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"img/Patrick Collins_blockchain_note/image-20240125230559283.png\" alt=\"image-20240125230559283\">\n\n<p>发送交易：</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"img/Patrick Collins_blockchain_note/image-20240125231013855.png\" alt=\"image-20240125231013855\" style=\"zoom:80%;\">\n\n<p>点击蓝色按钮，不会产生交易面板提示</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"img/Patrick Collins_blockchain_note/image-20240125231634552.png\" alt=\"image-20240125231634552\" style=\"zoom: 67%;\">\n\n<p>查看合约：</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"img/Patrick Collins_blockchain_note/image-20240125230758121.png\" alt=\"image-20240125230758121\" style=\"zoom:80%;\">\n\n<p>进入交易链接，可以看到具体交易内容：</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"img/Patrick Collins_blockchain_note/image-20240125231517791.png\" alt=\"image-20240125231517791\" style=\"zoom:80%;\">\n\n<p>这是由于区块链的公开透明的特性。</p>\n<h3 id=\"合约交互\"><a href=\"#合约交互\" class=\"headerlink\" title=\"合约交互\"></a>合约交互</h3><p>创建新的文件<code>SimpleFactory.sol</code></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/*</span><br><span class=\"line\">SimpleFactory.sol</span><br><span class=\"line\">*/</span><br><span class=\"line\">//SPDX-License-Identifier:MIT</span><br><span class=\"line\">pragma solidity ^0.8.7;</span><br><span class=\"line\">//引用其他合约</span><br><span class=\"line\">import \"./SimpleDemo.sol\";</span><br><span class=\"line\"></span><br><span class=\"line\">contract SimpleFactory{</span><br><span class=\"line\">    SimpleDemo[] public simpleDemoArray;</span><br><span class=\"line\">    function createSimpleStorageContract() public{</span><br><span class=\"line\">        SimpleDemo simpleDemo = new SimpleDemo();</span><br><span class=\"line\">        //存进去的其实是每一个simpleDemo的地址</span><br><span class=\"line\">        simpleDemoArray.push(simpleDemo);</span><br><span class=\"line\">    }</span><br><span class=\"line\">    function sfStore (uint256 _simpleDemoIndex,uint256 _simpleStorageNumber) public {</span><br><span class=\"line\">        //Address</span><br><span class=\"line\">        //ABI 应用二进制接口</span><br><span class=\"line\">        //通过下标查的simpleDemo的地址</span><br><span class=\"line\">        SimpleDemo simpleDemo = simpleDemoArray[_simpleDemoIndex];</span><br><span class=\"line\">        //调用其他合约里的方法</span><br><span class=\"line\">        simpleDemo.FavNumEdit(_simpleStorageNumber);</span><br><span class=\"line\">    }</span><br><span class=\"line\">    function sfGet(uint256 _simpleDemoIndex) public view returns(uint256){</span><br><span class=\"line\">        return simpleDemoArray[_simpleDemoIndex].retrieve();</span><br><span class=\"line\">    }</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure>\n\n<p>结果：</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"img/Patrick Collins_blockchain_note/image-20240127234611622.png\" alt=\"image-20240127234611622\" style=\"zoom:67%;\">\n\n<h3 id=\"继承和重载\"><a href=\"#继承和重载\" class=\"headerlink\" title=\"继承和重载\"></a>继承和重载</h3><p>在<code>SimpleDemo.sol</code>中</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/*</span><br><span class=\"line\">父类SimpleDemo.sol</span><br><span class=\"line\">*/</span><br><span class=\"line\">contract SimpleDemo{</span><br><span class=\"line\">    //↓这个初始化默认是0</span><br><span class=\"line\">    uint256 favNum;</span><br><span class=\"line\">    function store(uint256 _favNum) public virtual{</span><br><span class=\"line\">        favNum = _favNum;</span><br><span class=\"line\">    } </span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure>\n\n<p>在子类<code>ExtraDemo.sol</code>中</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/*</span><br><span class=\"line\">子类ExtraDemo.sol</span><br><span class=\"line\">*/</span><br><span class=\"line\">import \"./SimpleDemo.sol\";</span><br><span class=\"line\">contract ExtraDemo is SimpleDemo{</span><br><span class=\"line\">    //override</span><br><span class=\"line\">    //virtual override</span><br><span class=\"line\">    function store(uint256 _favNum) public override{</span><br><span class=\"line\">        favNum = _favNum + 5;</span><br><span class=\"line\">    }</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure>\n\n<p><em>//在父类中用<code>virtual</code>标注可以重载的方法，在子类中用<code>override</code>标注并实现重载</em></p>\n<p>效果：</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"img/Patrick Collins_blockchain_note/image-20240129210306564.png\" alt=\"image-20240129210306564\" style=\"zoom:67%;\">\n\n<h3 id=\"使用dataFeed并向合约打钱\"><a href=\"#使用dataFeed并向合约打钱\" class=\"headerlink\" title=\"使用dataFeed并向合约打钱\"></a>使用dataFeed并向合约打钱</h3><p>本节资料来源：<a class=\"link\" href=\"https://docs.chain.link/data-feeds/using-data-feeds\">使用Data Feeds 关于 EVM 链 | Chainlink 文档 <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a></p>\n<blockquote>\n<p>为了发送ETH或其他区块链原生通证，函数需要被标记为payable</p>\n<p>Chainlink可以在去中心化环境中为智能合约获取外部数据和进行外部计算</p>\n<p>Chainlink喂价是从现实世界中读取定价信息或其他数据的方法</p>\n<p>Chainlink VRF 是一种将可证明的随机数从现实世界获取到智能合约中的方法。</p>\n<p>Chainlink Keepers是一种去中心化驱动事件的方法</p>\n</blockquote>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"img/Patrick Collins_blockchain_note/image-20240205130649419.png\" alt=\"image-20240205130649419\" style=\"zoom:50%;\">\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/*</span><br><span class=\"line\">Fundeme.sol</span><br><span class=\"line\">从用户那里拿钱</span><br><span class=\"line\">把赚来的钱从合约取出来</span><br><span class=\"line\">*/</span><br><span class=\"line\">//SPDX-License-Identifier:MIT</span><br><span class=\"line\">pragma solidity 0.8.7;</span><br><span class=\"line\">import \"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\";</span><br><span class=\"line\">//EVM,Ethereum Virtual Machine</span><br><span class=\"line\">contract FundMe{</span><br><span class=\"line\">    //注意交易的单位是wei</span><br><span class=\"line\">    uint256 public minimumUsd = 50;</span><br><span class=\"line\">    function fund() public payable{// 把钱转进合约里</span><br><span class=\"line\">        //检查msg.value是否大于一定数量的美元,为否时会revert fund()回滚并报错</span><br><span class=\"line\">        // msg.value == 0.03*1e18</span><br><span class=\"line\">        require(getConversionRate(msg.value)&gt;= minimumUsd,\"Didn't send enough\");</span><br><span class=\"line\">    }</span><br><span class=\"line\"></span><br><span class=\"line\">    function getPrice() public view returns(uint256){//得到汇率(USD/ETH)</span><br><span class=\"line\">        //ABIw</span><br><span class=\"line\">        //Address 0x694AA1769357215DE4FAC081bf1f309aDC325306</span><br><span class=\"line\">        AggregatorV3Interface priceFeed = AggregatorV3Interface(0x694AA1769357215DE4FAC081bf1f309aDC325306);</span><br><span class=\"line\">        ( ,int256 answer,,,) = priceFeed.latestRoundData();</span><br><span class=\"line\">        </span><br><span class=\"line\">        return uint256(answer*1e10);</span><br><span class=\"line\">    }</span><br><span class=\"line\"></span><br><span class=\"line\">    function getVersion() public view returns (uint256){//获取了链外数据源的版本信息，并将其作为uint256类型返回</span><br><span class=\"line\">        AggregatorV3Interface priceFeed = AggregatorV3Interface(0x694AA1769357215DE4FAC081bf1f309aDC325306);</span><br><span class=\"line\">        return priceFeed.version();</span><br><span class=\"line\">    }</span><br><span class=\"line\">    function getConversionRate(uint256 ethAmount)public view returns (uint256){</span><br><span class=\"line\">        uint256 ethPrice = getPrice();</span><br><span class=\"line\">        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18;</span><br><span class=\"line\">        return ethAmountInUsd;</span><br><span class=\"line\">    }</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure>\n\n<p>此处<code>( ,int256 answer,,,) = priceFeed.latestRoundData();</code>使用<code>,</code>接受不需要的返回值</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//注意latestRoundData()返回值</span><br><span class=\"line\">function latestRoundData()</span><br><span class=\"line\">  external</span><br><span class=\"line\">  view</span><br><span class=\"line\">  returns (</span><br><span class=\"line\">    uint80 roundId,</span><br><span class=\"line\">    int256 answer,</span><br><span class=\"line\">    uint256 startedAt,</span><br><span class=\"line\">    uint256 updatedAt,</span><br><span class=\"line\">    uint80 answeredInRound</span><br><span class=\"line\">  );</span><br></pre></td></tr></table></figure>\n\n<p>执行Fundme合约</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"img/Patrick Collins_blockchain_note/image-20240205140809591.png\" alt=\"image-20240205140809591\" style=\"zoom: 67%;\">\n\n<p>50/2290==0.0218150087260035，因此低于这个价格的交易会失败并回滚</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"img/Patrick Collins_blockchain_note/image-20240205140823024.png\" alt=\"image-20240205140823024\" style=\"zoom:67%;\">\n\n<h3 id=\"库\"><a href=\"#库\" class=\"headerlink\" title=\"库\"></a>库</h3><p>库的作用的是可以将一些方法写入指定文件，方便开发时调用它们</p>\n<p>新建文件<code>PriceConverter.sol</code></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/*</span><br><span class=\"line\">PriceConverter.sol</span><br><span class=\"line\">*/</span><br><span class=\"line\">//SPDX-License-Identifier: MIT</span><br><span class=\"line\">pragma solidity 0.8.7;</span><br><span class=\"line\">import \"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\";</span><br><span class=\"line\">library PriceConverter{</span><br><span class=\"line\">    function getPrice() internal view returns(uint256){//得到汇率(USD/ETH)</span><br><span class=\"line\">        //ABIw</span><br><span class=\"line\">        //Address 0x694AA1769357215DE4FAC081bf1f309aDC325306</span><br><span class=\"line\">        AggregatorV3Interface priceFeed = AggregatorV3Interface(0x694AA1769357215DE4FAC081bf1f309aDC325306);</span><br><span class=\"line\">        ( ,int256 answer,,,) = priceFeed.latestRoundData();</span><br><span class=\"line\">        </span><br><span class=\"line\">        return uint256(answer*1e10);</span><br><span class=\"line\">    }</span><br><span class=\"line\"></span><br><span class=\"line\">    function getVersion() internal view returns (uint256){//获取了链外数据源的版本信息，并将其作为uint256类型返回</span><br><span class=\"line\">        AggregatorV3Interface priceFeed = AggregatorV3Interface(0x694AA1769357215DE4FAC081bf1f309aDC325306);</span><br><span class=\"line\">        return priceFeed.version();</span><br><span class=\"line\">    }</span><br><span class=\"line\">    function getConversionRate(uint256 ethAmount) internal view returns (uint256){</span><br><span class=\"line\">        uint256 ethPrice = getPrice();</span><br><span class=\"line\">        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18;</span><br><span class=\"line\">        return ethAmountInUsd;</span><br><span class=\"line\">    }</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure>\n\n<p>将刚才<code>Fundme.sol</code>中的<code>getPrice() , getVersion() , getConversionRate(uint256 ethAmount)</code>取出并放入新文件中。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/*</span><br><span class=\"line\">Fundme.sol</span><br><span class=\"line\">*/</span><br><span class=\"line\">//EVM,Ethereum Virtual Machine</span><br><span class=\"line\">contract FundMe{</span><br><span class=\"line\">    using PriceConverter for uint256;//会将PriceConverter放到uint256下</span><br><span class=\"line\">    //注意交易的单位是wei</span><br><span class=\"line\">    uint256 public minimumUsd = 50;</span><br><span class=\"line\">    address[] public funders;</span><br><span class=\"line\">    mapping(address=&gt;uint256) public addressToAccountFunded;</span><br><span class=\"line\">    function fund() public payable{// 把钱转进合约里</span><br><span class=\"line\">        //检查msg.value是否大于一定数量的美元,为否时会revert fund()回滚并报错</span><br><span class=\"line\">        // msg.value == 0.03*1e18</span><br><span class=\"line\">        require(msg.value.getConversionRate()&gt;= minimumUsd,\"Didn't send enough\");</span><br><span class=\"line\">        funders.push(msg.sender);</span><br><span class=\"line\">        addressToAccountFunded[msg.sender]=msg.value;</span><br><span class=\"line\">    }</span><br><span class=\"line\">    // function withdraw(){}</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure>\n\n<p><code>msg.value.getConversionRate()</code>会自动将<code>msg.value</code>作为<code>getConversionRate()</code>的第一参数，第二第三参数则依次写入括号内。</p>\n<h3 id=\"从合约提取资金\"><a href=\"#从合约提取资金\" class=\"headerlink\" title=\"从合约提取资金\"></a>从合约提取资金</h3><p>三种提取资金的方式</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//transfer</span><br><span class=\"line\">payable(msg.sender).transfer(address(this).balance);</span><br><span class=\"line\">//send</span><br><span class=\"line\">bool sendSuccess = payable(msg.sender).send(address(this).balance);</span><br><span class=\"line\">require(sendSuccess,\"Send failed\");</span><br><span class=\"line\">//call</span><br><span class=\"line\">(bool callSuccess, )=payable(msg.sender).call{value:address(this).balance}.(\"\")</span><br><span class=\"line\">require(callSuccess,\"call failed\");</span><br></pre></td></tr></table></figure>\n\n<p>前两种会受到燃气费的制约，推荐最后一种</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/*</span><br><span class=\"line\">从用户那里拿钱</span><br><span class=\"line\">把赚来的钱从合约取出来</span><br><span class=\"line\">*/</span><br><span class=\"line\">//SPDX-License-Identifier:MIT</span><br><span class=\"line\">pragma solidity 0.8.7;</span><br><span class=\"line\">import \"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\";</span><br><span class=\"line\">import \"./PriceConverter.sol\";</span><br><span class=\"line\">//EVM,Ethereum Virtual Machine</span><br><span class=\"line\">contract FundMe{</span><br><span class=\"line\">    using PriceConverter for uint256;</span><br><span class=\"line\">    //注意交易的单位是wei</span><br><span class=\"line\">    uint256 public minimumUsd = 50;</span><br><span class=\"line\">    address public owner;</span><br><span class=\"line\">    address[] public funders;</span><br><span class=\"line\">    mapping(address=&gt;uint256) public addressToAccountFunded;</span><br><span class=\"line\">    constructor(){</span><br><span class=\"line\">        owner = msg.sender;</span><br><span class=\"line\">    }</span><br><span class=\"line\">    function fund() public payable{// 把钱转进合约里</span><br><span class=\"line\">        //检查msg.value是否大于一定数量的美元,为否时会revert fund()回滚并报错</span><br><span class=\"line\">        // msg.value == 0.03*1e18</span><br><span class=\"line\">        require(msg.value.getConversionRate()&gt;= minimumUsd,\"Didn't send enough\");</span><br><span class=\"line\">        funders.push(msg.sender);</span><br><span class=\"line\">        addressToAccountFunded[msg.sender]=msg.value;</span><br><span class=\"line\">    }</span><br><span class=\"line\">    function withdraw() public onlyOwner{</span><br><span class=\"line\">        // for(/*start index, ending index, step amount*/)</span><br><span class=\"line\">        for (uint256 funderIndex = 0;funderIndex &lt; funders.length;funderIndex ++){</span><br><span class=\"line\">            address funder = funders[funderIndex];</span><br><span class=\"line\">            addressToAccountFunded[funder] = 0;//清零账户余额</span><br><span class=\"line\">        }</span><br><span class=\"line\">        //重置数组</span><br><span class=\"line\">        funders = new address[](0); //0个初始元素</span><br><span class=\"line\">        //call</span><br><span class=\"line\">        (bool callSuccess,)=payable(msg.sender).call{value:address(this).balance}(\"\");</span><br><span class=\"line\">        require(callSuccess,\"call failed\");</span><br><span class=\"line\">    }</span><br><span class=\"line\">    modifier onlyOwner{</span><br><span class=\"line\">        require(msg.sender == owner,\"Sender is not owner\");</span><br><span class=\"line\">        _;  </span><br><span class=\"line\">    }</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure>\n\n<p>onlyOwner对withdraw的执行者进行了约束，在withdraw执行前会判断合约发起人喝执行人是否相同，只有执行人才可以使用此方法，否则回滚并报错。</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"img/Patrick Collins_blockchain_note/image-20240219154857856.png\" alt=\"image-20240219154857856\" style=\"zoom:80%;\">\n\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"img/Patrick Collins_blockchain_note/image-20240219154902367.png\" alt=\"image-20240219154902367\" style=\"zoom: 80%;\">\n\n<h3 id=\"优化措施\"><a href=\"#优化措施\" class=\"headerlink\" title=\"优化措施\"></a>优化措施</h3><h4 id=\"修改require\"><a href=\"#修改require\" class=\"headerlink\" title=\"修改require\"></a>修改require</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pragma solidity 0.8.7;</span><br><span class=\"line\">import \"*******\"</span><br><span class=\"line\">//EVM,Ethereum Virtual Machine</span><br><span class=\"line\">error NotOwner();</span><br><span class=\"line\">contract FundMe{</span><br><span class=\"line\">    ***********</span><br><span class=\"line\">    function fund() public payable{// 把钱转进合约里</span><br><span class=\"line\">        ***********</span><br><span class=\"line\">    }</span><br><span class=\"line\">    function withdraw() public onlyOwner{</span><br><span class=\"line\">\t\t***********</span><br><span class=\"line\">    }</span><br><span class=\"line\">    modifier onlyOwner{</span><br><span class=\"line\">        // require(msg.sender == i_owner,\"Sender is not owner\");</span><br><span class=\"line\">        if(msg.sender == i_owner){revert NotOwner();}</span><br><span class=\"line\">        _;  </span><br><span class=\"line\">    }</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure>\n\n<p>使用require会单独保存<code>Sender is not owner</code>，相比<code>error</code>会增加<code>gas</code></p>\n<h3 id=\"recieve和fallback\"><a href=\"#recieve和fallback\" class=\"headerlink\" title=\"recieve和fallback\"></a>recieve和fallback</h3><img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"img/Patrick Collins_blockchain_note/image-20240220135504952.png\" alt=\"image-20240220135504952\" style=\"zoom:80%;\">\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//SPDX-License-Identifier:MIT</span><br><span class=\"line\">pragma solidity 0.8.7;</span><br><span class=\"line\"></span><br><span class=\"line\">contract FallbackExample{</span><br><span class=\"line\">    uint256 public result;</span><br><span class=\"line\"></span><br><span class=\"line\">    receive() external payable {</span><br><span class=\"line\">        result = 1;</span><br><span class=\"line\">    }</span><br><span class=\"line\"></span><br><span class=\"line\">    fallback() external payable { </span><br><span class=\"line\">        result = 2;</span><br><span class=\"line\">    }</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Javascript异步编程\"><a href=\"#Javascript异步编程\" class=\"headerlink\" title=\"Javascript异步编程\"></a>Javascript异步编程</h2><p>关键字<code>async</code>，<code>await</code></p>\n<p>只有标注了<code>async</code>了的方法中才能使用<code>await</code>关键词</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">async</span> <span class=\"keyword\">function</span> <span class=\"title function_\">main</span>(<span class=\"params\"></span>) {</span><br><span class=\"line\">  <span class=\"keyword\">await</span> <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">\"hi\"</span>);</span><br><span class=\"line\">  <span class=\"keyword\">let</span> variable = <span class=\"number\">5</span>;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(variable);</span><br><span class=\"line\">}</span><br><span class=\"line\"><span class=\"title function_\">main</span>()</span><br><span class=\"line\">  .<span class=\"title function_\">then</span>(<span class=\"function\">() =&gt;</span> process.<span class=\"title function_\">exit</span>(<span class=\"number\">0</span>))</span><br><span class=\"line\">  .<span class=\"title function_\">catch</span>(<span class=\"function\">(<span class=\"params\">error</span>) =&gt;</span> {</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(error);</span><br><span class=\"line\">  });</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"将私密数据保存到环境变量中\"><a href=\"#将私密数据保存到环境变量中\" class=\"headerlink\" title=\"将私密数据保存到环境变量中\"></a>将私密数据保存到环境变量中</h2><p>创建.env文件</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">PRIVATE_KEY=0xE9f22C0cB28f58a74574d88679B4A3F933e3d51cyarn</span><br></pre></td></tr></table></figure>\n\n<p>引包，使用</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">require</span>(<span class=\"string\">\"dotenv\"</span>).<span class=\"title function_\">config</span>(); <span class=\"comment\">// 调用 config 方法加载环境变量 </span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(process.<span class=\"property\">env</span>.<span class=\"property\">PRIVATE_KEY</span>);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"进阶：私钥管理\"><a href=\"#进阶：私钥管理\" class=\"headerlink\" title=\"进阶：私钥管理\"></a>进阶：私钥管理</h2><p>资料来源 P57</p>\n<h2 id=\"HardHat\"><a href=\"#HardHat\" class=\"headerlink\" title=\"HardHat\"></a>HardHat</h2><h3 id=\"配置项目\"><a href=\"#配置项目\" class=\"headerlink\" title=\"配置项目\"></a>配置项目</h3><p>1）准备一个空文件夹，终端<code>yarn add --dev hardhat</code></p>\n<p>2）<code>yarn hardhat</code></p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"img/Patrick Collins_blockchain_note/image-20240225225217144.png\" alt=\"image-20240225225217144\">\n\n<p>3）检查solidity版本</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"img/Patrick Collins_blockchain_note/image-20240225231333402.png\" alt=\"image-20240225231333402\">\n\n<p>4）编译，<code>yarn hardhat compile</code></p>\n<p>5）<code>yarn add --dev hardhat-deploy</code>用于简化和管理以太坊智能合约的部署过程</p>\n<p>6）删除<code>deploy.js</code>, 在<code>hardhat.config.js</code>中写入<code>require(\"hardhat-deploy\");</code>之后执行<code>yarn hardhat</code>，在新<code>task</code>中应有<code>deploy</code></p>\n<p>7）建立deploy文件夹，之后的编译脚本就写在这里面</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"img/Patrick Collins_blockchain_note/image-20240225234449556.png\" alt=\"image-20240225234449556\">\n\n<p>8）编写脚本，并编译<code>yarn hardhat deploy</code></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//01-deploy-fund-me.js</span></span><br><span class=\"line\"><span class=\"comment\">//引包，import</span></span><br><span class=\"line\"><span class=\"comment\">//方法定义</span></span><br><span class=\"line\"><span class=\"comment\">//方法使用</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">deployFunc</span>(<span class=\"params\"></span>) {</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">\"hi\"</span>)</span><br><span class=\"line\">}</span><br><span class=\"line\"><span class=\"variable language_\">module</span>.<span class=\"property\">exports</span>.<span class=\"property\">default</span> = deployFunc <span class=\"comment\">//将deplyFunc设置为默认要找的函数</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">PS D:\\study_test\\Hardhat\\hardhat-fund-me-fcc&gt; yarn hardhat deploy</span><br><span class=\"line\">yarn run v1.22.21</span><br><span class=\"line\">$ D:\\study_test\\Hardhat\\hardhat-fund-me-fcc\\node_modules\\.bin\\hardhat deploy</span><br><span class=\"line\">Compiled 3 Solidity files successfully (evm target: london).</span><br><span class=\"line\">hi</span><br><span class=\"line\">Done in 3.12s.</span><br></pre></td></tr></table></figure>\n\n<p>使用<code>yarn add --dev @chainlink/contracts@0.8.0</code>下载chainlink预言机中的合约</p>\n<h3 id=\"Hardhat部署智能合约\"><a href=\"#Hardhat部署智能合约\" class=\"headerlink\" title=\"Hardhat部署智能合约\"></a>Hardhat部署智能合约</h3><h4 id=\"关于node-js的脚本的接口开放和使用\"><a href=\"#关于node-js的脚本的接口开放和使用\" class=\"headerlink\" title=\"关于node.js的脚本的接口开放和使用\"></a>关于node.js的脚本的接口开放和使用</h4><p>这是一个TIP：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// helper-hardhat-config.js</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> networkConfig = {</span><br><span class=\"line\">    <span class=\"number\">11155111</span>: {</span><br><span class=\"line\">        <span class=\"attr\">name</span>: <span class=\"string\">\"Sepolia\"</span>,</span><br><span class=\"line\">        <span class=\"attr\">ethUsdPriceFeed</span>: <span class=\"string\">\"0x694AA1769357215DE4FAC081bf1f309aDC325306\"</span>,</span><br><span class=\"line\">    },</span><br><span class=\"line\">    <span class=\"number\">5</span>: {</span><br><span class=\"line\">        <span class=\"attr\">name</span>: <span class=\"string\">\"Goerli\"</span>,</span><br><span class=\"line\">        <span class=\"attr\">ethUsdPriceFeed</span>: <span class=\"string\">\"0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e\"</span>,</span><br><span class=\"line\">    },</span><br><span class=\"line\">}</span><br><span class=\"line\"><span class=\"variable language_\">module</span>.<span class=\"property\">exports</span> = {<span class=\"comment\">//开放对其他脚本使用的接口</span></span><br><span class=\"line\">    networkConfig,</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//01-deploy-fund-me.js</span></span><br><span class=\"line\"><span class=\"comment\">//使用刚才的接口</span></span><br><span class=\"line\"><span class=\"comment\">//helpconfig代表了helper-hardhat-config.js这个文件</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> helperconfig = <span class=\"built_in\">require</span>(<span class=\"string\">\"../helper-hardhat-config.js\"</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> networkconfig = helperconfig.<span class=\"property\">networkConfig</span></span><br></pre></td></tr></table></figure>\n\n<p>当然也可以这么写</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> { networkconfig } = <span class=\"built_in\">require</span>(<span class=\"string\">\"../helper-hardhat-config.js\"</span>)</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"本地-测试网络部署\"><a href=\"#本地-测试网络部署\" class=\"headerlink\" title=\"本地/测试网络部署\"></a>本地/测试网络部署</h4><p>如果我们没有使用任何测试网</p>\n<p>我们需要写一个<code>Mock</code>脚本，即如果某个合约不存在，我们就部署一个最小化的版本来进行我们的本地测试，</p>\n<p><strong>hardhat-config.js</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">require</span>(<span class=\"string\">\"@nomicfoundation/hardhat-toolbox\"</span>);</span><br><span class=\"line\"><span class=\"built_in\">require</span>(<span class=\"string\">\"hardhat-deploy\"</span>);</span><br><span class=\"line\"><span class=\"built_in\">require</span>(<span class=\"string\">\"dotenv\"</span>).<span class=\"title function_\">config</span>();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/** <span class=\"doctag\">@type</span> import('hardhat/config').HardhatUserConfig */</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// const COINMARKETCAP_API_KEY = process.env.COINMARKETCAP_API_KEY;</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"variable constant_\">SEPOLIA_RPC_URL</span> = process.<span class=\"property\">env</span>.<span class=\"property\">SEPOLIA_RPC_URL</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"variable constant_\">PRIVATE_KEY</span> = process.<span class=\"property\">env</span>.<span class=\"property\">PRIVATE_KEY</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"variable constant_\">ETHERSCAN_API_KEY</span> = process.<span class=\"property\">env</span>.<span class=\"property\">ETHERSCAN_API_KEY</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">module</span>.<span class=\"property\">exports</span> = {</span><br><span class=\"line\">  <span class=\"attr\">solidity</span>: {</span><br><span class=\"line\">    <span class=\"attr\">compilers</span>: [</span><br><span class=\"line\">      {</span><br><span class=\"line\">        <span class=\"attr\">version</span>: <span class=\"string\">\"0.8.7\"</span>,</span><br><span class=\"line\">      },</span><br><span class=\"line\">      {</span><br><span class=\"line\">        <span class=\"attr\">version</span>: <span class=\"string\">\"0.6.6\"</span>,</span><br><span class=\"line\">      },</span><br><span class=\"line\">    ],</span><br><span class=\"line\">  },</span><br><span class=\"line\">  <span class=\"attr\">defaultNetwork</span>: <span class=\"string\">\"hardhat\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">networks</span>: {</span><br><span class=\"line\">    <span class=\"attr\">hardhat</span>: {</span><br><span class=\"line\">      <span class=\"attr\">chainId</span>: <span class=\"number\">31337</span>,</span><br><span class=\"line\">      <span class=\"comment\">// gasPrice: 130000000000,</span></span><br><span class=\"line\">    },</span><br><span class=\"line\">    <span class=\"attr\">sepolia</span>: {</span><br><span class=\"line\">      <span class=\"attr\">url</span>: <span class=\"variable constant_\">SEPOLIA_RPC_URL</span>,</span><br><span class=\"line\">      <span class=\"attr\">accounts</span>: [<span class=\"variable constant_\">PRIVATE_KEY</span>],</span><br><span class=\"line\">      <span class=\"attr\">chainId</span>: <span class=\"number\">11155111</span>,</span><br><span class=\"line\">      <span class=\"attr\">blockConfirmations</span>: <span class=\"number\">6</span>,</span><br><span class=\"line\">    },</span><br><span class=\"line\">  },</span><br><span class=\"line\">  <span class=\"attr\">gasReporter</span>: {</span><br><span class=\"line\">    <span class=\"attr\">enabled</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">    <span class=\"attr\">currency</span>: <span class=\"string\">\"USD\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">outputFile</span>: <span class=\"string\">\"gas-report.txt\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">noColors</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">    <span class=\"comment\">// coinmarketcap: COINMARKETCAP_API_KEY,</span></span><br><span class=\"line\">  },</span><br><span class=\"line\">  <span class=\"attr\">etherscan</span>: {</span><br><span class=\"line\">    <span class=\"attr\">apiKey</span>: <span class=\"variable constant_\">ETHERSCAN_API_KEY</span>,</span><br><span class=\"line\">  },</span><br><span class=\"line\">  <span class=\"attr\">namedAccounts</span>: {</span><br><span class=\"line\">    <span class=\"attr\">deployer</span>: {</span><br><span class=\"line\">      <span class=\"attr\">default</span>: <span class=\"number\">0</span>, <span class=\"comment\">// here this will by default take the first account as deployer</span></span><br><span class=\"line\">      <span class=\"number\">1</span>: <span class=\"number\">0</span>, <span class=\"comment\">// similarly on mainnet it will take the first account as deployer. Note though that depending on how hardhat network are configured, the account 0 on one network can be different than on another</span></span><br><span class=\"line\">    },</span><br><span class=\"line\">  },</span><br><span class=\"line\">  <span class=\"attr\">mocha</span>: {</span><br><span class=\"line\">    <span class=\"attr\">timeout</span>: <span class=\"number\">500000</span>,</span><br><span class=\"line\">  },</span><br><span class=\"line\">};</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p><strong>helper-hardhat-config.js</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// helper-hardhat-config.js</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> networkConfig = {</span><br><span class=\"line\">  <span class=\"number\">31337</span>: {</span><br><span class=\"line\">    <span class=\"attr\">name</span>: <span class=\"string\">\"localhost\"</span>,</span><br><span class=\"line\">  },</span><br><span class=\"line\">  <span class=\"comment\">// Price Feed Address, values can be obtained at https://docs.chain.link/data-feeds/price-feeds/addresses</span></span><br><span class=\"line\">  <span class=\"number\">11155111</span>: {</span><br><span class=\"line\">    <span class=\"attr\">name</span>: <span class=\"string\">\"sepolia\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">ethUsdPriceFeed</span>: <span class=\"string\">\"0x694AA1769357215DE4FAC081bf1f309aDC325306\"</span>,</span><br><span class=\"line\">  },</span><br><span class=\"line\">};</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> developmentChains = [<span class=\"string\">\"hardhat\"</span>, <span class=\"string\">\"localhost\"</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">module</span>.<span class=\"property\">exports</span> = {</span><br><span class=\"line\">  networkConfig,</span><br><span class=\"line\">  developmentChains,</span><br><span class=\"line\">};</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<p><strong>MockV3Aggregator.sol</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//MockV3Aggregator.sol</span><br><span class=\"line\">//SPDX-License-Identifier:MIT</span><br><span class=\"line\">pragma solidity ^0.6.0;</span><br><span class=\"line\"></span><br><span class=\"line\">import \"@chainlink/contracts/src/v0.6/tests/MockV3Aggregator.sol\";</span><br></pre></td></tr></table></figure>\n\n<p><strong>00-deploy-mocks.js</strong></p>\n<p>//用以部署到本地网络（快）</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//00-deploy-mocks.js</span><br><span class=\"line\">//这段是部署本地预言机</span><br><span class=\"line\">const { network } = require(\"hardhat\");</span><br><span class=\"line\"></span><br><span class=\"line\">const DECIMALS = \"8\";</span><br><span class=\"line\">const INITIAL_PRICE = \"200000000000\"; // 2000</span><br><span class=\"line\"></span><br><span class=\"line\">module.exports = async ({ getNamedAccounts, deployments }) =&gt; {</span><br><span class=\"line\">  const { deploy, log } = deployments;</span><br><span class=\"line\">  const { deployer } = await getNamedAccounts();</span><br><span class=\"line\">  const chainId = network.config.chainId;</span><br><span class=\"line\">  log(network.name);</span><br><span class=\"line\">  if (chainId == 31337) {</span><br><span class=\"line\">    log(\"Local network detected!Deploying mocks...\");</span><br><span class=\"line\">    await deploy(\"MockV3Aggregator\", {</span><br><span class=\"line\">      contract: \"MockV3Aggregator\",</span><br><span class=\"line\">      from: deployer,</span><br><span class=\"line\">      log: true,</span><br><span class=\"line\">      args: [DECIMALS, INITIAL_PRICE],</span><br><span class=\"line\">    });</span><br><span class=\"line\">    log(\"Mocks deployed!\");</span><br><span class=\"line\">    log(\"--------------------------------------------------------\");</span><br><span class=\"line\">  }</span><br><span class=\"line\">};</span><br><span class=\"line\">// 这段代码指定了当前部署脚本相关的标签。在这里，使用了两个标签：\"all\" 和 \"mocks\"。</span><br><span class=\"line\">// \"all\" 标签： 这个标签可能用于将部署脚本与整个项目的所有部署任务关联起来。</span><br><span class=\"line\">// 当运行 npx hardhat deploy --tags all 时，将运行所有带有 \"all\" 标签的部署任务。</span><br><span class=\"line\">// \"mocks\" 标签： 这个标签可能用于将部署脚本与与模拟合约相关的其他部署任务关联起来。</span><br><span class=\"line\">// 当运行 npx hardhat deploy --tags mocks 时，将运行所有带有 \"mocks\" 标签的部署任务。</span><br><span class=\"line\">//yarn hardhat deploy --tags mocks</span><br><span class=\"line\">module.exports.tags = [\"all\", \"mocks\"];</span><br></pre></td></tr></table></figure>\n\n<p>使用<code>yarn hardhat deploy --tags mocks</code>可以精准执行<code>00-deploy-mocks.js</code></p>\n<p>也可以对当前<code>chainId</code>加以判断，使其能够自动判断部署在哪条链上</p>\n<p><strong>01-deploy-fund-me.js</strong></p>\n<p>//用以部署到测试网络（慢）</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//01-deploy-fund-me.js</span><br><span class=\"line\">//helpconfig代表了helper-hardhat-config.js这个文件</span><br><span class=\"line\">// const helperconfig = require(\"../helper-hardhat-config.js\")</span><br><span class=\"line\">// const networkconfig = helperconfig.networkConfig</span><br><span class=\"line\">//node.js的快捷写法，写法等同于上方的</span><br><span class=\"line\">const {</span><br><span class=\"line\">  networkConfig,</span><br><span class=\"line\">  developmentChains,</span><br><span class=\"line\">} = require(\"../helper-hardhat-config.js\");</span><br><span class=\"line\">const { network } = require(\"hardhat\");</span><br><span class=\"line\">const { verify } = require(\"../utils/verify.js\");</span><br><span class=\"line\">//async function deployFunc(hre) {</span><br><span class=\"line\">//     hre.getNameAccounts()</span><br><span class=\"line\">//     hre.deployments</span><br><span class=\"line\">// }</span><br><span class=\"line\">// module.exports.default = deployFunc //将deplyFunc设置为默认要找的函数</span><br><span class=\"line\"></span><br><span class=\"line\">//hre代表hardhat运行环境</span><br><span class=\"line\">//写法等同于上方的</span><br><span class=\"line\">// module.exports = async (hre) =&gt; {</span><br><span class=\"line\">//     const {getNameAccounts,deployments} = hre</span><br><span class=\"line\">// }</span><br><span class=\"line\">//node.js的语法糖，写法等同于上方的</span><br><span class=\"line\">module.exports = async ({ getNamedAccounts, deployments }) =&gt; {</span><br><span class=\"line\">  //将deploy和log从deployments这个对象中提取出来，等同于</span><br><span class=\"line\">  //const deploy = deployments.deploy;</span><br><span class=\"line\">  //const log = deployments.log</span><br><span class=\"line\">  const { deploy, log } = deployments;</span><br><span class=\"line\">  //getNameAccounts() 返回一个包含 deployer 属性的对象，等同于</span><br><span class=\"line\">  //const getNameAccountsResult = await getNameAccounts();</span><br><span class=\"line\">  //const deployer = getNameAccountsResult.deployer;</span><br><span class=\"line\">  log(\"Deploy Fundme...\");</span><br><span class=\"line\">  const { deployer } = await getNamedAccounts();</span><br><span class=\"line\">  const chainId = network.config.chainId;</span><br><span class=\"line\"></span><br><span class=\"line\">  //---------------确认预言机地址-----------------</span><br><span class=\"line\">  if (developmentChains.includes(network.name)) {</span><br><span class=\"line\">    const ethUsdAggregator = await deployments.get(\"MockV3Aggregator\");</span><br><span class=\"line\">    ethUsdPriceFeedAddress = ethUsdAggregator.address;</span><br><span class=\"line\">  } else {</span><br><span class=\"line\">    // ethUsdPriceFeedAddress的格式：0x694AA1769357215DE4FAC081bf1f309aDC325306</span><br><span class=\"line\">    ethUsdPriceFeedAddress = networkConfig[chainId][\"ethUsdPriceFeed\"];</span><br><span class=\"line\">  }</span><br><span class=\"line\"></span><br><span class=\"line\">  // log(ethUsdPriceFeedAddress);</span><br><span class=\"line\">  //-----------------deploy-----------------------</span><br><span class=\"line\">  const args = [ethUsdPriceFeedAddress];</span><br><span class=\"line\">  const Fundme = await deploy(\"Fundme\", {</span><br><span class=\"line\">    from: deployer,</span><br><span class=\"line\">    args: args, //喂价地址</span><br><span class=\"line\">    log: true,</span><br><span class=\"line\">    waitConfirmation: network.config.blockConfirmations || 1,</span><br><span class=\"line\">  });</span><br><span class=\"line\">  //-------------------verify-----------------------</span><br><span class=\"line\">  //当合约部署网络与指定的不符时会进行检查</span><br><span class=\"line\">  if (</span><br><span class=\"line\">    !developmentChains.includes(network.name) &amp;&amp;</span><br><span class=\"line\">    process.env.ETHERSCAN_API_KEY</span><br><span class=\"line\">  ) {</span><br><span class=\"line\">    //verify</span><br><span class=\"line\">    await verify(Fundme.address, args);</span><br><span class=\"line\">  }</span><br><span class=\"line\">  log(\"--------------------------------------------------------\");</span><br><span class=\"line\">};</span><br><span class=\"line\"></span><br><span class=\"line\">module.exports.tags = [\"all\", \"fundme\"];</span><br></pre></td></tr></table></figure>\n\n<p>输入<code>yarn hardhat deploy --network sepolia</code>或者<code>yarn hardhat deploy --network hardhat</code>，会识别到<code>network.name</code>的值并部署<code>Fundme</code>合约到<strong>具体的网络</strong>中，同时使用<code>MockV3Aggregator.sol</code>或者 <code>ethUsdPriceFeed: \"0x694AA1769357215DE4FAC081bf1f309aDC325306\"</code>作为喂价合约</p>\n<p><code>utils</code>文件夹，用于验证合约的合法性和安全性</p>\n<p><strong>verify.js</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//verify.js</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> { run } = <span class=\"built_in\">require</span>(<span class=\"string\">\"hardhat\"</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">verify</span> = <span class=\"keyword\">async</span> (<span class=\"params\">contractAddress, args</span>) =&gt; {</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">\"Verifying Contract...\"</span>);</span><br><span class=\"line\">  <span class=\"keyword\">try</span> {</span><br><span class=\"line\">    <span class=\"keyword\">await</span> <span class=\"title function_\">run</span>(<span class=\"string\">\"verify:verify\"</span>, {</span><br><span class=\"line\">      <span class=\"attr\">address</span>: contractAddress,</span><br><span class=\"line\">      <span class=\"attr\">constructorArguments</span>: args,</span><br><span class=\"line\">    });</span><br><span class=\"line\">  } <span class=\"keyword\">catch</span> (e) {</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (e.<span class=\"property\">message</span>.<span class=\"title function_\">toLowerCase</span>().<span class=\"title function_\">includes</span>(<span class=\"string\">\"already verified\"</span>)) {</span><br><span class=\"line\">      <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">\"Already Verified!\"</span>);</span><br><span class=\"line\">    } <span class=\"keyword\">else</span> {</span><br><span class=\"line\">      <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(e);</span><br><span class=\"line\">    }</span><br><span class=\"line\">  }</span><br><span class=\"line\">};</span><br><span class=\"line\"><span class=\"variable language_\">module</span>.<span class=\"property\">exports</span> = { verify };</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>效果如下：</p>\n<p>（1）部署到本地网络</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">PS D:\\study_test\\Hardhat\\Harhat-Fundme&gt; yarn hardhat deploy --network hardhat</span><br><span class=\"line\">yarn run v1.22.21</span><br><span class=\"line\">warning package.json: No license field</span><br><span class=\"line\">$ D:\\study_test\\Hardhat\\Harhat-Fundme\\node_modules\\.bin\\hardhat deploy --network hardhat</span><br><span class=\"line\">https://eth-sepolia.api.onfinality.io/public</span><br><span class=\"line\">Nothing to compile</span><br><span class=\"line\">Local network detected!Deploying mocks...</span><br><span class=\"line\">deploying \"MockV3Aggregator\" (tx: 0x3d732abdeda8235691578f5eae48ec57c18e6860c18196ab7b211ca8f74dce2b)...: deployed at 0x5FbDB2315678afecb367f032d93F642f64180aa3 with 569759 gas</span><br><span class=\"line\">Mocks deployed!</span><br><span class=\"line\">--------------------------------------------------------</span><br><span class=\"line\">Deploy Fundme...</span><br><span class=\"line\">deploying \"Fundme\" (tx: 0x9275acdb459bd3d25e3dbf786faa9a18efb9edf2bcaa93cf56f4a7dc5b97b1e8)...: deployed at 0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512 with 846785 gas</span><br><span class=\"line\">--------------------------------------------------------</span><br><span class=\"line\">Done in 2.94s.</span><br></pre></td></tr></table></figure>\n\n<p>（2）部署到测试网络</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ D:\\study_test\\Hardhat\\Harhat-Fundme\\node_modules\\.bin\\hardhat deploy --network sepolia</span><br><span class=\"line\">https://eth-sepolia.api.onfinality.io/public</span><br><span class=\"line\">Nothing to compile</span><br><span class=\"line\">Deploy Fundme...</span><br><span class=\"line\">deploying \"Fundme\" (tx: 0x8c2e8759b86f8076702ed50b0abaa5d082ed8ac47589f380f367e2b62aeefc3d)...: deployed at 0x58962eaA9001b9C3F1Eb908Ac1347213b2D39A5D with 846785 gas</span><br><span class=\"line\">Verifying Contract...</span><br><span class=\"line\">UnexpectedError: An unexpected error occurred during the verification process.</span><br><span class=\"line\">Please report this issue to the Hardhat team.</span><br><span class=\"line\">Error Details: Connect Timeout Error</span><br><span class=\"line\">    at Etherscan.isVerified (D:\\study_test\\Hardhat\\Harhat-Fundme\\node_modules\\@nomicfoundation\\hardhat-verify\\src\\internal\\etherscan.ts:126:13)</span><br><span class=\"line\">    at processTicksAndRejections (node:internal/process/task_queues:95:5)</span><br><span class=\"line\">    at SimpleTaskDefinition.action (D:\\study_test\\Hardhat\\Harhat-Fundme\\node_modules\\@nomicfoundation\\hardhat-verify\\src\\internal\\tasks\\etherscan.ts:101:24)</span><br><span class=\"line\">    at Environment._runTaskDefinition (D:\\study_test\\Hardhat\\Harhat-Fundme\\node_modules\\hardhat\\src\\internal\\core\\runtime-environment.ts:358:14)</span><br><span class=\"line\">    at Environment.run (D:\\study_test\\Hardhat\\Harhat-Fundme\\node_modules\\hardhat\\src\\internal\\core\\runtime-environment.ts:191:14)        </span><br><span class=\"line\">    at SimpleTaskDefinition.action (D:\\study_test\\Hardhat\\Harhat-Fundme\\node_modules\\@nomicfoundation\\hardhat-verify\\src\\index.ts:284:9) </span><br><span class=\"line\">    at Environment._runTaskDefinition (D:\\study_test\\Hardhat\\Harhat-Fundme\\node_modules\\hardhat\\src\\internal\\core\\runtime-environment.ts:358:14)</span><br><span class=\"line\">    at Environment.run (D:\\study_test\\Hardhat\\Harhat-Fundme\\node_modules\\hardhat\\src\\internal\\core\\runtime-environment.ts:191:14)        </span><br><span class=\"line\">    at verify (D:\\study_test\\Hardhat\\Harhat-Fundme\\utils\\verify.js:6:5)</span><br><span class=\"line\">    at Object.module.exports [as func] (D:\\study_test\\Hardhat\\Harhat-Fundme\\deploy\\01-deploy-fund-me.js:64:5)</span><br><span class=\"line\">--------------------------------------------------------</span><br><span class=\"line\">Done in 84.60s.</span><br></pre></td></tr></table></figure>\n\n<p>合约<code>0x8c2e8759b86f8076702ed50b0abaa5d082ed8ac47589f380f367e2b62aeefc3d</code></p>\n<p>被部署在以太坊地址<code>0x58962eaA9001b9C3F1Eb908Ac1347213b2D39A5D</code></p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"img/Patrick Collins_blockchain_note/image-20240305002127313.png\" alt=\"image-20240305002127313\" style=\"zoom:67%;\">\n\n<h4 id=\"编写脚本注入资金\"><a href=\"#编写脚本注入资金\" class=\"headerlink\" title=\"编写脚本注入资金\"></a>编写脚本注入资金</h4><p>P.S 在本地Hardhat环境中运行</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//fund.js</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> { ethers, getNamedAccounts } = <span class=\"built_in\">require</span>(<span class=\"string\">\"hardhat\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">async</span> <span class=\"keyword\">function</span> <span class=\"title function_\">main</span>(<span class=\"params\"></span>) {</span><br><span class=\"line\">  <span class=\"keyword\">const</span> { deployer } = <span class=\"keyword\">await</span> <span class=\"title function_\">getNamedAccounts</span>();</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">`Deployer address: <span class=\"subst\">${deployer}</span>`</span>);</span><br><span class=\"line\">  <span class=\"keyword\">const</span> fundme = <span class=\"keyword\">await</span> ethers.<span class=\"title function_\">getContractAt</span>(<span class=\"string\">\"Fundme\"</span>, deployer);</span><br><span class=\"line\">  <span class=\"comment\">// console.log(`Got contract Fundme at ${fundme.address}`);</span></span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">\"Funding contract...\"</span>);</span><br><span class=\"line\">  <span class=\"keyword\">const</span> transactionResponse = <span class=\"keyword\">await</span> fundme.<span class=\"title function_\">fund</span>({</span><br><span class=\"line\">    <span class=\"attr\">value</span>: ethers.<span class=\"title function_\">parseEther</span>(<span class=\"string\">\"0.1\"</span>),</span><br><span class=\"line\">  });</span><br><span class=\"line\">  <span class=\"keyword\">await</span> transactionResponse.<span class=\"title function_\">wait</span>(<span class=\"number\">1</span>);</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">\"Funded!\"</span>);</span><br><span class=\"line\">  <span class=\"keyword\">const</span> balance = <span class=\"keyword\">await</span> ethers.<span class=\"property\">provider</span>.<span class=\"title function_\">getBalance</span>(deployer);</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(balance);</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_\">main</span>()</span><br><span class=\"line\">  .<span class=\"title function_\">then</span>(<span class=\"function\">() =&gt;</span> process.<span class=\"title function_\">exit</span>(<span class=\"number\">0</span>))</span><br><span class=\"line\">  .<span class=\"title function_\">catch</span>(<span class=\"function\">(<span class=\"params\">error</span>) =&gt;</span> {</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">error</span>(error);</span><br><span class=\"line\">    process.<span class=\"title function_\">exit</span>(<span class=\"number\">1</span>);</span><br><span class=\"line\">  });</span><br></pre></td></tr></table></figure>\n\n<p>效果：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">PS D:\\study_test\\Hardhat\\Harhat-Fundme&gt; yarn hardhat run scripts/fund.js --network hardhat</span><br><span class=\"line\">yarn run v1.22.21</span><br><span class=\"line\">warning package.json: No license field</span><br><span class=\"line\">$ D:\\study_test\\Hardhat\\Harhat-Fundme\\node_modules\\.bin\\hardhat run scripts/fund.js --network hardhat</span><br><span class=\"line\">Deployer address: 0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266</span><br><span class=\"line\">Funding contract...</span><br><span class=\"line\">Funded!</span><br><span class=\"line\">9999999960505000000000n</span><br><span class=\"line\">Done in 5.54s.</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"编写脚本提取资金\"><a href=\"#编写脚本提取资金\" class=\"headerlink\" title=\"编写脚本提取资金\"></a>编写脚本提取资金</h4><p>P.S 在本地Hardhat环境中运行</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//withdraw.js</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> { ethers, getNamedAccounts } = <span class=\"built_in\">require</span>(<span class=\"string\">\"hardhat\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">async</span> <span class=\"keyword\">function</span> <span class=\"title function_\">main</span>(<span class=\"params\"></span>) {</span><br><span class=\"line\">  <span class=\"keyword\">const</span> { deployer } = <span class=\"keyword\">await</span> <span class=\"title function_\">getNamedAccounts</span>();</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">`Deployer address: <span class=\"subst\">${deployer}</span>`</span>);</span><br><span class=\"line\">  <span class=\"keyword\">const</span> fundme = <span class=\"keyword\">await</span> ethers.<span class=\"title function_\">getContractAt</span>(<span class=\"string\">\"Fundme\"</span>, deployer);</span><br><span class=\"line\">  <span class=\"comment\">// console.log(`Got contract Fundme at ${fundme.address}`);</span></span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">\"Funding contract...\"</span>);</span><br><span class=\"line\">  <span class=\"keyword\">const</span> transactionResponse = <span class=\"keyword\">await</span> fundme.<span class=\"title function_\">withdraw</span>();</span><br><span class=\"line\">  <span class=\"keyword\">await</span> transactionResponse.<span class=\"title function_\">wait</span>(<span class=\"number\">1</span>);</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">\"Got it back!\"</span>);</span><br><span class=\"line\">  <span class=\"keyword\">const</span> balance = <span class=\"keyword\">await</span> ethers.<span class=\"property\">provider</span>.<span class=\"title function_\">getBalance</span>(deployer);</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(balance);</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_\">main</span>()</span><br><span class=\"line\">  .<span class=\"title function_\">then</span>(<span class=\"function\">() =&gt;</span> process.<span class=\"title function_\">exit</span>(<span class=\"number\">0</span>))</span><br><span class=\"line\">  .<span class=\"title function_\">catch</span>(<span class=\"function\">(<span class=\"params\">error</span>) =&gt;</span> {</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">error</span>(error);</span><br><span class=\"line\">    process.<span class=\"title function_\">exit</span>(<span class=\"number\">1</span>);</span><br><span class=\"line\">  });</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"HTML连接到Metamask\"><a href=\"#HTML连接到Metamask\" class=\"headerlink\" title=\"HTML连接到Metamask\"></a>HTML连接到Metamask</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">    that is good</span><br><span class=\"line\">    &lt;button onclick=<span class=\"string\">\" connect()\"</span>&gt;<span class=\"title class_\">Connect</span>&lt;/button&gt;</span><br><span class=\"line\">&lt;/body&gt;</span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\"><span class=\"keyword\">async</span> <span class=\"keyword\">function</span> <span class=\"title function_\">connect</span>(<span class=\"params\"></span>){</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    <span class=\"keyword\">if</span> (<span class=\"keyword\">typeof</span> <span class=\"variable language_\">window</span>.<span class=\"property\">ethereum</span> !==<span class=\"string\">\"undefined\"</span>){</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">        <span class=\"keyword\">await</span> <span class=\"variable language_\">window</span>.<span class=\"property\">ethereum</span>.<span class=\"title function_\">request</span>({<span class=\"attr\">method</span>:<span class=\"string\">\"eth_requestAccounts\"</span>})</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">        <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">\"connectBUtton\"</span>).<span class=\"property\">innerHTML</span>=<span class=\"string\">\"Connected!\"</span> <span class=\"comment\">//将按钮中文字改为Connected</span></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    }<span class=\"keyword\">else</span>{</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">\"No metamask!\"</span>)</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    }</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">}</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n\n<p>也可以</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!-- index.<span class=\"property\">html</span> --&gt;</span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    that is good</span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">id</span> =<span class=\"string\">\"connectButton\"</span> <span class=\"attr\">onclick</span>=<span class=\"string\">\" connect()\"</span>&gt;</span>Connect<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"./index.js\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/javascript\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// index.js</span></span><br><span class=\"line\"><span class=\"keyword\">async</span> <span class=\"keyword\">function</span> <span class=\"title function_\">connect</span>(<span class=\"params\"></span>) {</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"keyword\">typeof</span> <span class=\"variable language_\">window</span>.<span class=\"property\">ethereum</span> !== <span class=\"string\">\"undefined\"</span>) {</span><br><span class=\"line\">        <span class=\"keyword\">await</span> <span class=\"variable language_\">window</span>.<span class=\"property\">ethereum</span>.<span class=\"title function_\">request</span>({ <span class=\"attr\">method</span>: <span class=\"string\">\"eth_requestAccounts\"</span> })</span><br><span class=\"line\">        <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">\"connectButton\"</span>).<span class=\"property\">innerHTML</span> = <span class=\"string\">\"Connected!\"</span></span><br><span class=\"line\">    } <span class=\"keyword\">else</span> {</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">\"No metamask!\"</span>)</span><br><span class=\"line\">    }</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"HTML结合js实现web端交易\"><a href=\"#HTML结合js实现web端交易\" class=\"headerlink\" title=\"HTML结合js实现web端交易\"></a>HTML结合js实现web端交易</h2><p><a class=\"link\" href=\"https://docs.moonbeam.network/cn/builders/build/eth-api/libraries/ethersjs/\">使用Ethers.js代码库发送交易和部署合约 | Moonbeam Docs <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a></p>\n"},{"title":"Vue 3.0 笔记","description":"Patrick Collins-区块链学习笔记","date":"2024-03-17T06:11:40.000Z","excerpt":"Vue3.0的入门笔记，特色的compositionAPI写法，可读性和可维护性得到了大幅的提升，再加上各种组件库的支持，文档齐全，非常便于使用。","_content":"\n\n## 前言\n\n因为我是先前并没有接触Vue3，因此这份笔记很基础很基础，尽量都写成傻瓜式的了，当然也有可能有些地方写的不是很清楚，毕竟最初的目的就是为了写给我自己看的，至于之后会不会再深入学习Typescript和Javascript，这谁又晓得呢？反正我修燃气用是不上这个。\n\n## 工具包\n\n课程链接：【尚硅谷Vue3入门到实战，最新版vue3+TypeScript前端开发教程】 https://www.bilibili.com/video/BV1Za4y1r7KE/?share_source=copy_web&vd_source=d4c8e690ada3240d323ff6b395a76451\n\n## Vue3简介\n\nVue3，截止至2023年10月，最新公开版本为3.3.4\n\n## Vue创建工程\n\n### 基于vite创建\n\n新的前端构建工具，特点如下：\n\n> - 热重载\n> - 对`TS`、`JSX`、`CSS`支持开箱即用\n> - 按需编译\n\nwebpack与vite构建对比图如下：\n\n<img src=\"/img/Vue3_note/image-20240105103235439.png\" alt=\"image-20240105103235439\"  />\n\n终端创建指令：\n\n```terminal\nnpm create vue@latest\n```\n\n![image-20240423215020646](/img/Vue3_note/image-20240423215020646.png)\n\n![image-20240105104452696](/img/Vue3_note/image-20240105104452696.png)\n\n### 工作目录介绍\n\n- /**public**\n\t用于存放网页顶端的图标\n\n![image-20240105104835729](/img/Vue3_note/image-20240105104835729.png)\n\n- /**src**\n\t工作目录\n\n\n\n- /**node_modules**\n\n\t执行`npm i`，下载依赖，会生成`node_modules`这个文件夹\n\t作用：写了前端常用文件（如.jpg,.txt）等等，再通过`env.d.ts`中的以下代码告诉Vue\n\n```typescript\n/// <reference types=\"vite/client\" />\n```\n\n- **/index.html**\n\t入口文件\n\n\t\n\n- /**package.json**\n\t包的声明文件\n\n\t\n\n- /**vite.config.ts**\n\t工程的配置文件，配置插件等等\n\n\n\n- **/src/components**\n\t用于存放组件\n\n![image-20240105120758018](/img/Vue3_note/image-20240105120758018.png)\n\n## 编写一个App组件\n\n在main.ts中\n\n```typescript\nimport './assets/main.css'\n\nimport { createApp } from 'vue'\nimport App from './App.vue'\n\ncreateApp(App).mount('#app')\n```\n\n`createApp`:一个用于“造花盆”的方法\n\n`App`：从`App.vue`中引用，是一个根组件，可以看作是一朵花，包括之后写的`A.vue`、`B.vue`，其实都是安装在根组件上的组件，类似“花上的叶子”，它们直接或间接下载在`App.vue`上\n\n`createApp(App).mount('#app')`：将app传入`createApp()`中，创建一个名叫App的互联网应用，并且它的根组件叫`App`；`mount`：挂载，将App摆在名为app的容器中。\n\nvue组件中，包含以下内容\n\n```vue\n<template>\n    <!-- html -->\n    <div class=\"app\">\n        <hl>你好</hl>\n    </div>\n</template>\n<script lang=\"ts\">\n//  JS或者TS\nexport default{\n    name:'App' //组件名\n}\n</script>\n\n<style>\n/* 样式 */\n.app{\n    background-color: #ddd;\n    box-shadow: 0 0 10px;\n    border-radius: 10px;\n    padding: 20px;\n}\n</style>\n```\n\n之后运行 `npm run dev`，`在 Local:   http://localhost:5173/`中查看\n\n![image-20240105155229131](/img/Vue3_note/image-20240105155229131.png)\n\n## 总结\n\n- `vite`项目中，`index.html`是项目的入口文件，在项目最外层\n- 加载`index.html`后，`vite`会解析`<script type=\"module\" src=\"/src/main.ts\"></script>`指向的js\n- vue3是通过createApp的函数创建一个应用实例\n\n## OptionAPI\n\n这是Vue2的语法\n\n```html\n<!-- Vue2 写法-->\n<template>\n    <!-- html -->\n    <div class=\"person\">\n        <h2>姓名:{{ name }}</h2>\n        <h2>年龄:{{ age }}</h2>\n        <button @click=\"changeName\">修改名字</button>\n        <button @click=\"changeAge\">修改年龄</button>\n        <button @click=\"showTel\">联系方式</button>\n    </div>\n</template>\n<script lang=\"ts\">\nexport default {\n    name: 'Person',//组件名\n    data() {\n        return {\n            name: '张三',\n            age: 18,\n            tel: '18019328622'\n        }\n    },\n    methods: {\n        showTel() {\n            alert(this.tel)\n        },\n        changeName() {\n            this.name = '李四'\n        },\n        changeAge() {\n            this.age += 1\n        }\n    }\n}\n</script>\n```\n\n在'枝干组件'`App.vue`中导入并引用\n\n```typescript\nimport Person from './components/Person.vue'\nexport default {\n    name: 'App',//组件名\n    components: { Person }//注册组件\n}\n```\n\n```html\n<template>\n    <!-- html -->\n    <div class=\"app\">\n        <hl>你好啊！</hl>\n        <Person />\n    </div>\n</template>\n```\n\n效果如下\n\n![image-20240108173531398](/img/Vue3_note/image-20240108173531398.png)\n\n### 弊端\n\noptionAPI的语法弊端不难看出，数据、方法、计算属性都是分散在data、methods、computed中，想要新增功能就需要对上述进行修改，这显然是不便于维护和复用的。\n\n## compositionAPI\n\n### setup概述\n\n与optionalAPI不同，compositionAPI将组件的数据、方法、计算属性集中在一个名为setup()的方法中，写法如下：\n\n```typescript\n<script lang=\"ts\">\nexport default {\n    name: 'Person',//组件名\n    setup() {\n        //setup中的this是undefined，vue3中已经开始弱化this了\n        //数据\n        //此时的name，age，tel不是响应式的\n        let name = '张三'\n        let age = 18\n        let tel = '18019328622'\n        //方法\n        function changeName() {\n            name = '李四'  //name确实修改了，但不是响应式的\n        }\n        function changeAge() {\n            age += 1\n        }\n        function showTel() {\n            alert(tel)\n        }\n        //必须要给予一个返回值，否则外部接收不到这些数据\n        return { name, age, changeName, changeAge, showTel }\n    }\n}\n</script>\n```\n\n值得一提的是，vue2中的选项式语法和vue3中的新语法是可以同时出现的，并且由于setup的执行优先级高于optionalAPI中的内容，这导致optinalAPI中的内容可以访问到setup中的数据变量，但setup不能访问到optionalAPI中的数据变量，用例如下：\n\n```typescript\n<script lang=\"ts\">\nexport default {\n    name: 'Person',//组件名\n    beforeCreate() {\n        console.log('beforeCreate')\n    },\n    data() {\n        return {\n            a: this.name\n        }\n    },\n    setup() {\n        //setup中的this是undefined，vue3中已经开始弱化this了\n        //数据\n        //此时的name，age，tel不是响应式的\n        let name = '张三'\n        let age = 18\n        let tel = '18019328622'\n        //方法\n        function changeName() {\n            name = '李四'  //name确实修改了，但不是响应式的\n        }\n        function changeAge() {\n            age += 1\n        }\n        function showTel() {\n            alert(tel)\n        }\n        return { name, age, changeName, changeAge, showTel }\n    }\n}\n</script>\n```\n\n![image-20240108233851273](/img/Vue3_note/image-20240108233851273.png)\n\n### setup的语法糖\n\n```typescript\n<script lang=\"ts\">\nexport default {\n    name: 'Person',//组件名\n}\n</script>\n\n<script lang=\"ts\" setup>\nlet name = '张三'\nlet age = 18\nlet tel = '18019328622'\n//方法\nfunction changeName() {\n    name = '李四'  //name确实修改了，但不是响应式的\n}\nfunction changeAge() {\n    age += 1\n}\nfunction showTel() {\n    alert(tel)\n}\n</script>\n```\n\n像这样编写可以不用写setup的返回值\n\n#### 插件配置方法\n\n如果想将上述合二为一，可以下载插件，指令 `npm i vite-plugin-vue-setup-extend -D`\n\n在`vite.config.ts`中进行配置插件，**其他插件方法也是类似**\n\n```typescript\n import VueSetupExtend from 'vite-plugin-vue-setup-extend'\n\n// https://vitejs.dev/config/\nexport default defineConfig({\n  plugins: [\n    vue(),\n    VueSetupExtend()\n  ],\n  resolve: {\n    alias: {\n      '@': fileURLToPath(new URL('./src', import.meta.url))\n    }\n  }\n})\n\n```\n\n最后对上述两个script合二为一\n\n```typescript\n<script lang=\"ts\" setup name=\"Person123\">\nlet name = '张三'\nlet age = 18\nlet tel = '18019328622'\n//方法\nfunction changeName() {\n    name = '李四'  //name确实修改了，但不是响应式的\n}\nfunction changeAge() {\n    age += 1\n}\nfunction showTel() {\n    alert(tel)\n}\n</script>\n```\n\n效果如下：\n\n![image-20240109132721613](/img/Vue3_note/image-20240109132721613.png)\n\n## 响应式\n\n响应式:能够实时变化的数据\n\n### 响应式数据\n\n```typescript\n//引用\nimport { ref } from 'vue'\n//包裹\nlet name = ref('张三')\nlet age = ref(18)\nlet tel = '18019328622'\n//方法\nfunction changeName() {\n    name.value = '李四'\n}\nfunction changeAge() {\n    age.value += 1\n}\nfunction showTel() {\n    alert(tel)\n}\n```\n\n> 觉得频繁写.value很麻烦？不妨试试volar\n>\n> <img src = \"/img/Vue3_note/image-20240128222423403.png\" align=\"left\">\n\n### 响应式对象\n\n响应式对象:被`reactive`包裹过后的对象\n\n```typescript\nimport {reactive} from 'vue'\n    //data\n    let car = reactive({ brand: '奔驰', price: 100 })\n    let games = reactive([\n        {id:'0000001',name:'AAA1'},\n        {id:'0000001',name:'AAA1'},\n        {id:'0000001',name:'AAA1'}\n    ])\n    let obj =reactive({\n        a:{\n            b:{\n                c:666\n            }\n        }\n    })\n    function changePrice(){\n        car.price +=10\n    }\n    function changeName(){\n        games[0].name = 'BBB1'\n    }\n    function changeObj(){\n        obj.a.b.c = 999\n    }\n\n```\n\n### 使用ref定义对象类型的响应数据\n\n```typescript\nimport { ref } from 'vue'\n//data\nlet car = ref({ brand: '奔驰', price: 100 })\nlet games = ref([\n    { id: '0000001', name: 'AAA1' },\n    { id: '0000001', name: 'AAA1' },\n    { id: '0000001', name: 'AAA1' }\n])\nfunction changePrice() {\n    car.value.price += 10\n    console.log(car.value.price)\n}\nfunction changeName() {\n    games.value[0].name = 'BBB1'\n}\n```\n\n结果：\n\n![image-20240128220343854](/img/Vue3_note/image-20240128220343854.png)\n\n可以看出表面是`ref`包裹的对象，但是实际还是使用`reactive`包裹实现的\n\n### ref和reactive的区别\n\n|   名称   |                           可以定义                           |\n| :------: | :----------------------------------------------------------: |\n|   ref    |           基本类型、对象类型的响应式数据[层级不深]           |\n| reactive | 可以定义：对象类型的响应式数据[层级深] <br />重新分配会丢失响应式的属性[^1] |\n\n> [^1]: 对已经用`reactive`分配好的响应式对象，重新覆写一个对象会使新的对象失去响应式\n>\n> ```typescript\n> import { ref } from 'vue'\n> //data\n> let car = ref({ brand: '奔驰', price: 100 })\n> //method\n> function changeCar(){\n>     car.value={brand:'BYD',price:20}\n> }\n> ```\n>\n> 此时一旦使用changeCar()这个方法，那么奔驰就会被BYD覆盖并且覆盖它的BYD不具备响应式\n>\n> 可以使用Object.assign(obj1,obj2)来解决，如下：\n>\n> ```typescript\n> let car = reactive({ brand: '奔驰', price: 100 })\n> //method\n> function changeCar(){\n>     Object.assign(car,{ brand: 'BYD',price: 20})\n> }\n> ```\n>\n> ref不需要这么写\n>\n> ```typescript\n> let car = ref({ brand: '奔驰', price: 100 })\n> let games = ref([\n>     { id: '0000001', name: 'AAA1' },\n>     { id: '0000001', name: 'AAA1' },\n>     { id: '0000001', name: 'AAA1' }\n> ])\n> //method\n> function changePrice() {\n>     car.value.price += 10\n>     console.log(car.value.brand)\n> }\n> function changeName() {\n>     games.value[0].name='BBB1'\n> }\n> function changeCar(){\n>     // Object.assign(car,{ brand: 'BYD',price: 20})\n>     car.value = { brand: 'BYD',price: 20}\n> }\n> ```\n>\n> 原因是ref的对象覆盖是发生在car.value上的\n\n### toRefs和toRef\n\n```typescript\nimport { ref,reactive,toRefs,toRef } from 'vue'\n//data\nlet person = reactive({\n    name:\"张三\",\n    age:18\n})\nlet {name,age} = toRefs(person)\nlet age_2 = toRef(person,'age')\n//method\nfunction changeName(){\n    name.value+='~'\n}   \nfunction changeAge(){\n    age.value+=1\n}\n```\n\ntoRefs会接收一组由reactive构成的对象，然后把对象中的每一组key,value都拎出来，形成一个新的对象（依然具备响应式的属性）;\n\ntoRef只会接受由reactive构成的对象当中的一个元素\n\n## computed计算属性\n\n```vue\n<template>\n<!-- html -->\n<div class=\"person\">\n    <!-- 这样↓写是单向绑定 -->\n    <!-- 姓：<input type=\"text\" :value=\"firstName\"><br>  -->\n    姓：<input type=\"text\" v-model=\"firstName\"><br>\n    名：<input type=\"text\" v-model=\"lastName\"><br>\n    全名：<span>{{ fullName }}</span><br>\n    <button @click=\"changeFullName\">修改全名</button>\n    </div>\n</template>\n\n<script lang=\"ts\" setup name=\"Person123\">\n    import { ref, computed } from 'vue'\n    let firstName = ref('张')\n    let lastName = ref('三')\n    //如此定义的计算属性是只读的\n    // let fullName = computed(()=>{\n    //     return firstName.value.slice(0,1).toUpperCase()+firstName.value.slice(1)+'-'+lastName.value.slice(0,1).toUpperCase()+lastName.value.slice(1)\n    // })\n    //如此定义的计算属性可读可写\n    let fullName = computed({\n        get() {\n            return firstName.value.slice(0, 1).toUpperCase() + firstName.value.slice(1) + '-' + lastName.value.slice(0, 1).toUpperCase() + lastName.value.slice(1)\n        },\n        set(val) {\n            const [str1, str2] = val.split('-')\n            firstName.value = str1\n            lastName.value = str2\n        }\n    })\n    //method\n    function changeFullName() {\n        fullName.value = 'li-si'\n    }\n</script>\n```\n\n上面代码段`let fullName = computed({//略})`相比于function(){ }，具备了缓存，只有计算属性依赖的数据发生变化时才会重新计算，数据不变即便是重复调用也不会反复执行computed中的内容;\n\n## Watch监视\n\nwatch基本格式：\n\n```txt\nimport { watch } from 'vue'\nwatch(obj,func,config) //(被监视的数据，监视的回调，监视的配置)\n```\n\n它能够监视：\n\n```txt\n一个有返回值的函数，ref，reactive响应式对象，或者由以上组成的数组\n```\n\n### 监视【ref】定义的【基本类型】数据\n\n```vue\n<template>\n    <!-- html -->\n    <div class=\"person\">\n       <h1>情况一，监视[ref]定义的[基本类型]数据</h1>\n       <h2>当前求和为:{{ sum }}</h2>\n       <button @click=\"changeNum\">sum++</button>\n    </div>\n</template>\n\n<script lang=\"ts\" setup name=\"Person123\">\nimport { ref, watch } from 'vue'\n//data\nlet sum = ref(0);\n//method\nfunction changeNum(){\n    sum.value+=1;\n}\nwatch(sum,(newValue,oldValue)=>{\n    console.log('sum变化了',newValue,oldValue)\n})\n</script>\n```\n\n关于停止监视以及箭头函数的补充：\n\n```typescript\nconst stopWatch =watch(sum,function(newValue,oldValue){\n    console.log('sum变化了',newValue,oldValue)\n    if (newValue>=10){\n        stopWatch()\n    }\n    return 0\n})\n```\n\n箭头函数就是**不需要**返回值(但是可以有)的function\n\n### 监视【ref】定义的【对象类型】数据\n\n```vue\n<template>\n    <!-- html -->\n    <div class=\"person\">\n       <h1>情况二，监视[ref]定义的[对象类型]数据</h1>\n       <h2>姓名：{{ person.name }}</h2>\n       <h2>年龄：{{ person.age }}</h2>\n       <br>\n       <button @click=\"changeName\">修改名字</button>\n       <button @click=\"changeAge\">修改年龄</button>\n       <button @click=\"changePerson\">修改人</button>\n    </div>\n</template>\n\n<script lang=\"ts\" setup name=\"Person123\">\nimport { ref, watch } from 'vue'\n//data\nlet person =ref({\n    name:\"张三\",\n    age:18,\n})\n//method\nfunction changeName(){\n    person.value.name+=\"~\"\n}\nfunction changeAge(){\n    person.value.age+=1\n}\nfunction changePerson(){\n    person.value={name:\"李四\",age:22}\n}\n//watch\nwatch(person,(newValue,oldValue)=>{\n    console.log('person变化了',newValue,oldValue)\n},{deep:true})\n</script>\n```\n\n如上，但是和监视基础类型相比，代码变化不大\n\n注意到，ref的替换对象是新旧替换，地址发生变化\n\n![image-20240201213743914](/img/Vue3_note/image-20240201213743914.png)\n\n### 监视【reactive】定义的【对象类型】数据\n\n```vue\n<template>\n    <!-- html -->\n    <div class=\"person\">\n       <h1>情况三，监视[reactive]定义的[对象类型]数据</h1>\n       <h2>姓名：{{ person.name }}</h2>\n       <h2>年龄：{{ person.age }}</h2>\n       <br>\n       <button @click=\"changeName\">修改名字</button>\n       <button @click=\"changeAge\">修改年龄</button>\n       <button @click=\"changePerson\">修改人</button>\n    </div>\n</template>\n\n<script lang=\"ts\" setup name=\"Person123\">\nimport { reactive, watch } from 'vue'\n//data\nlet person =reactive({\n    name:\"张三\",\n    age:18,\n})\n//method\nfunction changeName(){\n    person.name+=\"~\"\n}\nfunction changeAge(){\n    person.age+=1\n}\nfunction changePerson(){\n    Object.assign(person,{name:\"李四\",age:22})\n}\n//watch\n//监视reactive定义的对象，会默认开启深度监视，且无法手动关闭\nwatch(person,(newValue,oldValue)=>{\n    console.log('person变化了',newValue,oldValue)\n})\n</script>\n```\n\n效果：\n\n![image-20240201212634644](/img/Vue3_note/image-20240201212634644.png)\n\n可以注意到reactive替换对象是值覆盖，地址没有发生变化\n\n### 监视【ref】或【reactive】定义的对象当中的属性\n\n```vue\n<template>\n    <!-- html -->\n    <div class=\"person\">\n        <h1>情况四，监视[ref,reactive]定义的[对象类型]数据中的某个属性</h1>\n        <h2>姓名:{{ person.name}}</h2>\n        <h2>年龄:{{ person.age}}</h2>\n        <h2>汽车:{{ person.car.c1}}\\{{ person.car.c2 }}</h2>\n        <button @click=\"changeName\">修改名字</button>\n        <button @click=\"changeAge\">修改年龄</button>\n        <button @click=\"changeCar1\">修改第一台车</button>\n        <button @click=\"changeCar2\">修改第二台车</button>\n        <button @click=\"changeCar\">修改全部车</button>\n    </div>\n</template>\n\n<script lang=\"ts\" setup name=\"Person123\">\nimport {reactive,watch} from 'vue'\n//data\nlet person  =reactive({\n    name:\"张三\",\n    age:18,\n    car:{\n        c1:\"奔驰\",\n        c2:\"宝马\",\n    }\n})\n//method\nfunction changeName(){\n    person.name+='~'\n}\nfunction changeAge(){\n    person.age+=1\n}\nfunction changeCar1(){\n    person.car.c1='雅迪'\n}\nfunction changeCar2(){\n    person.car.c2='爱玛'\n}\nfunction changeCar(){\n    person.car={c1:'五菱',c2:'BYD'}\n}\n//watch\nwatch (()=>{return person.name},(newValue,oldValue)=>{\n    console.log('person.name变化了',newValue,oldValue)\n})\nwatch (()=>person.car,(newValue,oldValue)=>{\n    console.log('person.car变化了',newValue,oldValue)\n},{deep:true})\n</script>\n```\n\n监视基本类型数据的时候，需要将其写成函数式；\n\n监视对象类型的时候，**最好**将其写成函数式（可以不写，但是有局限性）\n\n### 监视上述多个数据\n\n```typescript\nwatch ([()=>person.name,person.car],(newValue,oldValue)=>{\n    console.log('person.car变化了',newValue,oldValue)\n},{deep:true})\n```\n\n拿个数组包起来就行，数组里面不一定一定要是程式，也可以是对象，看需求\n\n### watchEffect\n\nwatchEffect可以自动执行监听，不需要指出监听对象\n\n而watch需要指明监听对象\n\n```typescript\nwatchEffect(()=>{\n    if(person.age>=20||其他条件){\n        console.log(\"发送请求\")\n    }\n})\n```\n\n## ref的标签属性\n\n```vue\n<!-- \nPerson.vue \n-->\n<template>\n    <!-- html -->\n    <div class=\"person\">\n        <h1>标签的ref属性</h1>\n        <h2 ref=\"title2\">北京</h2>\n        <button @click=\"showlog\">点我输出</button>\n    </div>\n</template>\n\n<script lang=\"ts\" setup name=\"Person123\">\nimport {ref} from 'vue'\n//data\nlet title2 = ref()\nlet a = ref(0)\nlet b = ref(1)\nlet c = ref(2)\n//method\nfunction showlog(){\n    console.log(title2.value)\n}\ndefineExpose({a,b})//穿过保护性机制让外界可以看到\n</script>\n```\n\n```vue\n<!-- \nApp.vue \n-->\n<template>\n    <!-- html -->\n    <div class=\"app\">\n        <button @click=\"showlog\">测试</button>\n        <Person ref =\"ren\"/>\n    </div>\n</template>\n<script lang=\"ts\" setup name=\"App\">\n//  JS或者TS\nimport Person from './components/Person.vue'\nimport {ref} from 'vue'\n//data\nlet ren = ref()\n//method\nfunction showlog(){\n    console.log(ren.value)\n}\n</script>\n```\n\n点击测试按钮，会输出`Person`的组件对象，如果没有`defineExpose()`那么输出的组件对象里是看不到`Person`组件中定义的a，b，c，这也是防止多人开发的时候，命名冲突。\n\nref组件输出的特点一方面是收到保护性机制（这是使用id所不具备的），另一方面也是具有响应式的特性，就是可以数据变化的时候相互传递并且快速更新。\n\n## 回顾TS中的接口和泛型\n\n```typescript\n//types/index.ts\n//定义一个接口用于限制person对象的具体属性\nexport interface PersonInter{\n    id:string,\n    name:string,\n    age:number\n}\nexport interface Personouter{\n    id:string,\n    name:string,\n    age:number\n}\nexport type Persons =PersonInter[]\n```\n\n可以用它来约束变量\n\n```vue\n<!-- Person.vue -->\n<script lang=\"ts\" setup name=\"Person123\">\nimport { type PersonInter, type Persons } from '@/types'\nlet person: Persons|PersonInter = [\n    { id: '123', name: \"zhangsan\", age: 60 },\n    { id: '123', name: \"zhangsan\", age: 60 },\n]\nlet person2: Persons|PersonInter|Personouter = \n    { id: '123', name: \"zhangsan\", age: 60 },\n</script>\n```\n\n## props的使用\n\n简而言之就是**爸爸给儿子传话**\n\n```vue\n<!-- App.vue -->\n<template>\n    <!-- html -->\n\t<!-- 爸爸给儿子传参 -->\n    <Person  a=\"hello\" :list = \"person\"/>\n\n</template>\n<script lang=\"ts\" setup name=\"App\">\n//  JS或者TS\nimport Person from './components/Person.vue'\nimport { type PersonInter, type Personouter, type Persons } from '@/types'\nimport { reactive } from 'vue'\nlet person: Persons | PersonInter = [\n    { id: '123', name: \"zhangsan\", age: 60 },\n    { id: '123', name: \"zhangsan\", age: 60 },\n]\n</script>\n```\n\n```vue\n<!-- Person.vue -->\n<template>\n    <!-- html -->\n    <div class=\"person\">\n        <ul>\n            <!-- v-for遍历 -->\n            <li v-for=\"personObj in list\" :key=\"personObj.id\">\n                {{ personObj.name }} -- {{ personObj.age }}\n            </li>\n        </ul>\n    </div>\n</template>\n\n<script lang=\"ts\" setup name=\"Person123\">\nimport { defineProps, withDefaults } from 'vue';\nimport { type Persons } from '@/types';\n//接收\n// defineProps(['a', 'list'])\n\n//接收a，同时将props保存起来\n// let x = defineProps(['a'])\n// console.log(x.a)\n\n//接收加限制类型\n// defineProps<{ list: Persons }>()\n\n//接收list+限制类悉尼港+限制必要性+指定默认值\n//withDefaults(defineProps(),{})\nwithDefaults(defineProps<{ list?: Persons }>(), {//第二个参数只接收函数返回值类型\n    list: () => [\n        { id: '123', name: \"zhangsan\", age: 60 },\n        { id: '123', name: \"zhangsan\", age: 60 },\n    ]\n})\n\n</script>\n```\n\n效果：\n\n![image-20240310184451213](/img/Vue3_note/image-20240310184451213.png)\n\n## 生命周期\n\n组件的生命周期\n\n> - **时刻**[调用特定的函数]\n> - **创建**[setup自动执行]\n> - **挂载**[挂载前`onBeforeMount()`，挂载完毕`onMounted(`)]\n> - **更新**[更新前`onBeforeUpdate()`，更新完毕`onUpdated()`]\n> - **卸载**[销毁前`onBeforeUnmount()`，销毁完毕`onUnmounted()`]\n\n生命周期、生命周期函数、生命周期钩子\n\n```vue\n<!-- Person.vue -->\n<template>\n    <!-- html -->\n    <div class=\"person\">\n        <ul>{{ sum }}</ul>\n        <button @click=\"add\">点我sum+1</button>\n    </div>\n</template>\n<!-- Person.vue -->\n<script lang=\"ts\" setup name=\"Person123\">\nimport { onBeforeMount, onBeforeUnmount, onBeforeUpdate, onMounted, onUnmounted, onUpdated, ref } from \"vue\"\nlet sum = ref(0)\nfunction add() {\n    sum.value = sum.value + 1\n}\n//创建\nconsole.log('创建')\n//挂载\nonBeforeMount(() => {\n    console.log(\"挂载前\")\n})\n//挂载完毕\nonMounted(() => {\n    console.log(\"挂载完毕\")\n})\n//更新前\nonBeforeUpdate(() => {\n    console.log(\"更新前\")\n})\n//更新完毕\nonUpdated(() => {\n    console.log(\"更新完毕\")\n})\n// 卸载\nonBeforeUnmount(()=>{\n    console.log(\"卸载前\")\n})\n//卸载完毕\nonUnmounted(() => {\n    console.log(\"卸载完毕\")\n})\n</script>\n```\n\n生命周期流程图[来自官网]\n\n<img src=\"/img/Vue3_note/lifecycle_zh-CN.FtDDVyNA.png\" alt=\"组件生命周期图示\" style=\"zoom:50%;\" />\n\n## 自定义hook\n\n```terminal\n# 安装axios，非必要，只是此处样例用到了\n$ npm i axios\n```\n\n```vue\n<!-- Person.vue -->\n<template>\n    <!-- html -->\n    <div class=\"person\">\n        <h2>{{ sum }}</h2>\n        <button @click=\"add\">点我sum+1</button>\n        <hr>\n        <img v-for=\"(dog, index) in doglist\" :src=\"dog\" :key=\"index\">\n        <button @click=\"getDog\">获取dog</button>\n    </div>\n</template>\n<!-- Person.vue -->\n<script lang=\"ts\" setup name=\"Person123\">\nimport useDog from '@/hooks/useDog';\nimport useSum from '@/hooks/useSum';\nconst { sum, add } = useSum()\nconst { doglist, getDog } = useDog()\n</script>\n```\n\n在`src/hooks`中\n\n```typescript\n//useSum.ts\nimport { ref } from \"vue\";\nexport default function () {\n  let sum = ref(0);\n  function add() {\n    sum.value = sum.value + 1;\n  }\n  return { sum, add };\n}\n```\n\n```typescript\n//useDog.ts\nimport { reactive } from \"vue\";\nimport axios from \"axios\";\nexport default function () {\n  let doglist = reactive([\n    \"https://images.dog.ceo/breeds/pembroke/n02113023_4373.jpg\",\n  ]);\n  async function getDog() {\n    try {\n      let result = await axios.get(\n        \"https://dog.ceo/api/breed/pembroke/images/random\"\n      );\n      doglist.push(result.data.message);\n      console.log(result.data.message);\n    } catch (error) {\n      alert(error);\n    }\n  }\n  //向外部提供东西\n  return { doglist, getDog };\n}\n\n```\n\n作用是啥？vue里看着干净些吧，俺也不知道还有没有别的用途了？\n\n## 路由\n\n### 安装和使用\n\n```terminal\n#安装vue-router最新版\n$npm i vue-router\n```\n\n对App.vue稍作调整\n\n```vue\n<!-- \nApp.vue \n-->\n<template>\n    <!-- html -->\n    <h2>Vue路由测试</h2>\n    <!-- 导航区 -->\n    <div class=\"navigate\">\n        <RouterLink to=\"/home\">首页 </RouterLink>\n        <RouterLink to=\"/news\">新闻 </RouterLink>\n        <RouterLink to=\"/about\">关于 </RouterLink>\n    </div>\n    <hr>\n    <!-- 展示区 -->\n    <div class=\"main-content\" style=\"border: 1px solid red;height: 300px;width:300px\">\n        <RouterView></RouterView>\n    </div>\n</template>\n<script lang=\"ts\" setup name=\"App\">\nimport { RouterView } from 'vue-router';\n</script>\n```\n\n配置路由配置项`index.ts`\n\n```typescript\n//写一个路由器并暴露出去\nimport { createRouter, createWebHistory } from \"vue-router\";\nimport Home from \"@/components/Home.vue\";\nimport News from \"@/components/News.vue\";\nimport About from \"@/components/About.vue\";\n//创建路由器\nconst router = createRouter({\n  //路由器工作模式,很重要👇👇👇\n  history: createWebHistory(),\n  routes: [\n    // {\n    //     path:'路径',\n    //     component:组件\n    // }\n    {\n      path: \"/home\",\n      component: Home,\n    },\n    {\n      path: \"/news\",\n      component: News,\n    },\n    {\n      path: \"/about\",\n      component: About,\n    },\n  ],\n});\n\nexport default router;\n\n```\n\n在`main.ts`中使用路由器\n\n```typescript\n//引入createApp用于创建应用\nimport { createApp } from \"vue\";\n//引用App根组件\nimport App from \"./App.vue\";\nimport router from \"./router\";\n\n//创建一个应用\nconst app = createApp(App);\n//使用路由器\napp.use(router);\n//挂载整个应用到app容器中\napp.mount(\"#app\");\n\n```\n\n效果：\n\n![image-20240314224306984](/img/Vue3_note/image-20240314224306984.png)\n\n路由组件：\n\n靠路由的规则渲染出来的：\n\n```typescript\nroutes: [\n    {\n        path: '/demo',\n        component: demo\n    }\n]\n```\n\n一般组件：\n\n亲手写标签出来的\n\n```html\n<demo/>\n```\n\n### 路由器工作模式\n\n##### history模式\n\n```typescript\nconst router = createRouter({\n    history: createWebHistory(),\n    {\n    \tpath:XXX,\n    \tcomponent:XXX\n\t}\n})\n```\n\n优点：`URL`更加美观，不带有`#`，更接近传统`URL`\n\n缺点：后期项目上线，需要服务端配合处理路径问题，否则刷新会有**404错误**\n\n##### hash模式\n\n```typescript\nconst router = createRouter({\n    history: createWebHashHistory(),\n    {\n    \tpath:XXX,\n    \tcomponent:XXX\n\t}\n})\n```\n\n优点：兼容性好，因为不需要服务器端处理路径\n\n缺点：`URL`带有`#`不太美观，**且在`SEO`优化方面相对较差**\n\n### 命名路由\n\n```typescript\n  routes: [\n    // {\n    //     name:'路由名'\n    //     path:'路径',\n    //     component:组件\n    // }\n    {\n      name: \"HOME\",\n      path: \"/home\",\n      component: Home,\n    },\n    {\n      name: \"NEWS\",\n      path: \"/news\",\n      component: News,\n    },\n    {\n      name: \"ABOUT\",\n      path: \"/about\",\n      component: About,\n    },\n  ],\n```\n\n```vue\n    <div class=\"navigate\">\n        <!--三种路由跳转方式 -->\n        <RouterLink to=\"/home\">首页 </RouterLink>\n         <!--注意感叹号 -->\n        <RouterLink :to=\"{ name: 'NEWS' }\">新闻 </RouterLink>\n        <RouterLink :to=\"{ path: '/about' }\">关于 </RouterLink>\n    </div>\n```\n\n### 嵌套路由\n\nP.S 路由页面要有`<router-view/>`来承载\n\n子路由\n\n```typescript\n  routes: [\n    // {\n    //   name: \"路由名\",\n    //   path: \"/路径\",\n    //   component: 组件名,\n    //   children: [\n    //     {\n    //       path: \"子路由路径\",\n    //       component: 子路由组件名,\n    //     },\n    //   ],\n    // },\n    {\n      name: \"NEWS\",\n      path: \"/news\",\n      component: News,\n      children: [\n        {\n          name: 'Detail'\n          path: 'detail',\n          component: Detail,\n        },\n      ],\n    },\n  ],\n```\n\n### 路由传参\n\n#### query\n\n```vue\n<!-- News.vue -->\n<template>\n    <!-- html -->\n    <div>\n        <ul>\n            <li v-for=\"news in newsList\" :key=\"news.id\">\n                <RouterLink :to=\"`/news/detail?id=${news.id}&title=${news.title}&content=${news.content}`\">{{\n                news.title }}</RouterLink>\n            </li>\n        </ul>\n        <div class=\"main-content\" style=\"border: 1px solid red;height: 300px;width:300px\">\n            <RouterView></RouterView>\n        </div>\n    </div>\n</template>\n<script lang=\"ts\" setup name=\"News\">\nimport { RouterView } from 'vue-router';\nimport { reactive } from 'vue'\nconst newsList = reactive([\n    { id: '021120230', title: \"基于区块链\", content: 'solidity' },\n    { id: '021120231', title: \"信息管理系统\", content: 'python' }\n])\n</script>\n```\n\n```vue\n<template>\n    <!-- html -->\n    <ul>\n        <li>编号：{{ route.query.id }}</li>\n        <li>标题：{{ route.query.title }}</li>\n        <li>内容：{{ route.query.content }}</li>\n    </ul>\n</template>\n<script lang=\"ts\" setup name=\"Detail\">\nimport { useRoute } from 'vue-router'\nlet route = useRoute()\n```\n\n这个不好用，看看得了\n\n下面是**使用对象传参**\n\n```vue\n<!-- News.vue -->\n<template>\n    <!-- html -->\n    <div>\n        <ul>\n            <li v-for=\"news in newsList\" :key=\"news.id\">\n                <RouterLink :to=\"{\n                name: 'Detail',\n                query: {\n                    id: news.id,\n                    title: news.title,\n                    content: news.content\n                }\n            }\">{{ news.title }}</RouterLink>\n            </li>\n        </ul>\n        <div class=\"main-content\" style=\"border: 1px solid red;height: 300px;width:300px\">\n            <RouterView></RouterView>\n        </div>\n    </div>\n</template>\n<script lang=\"ts\" setup name=\"News\">\nimport { RouterView } from 'vue-router';\nimport { reactive } from 'vue'\nconst newsList = reactive([\n    { id: '021120230', title: \"基于区块链\", content: 'solidity' },\n    { id: '021120231', title: \"信息管理系统\", content: 'python' }\n])\n</script>\n\n```\n\n```vue\n<!-- detail.vue -->\n<template>\n    <!-- html -->\n    <ul>\n        <li>编号：{{ query.id }}</li>\n        <li>标题：{{ query.title }}</li>\n        <li>内容：{{ query.content }}</li>\n    </ul>\n</template>\n<script lang=\"ts\" setup name=\"Detail\">\nimport { toRefs } from 'vue';\nimport { useRoute } from 'vue-router'\nlet route = useRoute()\n// 不使用toRefs会丢失响应式\nlet { query } = toRefs(route)\n</script>\n```\n\n#### params参数\n\n在路由规则中占位\n\n```typescript\n    {\n      name: \"NEWS\",\n      path: \"/news\",\n      component: News,\n      children: [\n        {\n          name: \"Detail\",\n          path: \"detail/:id/:title/:content\",\n          component: Detail,\n        },\n      ],\n    },\n```\n\n```vue\n<!-- detail.vue -->\n<template>\n    <!-- html -->\n    <ul>\n        <li>编号：{{ route.params.id }}</li>\n        <li>标题：{{ route.params.title }}</li>\n        <li>内容：{{ route.params.content }}</li>\n    </ul>\n</template>\n<script lang=\"ts\" setup name=\"Detail\">\nimport { useRoute } from 'vue-router';\nconst route = useRoute()\nconsole.log(route)\n</script>\n<style>\n/* 样式 */\n</style>\n```\n\n```vue\n<!-- News.vue -->\n<template>\n    <!-- html -->\n    <div>\n        <ul>\n            <li v-for=\"news in  newsList \" :key=\"news.id\">\n                <!-- 第一种写法 -->\n                <!-- <RouterLink :to=\"`/news/detail/${news.id}/${news.title}/${news.content}`\">{{ news.title }}\n                </RouterLink> -->\n                <!-- 第二种写法 -->\n                <RouterLink :to=\"{\n                name: 'Detail',\n                params: {\n                    id: news.id,\n                    title: news.title,\n                    content: news.content\n                }\n            } as any\">{{ news.title }}\n                </RouterLink>\n            </li>\n        </ul>\n        <div class=\"main-content\" style=\"border: 1px solid red;height: 300px;width:300px\">\n            <RouterView></RouterView>\n        </div>\n    </div>\n</template>\n<script lang=\"ts\" setup name=\"News\">\nimport { RouterView } from 'vue-router';\nimport { reactive } from 'vue'\nconst newsList = reactive([\n    { id: '021120230', title: \"基于区块链\", content: 'solidity' },\n    { id: '021120231', title: \"信息管理系统\", content: 'python' }\n])\n</script>\n```\n\n缺点：\n\n对象参数中不可以包含数组\n\n### 路由props配置\n\n路由规则中配置\n\n```typescript\n    {\n      name: \"NEWS\",\n      path: \"/news\",\n      component: News,\n      children: [\n        {\n          name: \"Detail\",\n          // path: \"detail/:id/:title/:content\",//params写法\n          path: \"detail\",\n          component: Detail,\n          // props: true, //params\n          // query写法\n          props(route) {\n            return route.query;\n          },\n        },\n      ],\n    },\n```\n\n ```vue\n <!-- detail.vue -->\n <template>\n     <!-- html -->\n     <ul>\n         <li>编号：{{ id }}</li>\n         <li>标题：{{ title }}</li>\n         <li>内容：{{ content }}</li>\n     </ul>\n </template>\n <script lang=\"ts\" setup name=\"Detail\">\n defineProps(['id', 'title', 'content'])\n </script>\n ```\n\n### replace属性\n\n作用：控制路由跳转时操作浏览器历史记录的模式\n\n浏览器历史记录有两种写入方式，分别为`push`和`replace`\n\n- `push`：追加历史记录\n- `replace`：替换当前记录，点击过后不能返回\n\n开启`replace`模式\n\n```vue\n<RouterLink replace to=\"/home\">首页 </RouterLink>\n```\n\n### 编程式路由导航\n\n使用频率很高，远远大于RouterLink\n\n```vue\n<script lang=\"ts\" setup name=\"Home\">\n//效果是，点击首页三秒后跳转至新闻页\nimport { onMounted } from 'vue';\nimport { useRouter } from 'vue-router';\nconst router = useRouter()\nonMounted(() => {\n    setTimeout(() => {\n        router.push('/news')\n    }, 3000)\n})\n</script>\n```\n\n### 重定向\n\n将指定路径重定向到另一个路径\n\n在规则中进行修改【此规则包含了所有路由配置写法】\n\n```typescript\n//写一个路由器并暴露出去\nimport { createRouter, createWebHistory } from \"vue-router\";\nimport Home from \"@/pages/Home.vue\";\nimport News from \"@/pages/News.vue\";\nimport About from \"@/pages/About.vue\";\nimport Detail from \"@/pages/detail.vue\";\n//创建路由器\nconst router = createRouter({\n  //路由器工作模式\n  history: createWebHistory(),\n  routes: [\n    // {\n    //   name: \"路由名\",\n    //   path: \"/路径\",\n    //   component: 组件名,\n    //   children: [\n    //     {\n    //       path: \"子路由路径\",\n    //       component: 子路由组件名,\n    //     },\n    //   ],\n    // },\n    {\n      name: \"HOME\",\n      path: \"/home\",\n      component: Home,\n    },\n    {\n      name: \"NEWS\",\n      path: \"/news\",\n      component: News,\n      children: [\n        {\n          name: \"Detail\",\n          // path: \"detail/:id/:title/:content\",//params写法\n          path: \"detail\",\n          component: Detail,\n          // props: true, //params\n          // query写法\n          props(route) {\n            return route.query;\n          },\n        },\n      ],\n    },\n    {\n      name: \"ABOUT\",\n      path: \"/about\",\n      component: About,\n    },\n    //重定向\n    {\n      path: \"/\",\n      redirect: \"/home\",\n    },\n  ],\n});\n//把路由规则暴露出去\nexport default router;\n```\n\n## Pinia\n\n### 安装和部署\n\n**安装**\n\n```terminal\n#安装pinia\n$npm i pinia\n```\n\n**搭建环境**\n\n```typescript\n//main.ts\nimport { createApp } from \"vue\";\nimport App from \"./App.vue\";\nimport router from \"./router\";\n//引入pinia\nimport { createPinia } from \"pinia\";\nconst app = createApp(App);\n//创建pinia\nconst pinia = createPinia();\napp.use(router);\napp.mount(\"#app\");\n//安装pinia\napp.use(pinia);\n```\n\n### 使用\n\n其作用相当于前端的仓库\n\n```typescript\n//src/store/count.ts\nimport { defineStore } from \"pinia\";\n\nexport const useContentStore = defineStore(\"count\", {\n  //真正存数据的地方\n  state() {\n    return {\n      sum: 6,\n    };\n  },\n});\n```\n\n```typescript\n//src/store/talk.ts\nimport { defineStore } from \"pinia\";\n\nexport const useTalkStore = defineStore(\"talk\", {\n  //真正存数据的地方\n  state() {\n    return {\n      talkList: [\n        { id: \"1\", title: \"qqqqqqqqqqqqqqqqqqq\" },\n        { id: \"2\", title: \"wwwwwwwwwwwwwww\" },\n        { id: \"3\", title: \"eeeeeeeeeeeeeeeeeeeee\" },\n        { id: \"4\", title: \"rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr\" },\n      ],\n    };\n  },\n});\n\n```\n\n**调用**\n\n```vue\n<!-- components/Love.vue -->\n<template>\n    <div class=\"talk\">\n        <button @click=\"getTalk\">获取一句土味情话</button>\n        <ul>\n            <li v-for=\"talk in talkStore.talkList\" :key=\"talk.id\">{{ talk.title }}</li>\n        </ul>\n    </div>\n</template>\n\n<script lang='ts' setup name='LoveTalk'>\nimport axios from 'axios';\nimport { reactive } from 'vue';\nimport { nanoid } from 'nanoid'\nimport { useTalkStore } from '@/store/talk'\nconst talkStore = useTalkStore()\nasync function getTalk() {\n    //发请求,连用两次解构赋值和一次重命名\n    let { data: { content: title } } = await axios.get('https://api.uomg.com/api/rand.qinghua?format=json');\n    // 把请求回来的字符串，包装成一个对象\n    let obj = { id: nanoid(), title: title }\n    console.log(obj)\n    //放到数组中\n    talkStore.talkList.unshift(obj)//最开始\n    // talkList.push(obj)//最末尾\n}\n</script>\n```\n\n```vue\n<!-- components/Count.vue -->\n<template>\n    <div class=\"count\">\n        <h2>当前求和为:{{ countStore.sum }}</h2>\n    </div>\n    <select v-model.number=\"n\">\n        <option value=\"1\">1</option>\n        <option value=\"2\">2</option>\n        <option value=\"3\">3</option>\n    </select>\n    <button @click=\"add\">加</button>\n    <button @click=\"minus\">减</button>\n</template>\n\n<script lang='ts' setup name=\"Count\">\nimport { ref } from 'vue'\nimport { useContentStore } from '@/store/count'\n// countStore是一个响应式reactive对象，\n// 并且会自动解构它下面的ref类型数据，因此不需要写.value\nconst countStore = useContentStore()\nconsole.log('@@@', countStore.sum)\n\n//数据\nlet n = ref(1) //用户选择的数据\n\nfunction add() {\n    countStore.sum += n.value\n}\nfunction minus() {\n    countStore.sum -= n.value\n}\n</script>\n\n```\n\n### 修改数据(三种方式)\n\n```typescript\n//components/Count.vue\nfunction add() {\n    //<----------第一种修改方式------------->\n    // countStore.sum += n.value\n    // countStore.school = '鸡大'\n    //<----------第二种修改方式------------->\n    // 适用于修改多个数据\n    // countStore.$patch({\n    //     sum: 88,\n    //     school: '鸡大'\n    // })\n    //<----------第二种修改方式------------->\n    countStore.increment(n.value)\n\n}\n```\n\n```typescript\n//src/store/count.ts\nimport { defineStore } from \"pinia\";\n\nexport const useContentStore = defineStore(\"count\", {\n  //actions里放置的是一个个方法，用于相应组件中的“动作”\n  actions: {\n    increment(value: any) {\n      this.sum += value;\n    },//很麻烦，日常开发用起来不方便，但是可以模块化，复用它\n  },\n  //真正存数据的地方\n  state() {\n    return {\n      sum: 6,\n      school: \"SUES\",\n    };\n  },\n});\n\n```\n\n### $subscribe的使用\n\n能够在本地浏览器存储数据，使其不会因为浏览器的刷新而导致数据丢失\n\n还是以土味情话为例\n\n```vue\n<!--Love.vue-->\n<script lang='ts' setup name='LoveTalk'>\nimport { useTalkStore } from '@/store/talk'\nconst talkStore = useTalkStore()\nasync function getTalk() {\n    talkStore.getATalk()\n    talkStore.$subscribe((mutate, state) => {\n        //mutate表示发生变化的内容\n        console.log('talkStore内的数据发生了变化', mutate, state)\n        localStorage.setItem('talkList', JSON.stringify(state.talkList))\n    })\n}\n</script>\n```\n\n```typescript\n//src/store/talk.ts\nimport { defineStore } from \"pinia\";\nimport { nanoid } from \"nanoid\";\nimport axios from \"axios\";\nexport const useTalkStore = defineStore(\"talk\", {\n  actions: {\n    async getATalk() {\n      //发请求,连用两次解构赋值和一次重命名\n      let {\n        data: { content: title },\n      } = await axios.get(\"https://api.uomg.com/api/rand.qinghua?format=json\");\n      // 把请求回来的字符串，包装成一个对象\n      let obj = { id: nanoid(), title: title };\n      console.log(obj);\n      //放到数组中\n      this.talkList.unshift(obj); //最开始\n      // talkList.push(obj)//最末尾\n    },\n  },\n  //真正存数据的地方\n  state() {\n    return {\n      talkList: JSON.parse(localStorage.getItem(\"talkList\") as string) || [],\n    };\n  },\n});\n\n```\n\n**效果：**\n\n![image-20240317151105751](/img/Vue3_note/image-20240317151105751.png)\n\n### 组合式写法\n\n```typescript\n//src/store/talk.ts\nimport { reactive } from \"vue\";\nexport const useTalkStore = defineStore(\"talk\", function a() {\n  const talkList = reactive(\n    JSON.parse(localStorage.getItem(\"talkList\") as string) || []\n  );\n  async function getATalk() {\n    //发请求,连用两次解构赋值和一次重命名\n    let {\n      data: { content: title },\n    } = await axios.get(\"https://api.uomg.com/api/rand.qinghua?format=json\");\n    // 把请求回来的字符串，包装成一个对象\n    let obj = { id: nanoid(), title: title };\n    console.log(obj);\n    //放到数组中\n    talkList.talkList.unshift(obj); //最开始\n    // talkList.push(obj)//最末尾\n  }\n  return { talkList, getATalk };\n});\n```\n\n## 向后端发起请求\n\n核心语句，当然后端要做好跨域访问\n\n```typescript\nimport axios from \"axios\"; \nasync function Login() {\n\tlet loginMessage = {\n        user_id: userid.value,\n        password: password.value\n    }\n \tconst response = await axios.post('http://localhost:8080/login', loginMessage);\n}\n```\n\n写个样例，向后端发送登录请求，并将返回的token存入Pinia中,同时在浏览器也做好存储，避免服务器重启以及刷新浏览器会丢失数据\n\n先新建仓库\n\n```typescript\n//store/loginStore.ts\nimport { defineStore } from \"pinia\"\nimport { type LoginResult } from \"@/interface/loginResult\"\nimport { ref } from \"vue\"\nexport const useLoginStore = defineStore(\"login\", function login() {\n    //真正存数据的地方\n    const userid = ref(localStorage.getItem(\"userid\") || \"\")\n    const username = ref(localStorage.getItem(\"username\") || \"\")\n    const publicKey = ref(localStorage.getItem(\"publicKey\") || \"\")\n    const konohaToken = ref(localStorage.getItem(\"konohaToken\") || \"\")\n    function Login(loginResult: LoginResult) {\n        userid.value = loginResult.user_id\n        username.value = loginResult.username\n        publicKey.value = loginResult.publicKey\n        konohaToken.value = loginResult.konohaToken\n    }\n\n    return { userid, username, publicKey, konohaToken, Login }\n})\n\n```\n\n`login.vue`中\n\n```typescript\nimport { useLoginStore } from '@/store/loginStore'\nimport { ElMessage } from 'element-plus'\nconst loginStore = useLoginStore()\nasync function Login() {\n    let loginMessage = {\n        user_id: userid.value,\n        password: password.value\n    }\n    try {\n        const response = await axios.post('http://localhost:8080/login', loginMessage);\n        // console.log(loginMessage)\n        console.log('send successful:', response.data.data);\n        switch (response.data.code) {\n            case 200:\n                // 登录成功后的处理\n                loginStore.Login(response.data.data)\n                loginStore.$subscribe((mutate, state) => {\n                    //mutate表示发生变化的内容，同时更新浏览器存储\n                    console.log('loginStore内的数据发生了变化', mutate, state)\n                    localStorage.setItem('userid', state.userid)\n                    localStorage.setItem('username', state.username)\n                    localStorage.setItem('publicKey', state.publicKey)\n                    localStorage.setItem('konohaToken', state.konohaToken)\n                })\n                ElMessage({\n                    message: response.data.msg,\n                    type: 'success',\n                })\n                break\n            default:\n                //登陆失败或者异常时的处理\n                ElMessage({\n                    message: response.data.msg,\n                    type: 'error',\n                })\n                //同时清空输入框，这里可以说是非常简单粗暴了\n                userid.value =''\n                password.value = ''\n                break\n        }\n    } catch (error) {\n        console.error('Login failed:', error);\n        // 登录失败的处理\n    }\n}\n```\n\nP.S `get`请求要写完整，最后的斜杠不能少\n\n```typescript\nconst response = await axios.get(\"http://localhost:8080/showclaims/\")\n```\n\n\n\n","source":"_posts/Vue3_note.md","raw":"---\ntitle: Vue 3.0 笔记\ncategories:\n  - 前端\ndescription: \"Patrick Collins-区块链学习笔记\"\ndate: 2024-03-17 14:11:40\nexcerpt: \"Vue3.0的入门笔记，特色的compositionAPI写法，可读性和可维护性得到了大幅的提升，再加上各种组件库的支持，文档齐全，非常便于使用。\"\ntags:\n    - Vue3.0\n    - Typescript\n---\n\n\n## 前言\n\n因为我是先前并没有接触Vue3，因此这份笔记很基础很基础，尽量都写成傻瓜式的了，当然也有可能有些地方写的不是很清楚，毕竟最初的目的就是为了写给我自己看的，至于之后会不会再深入学习Typescript和Javascript，这谁又晓得呢？反正我修燃气用是不上这个。\n\n## 工具包\n\n课程链接：【尚硅谷Vue3入门到实战，最新版vue3+TypeScript前端开发教程】 https://www.bilibili.com/video/BV1Za4y1r7KE/?share_source=copy_web&vd_source=d4c8e690ada3240d323ff6b395a76451\n\n## Vue3简介\n\nVue3，截止至2023年10月，最新公开版本为3.3.4\n\n## Vue创建工程\n\n### 基于vite创建\n\n新的前端构建工具，特点如下：\n\n> - 热重载\n> - 对`TS`、`JSX`、`CSS`支持开箱即用\n> - 按需编译\n\nwebpack与vite构建对比图如下：\n\n<img src=\"/img/Vue3_note/image-20240105103235439.png\" alt=\"image-20240105103235439\"  />\n\n终端创建指令：\n\n```terminal\nnpm create vue@latest\n```\n\n![image-20240423215020646](/img/Vue3_note/image-20240423215020646.png)\n\n![image-20240105104452696](/img/Vue3_note/image-20240105104452696.png)\n\n### 工作目录介绍\n\n- /**public**\n\t用于存放网页顶端的图标\n\n![image-20240105104835729](/img/Vue3_note/image-20240105104835729.png)\n\n- /**src**\n\t工作目录\n\n\n\n- /**node_modules**\n\n\t执行`npm i`，下载依赖，会生成`node_modules`这个文件夹\n\t作用：写了前端常用文件（如.jpg,.txt）等等，再通过`env.d.ts`中的以下代码告诉Vue\n\n```typescript\n/// <reference types=\"vite/client\" />\n```\n\n- **/index.html**\n\t入口文件\n\n\t\n\n- /**package.json**\n\t包的声明文件\n\n\t\n\n- /**vite.config.ts**\n\t工程的配置文件，配置插件等等\n\n\n\n- **/src/components**\n\t用于存放组件\n\n![image-20240105120758018](/img/Vue3_note/image-20240105120758018.png)\n\n## 编写一个App组件\n\n在main.ts中\n\n```typescript\nimport './assets/main.css'\n\nimport { createApp } from 'vue'\nimport App from './App.vue'\n\ncreateApp(App).mount('#app')\n```\n\n`createApp`:一个用于“造花盆”的方法\n\n`App`：从`App.vue`中引用，是一个根组件，可以看作是一朵花，包括之后写的`A.vue`、`B.vue`，其实都是安装在根组件上的组件，类似“花上的叶子”，它们直接或间接下载在`App.vue`上\n\n`createApp(App).mount('#app')`：将app传入`createApp()`中，创建一个名叫App的互联网应用，并且它的根组件叫`App`；`mount`：挂载，将App摆在名为app的容器中。\n\nvue组件中，包含以下内容\n\n```vue\n<template>\n    <!-- html -->\n    <div class=\"app\">\n        <hl>你好</hl>\n    </div>\n</template>\n<script lang=\"ts\">\n//  JS或者TS\nexport default{\n    name:'App' //组件名\n}\n</script>\n\n<style>\n/* 样式 */\n.app{\n    background-color: #ddd;\n    box-shadow: 0 0 10px;\n    border-radius: 10px;\n    padding: 20px;\n}\n</style>\n```\n\n之后运行 `npm run dev`，`在 Local:   http://localhost:5173/`中查看\n\n![image-20240105155229131](/img/Vue3_note/image-20240105155229131.png)\n\n## 总结\n\n- `vite`项目中，`index.html`是项目的入口文件，在项目最外层\n- 加载`index.html`后，`vite`会解析`<script type=\"module\" src=\"/src/main.ts\"></script>`指向的js\n- vue3是通过createApp的函数创建一个应用实例\n\n## OptionAPI\n\n这是Vue2的语法\n\n```html\n<!-- Vue2 写法-->\n<template>\n    <!-- html -->\n    <div class=\"person\">\n        <h2>姓名:{{ name }}</h2>\n        <h2>年龄:{{ age }}</h2>\n        <button @click=\"changeName\">修改名字</button>\n        <button @click=\"changeAge\">修改年龄</button>\n        <button @click=\"showTel\">联系方式</button>\n    </div>\n</template>\n<script lang=\"ts\">\nexport default {\n    name: 'Person',//组件名\n    data() {\n        return {\n            name: '张三',\n            age: 18,\n            tel: '18019328622'\n        }\n    },\n    methods: {\n        showTel() {\n            alert(this.tel)\n        },\n        changeName() {\n            this.name = '李四'\n        },\n        changeAge() {\n            this.age += 1\n        }\n    }\n}\n</script>\n```\n\n在'枝干组件'`App.vue`中导入并引用\n\n```typescript\nimport Person from './components/Person.vue'\nexport default {\n    name: 'App',//组件名\n    components: { Person }//注册组件\n}\n```\n\n```html\n<template>\n    <!-- html -->\n    <div class=\"app\">\n        <hl>你好啊！</hl>\n        <Person />\n    </div>\n</template>\n```\n\n效果如下\n\n![image-20240108173531398](/img/Vue3_note/image-20240108173531398.png)\n\n### 弊端\n\noptionAPI的语法弊端不难看出，数据、方法、计算属性都是分散在data、methods、computed中，想要新增功能就需要对上述进行修改，这显然是不便于维护和复用的。\n\n## compositionAPI\n\n### setup概述\n\n与optionalAPI不同，compositionAPI将组件的数据、方法、计算属性集中在一个名为setup()的方法中，写法如下：\n\n```typescript\n<script lang=\"ts\">\nexport default {\n    name: 'Person',//组件名\n    setup() {\n        //setup中的this是undefined，vue3中已经开始弱化this了\n        //数据\n        //此时的name，age，tel不是响应式的\n        let name = '张三'\n        let age = 18\n        let tel = '18019328622'\n        //方法\n        function changeName() {\n            name = '李四'  //name确实修改了，但不是响应式的\n        }\n        function changeAge() {\n            age += 1\n        }\n        function showTel() {\n            alert(tel)\n        }\n        //必须要给予一个返回值，否则外部接收不到这些数据\n        return { name, age, changeName, changeAge, showTel }\n    }\n}\n</script>\n```\n\n值得一提的是，vue2中的选项式语法和vue3中的新语法是可以同时出现的，并且由于setup的执行优先级高于optionalAPI中的内容，这导致optinalAPI中的内容可以访问到setup中的数据变量，但setup不能访问到optionalAPI中的数据变量，用例如下：\n\n```typescript\n<script lang=\"ts\">\nexport default {\n    name: 'Person',//组件名\n    beforeCreate() {\n        console.log('beforeCreate')\n    },\n    data() {\n        return {\n            a: this.name\n        }\n    },\n    setup() {\n        //setup中的this是undefined，vue3中已经开始弱化this了\n        //数据\n        //此时的name，age，tel不是响应式的\n        let name = '张三'\n        let age = 18\n        let tel = '18019328622'\n        //方法\n        function changeName() {\n            name = '李四'  //name确实修改了，但不是响应式的\n        }\n        function changeAge() {\n            age += 1\n        }\n        function showTel() {\n            alert(tel)\n        }\n        return { name, age, changeName, changeAge, showTel }\n    }\n}\n</script>\n```\n\n![image-20240108233851273](/img/Vue3_note/image-20240108233851273.png)\n\n### setup的语法糖\n\n```typescript\n<script lang=\"ts\">\nexport default {\n    name: 'Person',//组件名\n}\n</script>\n\n<script lang=\"ts\" setup>\nlet name = '张三'\nlet age = 18\nlet tel = '18019328622'\n//方法\nfunction changeName() {\n    name = '李四'  //name确实修改了，但不是响应式的\n}\nfunction changeAge() {\n    age += 1\n}\nfunction showTel() {\n    alert(tel)\n}\n</script>\n```\n\n像这样编写可以不用写setup的返回值\n\n#### 插件配置方法\n\n如果想将上述合二为一，可以下载插件，指令 `npm i vite-plugin-vue-setup-extend -D`\n\n在`vite.config.ts`中进行配置插件，**其他插件方法也是类似**\n\n```typescript\n import VueSetupExtend from 'vite-plugin-vue-setup-extend'\n\n// https://vitejs.dev/config/\nexport default defineConfig({\n  plugins: [\n    vue(),\n    VueSetupExtend()\n  ],\n  resolve: {\n    alias: {\n      '@': fileURLToPath(new URL('./src', import.meta.url))\n    }\n  }\n})\n\n```\n\n最后对上述两个script合二为一\n\n```typescript\n<script lang=\"ts\" setup name=\"Person123\">\nlet name = '张三'\nlet age = 18\nlet tel = '18019328622'\n//方法\nfunction changeName() {\n    name = '李四'  //name确实修改了，但不是响应式的\n}\nfunction changeAge() {\n    age += 1\n}\nfunction showTel() {\n    alert(tel)\n}\n</script>\n```\n\n效果如下：\n\n![image-20240109132721613](/img/Vue3_note/image-20240109132721613.png)\n\n## 响应式\n\n响应式:能够实时变化的数据\n\n### 响应式数据\n\n```typescript\n//引用\nimport { ref } from 'vue'\n//包裹\nlet name = ref('张三')\nlet age = ref(18)\nlet tel = '18019328622'\n//方法\nfunction changeName() {\n    name.value = '李四'\n}\nfunction changeAge() {\n    age.value += 1\n}\nfunction showTel() {\n    alert(tel)\n}\n```\n\n> 觉得频繁写.value很麻烦？不妨试试volar\n>\n> <img src = \"/img/Vue3_note/image-20240128222423403.png\" align=\"left\">\n\n### 响应式对象\n\n响应式对象:被`reactive`包裹过后的对象\n\n```typescript\nimport {reactive} from 'vue'\n    //data\n    let car = reactive({ brand: '奔驰', price: 100 })\n    let games = reactive([\n        {id:'0000001',name:'AAA1'},\n        {id:'0000001',name:'AAA1'},\n        {id:'0000001',name:'AAA1'}\n    ])\n    let obj =reactive({\n        a:{\n            b:{\n                c:666\n            }\n        }\n    })\n    function changePrice(){\n        car.price +=10\n    }\n    function changeName(){\n        games[0].name = 'BBB1'\n    }\n    function changeObj(){\n        obj.a.b.c = 999\n    }\n\n```\n\n### 使用ref定义对象类型的响应数据\n\n```typescript\nimport { ref } from 'vue'\n//data\nlet car = ref({ brand: '奔驰', price: 100 })\nlet games = ref([\n    { id: '0000001', name: 'AAA1' },\n    { id: '0000001', name: 'AAA1' },\n    { id: '0000001', name: 'AAA1' }\n])\nfunction changePrice() {\n    car.value.price += 10\n    console.log(car.value.price)\n}\nfunction changeName() {\n    games.value[0].name = 'BBB1'\n}\n```\n\n结果：\n\n![image-20240128220343854](/img/Vue3_note/image-20240128220343854.png)\n\n可以看出表面是`ref`包裹的对象，但是实际还是使用`reactive`包裹实现的\n\n### ref和reactive的区别\n\n|   名称   |                           可以定义                           |\n| :------: | :----------------------------------------------------------: |\n|   ref    |           基本类型、对象类型的响应式数据[层级不深]           |\n| reactive | 可以定义：对象类型的响应式数据[层级深] <br />重新分配会丢失响应式的属性[^1] |\n\n> [^1]: 对已经用`reactive`分配好的响应式对象，重新覆写一个对象会使新的对象失去响应式\n>\n> ```typescript\n> import { ref } from 'vue'\n> //data\n> let car = ref({ brand: '奔驰', price: 100 })\n> //method\n> function changeCar(){\n>     car.value={brand:'BYD',price:20}\n> }\n> ```\n>\n> 此时一旦使用changeCar()这个方法，那么奔驰就会被BYD覆盖并且覆盖它的BYD不具备响应式\n>\n> 可以使用Object.assign(obj1,obj2)来解决，如下：\n>\n> ```typescript\n> let car = reactive({ brand: '奔驰', price: 100 })\n> //method\n> function changeCar(){\n>     Object.assign(car,{ brand: 'BYD',price: 20})\n> }\n> ```\n>\n> ref不需要这么写\n>\n> ```typescript\n> let car = ref({ brand: '奔驰', price: 100 })\n> let games = ref([\n>     { id: '0000001', name: 'AAA1' },\n>     { id: '0000001', name: 'AAA1' },\n>     { id: '0000001', name: 'AAA1' }\n> ])\n> //method\n> function changePrice() {\n>     car.value.price += 10\n>     console.log(car.value.brand)\n> }\n> function changeName() {\n>     games.value[0].name='BBB1'\n> }\n> function changeCar(){\n>     // Object.assign(car,{ brand: 'BYD',price: 20})\n>     car.value = { brand: 'BYD',price: 20}\n> }\n> ```\n>\n> 原因是ref的对象覆盖是发生在car.value上的\n\n### toRefs和toRef\n\n```typescript\nimport { ref,reactive,toRefs,toRef } from 'vue'\n//data\nlet person = reactive({\n    name:\"张三\",\n    age:18\n})\nlet {name,age} = toRefs(person)\nlet age_2 = toRef(person,'age')\n//method\nfunction changeName(){\n    name.value+='~'\n}   \nfunction changeAge(){\n    age.value+=1\n}\n```\n\ntoRefs会接收一组由reactive构成的对象，然后把对象中的每一组key,value都拎出来，形成一个新的对象（依然具备响应式的属性）;\n\ntoRef只会接受由reactive构成的对象当中的一个元素\n\n## computed计算属性\n\n```vue\n<template>\n<!-- html -->\n<div class=\"person\">\n    <!-- 这样↓写是单向绑定 -->\n    <!-- 姓：<input type=\"text\" :value=\"firstName\"><br>  -->\n    姓：<input type=\"text\" v-model=\"firstName\"><br>\n    名：<input type=\"text\" v-model=\"lastName\"><br>\n    全名：<span>{{ fullName }}</span><br>\n    <button @click=\"changeFullName\">修改全名</button>\n    </div>\n</template>\n\n<script lang=\"ts\" setup name=\"Person123\">\n    import { ref, computed } from 'vue'\n    let firstName = ref('张')\n    let lastName = ref('三')\n    //如此定义的计算属性是只读的\n    // let fullName = computed(()=>{\n    //     return firstName.value.slice(0,1).toUpperCase()+firstName.value.slice(1)+'-'+lastName.value.slice(0,1).toUpperCase()+lastName.value.slice(1)\n    // })\n    //如此定义的计算属性可读可写\n    let fullName = computed({\n        get() {\n            return firstName.value.slice(0, 1).toUpperCase() + firstName.value.slice(1) + '-' + lastName.value.slice(0, 1).toUpperCase() + lastName.value.slice(1)\n        },\n        set(val) {\n            const [str1, str2] = val.split('-')\n            firstName.value = str1\n            lastName.value = str2\n        }\n    })\n    //method\n    function changeFullName() {\n        fullName.value = 'li-si'\n    }\n</script>\n```\n\n上面代码段`let fullName = computed({//略})`相比于function(){ }，具备了缓存，只有计算属性依赖的数据发生变化时才会重新计算，数据不变即便是重复调用也不会反复执行computed中的内容;\n\n## Watch监视\n\nwatch基本格式：\n\n```txt\nimport { watch } from 'vue'\nwatch(obj,func,config) //(被监视的数据，监视的回调，监视的配置)\n```\n\n它能够监视：\n\n```txt\n一个有返回值的函数，ref，reactive响应式对象，或者由以上组成的数组\n```\n\n### 监视【ref】定义的【基本类型】数据\n\n```vue\n<template>\n    <!-- html -->\n    <div class=\"person\">\n       <h1>情况一，监视[ref]定义的[基本类型]数据</h1>\n       <h2>当前求和为:{{ sum }}</h2>\n       <button @click=\"changeNum\">sum++</button>\n    </div>\n</template>\n\n<script lang=\"ts\" setup name=\"Person123\">\nimport { ref, watch } from 'vue'\n//data\nlet sum = ref(0);\n//method\nfunction changeNum(){\n    sum.value+=1;\n}\nwatch(sum,(newValue,oldValue)=>{\n    console.log('sum变化了',newValue,oldValue)\n})\n</script>\n```\n\n关于停止监视以及箭头函数的补充：\n\n```typescript\nconst stopWatch =watch(sum,function(newValue,oldValue){\n    console.log('sum变化了',newValue,oldValue)\n    if (newValue>=10){\n        stopWatch()\n    }\n    return 0\n})\n```\n\n箭头函数就是**不需要**返回值(但是可以有)的function\n\n### 监视【ref】定义的【对象类型】数据\n\n```vue\n<template>\n    <!-- html -->\n    <div class=\"person\">\n       <h1>情况二，监视[ref]定义的[对象类型]数据</h1>\n       <h2>姓名：{{ person.name }}</h2>\n       <h2>年龄：{{ person.age }}</h2>\n       <br>\n       <button @click=\"changeName\">修改名字</button>\n       <button @click=\"changeAge\">修改年龄</button>\n       <button @click=\"changePerson\">修改人</button>\n    </div>\n</template>\n\n<script lang=\"ts\" setup name=\"Person123\">\nimport { ref, watch } from 'vue'\n//data\nlet person =ref({\n    name:\"张三\",\n    age:18,\n})\n//method\nfunction changeName(){\n    person.value.name+=\"~\"\n}\nfunction changeAge(){\n    person.value.age+=1\n}\nfunction changePerson(){\n    person.value={name:\"李四\",age:22}\n}\n//watch\nwatch(person,(newValue,oldValue)=>{\n    console.log('person变化了',newValue,oldValue)\n},{deep:true})\n</script>\n```\n\n如上，但是和监视基础类型相比，代码变化不大\n\n注意到，ref的替换对象是新旧替换，地址发生变化\n\n![image-20240201213743914](/img/Vue3_note/image-20240201213743914.png)\n\n### 监视【reactive】定义的【对象类型】数据\n\n```vue\n<template>\n    <!-- html -->\n    <div class=\"person\">\n       <h1>情况三，监视[reactive]定义的[对象类型]数据</h1>\n       <h2>姓名：{{ person.name }}</h2>\n       <h2>年龄：{{ person.age }}</h2>\n       <br>\n       <button @click=\"changeName\">修改名字</button>\n       <button @click=\"changeAge\">修改年龄</button>\n       <button @click=\"changePerson\">修改人</button>\n    </div>\n</template>\n\n<script lang=\"ts\" setup name=\"Person123\">\nimport { reactive, watch } from 'vue'\n//data\nlet person =reactive({\n    name:\"张三\",\n    age:18,\n})\n//method\nfunction changeName(){\n    person.name+=\"~\"\n}\nfunction changeAge(){\n    person.age+=1\n}\nfunction changePerson(){\n    Object.assign(person,{name:\"李四\",age:22})\n}\n//watch\n//监视reactive定义的对象，会默认开启深度监视，且无法手动关闭\nwatch(person,(newValue,oldValue)=>{\n    console.log('person变化了',newValue,oldValue)\n})\n</script>\n```\n\n效果：\n\n![image-20240201212634644](/img/Vue3_note/image-20240201212634644.png)\n\n可以注意到reactive替换对象是值覆盖，地址没有发生变化\n\n### 监视【ref】或【reactive】定义的对象当中的属性\n\n```vue\n<template>\n    <!-- html -->\n    <div class=\"person\">\n        <h1>情况四，监视[ref,reactive]定义的[对象类型]数据中的某个属性</h1>\n        <h2>姓名:{{ person.name}}</h2>\n        <h2>年龄:{{ person.age}}</h2>\n        <h2>汽车:{{ person.car.c1}}\\{{ person.car.c2 }}</h2>\n        <button @click=\"changeName\">修改名字</button>\n        <button @click=\"changeAge\">修改年龄</button>\n        <button @click=\"changeCar1\">修改第一台车</button>\n        <button @click=\"changeCar2\">修改第二台车</button>\n        <button @click=\"changeCar\">修改全部车</button>\n    </div>\n</template>\n\n<script lang=\"ts\" setup name=\"Person123\">\nimport {reactive,watch} from 'vue'\n//data\nlet person  =reactive({\n    name:\"张三\",\n    age:18,\n    car:{\n        c1:\"奔驰\",\n        c2:\"宝马\",\n    }\n})\n//method\nfunction changeName(){\n    person.name+='~'\n}\nfunction changeAge(){\n    person.age+=1\n}\nfunction changeCar1(){\n    person.car.c1='雅迪'\n}\nfunction changeCar2(){\n    person.car.c2='爱玛'\n}\nfunction changeCar(){\n    person.car={c1:'五菱',c2:'BYD'}\n}\n//watch\nwatch (()=>{return person.name},(newValue,oldValue)=>{\n    console.log('person.name变化了',newValue,oldValue)\n})\nwatch (()=>person.car,(newValue,oldValue)=>{\n    console.log('person.car变化了',newValue,oldValue)\n},{deep:true})\n</script>\n```\n\n监视基本类型数据的时候，需要将其写成函数式；\n\n监视对象类型的时候，**最好**将其写成函数式（可以不写，但是有局限性）\n\n### 监视上述多个数据\n\n```typescript\nwatch ([()=>person.name,person.car],(newValue,oldValue)=>{\n    console.log('person.car变化了',newValue,oldValue)\n},{deep:true})\n```\n\n拿个数组包起来就行，数组里面不一定一定要是程式，也可以是对象，看需求\n\n### watchEffect\n\nwatchEffect可以自动执行监听，不需要指出监听对象\n\n而watch需要指明监听对象\n\n```typescript\nwatchEffect(()=>{\n    if(person.age>=20||其他条件){\n        console.log(\"发送请求\")\n    }\n})\n```\n\n## ref的标签属性\n\n```vue\n<!-- \nPerson.vue \n-->\n<template>\n    <!-- html -->\n    <div class=\"person\">\n        <h1>标签的ref属性</h1>\n        <h2 ref=\"title2\">北京</h2>\n        <button @click=\"showlog\">点我输出</button>\n    </div>\n</template>\n\n<script lang=\"ts\" setup name=\"Person123\">\nimport {ref} from 'vue'\n//data\nlet title2 = ref()\nlet a = ref(0)\nlet b = ref(1)\nlet c = ref(2)\n//method\nfunction showlog(){\n    console.log(title2.value)\n}\ndefineExpose({a,b})//穿过保护性机制让外界可以看到\n</script>\n```\n\n```vue\n<!-- \nApp.vue \n-->\n<template>\n    <!-- html -->\n    <div class=\"app\">\n        <button @click=\"showlog\">测试</button>\n        <Person ref =\"ren\"/>\n    </div>\n</template>\n<script lang=\"ts\" setup name=\"App\">\n//  JS或者TS\nimport Person from './components/Person.vue'\nimport {ref} from 'vue'\n//data\nlet ren = ref()\n//method\nfunction showlog(){\n    console.log(ren.value)\n}\n</script>\n```\n\n点击测试按钮，会输出`Person`的组件对象，如果没有`defineExpose()`那么输出的组件对象里是看不到`Person`组件中定义的a，b，c，这也是防止多人开发的时候，命名冲突。\n\nref组件输出的特点一方面是收到保护性机制（这是使用id所不具备的），另一方面也是具有响应式的特性，就是可以数据变化的时候相互传递并且快速更新。\n\n## 回顾TS中的接口和泛型\n\n```typescript\n//types/index.ts\n//定义一个接口用于限制person对象的具体属性\nexport interface PersonInter{\n    id:string,\n    name:string,\n    age:number\n}\nexport interface Personouter{\n    id:string,\n    name:string,\n    age:number\n}\nexport type Persons =PersonInter[]\n```\n\n可以用它来约束变量\n\n```vue\n<!-- Person.vue -->\n<script lang=\"ts\" setup name=\"Person123\">\nimport { type PersonInter, type Persons } from '@/types'\nlet person: Persons|PersonInter = [\n    { id: '123', name: \"zhangsan\", age: 60 },\n    { id: '123', name: \"zhangsan\", age: 60 },\n]\nlet person2: Persons|PersonInter|Personouter = \n    { id: '123', name: \"zhangsan\", age: 60 },\n</script>\n```\n\n## props的使用\n\n简而言之就是**爸爸给儿子传话**\n\n```vue\n<!-- App.vue -->\n<template>\n    <!-- html -->\n\t<!-- 爸爸给儿子传参 -->\n    <Person  a=\"hello\" :list = \"person\"/>\n\n</template>\n<script lang=\"ts\" setup name=\"App\">\n//  JS或者TS\nimport Person from './components/Person.vue'\nimport { type PersonInter, type Personouter, type Persons } from '@/types'\nimport { reactive } from 'vue'\nlet person: Persons | PersonInter = [\n    { id: '123', name: \"zhangsan\", age: 60 },\n    { id: '123', name: \"zhangsan\", age: 60 },\n]\n</script>\n```\n\n```vue\n<!-- Person.vue -->\n<template>\n    <!-- html -->\n    <div class=\"person\">\n        <ul>\n            <!-- v-for遍历 -->\n            <li v-for=\"personObj in list\" :key=\"personObj.id\">\n                {{ personObj.name }} -- {{ personObj.age }}\n            </li>\n        </ul>\n    </div>\n</template>\n\n<script lang=\"ts\" setup name=\"Person123\">\nimport { defineProps, withDefaults } from 'vue';\nimport { type Persons } from '@/types';\n//接收\n// defineProps(['a', 'list'])\n\n//接收a，同时将props保存起来\n// let x = defineProps(['a'])\n// console.log(x.a)\n\n//接收加限制类型\n// defineProps<{ list: Persons }>()\n\n//接收list+限制类悉尼港+限制必要性+指定默认值\n//withDefaults(defineProps(),{})\nwithDefaults(defineProps<{ list?: Persons }>(), {//第二个参数只接收函数返回值类型\n    list: () => [\n        { id: '123', name: \"zhangsan\", age: 60 },\n        { id: '123', name: \"zhangsan\", age: 60 },\n    ]\n})\n\n</script>\n```\n\n效果：\n\n![image-20240310184451213](/img/Vue3_note/image-20240310184451213.png)\n\n## 生命周期\n\n组件的生命周期\n\n> - **时刻**[调用特定的函数]\n> - **创建**[setup自动执行]\n> - **挂载**[挂载前`onBeforeMount()`，挂载完毕`onMounted(`)]\n> - **更新**[更新前`onBeforeUpdate()`，更新完毕`onUpdated()`]\n> - **卸载**[销毁前`onBeforeUnmount()`，销毁完毕`onUnmounted()`]\n\n生命周期、生命周期函数、生命周期钩子\n\n```vue\n<!-- Person.vue -->\n<template>\n    <!-- html -->\n    <div class=\"person\">\n        <ul>{{ sum }}</ul>\n        <button @click=\"add\">点我sum+1</button>\n    </div>\n</template>\n<!-- Person.vue -->\n<script lang=\"ts\" setup name=\"Person123\">\nimport { onBeforeMount, onBeforeUnmount, onBeforeUpdate, onMounted, onUnmounted, onUpdated, ref } from \"vue\"\nlet sum = ref(0)\nfunction add() {\n    sum.value = sum.value + 1\n}\n//创建\nconsole.log('创建')\n//挂载\nonBeforeMount(() => {\n    console.log(\"挂载前\")\n})\n//挂载完毕\nonMounted(() => {\n    console.log(\"挂载完毕\")\n})\n//更新前\nonBeforeUpdate(() => {\n    console.log(\"更新前\")\n})\n//更新完毕\nonUpdated(() => {\n    console.log(\"更新完毕\")\n})\n// 卸载\nonBeforeUnmount(()=>{\n    console.log(\"卸载前\")\n})\n//卸载完毕\nonUnmounted(() => {\n    console.log(\"卸载完毕\")\n})\n</script>\n```\n\n生命周期流程图[来自官网]\n\n<img src=\"/img/Vue3_note/lifecycle_zh-CN.FtDDVyNA.png\" alt=\"组件生命周期图示\" style=\"zoom:50%;\" />\n\n## 自定义hook\n\n```terminal\n# 安装axios，非必要，只是此处样例用到了\n$ npm i axios\n```\n\n```vue\n<!-- Person.vue -->\n<template>\n    <!-- html -->\n    <div class=\"person\">\n        <h2>{{ sum }}</h2>\n        <button @click=\"add\">点我sum+1</button>\n        <hr>\n        <img v-for=\"(dog, index) in doglist\" :src=\"dog\" :key=\"index\">\n        <button @click=\"getDog\">获取dog</button>\n    </div>\n</template>\n<!-- Person.vue -->\n<script lang=\"ts\" setup name=\"Person123\">\nimport useDog from '@/hooks/useDog';\nimport useSum from '@/hooks/useSum';\nconst { sum, add } = useSum()\nconst { doglist, getDog } = useDog()\n</script>\n```\n\n在`src/hooks`中\n\n```typescript\n//useSum.ts\nimport { ref } from \"vue\";\nexport default function () {\n  let sum = ref(0);\n  function add() {\n    sum.value = sum.value + 1;\n  }\n  return { sum, add };\n}\n```\n\n```typescript\n//useDog.ts\nimport { reactive } from \"vue\";\nimport axios from \"axios\";\nexport default function () {\n  let doglist = reactive([\n    \"https://images.dog.ceo/breeds/pembroke/n02113023_4373.jpg\",\n  ]);\n  async function getDog() {\n    try {\n      let result = await axios.get(\n        \"https://dog.ceo/api/breed/pembroke/images/random\"\n      );\n      doglist.push(result.data.message);\n      console.log(result.data.message);\n    } catch (error) {\n      alert(error);\n    }\n  }\n  //向外部提供东西\n  return { doglist, getDog };\n}\n\n```\n\n作用是啥？vue里看着干净些吧，俺也不知道还有没有别的用途了？\n\n## 路由\n\n### 安装和使用\n\n```terminal\n#安装vue-router最新版\n$npm i vue-router\n```\n\n对App.vue稍作调整\n\n```vue\n<!-- \nApp.vue \n-->\n<template>\n    <!-- html -->\n    <h2>Vue路由测试</h2>\n    <!-- 导航区 -->\n    <div class=\"navigate\">\n        <RouterLink to=\"/home\">首页 </RouterLink>\n        <RouterLink to=\"/news\">新闻 </RouterLink>\n        <RouterLink to=\"/about\">关于 </RouterLink>\n    </div>\n    <hr>\n    <!-- 展示区 -->\n    <div class=\"main-content\" style=\"border: 1px solid red;height: 300px;width:300px\">\n        <RouterView></RouterView>\n    </div>\n</template>\n<script lang=\"ts\" setup name=\"App\">\nimport { RouterView } from 'vue-router';\n</script>\n```\n\n配置路由配置项`index.ts`\n\n```typescript\n//写一个路由器并暴露出去\nimport { createRouter, createWebHistory } from \"vue-router\";\nimport Home from \"@/components/Home.vue\";\nimport News from \"@/components/News.vue\";\nimport About from \"@/components/About.vue\";\n//创建路由器\nconst router = createRouter({\n  //路由器工作模式,很重要👇👇👇\n  history: createWebHistory(),\n  routes: [\n    // {\n    //     path:'路径',\n    //     component:组件\n    // }\n    {\n      path: \"/home\",\n      component: Home,\n    },\n    {\n      path: \"/news\",\n      component: News,\n    },\n    {\n      path: \"/about\",\n      component: About,\n    },\n  ],\n});\n\nexport default router;\n\n```\n\n在`main.ts`中使用路由器\n\n```typescript\n//引入createApp用于创建应用\nimport { createApp } from \"vue\";\n//引用App根组件\nimport App from \"./App.vue\";\nimport router from \"./router\";\n\n//创建一个应用\nconst app = createApp(App);\n//使用路由器\napp.use(router);\n//挂载整个应用到app容器中\napp.mount(\"#app\");\n\n```\n\n效果：\n\n![image-20240314224306984](/img/Vue3_note/image-20240314224306984.png)\n\n路由组件：\n\n靠路由的规则渲染出来的：\n\n```typescript\nroutes: [\n    {\n        path: '/demo',\n        component: demo\n    }\n]\n```\n\n一般组件：\n\n亲手写标签出来的\n\n```html\n<demo/>\n```\n\n### 路由器工作模式\n\n##### history模式\n\n```typescript\nconst router = createRouter({\n    history: createWebHistory(),\n    {\n    \tpath:XXX,\n    \tcomponent:XXX\n\t}\n})\n```\n\n优点：`URL`更加美观，不带有`#`，更接近传统`URL`\n\n缺点：后期项目上线，需要服务端配合处理路径问题，否则刷新会有**404错误**\n\n##### hash模式\n\n```typescript\nconst router = createRouter({\n    history: createWebHashHistory(),\n    {\n    \tpath:XXX,\n    \tcomponent:XXX\n\t}\n})\n```\n\n优点：兼容性好，因为不需要服务器端处理路径\n\n缺点：`URL`带有`#`不太美观，**且在`SEO`优化方面相对较差**\n\n### 命名路由\n\n```typescript\n  routes: [\n    // {\n    //     name:'路由名'\n    //     path:'路径',\n    //     component:组件\n    // }\n    {\n      name: \"HOME\",\n      path: \"/home\",\n      component: Home,\n    },\n    {\n      name: \"NEWS\",\n      path: \"/news\",\n      component: News,\n    },\n    {\n      name: \"ABOUT\",\n      path: \"/about\",\n      component: About,\n    },\n  ],\n```\n\n```vue\n    <div class=\"navigate\">\n        <!--三种路由跳转方式 -->\n        <RouterLink to=\"/home\">首页 </RouterLink>\n         <!--注意感叹号 -->\n        <RouterLink :to=\"{ name: 'NEWS' }\">新闻 </RouterLink>\n        <RouterLink :to=\"{ path: '/about' }\">关于 </RouterLink>\n    </div>\n```\n\n### 嵌套路由\n\nP.S 路由页面要有`<router-view/>`来承载\n\n子路由\n\n```typescript\n  routes: [\n    // {\n    //   name: \"路由名\",\n    //   path: \"/路径\",\n    //   component: 组件名,\n    //   children: [\n    //     {\n    //       path: \"子路由路径\",\n    //       component: 子路由组件名,\n    //     },\n    //   ],\n    // },\n    {\n      name: \"NEWS\",\n      path: \"/news\",\n      component: News,\n      children: [\n        {\n          name: 'Detail'\n          path: 'detail',\n          component: Detail,\n        },\n      ],\n    },\n  ],\n```\n\n### 路由传参\n\n#### query\n\n```vue\n<!-- News.vue -->\n<template>\n    <!-- html -->\n    <div>\n        <ul>\n            <li v-for=\"news in newsList\" :key=\"news.id\">\n                <RouterLink :to=\"`/news/detail?id=${news.id}&title=${news.title}&content=${news.content}`\">{{\n                news.title }}</RouterLink>\n            </li>\n        </ul>\n        <div class=\"main-content\" style=\"border: 1px solid red;height: 300px;width:300px\">\n            <RouterView></RouterView>\n        </div>\n    </div>\n</template>\n<script lang=\"ts\" setup name=\"News\">\nimport { RouterView } from 'vue-router';\nimport { reactive } from 'vue'\nconst newsList = reactive([\n    { id: '021120230', title: \"基于区块链\", content: 'solidity' },\n    { id: '021120231', title: \"信息管理系统\", content: 'python' }\n])\n</script>\n```\n\n```vue\n<template>\n    <!-- html -->\n    <ul>\n        <li>编号：{{ route.query.id }}</li>\n        <li>标题：{{ route.query.title }}</li>\n        <li>内容：{{ route.query.content }}</li>\n    </ul>\n</template>\n<script lang=\"ts\" setup name=\"Detail\">\nimport { useRoute } from 'vue-router'\nlet route = useRoute()\n```\n\n这个不好用，看看得了\n\n下面是**使用对象传参**\n\n```vue\n<!-- News.vue -->\n<template>\n    <!-- html -->\n    <div>\n        <ul>\n            <li v-for=\"news in newsList\" :key=\"news.id\">\n                <RouterLink :to=\"{\n                name: 'Detail',\n                query: {\n                    id: news.id,\n                    title: news.title,\n                    content: news.content\n                }\n            }\">{{ news.title }}</RouterLink>\n            </li>\n        </ul>\n        <div class=\"main-content\" style=\"border: 1px solid red;height: 300px;width:300px\">\n            <RouterView></RouterView>\n        </div>\n    </div>\n</template>\n<script lang=\"ts\" setup name=\"News\">\nimport { RouterView } from 'vue-router';\nimport { reactive } from 'vue'\nconst newsList = reactive([\n    { id: '021120230', title: \"基于区块链\", content: 'solidity' },\n    { id: '021120231', title: \"信息管理系统\", content: 'python' }\n])\n</script>\n\n```\n\n```vue\n<!-- detail.vue -->\n<template>\n    <!-- html -->\n    <ul>\n        <li>编号：{{ query.id }}</li>\n        <li>标题：{{ query.title }}</li>\n        <li>内容：{{ query.content }}</li>\n    </ul>\n</template>\n<script lang=\"ts\" setup name=\"Detail\">\nimport { toRefs } from 'vue';\nimport { useRoute } from 'vue-router'\nlet route = useRoute()\n// 不使用toRefs会丢失响应式\nlet { query } = toRefs(route)\n</script>\n```\n\n#### params参数\n\n在路由规则中占位\n\n```typescript\n    {\n      name: \"NEWS\",\n      path: \"/news\",\n      component: News,\n      children: [\n        {\n          name: \"Detail\",\n          path: \"detail/:id/:title/:content\",\n          component: Detail,\n        },\n      ],\n    },\n```\n\n```vue\n<!-- detail.vue -->\n<template>\n    <!-- html -->\n    <ul>\n        <li>编号：{{ route.params.id }}</li>\n        <li>标题：{{ route.params.title }}</li>\n        <li>内容：{{ route.params.content }}</li>\n    </ul>\n</template>\n<script lang=\"ts\" setup name=\"Detail\">\nimport { useRoute } from 'vue-router';\nconst route = useRoute()\nconsole.log(route)\n</script>\n<style>\n/* 样式 */\n</style>\n```\n\n```vue\n<!-- News.vue -->\n<template>\n    <!-- html -->\n    <div>\n        <ul>\n            <li v-for=\"news in  newsList \" :key=\"news.id\">\n                <!-- 第一种写法 -->\n                <!-- <RouterLink :to=\"`/news/detail/${news.id}/${news.title}/${news.content}`\">{{ news.title }}\n                </RouterLink> -->\n                <!-- 第二种写法 -->\n                <RouterLink :to=\"{\n                name: 'Detail',\n                params: {\n                    id: news.id,\n                    title: news.title,\n                    content: news.content\n                }\n            } as any\">{{ news.title }}\n                </RouterLink>\n            </li>\n        </ul>\n        <div class=\"main-content\" style=\"border: 1px solid red;height: 300px;width:300px\">\n            <RouterView></RouterView>\n        </div>\n    </div>\n</template>\n<script lang=\"ts\" setup name=\"News\">\nimport { RouterView } from 'vue-router';\nimport { reactive } from 'vue'\nconst newsList = reactive([\n    { id: '021120230', title: \"基于区块链\", content: 'solidity' },\n    { id: '021120231', title: \"信息管理系统\", content: 'python' }\n])\n</script>\n```\n\n缺点：\n\n对象参数中不可以包含数组\n\n### 路由props配置\n\n路由规则中配置\n\n```typescript\n    {\n      name: \"NEWS\",\n      path: \"/news\",\n      component: News,\n      children: [\n        {\n          name: \"Detail\",\n          // path: \"detail/:id/:title/:content\",//params写法\n          path: \"detail\",\n          component: Detail,\n          // props: true, //params\n          // query写法\n          props(route) {\n            return route.query;\n          },\n        },\n      ],\n    },\n```\n\n ```vue\n <!-- detail.vue -->\n <template>\n     <!-- html -->\n     <ul>\n         <li>编号：{{ id }}</li>\n         <li>标题：{{ title }}</li>\n         <li>内容：{{ content }}</li>\n     </ul>\n </template>\n <script lang=\"ts\" setup name=\"Detail\">\n defineProps(['id', 'title', 'content'])\n </script>\n ```\n\n### replace属性\n\n作用：控制路由跳转时操作浏览器历史记录的模式\n\n浏览器历史记录有两种写入方式，分别为`push`和`replace`\n\n- `push`：追加历史记录\n- `replace`：替换当前记录，点击过后不能返回\n\n开启`replace`模式\n\n```vue\n<RouterLink replace to=\"/home\">首页 </RouterLink>\n```\n\n### 编程式路由导航\n\n使用频率很高，远远大于RouterLink\n\n```vue\n<script lang=\"ts\" setup name=\"Home\">\n//效果是，点击首页三秒后跳转至新闻页\nimport { onMounted } from 'vue';\nimport { useRouter } from 'vue-router';\nconst router = useRouter()\nonMounted(() => {\n    setTimeout(() => {\n        router.push('/news')\n    }, 3000)\n})\n</script>\n```\n\n### 重定向\n\n将指定路径重定向到另一个路径\n\n在规则中进行修改【此规则包含了所有路由配置写法】\n\n```typescript\n//写一个路由器并暴露出去\nimport { createRouter, createWebHistory } from \"vue-router\";\nimport Home from \"@/pages/Home.vue\";\nimport News from \"@/pages/News.vue\";\nimport About from \"@/pages/About.vue\";\nimport Detail from \"@/pages/detail.vue\";\n//创建路由器\nconst router = createRouter({\n  //路由器工作模式\n  history: createWebHistory(),\n  routes: [\n    // {\n    //   name: \"路由名\",\n    //   path: \"/路径\",\n    //   component: 组件名,\n    //   children: [\n    //     {\n    //       path: \"子路由路径\",\n    //       component: 子路由组件名,\n    //     },\n    //   ],\n    // },\n    {\n      name: \"HOME\",\n      path: \"/home\",\n      component: Home,\n    },\n    {\n      name: \"NEWS\",\n      path: \"/news\",\n      component: News,\n      children: [\n        {\n          name: \"Detail\",\n          // path: \"detail/:id/:title/:content\",//params写法\n          path: \"detail\",\n          component: Detail,\n          // props: true, //params\n          // query写法\n          props(route) {\n            return route.query;\n          },\n        },\n      ],\n    },\n    {\n      name: \"ABOUT\",\n      path: \"/about\",\n      component: About,\n    },\n    //重定向\n    {\n      path: \"/\",\n      redirect: \"/home\",\n    },\n  ],\n});\n//把路由规则暴露出去\nexport default router;\n```\n\n## Pinia\n\n### 安装和部署\n\n**安装**\n\n```terminal\n#安装pinia\n$npm i pinia\n```\n\n**搭建环境**\n\n```typescript\n//main.ts\nimport { createApp } from \"vue\";\nimport App from \"./App.vue\";\nimport router from \"./router\";\n//引入pinia\nimport { createPinia } from \"pinia\";\nconst app = createApp(App);\n//创建pinia\nconst pinia = createPinia();\napp.use(router);\napp.mount(\"#app\");\n//安装pinia\napp.use(pinia);\n```\n\n### 使用\n\n其作用相当于前端的仓库\n\n```typescript\n//src/store/count.ts\nimport { defineStore } from \"pinia\";\n\nexport const useContentStore = defineStore(\"count\", {\n  //真正存数据的地方\n  state() {\n    return {\n      sum: 6,\n    };\n  },\n});\n```\n\n```typescript\n//src/store/talk.ts\nimport { defineStore } from \"pinia\";\n\nexport const useTalkStore = defineStore(\"talk\", {\n  //真正存数据的地方\n  state() {\n    return {\n      talkList: [\n        { id: \"1\", title: \"qqqqqqqqqqqqqqqqqqq\" },\n        { id: \"2\", title: \"wwwwwwwwwwwwwww\" },\n        { id: \"3\", title: \"eeeeeeeeeeeeeeeeeeeee\" },\n        { id: \"4\", title: \"rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr\" },\n      ],\n    };\n  },\n});\n\n```\n\n**调用**\n\n```vue\n<!-- components/Love.vue -->\n<template>\n    <div class=\"talk\">\n        <button @click=\"getTalk\">获取一句土味情话</button>\n        <ul>\n            <li v-for=\"talk in talkStore.talkList\" :key=\"talk.id\">{{ talk.title }}</li>\n        </ul>\n    </div>\n</template>\n\n<script lang='ts' setup name='LoveTalk'>\nimport axios from 'axios';\nimport { reactive } from 'vue';\nimport { nanoid } from 'nanoid'\nimport { useTalkStore } from '@/store/talk'\nconst talkStore = useTalkStore()\nasync function getTalk() {\n    //发请求,连用两次解构赋值和一次重命名\n    let { data: { content: title } } = await axios.get('https://api.uomg.com/api/rand.qinghua?format=json');\n    // 把请求回来的字符串，包装成一个对象\n    let obj = { id: nanoid(), title: title }\n    console.log(obj)\n    //放到数组中\n    talkStore.talkList.unshift(obj)//最开始\n    // talkList.push(obj)//最末尾\n}\n</script>\n```\n\n```vue\n<!-- components/Count.vue -->\n<template>\n    <div class=\"count\">\n        <h2>当前求和为:{{ countStore.sum }}</h2>\n    </div>\n    <select v-model.number=\"n\">\n        <option value=\"1\">1</option>\n        <option value=\"2\">2</option>\n        <option value=\"3\">3</option>\n    </select>\n    <button @click=\"add\">加</button>\n    <button @click=\"minus\">减</button>\n</template>\n\n<script lang='ts' setup name=\"Count\">\nimport { ref } from 'vue'\nimport { useContentStore } from '@/store/count'\n// countStore是一个响应式reactive对象，\n// 并且会自动解构它下面的ref类型数据，因此不需要写.value\nconst countStore = useContentStore()\nconsole.log('@@@', countStore.sum)\n\n//数据\nlet n = ref(1) //用户选择的数据\n\nfunction add() {\n    countStore.sum += n.value\n}\nfunction minus() {\n    countStore.sum -= n.value\n}\n</script>\n\n```\n\n### 修改数据(三种方式)\n\n```typescript\n//components/Count.vue\nfunction add() {\n    //<----------第一种修改方式------------->\n    // countStore.sum += n.value\n    // countStore.school = '鸡大'\n    //<----------第二种修改方式------------->\n    // 适用于修改多个数据\n    // countStore.$patch({\n    //     sum: 88,\n    //     school: '鸡大'\n    // })\n    //<----------第二种修改方式------------->\n    countStore.increment(n.value)\n\n}\n```\n\n```typescript\n//src/store/count.ts\nimport { defineStore } from \"pinia\";\n\nexport const useContentStore = defineStore(\"count\", {\n  //actions里放置的是一个个方法，用于相应组件中的“动作”\n  actions: {\n    increment(value: any) {\n      this.sum += value;\n    },//很麻烦，日常开发用起来不方便，但是可以模块化，复用它\n  },\n  //真正存数据的地方\n  state() {\n    return {\n      sum: 6,\n      school: \"SUES\",\n    };\n  },\n});\n\n```\n\n### $subscribe的使用\n\n能够在本地浏览器存储数据，使其不会因为浏览器的刷新而导致数据丢失\n\n还是以土味情话为例\n\n```vue\n<!--Love.vue-->\n<script lang='ts' setup name='LoveTalk'>\nimport { useTalkStore } from '@/store/talk'\nconst talkStore = useTalkStore()\nasync function getTalk() {\n    talkStore.getATalk()\n    talkStore.$subscribe((mutate, state) => {\n        //mutate表示发生变化的内容\n        console.log('talkStore内的数据发生了变化', mutate, state)\n        localStorage.setItem('talkList', JSON.stringify(state.talkList))\n    })\n}\n</script>\n```\n\n```typescript\n//src/store/talk.ts\nimport { defineStore } from \"pinia\";\nimport { nanoid } from \"nanoid\";\nimport axios from \"axios\";\nexport const useTalkStore = defineStore(\"talk\", {\n  actions: {\n    async getATalk() {\n      //发请求,连用两次解构赋值和一次重命名\n      let {\n        data: { content: title },\n      } = await axios.get(\"https://api.uomg.com/api/rand.qinghua?format=json\");\n      // 把请求回来的字符串，包装成一个对象\n      let obj = { id: nanoid(), title: title };\n      console.log(obj);\n      //放到数组中\n      this.talkList.unshift(obj); //最开始\n      // talkList.push(obj)//最末尾\n    },\n  },\n  //真正存数据的地方\n  state() {\n    return {\n      talkList: JSON.parse(localStorage.getItem(\"talkList\") as string) || [],\n    };\n  },\n});\n\n```\n\n**效果：**\n\n![image-20240317151105751](/img/Vue3_note/image-20240317151105751.png)\n\n### 组合式写法\n\n```typescript\n//src/store/talk.ts\nimport { reactive } from \"vue\";\nexport const useTalkStore = defineStore(\"talk\", function a() {\n  const talkList = reactive(\n    JSON.parse(localStorage.getItem(\"talkList\") as string) || []\n  );\n  async function getATalk() {\n    //发请求,连用两次解构赋值和一次重命名\n    let {\n      data: { content: title },\n    } = await axios.get(\"https://api.uomg.com/api/rand.qinghua?format=json\");\n    // 把请求回来的字符串，包装成一个对象\n    let obj = { id: nanoid(), title: title };\n    console.log(obj);\n    //放到数组中\n    talkList.talkList.unshift(obj); //最开始\n    // talkList.push(obj)//最末尾\n  }\n  return { talkList, getATalk };\n});\n```\n\n## 向后端发起请求\n\n核心语句，当然后端要做好跨域访问\n\n```typescript\nimport axios from \"axios\"; \nasync function Login() {\n\tlet loginMessage = {\n        user_id: userid.value,\n        password: password.value\n    }\n \tconst response = await axios.post('http://localhost:8080/login', loginMessage);\n}\n```\n\n写个样例，向后端发送登录请求，并将返回的token存入Pinia中,同时在浏览器也做好存储，避免服务器重启以及刷新浏览器会丢失数据\n\n先新建仓库\n\n```typescript\n//store/loginStore.ts\nimport { defineStore } from \"pinia\"\nimport { type LoginResult } from \"@/interface/loginResult\"\nimport { ref } from \"vue\"\nexport const useLoginStore = defineStore(\"login\", function login() {\n    //真正存数据的地方\n    const userid = ref(localStorage.getItem(\"userid\") || \"\")\n    const username = ref(localStorage.getItem(\"username\") || \"\")\n    const publicKey = ref(localStorage.getItem(\"publicKey\") || \"\")\n    const konohaToken = ref(localStorage.getItem(\"konohaToken\") || \"\")\n    function Login(loginResult: LoginResult) {\n        userid.value = loginResult.user_id\n        username.value = loginResult.username\n        publicKey.value = loginResult.publicKey\n        konohaToken.value = loginResult.konohaToken\n    }\n\n    return { userid, username, publicKey, konohaToken, Login }\n})\n\n```\n\n`login.vue`中\n\n```typescript\nimport { useLoginStore } from '@/store/loginStore'\nimport { ElMessage } from 'element-plus'\nconst loginStore = useLoginStore()\nasync function Login() {\n    let loginMessage = {\n        user_id: userid.value,\n        password: password.value\n    }\n    try {\n        const response = await axios.post('http://localhost:8080/login', loginMessage);\n        // console.log(loginMessage)\n        console.log('send successful:', response.data.data);\n        switch (response.data.code) {\n            case 200:\n                // 登录成功后的处理\n                loginStore.Login(response.data.data)\n                loginStore.$subscribe((mutate, state) => {\n                    //mutate表示发生变化的内容，同时更新浏览器存储\n                    console.log('loginStore内的数据发生了变化', mutate, state)\n                    localStorage.setItem('userid', state.userid)\n                    localStorage.setItem('username', state.username)\n                    localStorage.setItem('publicKey', state.publicKey)\n                    localStorage.setItem('konohaToken', state.konohaToken)\n                })\n                ElMessage({\n                    message: response.data.msg,\n                    type: 'success',\n                })\n                break\n            default:\n                //登陆失败或者异常时的处理\n                ElMessage({\n                    message: response.data.msg,\n                    type: 'error',\n                })\n                //同时清空输入框，这里可以说是非常简单粗暴了\n                userid.value =''\n                password.value = ''\n                break\n        }\n    } catch (error) {\n        console.error('Login failed:', error);\n        // 登录失败的处理\n    }\n}\n```\n\nP.S `get`请求要写完整，最后的斜杠不能少\n\n```typescript\nconst response = await axios.get(\"http://localhost:8080/showclaims/\")\n```\n\n\n\n","slug":"Vue3_note","published":1,"updated":"2024-08-24T06:09:33.910Z","comments":1,"layout":"post","photos":[],"_id":"cm0b0qx7e0009jwur6q14e6ee","content":"<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>因为我是先前并没有接触Vue3，因此这份笔记很基础很基础，尽量都写成傻瓜式的了，当然也有可能有些地方写的不是很清楚，毕竟最初的目的就是为了写给我自己看的，至于之后会不会再深入学习Typescript和Javascript，这谁又晓得呢？反正我修燃气用是不上这个。</p>\n<h2 id=\"工具包\"><a href=\"#工具包\" class=\"headerlink\" title=\"工具包\"></a>工具包</h2><p>课程链接：【尚硅谷Vue3入门到实战，最新版vue3+TypeScript前端开发教程】 <a class=\"link\" href=\"https://www.bilibili.com/video/BV1Za4y1r7KE/?share_source=copy_web&vd_source=d4c8e690ada3240d323ff6b395a76451\">https://www.bilibili.com/video/BV1Za4y1r7KE/?share_source=copy_web&amp;vd_source=d4c8e690ada3240d323ff6b395a76451 <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a></p>\n<h2 id=\"Vue3简介\"><a href=\"#Vue3简介\" class=\"headerlink\" title=\"Vue3简介\"></a>Vue3简介</h2><p>Vue3，截止至2023年10月，最新公开版本为3.3.4</p>\n<h2 id=\"Vue创建工程\"><a href=\"#Vue创建工程\" class=\"headerlink\" title=\"Vue创建工程\"></a>Vue创建工程</h2><h3 id=\"基于vite创建\"><a href=\"#基于vite创建\" class=\"headerlink\" title=\"基于vite创建\"></a>基于vite创建</h3><p>新的前端构建工具，特点如下：</p>\n<blockquote>\n<ul>\n<li>热重载</li>\n<li>对<code>TS</code>、<code>JSX</code>、<code>CSS</code>支持开箱即用</li>\n<li>按需编译</li>\n</ul>\n</blockquote>\n<p>webpack与vite构建对比图如下：</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/Vue3_note/image-20240105103235439.png\" alt=\"image-20240105103235439\">\n\n<p>终端创建指令：</p>\n<div class=\"highlight-container\" data-rel=\"Plaintext\"><figure class=\"iseeu highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm create vue@latest</span><br></pre></td></tr></table></figure></div>\n\n<p><img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/Vue3_note/image-20240423215020646.png\" alt=\"image-20240423215020646\"></p>\n<p><img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/Vue3_note/image-20240105104452696.png\" alt=\"image-20240105104452696\"></p>\n<h3 id=\"工作目录介绍\"><a href=\"#工作目录介绍\" class=\"headerlink\" title=\"工作目录介绍\"></a>工作目录介绍</h3><ul>\n<li>/<strong>public</strong><br>  用于存放网页顶端的图标</li>\n</ul>\n<p><img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/Vue3_note/image-20240105104835729.png\" alt=\"image-20240105104835729\"></p>\n<ul>\n<li><p>/<strong>src</strong><br>  工作目录</p>\n</li>\n<li><p>/<strong>node_modules</strong></p>\n<p>  执行<code>npm i</code>，下载依赖，会生成<code>node_modules</code>这个文件夹<br>  作用：写了前端常用文件（如.jpg,.txt）等等，再通过<code>env.d.ts</code>中的以下代码告诉Vue</p>\n</li>\n</ul>\n<div class=\"highlight-container\" data-rel=\"Typescript\"><figure class=\"iseeu highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/// &lt;reference types=\"vite/client\" /&gt;</span></span><br></pre></td></tr></table></figure></div>\n\n<ul>\n<li><p><strong>/index.html</strong><br>  入口文件</p>\n</li>\n<li><p>/<strong>package.json</strong><br>  包的声明文件</p>\n</li>\n<li><p>/<strong>vite.config.ts</strong><br>  工程的配置文件，配置插件等等</p>\n</li>\n<li><p><strong>/src/components</strong><br>  用于存放组件</p>\n</li>\n</ul>\n<p><img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/Vue3_note/image-20240105120758018.png\" alt=\"image-20240105120758018\"></p>\n<h2 id=\"编写一个App组件\"><a href=\"#编写一个App组件\" class=\"headerlink\" title=\"编写一个App组件\"></a>编写一个App组件</h2><p>在main.ts中</p>\n<div class=\"highlight-container\" data-rel=\"Typescript\"><figure class=\"iseeu highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">'./assets/main.css'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> { createApp } <span class=\"keyword\">from</span> <span class=\"string\">'vue'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">App</span> <span class=\"keyword\">from</span> <span class=\"string\">'./App.vue'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_\">createApp</span>(<span class=\"title class_\">App</span>).<span class=\"title function_\">mount</span>(<span class=\"string\">'#app'</span>)</span><br></pre></td></tr></table></figure></div>\n\n<p><code>createApp</code>:一个用于“造花盆”的方法</p>\n<p><code>App</code>：从<code>App.vue</code>中引用，是一个根组件，可以看作是一朵花，包括之后写的<code>A.vue</code>、<code>B.vue</code>，其实都是安装在根组件上的组件，类似“花上的叶子”，它们直接或间接下载在<code>App.vue</code>上</p>\n<p><code>createApp(App).mount('#app')</code>：将app传入<code>createApp()</code>中，创建一个名叫App的互联网应用，并且它的根组件叫<code>App</code>；<code>mount</code>：挂载，将App摆在名为app的容器中。</p>\n<p>vue组件中，包含以下内容</p>\n<div class=\"highlight-container\" data-rel=\"Plaintext\"><figure class=\"iseeu highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">    &lt;!-- html --&gt;</span><br><span class=\"line\">    &lt;div class=\"app\"&gt;</span><br><span class=\"line\">        &lt;hl&gt;你好&lt;/hl&gt;</span><br><span class=\"line\">    &lt;/div&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\">&lt;script lang=\"ts\"&gt;</span><br><span class=\"line\">//  JS或者TS</span><br><span class=\"line\">export default{</span><br><span class=\"line\">    name:'App' //组件名</span><br><span class=\"line\">}</span><br><span class=\"line\">&lt;/script&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;style&gt;</span><br><span class=\"line\">/* 样式 */</span><br><span class=\"line\">.app{</span><br><span class=\"line\">    background-color: #ddd;</span><br><span class=\"line\">    box-shadow: 0 0 10px;</span><br><span class=\"line\">    border-radius: 10px;</span><br><span class=\"line\">    padding: 20px;</span><br><span class=\"line\">}</span><br><span class=\"line\">&lt;/style&gt;</span><br></pre></td></tr></table></figure></div>\n\n<p>之后运行 <code>npm run dev</code>，<code>在 Local:   http://localhost:5173/</code>中查看</p>\n<p><img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/Vue3_note/image-20240105155229131.png\" alt=\"image-20240105155229131\"></p>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><ul>\n<li><code>vite</code>项目中，<code>index.html</code>是项目的入口文件，在项目最外层</li>\n<li>加载<code>index.html</code>后，<code>vite</code>会解析<code>&lt;script type=\"module\" src=\"/src/main.ts\"&gt;&lt;/script&gt;</code>指向的js</li>\n<li>vue3是通过createApp的函数创建一个应用实例</li>\n</ul>\n<h2 id=\"OptionAPI\"><a href=\"#OptionAPI\" class=\"headerlink\" title=\"OptionAPI\"></a>OptionAPI</h2><p>这是Vue2的语法</p>\n<div class=\"highlight-container\" data-rel=\"Html\"><figure class=\"iseeu highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- Vue2 写法--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- html --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"person\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>姓名:{{ name }}<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>年龄:{{ age }}<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">\"changeName\"</span>&gt;</span>修改名字<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">\"changeAge\"</span>&gt;</span>修改年龄<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">\"showTel\"</span>&gt;</span>联系方式<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">lang</span>=<span class=\"string\">\"ts\"</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> {</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"attr\">name</span>: <span class=\"string\">'Person'</span>,<span class=\"comment\">//组件名</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"title function_\">data</span>(<span class=\"params\"></span>) {</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">return</span> {</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"attr\">name</span>: <span class=\"string\">'张三'</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"attr\">age</span>: <span class=\"number\">18</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"attr\">tel</span>: <span class=\"string\">'18019328622'</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        }</span></span><br><span class=\"line\"><span class=\"language-javascript\">    },</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"attr\">methods</span>: {</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"title function_\">showTel</span>(<span class=\"params\"></span>) {</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"title function_\">alert</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">tel</span>)</span></span><br><span class=\"line\"><span class=\"language-javascript\">        },</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"title function_\">changeName</span>(<span class=\"params\"></span>) {</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"variable language_\">this</span>.<span class=\"property\">name</span> = <span class=\"string\">'李四'</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        },</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"title function_\">changeAge</span>(<span class=\"params\"></span>) {</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"variable language_\">this</span>.<span class=\"property\">age</span> += <span class=\"number\">1</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        }</span></span><br><span class=\"line\"><span class=\"language-javascript\">    }</span></span><br><span class=\"line\"><span class=\"language-javascript\">}</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div>\n\n<p>在’枝干组件’<code>App.vue</code>中导入并引用</p>\n<div class=\"highlight-container\" data-rel=\"Typescript\"><figure class=\"iseeu highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">Person</span> <span class=\"keyword\">from</span> <span class=\"string\">'./components/Person.vue'</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> {</span><br><span class=\"line\">    <span class=\"attr\">name</span>: <span class=\"string\">'App'</span>,<span class=\"comment\">//组件名</span></span><br><span class=\"line\">    <span class=\"attr\">components</span>: { <span class=\"title class_\">Person</span> }<span class=\"comment\">//注册组件</span></span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure></div>\n\n<div class=\"highlight-container\" data-rel=\"Html\"><figure class=\"iseeu highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- html --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"app\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">hl</span>&gt;</span>你好啊！<span class=\"tag\">&lt;/<span class=\"name\">hl</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">Person</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br></pre></td></tr></table></figure></div>\n\n<p>效果如下</p>\n<p><img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/Vue3_note/image-20240108173531398.png\" alt=\"image-20240108173531398\"></p>\n<h3 id=\"弊端\"><a href=\"#弊端\" class=\"headerlink\" title=\"弊端\"></a>弊端</h3><p>optionAPI的语法弊端不难看出，数据、方法、计算属性都是分散在data、methods、computed中，想要新增功能就需要对上述进行修改，这显然是不便于维护和复用的。</p>\n<h2 id=\"compositionAPI\"><a href=\"#compositionAPI\" class=\"headerlink\" title=\"compositionAPI\"></a>compositionAPI</h2><h3 id=\"setup概述\"><a href=\"#setup概述\" class=\"headerlink\" title=\"setup概述\"></a>setup概述</h3><p>与optionalAPI不同，compositionAPI将组件的数据、方法、计算属性集中在一个名为setup()的方法中，写法如下：</p>\n<div class=\"highlight-container\" data-rel=\"Typescript\"><figure class=\"iseeu highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script lang=<span class=\"string\">\"ts\"</span>&gt;</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> {</span><br><span class=\"line\">    <span class=\"attr\">name</span>: <span class=\"string\">'Person'</span>,<span class=\"comment\">//组件名</span></span><br><span class=\"line\">    <span class=\"title function_\">setup</span>(<span class=\"params\"></span>) {</span><br><span class=\"line\">        <span class=\"comment\">//setup中的this是undefined，vue3中已经开始弱化this了</span></span><br><span class=\"line\">        <span class=\"comment\">//数据</span></span><br><span class=\"line\">        <span class=\"comment\">//此时的name，age，tel不是响应式的</span></span><br><span class=\"line\">        <span class=\"keyword\">let</span> name = <span class=\"string\">'张三'</span></span><br><span class=\"line\">        <span class=\"keyword\">let</span> age = <span class=\"number\">18</span></span><br><span class=\"line\">        <span class=\"keyword\">let</span> tel = <span class=\"string\">'18019328622'</span></span><br><span class=\"line\">        <span class=\"comment\">//方法</span></span><br><span class=\"line\">        <span class=\"keyword\">function</span> <span class=\"title function_\">changeName</span>(<span class=\"params\"></span>) {</span><br><span class=\"line\">            name = <span class=\"string\">'李四'</span>  <span class=\"comment\">//name确实修改了，但不是响应式的</span></span><br><span class=\"line\">        }</span><br><span class=\"line\">        <span class=\"keyword\">function</span> <span class=\"title function_\">changeAge</span>(<span class=\"params\"></span>) {</span><br><span class=\"line\">            age += <span class=\"number\">1</span></span><br><span class=\"line\">        }</span><br><span class=\"line\">        <span class=\"keyword\">function</span> <span class=\"title function_\">showTel</span>(<span class=\"params\"></span>) {</span><br><span class=\"line\">            <span class=\"title function_\">alert</span>(tel)</span><br><span class=\"line\">        }</span><br><span class=\"line\">        <span class=\"comment\">//必须要给予一个返回值，否则外部接收不到这些数据</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> { name, age, changeName, changeAge, showTel }</span><br><span class=\"line\">    }</span><br><span class=\"line\">}</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure></div>\n\n<p>值得一提的是，vue2中的选项式语法和vue3中的新语法是可以同时出现的，并且由于setup的执行优先级高于optionalAPI中的内容，这导致optinalAPI中的内容可以访问到setup中的数据变量，但setup不能访问到optionalAPI中的数据变量，用例如下：</p>\n<div class=\"highlight-container\" data-rel=\"Typescript\"><figure class=\"iseeu highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script lang=<span class=\"string\">\"ts\"</span>&gt;</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> {</span><br><span class=\"line\">    <span class=\"attr\">name</span>: <span class=\"string\">'Person'</span>,<span class=\"comment\">//组件名</span></span><br><span class=\"line\">    <span class=\"title function_\">beforeCreate</span>(<span class=\"params\"></span>) {</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">'beforeCreate'</span>)</span><br><span class=\"line\">    },</span><br><span class=\"line\">    <span class=\"title function_\">data</span>(<span class=\"params\"></span>) {</span><br><span class=\"line\">        <span class=\"keyword\">return</span> {</span><br><span class=\"line\">            <span class=\"attr\">a</span>: <span class=\"variable language_\">this</span>.<span class=\"property\">name</span></span><br><span class=\"line\">        }</span><br><span class=\"line\">    },</span><br><span class=\"line\">    <span class=\"title function_\">setup</span>(<span class=\"params\"></span>) {</span><br><span class=\"line\">        <span class=\"comment\">//setup中的this是undefined，vue3中已经开始弱化this了</span></span><br><span class=\"line\">        <span class=\"comment\">//数据</span></span><br><span class=\"line\">        <span class=\"comment\">//此时的name，age，tel不是响应式的</span></span><br><span class=\"line\">        <span class=\"keyword\">let</span> name = <span class=\"string\">'张三'</span></span><br><span class=\"line\">        <span class=\"keyword\">let</span> age = <span class=\"number\">18</span></span><br><span class=\"line\">        <span class=\"keyword\">let</span> tel = <span class=\"string\">'18019328622'</span></span><br><span class=\"line\">        <span class=\"comment\">//方法</span></span><br><span class=\"line\">        <span class=\"keyword\">function</span> <span class=\"title function_\">changeName</span>(<span class=\"params\"></span>) {</span><br><span class=\"line\">            name = <span class=\"string\">'李四'</span>  <span class=\"comment\">//name确实修改了，但不是响应式的</span></span><br><span class=\"line\">        }</span><br><span class=\"line\">        <span class=\"keyword\">function</span> <span class=\"title function_\">changeAge</span>(<span class=\"params\"></span>) {</span><br><span class=\"line\">            age += <span class=\"number\">1</span></span><br><span class=\"line\">        }</span><br><span class=\"line\">        <span class=\"keyword\">function</span> <span class=\"title function_\">showTel</span>(<span class=\"params\"></span>) {</span><br><span class=\"line\">            <span class=\"title function_\">alert</span>(tel)</span><br><span class=\"line\">        }</span><br><span class=\"line\">        <span class=\"keyword\">return</span> { name, age, changeName, changeAge, showTel }</span><br><span class=\"line\">    }</span><br><span class=\"line\">}</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure></div>\n\n<p><img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/Vue3_note/image-20240108233851273.png\" alt=\"image-20240108233851273\"></p>\n<h3 id=\"setup的语法糖\"><a href=\"#setup的语法糖\" class=\"headerlink\" title=\"setup的语法糖\"></a>setup的语法糖</h3><div class=\"highlight-container\" data-rel=\"Typescript\"><figure class=\"iseeu highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script lang=<span class=\"string\">\"ts\"</span>&gt;</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> {</span><br><span class=\"line\">    <span class=\"attr\">name</span>: <span class=\"string\">'Person'</span>,<span class=\"comment\">//组件名</span></span><br><span class=\"line\">}</span><br><span class=\"line\">&lt;/script&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">lang</span>=<span class=\"string\">\"ts\"</span> <span class=\"attr\">setup</span>&gt;</span><span class=\"language-javascript\"></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\"><span class=\"keyword\">let</span> name = <span class=\"string\">'张三'</span></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\"><span class=\"keyword\">let</span> age = <span class=\"number\">18</span></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\"><span class=\"keyword\">let</span> tel = <span class=\"string\">'18019328622'</span></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\"><span class=\"comment\">//方法</span></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\"><span class=\"keyword\">function</span> <span class=\"title function_\">changeName</span>(<span class=\"params\"></span>) {</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    name = <span class=\"string\">'李四'</span>  <span class=\"comment\">//name确实修改了，但不是响应式的</span></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">}</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\"><span class=\"keyword\">function</span> <span class=\"title function_\">changeAge</span>(<span class=\"params\"></span>) {</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    age += <span class=\"number\">1</span></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">}</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\"><span class=\"keyword\">function</span> <span class=\"title function_\">showTel</span>(<span class=\"params\"></span>) {</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    <span class=\"title function_\">alert</span>(tel)</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">}</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure></div>\n\n<p>像这样编写可以不用写setup的返回值</p>\n<h4 id=\"插件配置方法\"><a href=\"#插件配置方法\" class=\"headerlink\" title=\"插件配置方法\"></a>插件配置方法</h4><p>如果想将上述合二为一，可以下载插件，指令 <code>npm i vite-plugin-vue-setup-extend -D</code></p>\n<p>在<code>vite.config.ts</code>中进行配置插件，<strong>其他插件方法也是类似</strong></p>\n<div class=\"highlight-container\" data-rel=\"Typescript\"><figure class=\"iseeu highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"keyword\">import</span> <span class=\"title class_\">VueSetupExtend</span> <span class=\"keyword\">from</span> <span class=\"string\">'vite-plugin-vue-setup-extend'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// https://vitejs.dev/config/</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"title function_\">defineConfig</span>({</span><br><span class=\"line\">  <span class=\"attr\">plugins</span>: [</span><br><span class=\"line\">    <span class=\"title function_\">vue</span>(),</span><br><span class=\"line\">    <span class=\"title class_\">VueSetupExtend</span>()</span><br><span class=\"line\">  ],</span><br><span class=\"line\">  <span class=\"attr\">resolve</span>: {</span><br><span class=\"line\">    <span class=\"attr\">alias</span>: {</span><br><span class=\"line\">      <span class=\"string\">'@'</span>: <span class=\"title function_\">fileURLToPath</span>(<span class=\"keyword\">new</span> <span class=\"title function_\">URL</span>(<span class=\"string\">'./src'</span>, <span class=\"keyword\">import</span>.<span class=\"property\">meta</span>.<span class=\"property\">url</span>))</span><br><span class=\"line\">    }</span><br><span class=\"line\">  }</span><br><span class=\"line\">})</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></div>\n\n<p>最后对上述两个script合二为一</p>\n<div class=\"highlight-container\" data-rel=\"Typescript\"><figure class=\"iseeu highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script lang=<span class=\"string\">\"ts\"</span> setup name=<span class=\"string\">\"Person123\"</span>&gt;</span><br><span class=\"line\"><span class=\"keyword\">let</span> name = <span class=\"string\">'张三'</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> age = <span class=\"number\">18</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> tel = <span class=\"string\">'18019328622'</span></span><br><span class=\"line\"><span class=\"comment\">//方法</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">changeName</span>(<span class=\"params\"></span>) {</span><br><span class=\"line\">    name = <span class=\"string\">'李四'</span>  <span class=\"comment\">//name确实修改了，但不是响应式的</span></span><br><span class=\"line\">}</span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">changeAge</span>(<span class=\"params\"></span>) {</span><br><span class=\"line\">    age += <span class=\"number\">1</span></span><br><span class=\"line\">}</span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">showTel</span>(<span class=\"params\"></span>) {</span><br><span class=\"line\">    <span class=\"title function_\">alert</span>(tel)</span><br><span class=\"line\">}</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure></div>\n\n<p>效果如下：</p>\n<p><img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/Vue3_note/image-20240109132721613.png\" alt=\"image-20240109132721613\"></p>\n<h2 id=\"响应式\"><a href=\"#响应式\" class=\"headerlink\" title=\"响应式\"></a>响应式</h2><p>响应式:能够实时变化的数据</p>\n<h3 id=\"响应式数据\"><a href=\"#响应式数据\" class=\"headerlink\" title=\"响应式数据\"></a>响应式数据</h3><div class=\"highlight-container\" data-rel=\"Typescript\"><figure class=\"iseeu highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//引用</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> { ref } <span class=\"keyword\">from</span> <span class=\"string\">'vue'</span></span><br><span class=\"line\"><span class=\"comment\">//包裹</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> name = <span class=\"title function_\">ref</span>(<span class=\"string\">'张三'</span>)</span><br><span class=\"line\"><span class=\"keyword\">let</span> age = <span class=\"title function_\">ref</span>(<span class=\"number\">18</span>)</span><br><span class=\"line\"><span class=\"keyword\">let</span> tel = <span class=\"string\">'18019328622'</span></span><br><span class=\"line\"><span class=\"comment\">//方法</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">changeName</span>(<span class=\"params\"></span>) {</span><br><span class=\"line\">    name.<span class=\"property\">value</span> = <span class=\"string\">'李四'</span></span><br><span class=\"line\">}</span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">changeAge</span>(<span class=\"params\"></span>) {</span><br><span class=\"line\">    age.<span class=\"property\">value</span> += <span class=\"number\">1</span></span><br><span class=\"line\">}</span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">showTel</span>(<span class=\"params\"></span>) {</span><br><span class=\"line\">    <span class=\"title function_\">alert</span>(tel)</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure></div>\n\n<blockquote>\n<p>觉得频繁写.value很麻烦？不妨试试volar</p>\n<img src=\"/img/Vue3_note/image-20240128222423403.png\" align=\"left\">\n</blockquote>\n<h3 id=\"响应式对象\"><a href=\"#响应式对象\" class=\"headerlink\" title=\"响应式对象\"></a>响应式对象</h3><p>响应式对象:被<code>reactive</code>包裹过后的对象</p>\n<div class=\"highlight-container\" data-rel=\"Typescript\"><figure class=\"iseeu highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> {reactive} <span class=\"keyword\">from</span> <span class=\"string\">'vue'</span></span><br><span class=\"line\">    <span class=\"comment\">//data</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> car = <span class=\"title function_\">reactive</span>({ <span class=\"attr\">brand</span>: <span class=\"string\">'奔驰'</span>, <span class=\"attr\">price</span>: <span class=\"number\">100</span> })</span><br><span class=\"line\">    <span class=\"keyword\">let</span> games = <span class=\"title function_\">reactive</span>([</span><br><span class=\"line\">        {<span class=\"attr\">id</span>:<span class=\"string\">'0000001'</span>,<span class=\"attr\">name</span>:<span class=\"string\">'AAA1'</span>},</span><br><span class=\"line\">        {<span class=\"attr\">id</span>:<span class=\"string\">'0000001'</span>,<span class=\"attr\">name</span>:<span class=\"string\">'AAA1'</span>},</span><br><span class=\"line\">        {<span class=\"attr\">id</span>:<span class=\"string\">'0000001'</span>,<span class=\"attr\">name</span>:<span class=\"string\">'AAA1'</span>}</span><br><span class=\"line\">    ])</span><br><span class=\"line\">    <span class=\"keyword\">let</span> obj =<span class=\"title function_\">reactive</span>({</span><br><span class=\"line\">        <span class=\"attr\">a</span>:{</span><br><span class=\"line\">            <span class=\"attr\">b</span>:{</span><br><span class=\"line\">                <span class=\"attr\">c</span>:<span class=\"number\">666</span></span><br><span class=\"line\">            }</span><br><span class=\"line\">        }</span><br><span class=\"line\">    })</span><br><span class=\"line\">    <span class=\"keyword\">function</span> <span class=\"title function_\">changePrice</span>(<span class=\"params\"></span>){</span><br><span class=\"line\">        car.<span class=\"property\">price</span> +=<span class=\"number\">10</span></span><br><span class=\"line\">    }</span><br><span class=\"line\">    <span class=\"keyword\">function</span> <span class=\"title function_\">changeName</span>(<span class=\"params\"></span>){</span><br><span class=\"line\">        games[<span class=\"number\">0</span>].<span class=\"property\">name</span> = <span class=\"string\">'BBB1'</span></span><br><span class=\"line\">    }</span><br><span class=\"line\">    <span class=\"keyword\">function</span> <span class=\"title function_\">changeObj</span>(<span class=\"params\"></span>){</span><br><span class=\"line\">        obj.<span class=\"property\">a</span>.<span class=\"property\">b</span>.<span class=\"property\">c</span> = <span class=\"number\">999</span></span><br><span class=\"line\">    }</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></div>\n\n<h3 id=\"使用ref定义对象类型的响应数据\"><a href=\"#使用ref定义对象类型的响应数据\" class=\"headerlink\" title=\"使用ref定义对象类型的响应数据\"></a>使用ref定义对象类型的响应数据</h3><div class=\"highlight-container\" data-rel=\"Typescript\"><figure class=\"iseeu highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> { ref } <span class=\"keyword\">from</span> <span class=\"string\">'vue'</span></span><br><span class=\"line\"><span class=\"comment\">//data</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> car = <span class=\"title function_\">ref</span>({ <span class=\"attr\">brand</span>: <span class=\"string\">'奔驰'</span>, <span class=\"attr\">price</span>: <span class=\"number\">100</span> })</span><br><span class=\"line\"><span class=\"keyword\">let</span> games = <span class=\"title function_\">ref</span>([</span><br><span class=\"line\">    { <span class=\"attr\">id</span>: <span class=\"string\">'0000001'</span>, <span class=\"attr\">name</span>: <span class=\"string\">'AAA1'</span> },</span><br><span class=\"line\">    { <span class=\"attr\">id</span>: <span class=\"string\">'0000001'</span>, <span class=\"attr\">name</span>: <span class=\"string\">'AAA1'</span> },</span><br><span class=\"line\">    { <span class=\"attr\">id</span>: <span class=\"string\">'0000001'</span>, <span class=\"attr\">name</span>: <span class=\"string\">'AAA1'</span> }</span><br><span class=\"line\">])</span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">changePrice</span>(<span class=\"params\"></span>) {</span><br><span class=\"line\">    car.<span class=\"property\">value</span>.<span class=\"property\">price</span> += <span class=\"number\">10</span></span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(car.<span class=\"property\">value</span>.<span class=\"property\">price</span>)</span><br><span class=\"line\">}</span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">changeName</span>(<span class=\"params\"></span>) {</span><br><span class=\"line\">    games.<span class=\"property\">value</span>[<span class=\"number\">0</span>].<span class=\"property\">name</span> = <span class=\"string\">'BBB1'</span></span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure></div>\n\n<p>结果：</p>\n<p><img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/Vue3_note/image-20240128220343854.png\" alt=\"image-20240128220343854\"></p>\n<p>可以看出表面是<code>ref</code>包裹的对象，但是实际还是使用<code>reactive</code>包裹实现的</p>\n<h3 id=\"ref和reactive的区别\"><a href=\"#ref和reactive的区别\" class=\"headerlink\" title=\"ref和reactive的区别\"></a>ref和reactive的区别</h3><table>\n<thead>\n<tr>\n<th align=\"center\">名称</th>\n<th align=\"center\">可以定义</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">ref</td>\n<td align=\"center\">基本类型、对象类型的响应式数据[层级不深]</td>\n</tr>\n<tr>\n<td align=\"center\">reactive</td>\n<td align=\"center\">可以定义：对象类型的响应式数据[层级深] <br>重新分配会丢失响应式的属性<a href=\"%E5%AF%B9%E5%B7%B2%E7%BB%8F%E7%94%A8%60reactive%60%E5%88%86%E9%85%8D%E5%A5%BD%E7%9A%84%E5%93%8D%E5%BA%94%E5%BC%8F%E5%AF%B9%E8%B1%A1%EF%BC%8C%E9%87%8D%E6%96%B0%E8%A6%86%E5%86%99%E4%B8%80%E4%B8%AA%E5%AF%B9%E8%B1%A1%E4%BC%9A%E4%BD%BF%E6%96%B0%E7%9A%84%E5%AF%B9%E8%B1%A1%E5%A4%B1%E5%8E%BB%E5%93%8D%E5%BA%94%E5%BC%8F\">^1</a></td>\n</tr>\n</tbody></table>\n<blockquote>\n<div class=\"highlight-container\" data-rel=\"Typescript\"><figure class=\"iseeu highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> { ref } <span class=\"keyword\">from</span> <span class=\"string\">'vue'</span></span><br><span class=\"line\"><span class=\"comment\">//data</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> car = <span class=\"title function_\">ref</span>({ <span class=\"attr\">brand</span>: <span class=\"string\">'奔驰'</span>, <span class=\"attr\">price</span>: <span class=\"number\">100</span> })</span><br><span class=\"line\"><span class=\"comment\">//method</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">changeCar</span>(<span class=\"params\"></span>){</span><br><span class=\"line\">    car.<span class=\"property\">value</span>={<span class=\"attr\">brand</span>:<span class=\"string\">'BYD'</span>,<span class=\"attr\">price</span>:<span class=\"number\">20</span>}</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure></div>\n\n<p>此时一旦使用changeCar()这个方法，那么奔驰就会被BYD覆盖并且覆盖它的BYD不具备响应式</p>\n<p>可以使用Object.assign(obj1,obj2)来解决，如下：</p>\n<div class=\"highlight-container\" data-rel=\"Typescript\"><figure class=\"iseeu highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> car = <span class=\"title function_\">reactive</span>({ <span class=\"attr\">brand</span>: <span class=\"string\">'奔驰'</span>, <span class=\"attr\">price</span>: <span class=\"number\">100</span> })</span><br><span class=\"line\"><span class=\"comment\">//method</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">changeCar</span>(<span class=\"params\"></span>){</span><br><span class=\"line\">    <span class=\"title class_\">Object</span>.<span class=\"title function_\">assign</span>(car,{ <span class=\"attr\">brand</span>: <span class=\"string\">'BYD'</span>,<span class=\"attr\">price</span>: <span class=\"number\">20</span>})</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure></div>\n\n<p>ref不需要这么写</p>\n<div class=\"highlight-container\" data-rel=\"Typescript\"><figure class=\"iseeu highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> car = <span class=\"title function_\">ref</span>({ <span class=\"attr\">brand</span>: <span class=\"string\">'奔驰'</span>, <span class=\"attr\">price</span>: <span class=\"number\">100</span> })</span><br><span class=\"line\"><span class=\"keyword\">let</span> games = <span class=\"title function_\">ref</span>([</span><br><span class=\"line\">    { <span class=\"attr\">id</span>: <span class=\"string\">'0000001'</span>, <span class=\"attr\">name</span>: <span class=\"string\">'AAA1'</span> },</span><br><span class=\"line\">    { <span class=\"attr\">id</span>: <span class=\"string\">'0000001'</span>, <span class=\"attr\">name</span>: <span class=\"string\">'AAA1'</span> },</span><br><span class=\"line\">    { <span class=\"attr\">id</span>: <span class=\"string\">'0000001'</span>, <span class=\"attr\">name</span>: <span class=\"string\">'AAA1'</span> }</span><br><span class=\"line\">])</span><br><span class=\"line\"><span class=\"comment\">//method</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">changePrice</span>(<span class=\"params\"></span>) {</span><br><span class=\"line\">    car.<span class=\"property\">value</span>.<span class=\"property\">price</span> += <span class=\"number\">10</span></span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(car.<span class=\"property\">value</span>.<span class=\"property\">brand</span>)</span><br><span class=\"line\">}</span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">changeName</span>(<span class=\"params\"></span>) {</span><br><span class=\"line\">    games.<span class=\"property\">value</span>[<span class=\"number\">0</span>].<span class=\"property\">name</span>=<span class=\"string\">'BBB1'</span></span><br><span class=\"line\">}</span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">changeCar</span>(<span class=\"params\"></span>){</span><br><span class=\"line\">    <span class=\"comment\">// Object.assign(car,{ brand: 'BYD',price: 20})</span></span><br><span class=\"line\">    car.<span class=\"property\">value</span> = { <span class=\"attr\">brand</span>: <span class=\"string\">'BYD'</span>,<span class=\"attr\">price</span>: <span class=\"number\">20</span>}</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure></div>\n\n<p>原因是ref的对象覆盖是发生在car.value上的</p>\n</blockquote>\n<h3 id=\"toRefs和toRef\"><a href=\"#toRefs和toRef\" class=\"headerlink\" title=\"toRefs和toRef\"></a>toRefs和toRef</h3><div class=\"highlight-container\" data-rel=\"Typescript\"><figure class=\"iseeu highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> { ref,reactive,toRefs,toRef } <span class=\"keyword\">from</span> <span class=\"string\">'vue'</span></span><br><span class=\"line\"><span class=\"comment\">//data</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> person = <span class=\"title function_\">reactive</span>({</span><br><span class=\"line\">    <span class=\"attr\">name</span>:<span class=\"string\">\"张三\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">age</span>:<span class=\"number\">18</span></span><br><span class=\"line\">})</span><br><span class=\"line\"><span class=\"keyword\">let</span> {name,age} = <span class=\"title function_\">toRefs</span>(person)</span><br><span class=\"line\"><span class=\"keyword\">let</span> age_2 = <span class=\"title function_\">toRef</span>(person,<span class=\"string\">'age'</span>)</span><br><span class=\"line\"><span class=\"comment\">//method</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">changeName</span>(<span class=\"params\"></span>){</span><br><span class=\"line\">    name.<span class=\"property\">value</span>+=<span class=\"string\">'~'</span></span><br><span class=\"line\">}   </span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">changeAge</span>(<span class=\"params\"></span>){</span><br><span class=\"line\">    age.<span class=\"property\">value</span>+=<span class=\"number\">1</span></span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure></div>\n\n<p>toRefs会接收一组由reactive构成的对象，然后把对象中的每一组key,value都拎出来，形成一个新的对象（依然具备响应式的属性）;</p>\n<p>toRef只会接受由reactive构成的对象当中的一个元素</p>\n<h2 id=\"computed计算属性\"><a href=\"#computed计算属性\" class=\"headerlink\" title=\"computed计算属性\"></a>computed计算属性</h2><div class=\"highlight-container\" data-rel=\"Plaintext\"><figure class=\"iseeu highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">&lt;!-- html --&gt;</span><br><span class=\"line\">&lt;div class=\"person\"&gt;</span><br><span class=\"line\">    &lt;!-- 这样↓写是单向绑定 --&gt;</span><br><span class=\"line\">    &lt;!-- 姓：&lt;input type=\"text\" :value=\"firstName\"&gt;&lt;br&gt;  --&gt;</span><br><span class=\"line\">    姓：&lt;input type=\"text\" v-model=\"firstName\"&gt;&lt;br&gt;</span><br><span class=\"line\">    名：&lt;input type=\"text\" v-model=\"lastName\"&gt;&lt;br&gt;</span><br><span class=\"line\">    全名：&lt;span&gt;{{ fullName }}&lt;/span&gt;&lt;br&gt;</span><br><span class=\"line\">    &lt;button @click=\"changeFullName\"&gt;修改全名&lt;/button&gt;</span><br><span class=\"line\">    &lt;/div&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;script lang=\"ts\" setup name=\"Person123\"&gt;</span><br><span class=\"line\">    import { ref, computed } from 'vue'</span><br><span class=\"line\">    let firstName = ref('张')</span><br><span class=\"line\">    let lastName = ref('三')</span><br><span class=\"line\">    //如此定义的计算属性是只读的</span><br><span class=\"line\">    // let fullName = computed(()=&gt;{</span><br><span class=\"line\">    //     return firstName.value.slice(0,1).toUpperCase()+firstName.value.slice(1)+'-'+lastName.value.slice(0,1).toUpperCase()+lastName.value.slice(1)</span><br><span class=\"line\">    // })</span><br><span class=\"line\">    //如此定义的计算属性可读可写</span><br><span class=\"line\">    let fullName = computed({</span><br><span class=\"line\">        get() {</span><br><span class=\"line\">            return firstName.value.slice(0, 1).toUpperCase() + firstName.value.slice(1) + '-' + lastName.value.slice(0, 1).toUpperCase() + lastName.value.slice(1)</span><br><span class=\"line\">        },</span><br><span class=\"line\">        set(val) {</span><br><span class=\"line\">            const [str1, str2] = val.split('-')</span><br><span class=\"line\">            firstName.value = str1</span><br><span class=\"line\">            lastName.value = str2</span><br><span class=\"line\">        }</span><br><span class=\"line\">    })</span><br><span class=\"line\">    //method</span><br><span class=\"line\">    function changeFullName() {</span><br><span class=\"line\">        fullName.value = 'li-si'</span><br><span class=\"line\">    }</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure></div>\n\n<p>上面代码段<code>let fullName = computed({//略})</code>相比于function(){ }，具备了缓存，只有计算属性依赖的数据发生变化时才会重新计算，数据不变即便是重复调用也不会反复执行computed中的内容;</p>\n<h2 id=\"Watch监视\"><a href=\"#Watch监视\" class=\"headerlink\" title=\"Watch监视\"></a>Watch监视</h2><p>watch基本格式：</p>\n<div class=\"highlight-container\" data-rel=\"Txt\"><figure class=\"iseeu highlight txt\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import { watch } from 'vue'</span><br><span class=\"line\">watch(obj,func,config) //(被监视的数据，监视的回调，监视的配置)</span><br></pre></td></tr></table></figure></div>\n\n<p>它能够监视：</p>\n<div class=\"highlight-container\" data-rel=\"Txt\"><figure class=\"iseeu highlight txt\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">一个有返回值的函数，ref，reactive响应式对象，或者由以上组成的数组</span><br></pre></td></tr></table></figure></div>\n\n<h3 id=\"监视【ref】定义的【基本类型】数据\"><a href=\"#监视【ref】定义的【基本类型】数据\" class=\"headerlink\" title=\"监视【ref】定义的【基本类型】数据\"></a>监视【ref】定义的【基本类型】数据</h3><div class=\"highlight-container\" data-rel=\"Plaintext\"><figure class=\"iseeu highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">    &lt;!-- html --&gt;</span><br><span class=\"line\">    &lt;div class=\"person\"&gt;</span><br><span class=\"line\">       &lt;h1&gt;情况一，监视[ref]定义的[基本类型]数据&lt;/h1&gt;</span><br><span class=\"line\">       &lt;h2&gt;当前求和为:{{ sum }}&lt;/h2&gt;</span><br><span class=\"line\">       &lt;button @click=\"changeNum\"&gt;sum++&lt;/button&gt;</span><br><span class=\"line\">    &lt;/div&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;script lang=\"ts\" setup name=\"Person123\"&gt;</span><br><span class=\"line\">import { ref, watch } from 'vue'</span><br><span class=\"line\">//data</span><br><span class=\"line\">let sum = ref(0);</span><br><span class=\"line\">//method</span><br><span class=\"line\">function changeNum(){</span><br><span class=\"line\">    sum.value+=1;</span><br><span class=\"line\">}</span><br><span class=\"line\">watch(sum,(newValue,oldValue)=&gt;{</span><br><span class=\"line\">    console.log('sum变化了',newValue,oldValue)</span><br><span class=\"line\">})</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure></div>\n\n<p>关于停止监视以及箭头函数的补充：</p>\n<div class=\"highlight-container\" data-rel=\"Typescript\"><figure class=\"iseeu highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> stopWatch =<span class=\"title function_\">watch</span>(sum,<span class=\"keyword\">function</span>(<span class=\"params\">newValue,oldValue</span>){</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">'sum变化了'</span>,newValue,oldValue)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (newValue&gt;=<span class=\"number\">10</span>){</span><br><span class=\"line\">        <span class=\"title function_\">stopWatch</span>()</span><br><span class=\"line\">    }</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span></span><br><span class=\"line\">})</span><br></pre></td></tr></table></figure></div>\n\n<p>箭头函数就是<strong>不需要</strong>返回值(但是可以有)的function</p>\n<h3 id=\"监视【ref】定义的【对象类型】数据\"><a href=\"#监视【ref】定义的【对象类型】数据\" class=\"headerlink\" title=\"监视【ref】定义的【对象类型】数据\"></a>监视【ref】定义的【对象类型】数据</h3><div class=\"highlight-container\" data-rel=\"Plaintext\"><figure class=\"iseeu highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">    &lt;!-- html --&gt;</span><br><span class=\"line\">    &lt;div class=\"person\"&gt;</span><br><span class=\"line\">       &lt;h1&gt;情况二，监视[ref]定义的[对象类型]数据&lt;/h1&gt;</span><br><span class=\"line\">       &lt;h2&gt;姓名：{{ person.name }}&lt;/h2&gt;</span><br><span class=\"line\">       &lt;h2&gt;年龄：{{ person.age }}&lt;/h2&gt;</span><br><span class=\"line\">       &lt;br&gt;</span><br><span class=\"line\">       &lt;button @click=\"changeName\"&gt;修改名字&lt;/button&gt;</span><br><span class=\"line\">       &lt;button @click=\"changeAge\"&gt;修改年龄&lt;/button&gt;</span><br><span class=\"line\">       &lt;button @click=\"changePerson\"&gt;修改人&lt;/button&gt;</span><br><span class=\"line\">    &lt;/div&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;script lang=\"ts\" setup name=\"Person123\"&gt;</span><br><span class=\"line\">import { ref, watch } from 'vue'</span><br><span class=\"line\">//data</span><br><span class=\"line\">let person =ref({</span><br><span class=\"line\">    name:\"张三\",</span><br><span class=\"line\">    age:18,</span><br><span class=\"line\">})</span><br><span class=\"line\">//method</span><br><span class=\"line\">function changeName(){</span><br><span class=\"line\">    person.value.name+=\"~\"</span><br><span class=\"line\">}</span><br><span class=\"line\">function changeAge(){</span><br><span class=\"line\">    person.value.age+=1</span><br><span class=\"line\">}</span><br><span class=\"line\">function changePerson(){</span><br><span class=\"line\">    person.value={name:\"李四\",age:22}</span><br><span class=\"line\">}</span><br><span class=\"line\">//watch</span><br><span class=\"line\">watch(person,(newValue,oldValue)=&gt;{</span><br><span class=\"line\">    console.log('person变化了',newValue,oldValue)</span><br><span class=\"line\">},{deep:true})</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure></div>\n\n<p>如上，但是和监视基础类型相比，代码变化不大</p>\n<p>注意到，ref的替换对象是新旧替换，地址发生变化</p>\n<p><img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/Vue3_note/image-20240201213743914.png\" alt=\"image-20240201213743914\"></p>\n<h3 id=\"监视【reactive】定义的【对象类型】数据\"><a href=\"#监视【reactive】定义的【对象类型】数据\" class=\"headerlink\" title=\"监视【reactive】定义的【对象类型】数据\"></a>监视【reactive】定义的【对象类型】数据</h3><div class=\"highlight-container\" data-rel=\"Plaintext\"><figure class=\"iseeu highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">    &lt;!-- html --&gt;</span><br><span class=\"line\">    &lt;div class=\"person\"&gt;</span><br><span class=\"line\">       &lt;h1&gt;情况三，监视[reactive]定义的[对象类型]数据&lt;/h1&gt;</span><br><span class=\"line\">       &lt;h2&gt;姓名：{{ person.name }}&lt;/h2&gt;</span><br><span class=\"line\">       &lt;h2&gt;年龄：{{ person.age }}&lt;/h2&gt;</span><br><span class=\"line\">       &lt;br&gt;</span><br><span class=\"line\">       &lt;button @click=\"changeName\"&gt;修改名字&lt;/button&gt;</span><br><span class=\"line\">       &lt;button @click=\"changeAge\"&gt;修改年龄&lt;/button&gt;</span><br><span class=\"line\">       &lt;button @click=\"changePerson\"&gt;修改人&lt;/button&gt;</span><br><span class=\"line\">    &lt;/div&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;script lang=\"ts\" setup name=\"Person123\"&gt;</span><br><span class=\"line\">import { reactive, watch } from 'vue'</span><br><span class=\"line\">//data</span><br><span class=\"line\">let person =reactive({</span><br><span class=\"line\">    name:\"张三\",</span><br><span class=\"line\">    age:18,</span><br><span class=\"line\">})</span><br><span class=\"line\">//method</span><br><span class=\"line\">function changeName(){</span><br><span class=\"line\">    person.name+=\"~\"</span><br><span class=\"line\">}</span><br><span class=\"line\">function changeAge(){</span><br><span class=\"line\">    person.age+=1</span><br><span class=\"line\">}</span><br><span class=\"line\">function changePerson(){</span><br><span class=\"line\">    Object.assign(person,{name:\"李四\",age:22})</span><br><span class=\"line\">}</span><br><span class=\"line\">//watch</span><br><span class=\"line\">//监视reactive定义的对象，会默认开启深度监视，且无法手动关闭</span><br><span class=\"line\">watch(person,(newValue,oldValue)=&gt;{</span><br><span class=\"line\">    console.log('person变化了',newValue,oldValue)</span><br><span class=\"line\">})</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure></div>\n\n<p>效果：</p>\n<p><img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/Vue3_note/image-20240201212634644.png\" alt=\"image-20240201212634644\"></p>\n<p>可以注意到reactive替换对象是值覆盖，地址没有发生变化</p>\n<h3 id=\"监视【ref】或【reactive】定义的对象当中的属性\"><a href=\"#监视【ref】或【reactive】定义的对象当中的属性\" class=\"headerlink\" title=\"监视【ref】或【reactive】定义的对象当中的属性\"></a>监视【ref】或【reactive】定义的对象当中的属性</h3><div class=\"highlight-container\" data-rel=\"Plaintext\"><figure class=\"iseeu highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">    &lt;!-- html --&gt;</span><br><span class=\"line\">    &lt;div class=\"person\"&gt;</span><br><span class=\"line\">        &lt;h1&gt;情况四，监视[ref,reactive]定义的[对象类型]数据中的某个属性&lt;/h1&gt;</span><br><span class=\"line\">        &lt;h2&gt;姓名:{{ person.name}}&lt;/h2&gt;</span><br><span class=\"line\">        &lt;h2&gt;年龄:{{ person.age}}&lt;/h2&gt;</span><br><span class=\"line\">        &lt;h2&gt;汽车:{{ person.car.c1}}\\{{ person.car.c2 }}&lt;/h2&gt;</span><br><span class=\"line\">        &lt;button @click=\"changeName\"&gt;修改名字&lt;/button&gt;</span><br><span class=\"line\">        &lt;button @click=\"changeAge\"&gt;修改年龄&lt;/button&gt;</span><br><span class=\"line\">        &lt;button @click=\"changeCar1\"&gt;修改第一台车&lt;/button&gt;</span><br><span class=\"line\">        &lt;button @click=\"changeCar2\"&gt;修改第二台车&lt;/button&gt;</span><br><span class=\"line\">        &lt;button @click=\"changeCar\"&gt;修改全部车&lt;/button&gt;</span><br><span class=\"line\">    &lt;/div&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;script lang=\"ts\" setup name=\"Person123\"&gt;</span><br><span class=\"line\">import {reactive,watch} from 'vue'</span><br><span class=\"line\">//data</span><br><span class=\"line\">let person  =reactive({</span><br><span class=\"line\">    name:\"张三\",</span><br><span class=\"line\">    age:18,</span><br><span class=\"line\">    car:{</span><br><span class=\"line\">        c1:\"奔驰\",</span><br><span class=\"line\">        c2:\"宝马\",</span><br><span class=\"line\">    }</span><br><span class=\"line\">})</span><br><span class=\"line\">//method</span><br><span class=\"line\">function changeName(){</span><br><span class=\"line\">    person.name+='~'</span><br><span class=\"line\">}</span><br><span class=\"line\">function changeAge(){</span><br><span class=\"line\">    person.age+=1</span><br><span class=\"line\">}</span><br><span class=\"line\">function changeCar1(){</span><br><span class=\"line\">    person.car.c1='雅迪'</span><br><span class=\"line\">}</span><br><span class=\"line\">function changeCar2(){</span><br><span class=\"line\">    person.car.c2='爱玛'</span><br><span class=\"line\">}</span><br><span class=\"line\">function changeCar(){</span><br><span class=\"line\">    person.car={c1:'五菱',c2:'BYD'}</span><br><span class=\"line\">}</span><br><span class=\"line\">//watch</span><br><span class=\"line\">watch (()=&gt;{return person.name},(newValue,oldValue)=&gt;{</span><br><span class=\"line\">    console.log('person.name变化了',newValue,oldValue)</span><br><span class=\"line\">})</span><br><span class=\"line\">watch (()=&gt;person.car,(newValue,oldValue)=&gt;{</span><br><span class=\"line\">    console.log('person.car变化了',newValue,oldValue)</span><br><span class=\"line\">},{deep:true})</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure></div>\n\n<p>监视基本类型数据的时候，需要将其写成函数式；</p>\n<p>监视对象类型的时候，<strong>最好</strong>将其写成函数式（可以不写，但是有局限性）</p>\n<h3 id=\"监视上述多个数据\"><a href=\"#监视上述多个数据\" class=\"headerlink\" title=\"监视上述多个数据\"></a>监视上述多个数据</h3><div class=\"highlight-container\" data-rel=\"Typescript\"><figure class=\"iseeu highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">watch</span> ([<span class=\"function\">()=&gt;</span>person.<span class=\"property\">name</span>,person.<span class=\"property\">car</span>],<span class=\"function\">(<span class=\"params\">newValue,oldValue</span>)=&gt;</span>{</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">'person.car变化了'</span>,newValue,oldValue)</span><br><span class=\"line\">},{<span class=\"attr\">deep</span>:<span class=\"literal\">true</span>})</span><br></pre></td></tr></table></figure></div>\n\n<p>拿个数组包起来就行，数组里面不一定一定要是程式，也可以是对象，看需求</p>\n<h3 id=\"watchEffect\"><a href=\"#watchEffect\" class=\"headerlink\" title=\"watchEffect\"></a>watchEffect</h3><p>watchEffect可以自动执行监听，不需要指出监听对象</p>\n<p>而watch需要指明监听对象</p>\n<div class=\"highlight-container\" data-rel=\"Typescript\"><figure class=\"iseeu highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">watchEffect</span>(<span class=\"function\">()=&gt;</span>{</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(person.<span class=\"property\">age</span>&gt;=<span class=\"number\">20</span>||其他条件){</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">\"发送请求\"</span>)</span><br><span class=\"line\">    }</span><br><span class=\"line\">})</span><br></pre></td></tr></table></figure></div>\n\n<h2 id=\"ref的标签属性\"><a href=\"#ref的标签属性\" class=\"headerlink\" title=\"ref的标签属性\"></a>ref的标签属性</h2><div class=\"highlight-container\" data-rel=\"Plaintext\"><figure class=\"iseeu highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!-- </span><br><span class=\"line\">Person.vue </span><br><span class=\"line\">--&gt;</span><br><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">    &lt;!-- html --&gt;</span><br><span class=\"line\">    &lt;div class=\"person\"&gt;</span><br><span class=\"line\">        &lt;h1&gt;标签的ref属性&lt;/h1&gt;</span><br><span class=\"line\">        &lt;h2 ref=\"title2\"&gt;北京&lt;/h2&gt;</span><br><span class=\"line\">        &lt;button @click=\"showlog\"&gt;点我输出&lt;/button&gt;</span><br><span class=\"line\">    &lt;/div&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;script lang=\"ts\" setup name=\"Person123\"&gt;</span><br><span class=\"line\">import {ref} from 'vue'</span><br><span class=\"line\">//data</span><br><span class=\"line\">let title2 = ref()</span><br><span class=\"line\">let a = ref(0)</span><br><span class=\"line\">let b = ref(1)</span><br><span class=\"line\">let c = ref(2)</span><br><span class=\"line\">//method</span><br><span class=\"line\">function showlog(){</span><br><span class=\"line\">    console.log(title2.value)</span><br><span class=\"line\">}</span><br><span class=\"line\">defineExpose({a,b})//穿过保护性机制让外界可以看到</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure></div>\n\n<div class=\"highlight-container\" data-rel=\"Plaintext\"><figure class=\"iseeu highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!-- </span><br><span class=\"line\">App.vue </span><br><span class=\"line\">--&gt;</span><br><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">    &lt;!-- html --&gt;</span><br><span class=\"line\">    &lt;div class=\"app\"&gt;</span><br><span class=\"line\">        &lt;button @click=\"showlog\"&gt;测试&lt;/button&gt;</span><br><span class=\"line\">        &lt;Person ref =\"ren\"/&gt;</span><br><span class=\"line\">    &lt;/div&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\">&lt;script lang=\"ts\" setup name=\"App\"&gt;</span><br><span class=\"line\">//  JS或者TS</span><br><span class=\"line\">import Person from './components/Person.vue'</span><br><span class=\"line\">import {ref} from 'vue'</span><br><span class=\"line\">//data</span><br><span class=\"line\">let ren = ref()</span><br><span class=\"line\">//method</span><br><span class=\"line\">function showlog(){</span><br><span class=\"line\">    console.log(ren.value)</span><br><span class=\"line\">}</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure></div>\n\n<p>点击测试按钮，会输出<code>Person</code>的组件对象，如果没有<code>defineExpose()</code>那么输出的组件对象里是看不到<code>Person</code>组件中定义的a，b，c，这也是防止多人开发的时候，命名冲突。</p>\n<p>ref组件输出的特点一方面是收到保护性机制（这是使用id所不具备的），另一方面也是具有响应式的特性，就是可以数据变化的时候相互传递并且快速更新。</p>\n<h2 id=\"回顾TS中的接口和泛型\"><a href=\"#回顾TS中的接口和泛型\" class=\"headerlink\" title=\"回顾TS中的接口和泛型\"></a>回顾TS中的接口和泛型</h2><div class=\"highlight-container\" data-rel=\"Typescript\"><figure class=\"iseeu highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//types/index.ts</span></span><br><span class=\"line\"><span class=\"comment\">//定义一个接口用于限制person对象的具体属性</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">interface</span> <span class=\"title class_\">PersonInter</span>{</span><br><span class=\"line\">    <span class=\"attr\">id</span>:<span class=\"built_in\">string</span>,</span><br><span class=\"line\">    <span class=\"attr\">name</span>:<span class=\"built_in\">string</span>,</span><br><span class=\"line\">    <span class=\"attr\">age</span>:<span class=\"built_in\">number</span></span><br><span class=\"line\">}</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">interface</span> <span class=\"title class_\">Personouter</span>{</span><br><span class=\"line\">    <span class=\"attr\">id</span>:<span class=\"built_in\">string</span>,</span><br><span class=\"line\">    <span class=\"attr\">name</span>:<span class=\"built_in\">string</span>,</span><br><span class=\"line\">    <span class=\"attr\">age</span>:<span class=\"built_in\">number</span></span><br><span class=\"line\">}</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">type</span> <span class=\"title class_\">Persons</span> =<span class=\"title class_\">PersonInter</span>[]</span><br></pre></td></tr></table></figure></div>\n\n<p>可以用它来约束变量</p>\n<div class=\"highlight-container\" data-rel=\"Plaintext\"><figure class=\"iseeu highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!-- Person.vue --&gt;</span><br><span class=\"line\">&lt;script lang=\"ts\" setup name=\"Person123\"&gt;</span><br><span class=\"line\">import { type PersonInter, type Persons } from '@/types'</span><br><span class=\"line\">let person: Persons|PersonInter = [</span><br><span class=\"line\">    { id: '123', name: \"zhangsan\", age: 60 },</span><br><span class=\"line\">    { id: '123', name: \"zhangsan\", age: 60 },</span><br><span class=\"line\">]</span><br><span class=\"line\">let person2: Persons|PersonInter|Personouter = </span><br><span class=\"line\">    { id: '123', name: \"zhangsan\", age: 60 },</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure></div>\n\n<h2 id=\"props的使用\"><a href=\"#props的使用\" class=\"headerlink\" title=\"props的使用\"></a>props的使用</h2><p>简而言之就是<strong>爸爸给儿子传话</strong></p>\n<div class=\"highlight-container\" data-rel=\"Plaintext\"><figure class=\"iseeu highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!-- App.vue --&gt;</span><br><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">    &lt;!-- html --&gt;</span><br><span class=\"line\">\t&lt;!-- 爸爸给儿子传参 --&gt;</span><br><span class=\"line\">    &lt;Person  a=\"hello\" :list = \"person\"/&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\">&lt;script lang=\"ts\" setup name=\"App\"&gt;</span><br><span class=\"line\">//  JS或者TS</span><br><span class=\"line\">import Person from './components/Person.vue'</span><br><span class=\"line\">import { type PersonInter, type Personouter, type Persons } from '@/types'</span><br><span class=\"line\">import { reactive } from 'vue'</span><br><span class=\"line\">let person: Persons | PersonInter = [</span><br><span class=\"line\">    { id: '123', name: \"zhangsan\", age: 60 },</span><br><span class=\"line\">    { id: '123', name: \"zhangsan\", age: 60 },</span><br><span class=\"line\">]</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure></div>\n\n<div class=\"highlight-container\" data-rel=\"Plaintext\"><figure class=\"iseeu highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!-- Person.vue --&gt;</span><br><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">    &lt;!-- html --&gt;</span><br><span class=\"line\">    &lt;div class=\"person\"&gt;</span><br><span class=\"line\">        &lt;ul&gt;</span><br><span class=\"line\">            &lt;!-- v-for遍历 --&gt;</span><br><span class=\"line\">            &lt;li v-for=\"personObj in list\" :key=\"personObj.id\"&gt;</span><br><span class=\"line\">                {{ personObj.name }} -- {{ personObj.age }}</span><br><span class=\"line\">            &lt;/li&gt;</span><br><span class=\"line\">        &lt;/ul&gt;</span><br><span class=\"line\">    &lt;/div&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;script lang=\"ts\" setup name=\"Person123\"&gt;</span><br><span class=\"line\">import { defineProps, withDefaults } from 'vue';</span><br><span class=\"line\">import { type Persons } from '@/types';</span><br><span class=\"line\">//接收</span><br><span class=\"line\">// defineProps(['a', 'list'])</span><br><span class=\"line\"></span><br><span class=\"line\">//接收a，同时将props保存起来</span><br><span class=\"line\">// let x = defineProps(['a'])</span><br><span class=\"line\">// console.log(x.a)</span><br><span class=\"line\"></span><br><span class=\"line\">//接收加限制类型</span><br><span class=\"line\">// defineProps&lt;{ list: Persons }&gt;()</span><br><span class=\"line\"></span><br><span class=\"line\">//接收list+限制类悉尼港+限制必要性+指定默认值</span><br><span class=\"line\">//withDefaults(defineProps(),{})</span><br><span class=\"line\">withDefaults(defineProps&lt;{ list?: Persons }&gt;(), {//第二个参数只接收函数返回值类型</span><br><span class=\"line\">    list: () =&gt; [</span><br><span class=\"line\">        { id: '123', name: \"zhangsan\", age: 60 },</span><br><span class=\"line\">        { id: '123', name: \"zhangsan\", age: 60 },</span><br><span class=\"line\">    ]</span><br><span class=\"line\">})</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure></div>\n\n<p>效果：</p>\n<p><img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/Vue3_note/image-20240310184451213.png\" alt=\"image-20240310184451213\"></p>\n<h2 id=\"生命周期\"><a href=\"#生命周期\" class=\"headerlink\" title=\"生命周期\"></a>生命周期</h2><p>组件的生命周期</p>\n<blockquote>\n<ul>\n<li><strong>时刻</strong>[调用特定的函数]</li>\n<li><strong>创建</strong>[setup自动执行]</li>\n<li><strong>挂载</strong>[挂载前<code>onBeforeMount()</code>，挂载完毕<code>onMounted(</code>)]</li>\n<li><strong>更新</strong>[更新前<code>onBeforeUpdate()</code>，更新完毕<code>onUpdated()</code>]</li>\n<li><strong>卸载</strong>[销毁前<code>onBeforeUnmount()</code>，销毁完毕<code>onUnmounted()</code>]</li>\n</ul>\n</blockquote>\n<p>生命周期、生命周期函数、生命周期钩子</p>\n<div class=\"highlight-container\" data-rel=\"Plaintext\"><figure class=\"iseeu highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!-- Person.vue --&gt;</span><br><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">    &lt;!-- html --&gt;</span><br><span class=\"line\">    &lt;div class=\"person\"&gt;</span><br><span class=\"line\">        &lt;ul&gt;{{ sum }}&lt;/ul&gt;</span><br><span class=\"line\">        &lt;button @click=\"add\"&gt;点我sum+1&lt;/button&gt;</span><br><span class=\"line\">    &lt;/div&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\">&lt;!-- Person.vue --&gt;</span><br><span class=\"line\">&lt;script lang=\"ts\" setup name=\"Person123\"&gt;</span><br><span class=\"line\">import { onBeforeMount, onBeforeUnmount, onBeforeUpdate, onMounted, onUnmounted, onUpdated, ref } from \"vue\"</span><br><span class=\"line\">let sum = ref(0)</span><br><span class=\"line\">function add() {</span><br><span class=\"line\">    sum.value = sum.value + 1</span><br><span class=\"line\">}</span><br><span class=\"line\">//创建</span><br><span class=\"line\">console.log('创建')</span><br><span class=\"line\">//挂载</span><br><span class=\"line\">onBeforeMount(() =&gt; {</span><br><span class=\"line\">    console.log(\"挂载前\")</span><br><span class=\"line\">})</span><br><span class=\"line\">//挂载完毕</span><br><span class=\"line\">onMounted(() =&gt; {</span><br><span class=\"line\">    console.log(\"挂载完毕\")</span><br><span class=\"line\">})</span><br><span class=\"line\">//更新前</span><br><span class=\"line\">onBeforeUpdate(() =&gt; {</span><br><span class=\"line\">    console.log(\"更新前\")</span><br><span class=\"line\">})</span><br><span class=\"line\">//更新完毕</span><br><span class=\"line\">onUpdated(() =&gt; {</span><br><span class=\"line\">    console.log(\"更新完毕\")</span><br><span class=\"line\">})</span><br><span class=\"line\">// 卸载</span><br><span class=\"line\">onBeforeUnmount(()=&gt;{</span><br><span class=\"line\">    console.log(\"卸载前\")</span><br><span class=\"line\">})</span><br><span class=\"line\">//卸载完毕</span><br><span class=\"line\">onUnmounted(() =&gt; {</span><br><span class=\"line\">    console.log(\"卸载完毕\")</span><br><span class=\"line\">})</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure></div>\n\n<p>生命周期流程图[来自官网]</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/Vue3_note/lifecycle_zh-CN.FtDDVyNA.png\" alt=\"组件生命周期图示\" style=\"zoom:50%;\">\n\n<h2 id=\"自定义hook\"><a href=\"#自定义hook\" class=\"headerlink\" title=\"自定义hook\"></a>自定义hook</h2><div class=\"highlight-container\" data-rel=\"Plaintext\"><figure class=\"iseeu highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 安装axios，非必要，只是此处样例用到了</span><br><span class=\"line\">$ npm i axios</span><br></pre></td></tr></table></figure></div>\n\n<div class=\"highlight-container\" data-rel=\"Plaintext\"><figure class=\"iseeu highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!-- Person.vue --&gt;</span><br><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">    &lt;!-- html --&gt;</span><br><span class=\"line\">    &lt;div class=\"person\"&gt;</span><br><span class=\"line\">        &lt;h2&gt;{{ sum }}&lt;/h2&gt;</span><br><span class=\"line\">        &lt;button @click=\"add\"&gt;点我sum+1&lt;/button&gt;</span><br><span class=\"line\">        &lt;hr&gt;</span><br><span class=\"line\">        &lt;img v-for=\"(dog, index) in doglist\" :src=\"dog\" :key=\"index\"&gt;</span><br><span class=\"line\">        &lt;button @click=\"getDog\"&gt;获取dog&lt;/button&gt;</span><br><span class=\"line\">    &lt;/div&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\">&lt;!-- Person.vue --&gt;</span><br><span class=\"line\">&lt;script lang=\"ts\" setup name=\"Person123\"&gt;</span><br><span class=\"line\">import useDog from '@/hooks/useDog';</span><br><span class=\"line\">import useSum from '@/hooks/useSum';</span><br><span class=\"line\">const { sum, add } = useSum()</span><br><span class=\"line\">const { doglist, getDog } = useDog()</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure></div>\n\n<p>在<code>src/hooks</code>中</p>\n<div class=\"highlight-container\" data-rel=\"Typescript\"><figure class=\"iseeu highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//useSum.ts</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> { ref } <span class=\"keyword\">from</span> <span class=\"string\">\"vue\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"keyword\">function</span> (<span class=\"params\"></span>) {</span><br><span class=\"line\">  <span class=\"keyword\">let</span> sum = <span class=\"title function_\">ref</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">  <span class=\"keyword\">function</span> <span class=\"title function_\">add</span>(<span class=\"params\"></span>) {</span><br><span class=\"line\">    sum.<span class=\"property\">value</span> = sum.<span class=\"property\">value</span> + <span class=\"number\">1</span>;</span><br><span class=\"line\">  }</span><br><span class=\"line\">  <span class=\"keyword\">return</span> { sum, add };</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure></div>\n\n<div class=\"highlight-container\" data-rel=\"Typescript\"><figure class=\"iseeu highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//useDog.ts</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> { reactive } <span class=\"keyword\">from</span> <span class=\"string\">\"vue\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> axios <span class=\"keyword\">from</span> <span class=\"string\">\"axios\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"keyword\">function</span> (<span class=\"params\"></span>) {</span><br><span class=\"line\">  <span class=\"keyword\">let</span> doglist = <span class=\"title function_\">reactive</span>([</span><br><span class=\"line\">    <span class=\"string\">\"https://images.dog.ceo/breeds/pembroke/n02113023_4373.jpg\"</span>,</span><br><span class=\"line\">  ]);</span><br><span class=\"line\">  <span class=\"keyword\">async</span> <span class=\"keyword\">function</span> <span class=\"title function_\">getDog</span>(<span class=\"params\"></span>) {</span><br><span class=\"line\">    <span class=\"keyword\">try</span> {</span><br><span class=\"line\">      <span class=\"keyword\">let</span> result = <span class=\"keyword\">await</span> axios.<span class=\"title function_\">get</span>(</span><br><span class=\"line\">        <span class=\"string\">\"https://dog.ceo/api/breed/pembroke/images/random\"</span></span><br><span class=\"line\">      );</span><br><span class=\"line\">      doglist.<span class=\"title function_\">push</span>(result.<span class=\"property\">data</span>.<span class=\"property\">message</span>);</span><br><span class=\"line\">      <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(result.<span class=\"property\">data</span>.<span class=\"property\">message</span>);</span><br><span class=\"line\">    } <span class=\"keyword\">catch</span> (error) {</span><br><span class=\"line\">      <span class=\"title function_\">alert</span>(error);</span><br><span class=\"line\">    }</span><br><span class=\"line\">  }</span><br><span class=\"line\">  <span class=\"comment\">//向外部提供东西</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> { doglist, getDog };</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></div>\n\n<p>作用是啥？vue里看着干净些吧，俺也不知道还有没有别的用途了？</p>\n<h2 id=\"路由\"><a href=\"#路由\" class=\"headerlink\" title=\"路由\"></a>路由</h2><h3 id=\"安装和使用\"><a href=\"#安装和使用\" class=\"headerlink\" title=\"安装和使用\"></a>安装和使用</h3><div class=\"highlight-container\" data-rel=\"Plaintext\"><figure class=\"iseeu highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#安装vue-router最新版</span><br><span class=\"line\">$npm i vue-router</span><br></pre></td></tr></table></figure></div>\n\n<p>对App.vue稍作调整</p>\n<div class=\"highlight-container\" data-rel=\"Plaintext\"><figure class=\"iseeu highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!-- </span><br><span class=\"line\">App.vue </span><br><span class=\"line\">--&gt;</span><br><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">    &lt;!-- html --&gt;</span><br><span class=\"line\">    &lt;h2&gt;Vue路由测试&lt;/h2&gt;</span><br><span class=\"line\">    &lt;!-- 导航区 --&gt;</span><br><span class=\"line\">    &lt;div class=\"navigate\"&gt;</span><br><span class=\"line\">        &lt;RouterLink to=\"/home\"&gt;首页 &lt;/RouterLink&gt;</span><br><span class=\"line\">        &lt;RouterLink to=\"/news\"&gt;新闻 &lt;/RouterLink&gt;</span><br><span class=\"line\">        &lt;RouterLink to=\"/about\"&gt;关于 &lt;/RouterLink&gt;</span><br><span class=\"line\">    &lt;/div&gt;</span><br><span class=\"line\">    &lt;hr&gt;</span><br><span class=\"line\">    &lt;!-- 展示区 --&gt;</span><br><span class=\"line\">    &lt;div class=\"main-content\" style=\"border: 1px solid red;height: 300px;width:300px\"&gt;</span><br><span class=\"line\">        &lt;RouterView&gt;&lt;/RouterView&gt;</span><br><span class=\"line\">    &lt;/div&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\">&lt;script lang=\"ts\" setup name=\"App\"&gt;</span><br><span class=\"line\">import { RouterView } from 'vue-router';</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure></div>\n\n<p>配置路由配置项<code>index.ts</code></p>\n<div class=\"highlight-container\" data-rel=\"Typescript\"><figure class=\"iseeu highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//写一个路由器并暴露出去</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> { createRouter, createWebHistory } <span class=\"keyword\">from</span> <span class=\"string\">\"vue-router\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">Home</span> <span class=\"keyword\">from</span> <span class=\"string\">\"@/components/Home.vue\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">News</span> <span class=\"keyword\">from</span> <span class=\"string\">\"@/components/News.vue\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">About</span> <span class=\"keyword\">from</span> <span class=\"string\">\"@/components/About.vue\"</span>;</span><br><span class=\"line\"><span class=\"comment\">//创建路由器</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> router = <span class=\"title function_\">createRouter</span>({</span><br><span class=\"line\">  <span class=\"comment\">//路由器工作模式,很重要👇👇👇</span></span><br><span class=\"line\">  <span class=\"attr\">history</span>: <span class=\"title function_\">createWebHistory</span>(),</span><br><span class=\"line\">  <span class=\"attr\">routes</span>: [</span><br><span class=\"line\">    <span class=\"comment\">// {</span></span><br><span class=\"line\">    <span class=\"comment\">//     path:'路径',</span></span><br><span class=\"line\">    <span class=\"comment\">//     component:组件</span></span><br><span class=\"line\">    <span class=\"comment\">// }</span></span><br><span class=\"line\">    {</span><br><span class=\"line\">      <span class=\"attr\">path</span>: <span class=\"string\">\"/home\"</span>,</span><br><span class=\"line\">      <span class=\"attr\">component</span>: <span class=\"title class_\">Home</span>,</span><br><span class=\"line\">    },</span><br><span class=\"line\">    {</span><br><span class=\"line\">      <span class=\"attr\">path</span>: <span class=\"string\">\"/news\"</span>,</span><br><span class=\"line\">      <span class=\"attr\">component</span>: <span class=\"title class_\">News</span>,</span><br><span class=\"line\">    },</span><br><span class=\"line\">    {</span><br><span class=\"line\">      <span class=\"attr\">path</span>: <span class=\"string\">\"/about\"</span>,</span><br><span class=\"line\">      <span class=\"attr\">component</span>: <span class=\"title class_\">About</span>,</span><br><span class=\"line\">    },</span><br><span class=\"line\">  ],</span><br><span class=\"line\">});</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> router;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></div>\n\n<p>在<code>main.ts</code>中使用路由器</p>\n<div class=\"highlight-container\" data-rel=\"Typescript\"><figure class=\"iseeu highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//引入createApp用于创建应用</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> { createApp } <span class=\"keyword\">from</span> <span class=\"string\">\"vue\"</span>;</span><br><span class=\"line\"><span class=\"comment\">//引用App根组件</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">App</span> <span class=\"keyword\">from</span> <span class=\"string\">\"./App.vue\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> router <span class=\"keyword\">from</span> <span class=\"string\">\"./router\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//创建一个应用</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> app = <span class=\"title function_\">createApp</span>(<span class=\"title class_\">App</span>);</span><br><span class=\"line\"><span class=\"comment\">//使用路由器</span></span><br><span class=\"line\">app.<span class=\"title function_\">use</span>(router);</span><br><span class=\"line\"><span class=\"comment\">//挂载整个应用到app容器中</span></span><br><span class=\"line\">app.<span class=\"title function_\">mount</span>(<span class=\"string\">\"#app\"</span>);</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></div>\n\n<p>效果：</p>\n<p><img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/Vue3_note/image-20240314224306984.png\" alt=\"image-20240314224306984\"></p>\n<p>路由组件：</p>\n<p>靠路由的规则渲染出来的：</p>\n<div class=\"highlight-container\" data-rel=\"Typescript\"><figure class=\"iseeu highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">routes</span>: [</span><br><span class=\"line\">    {</span><br><span class=\"line\">        <span class=\"attr\">path</span>: <span class=\"string\">'/demo'</span>,</span><br><span class=\"line\">        <span class=\"attr\">component</span>: demo</span><br><span class=\"line\">    }</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure></div>\n\n<p>一般组件：</p>\n<p>亲手写标签出来的</p>\n<div class=\"highlight-container\" data-rel=\"Html\"><figure class=\"iseeu highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">demo</span>/&gt;</span></span><br></pre></td></tr></table></figure></div>\n\n<h3 id=\"路由器工作模式\"><a href=\"#路由器工作模式\" class=\"headerlink\" title=\"路由器工作模式\"></a>路由器工作模式</h3><h5 id=\"history模式\"><a href=\"#history模式\" class=\"headerlink\" title=\"history模式\"></a>history模式</h5><div class=\"highlight-container\" data-rel=\"Typescript\"><figure class=\"iseeu highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> router = <span class=\"title function_\">createRouter</span>({</span><br><span class=\"line\">    <span class=\"attr\">history</span>: <span class=\"title function_\">createWebHistory</span>(),</span><br><span class=\"line\">    {</span><br><span class=\"line\">    \t<span class=\"attr\">path</span>:<span class=\"variable constant_\">XXX</span>,</span><br><span class=\"line\">    \t<span class=\"attr\">component</span>:<span class=\"variable constant_\">XXX</span></span><br><span class=\"line\">\t}</span><br><span class=\"line\">})</span><br></pre></td></tr></table></figure></div>\n\n<p>优点：<code>URL</code>更加美观，不带有<code>#</code>，更接近传统<code>URL</code></p>\n<p>缺点：后期项目上线，需要服务端配合处理路径问题，否则刷新会有<strong>404错误</strong></p>\n<h5 id=\"hash模式\"><a href=\"#hash模式\" class=\"headerlink\" title=\"hash模式\"></a>hash模式</h5><div class=\"highlight-container\" data-rel=\"Typescript\"><figure class=\"iseeu highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> router = <span class=\"title function_\">createRouter</span>({</span><br><span class=\"line\">    <span class=\"attr\">history</span>: <span class=\"title function_\">createWebHashHistory</span>(),</span><br><span class=\"line\">    {</span><br><span class=\"line\">    \t<span class=\"attr\">path</span>:<span class=\"variable constant_\">XXX</span>,</span><br><span class=\"line\">    \t<span class=\"attr\">component</span>:<span class=\"variable constant_\">XXX</span></span><br><span class=\"line\">\t}</span><br><span class=\"line\">})</span><br></pre></td></tr></table></figure></div>\n\n<p>优点：兼容性好，因为不需要服务器端处理路径</p>\n<p>缺点：<code>URL</code>带有<code>#</code>不太美观，<strong>且在<code>SEO</code>优化方面相对较差</strong></p>\n<h3 id=\"命名路由\"><a href=\"#命名路由\" class=\"headerlink\" title=\"命名路由\"></a>命名路由</h3><div class=\"highlight-container\" data-rel=\"Typescript\"><figure class=\"iseeu highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">routes</span>: [</span><br><span class=\"line\">  <span class=\"comment\">// {</span></span><br><span class=\"line\">  <span class=\"comment\">//     name:'路由名'</span></span><br><span class=\"line\">  <span class=\"comment\">//     path:'路径',</span></span><br><span class=\"line\">  <span class=\"comment\">//     component:组件</span></span><br><span class=\"line\">  <span class=\"comment\">// }</span></span><br><span class=\"line\">  {</span><br><span class=\"line\">    <span class=\"attr\">name</span>: <span class=\"string\">\"HOME\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">path</span>: <span class=\"string\">\"/home\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">component</span>: <span class=\"title class_\">Home</span>,</span><br><span class=\"line\">  },</span><br><span class=\"line\">  {</span><br><span class=\"line\">    <span class=\"attr\">name</span>: <span class=\"string\">\"NEWS\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">path</span>: <span class=\"string\">\"/news\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">component</span>: <span class=\"title class_\">News</span>,</span><br><span class=\"line\">  },</span><br><span class=\"line\">  {</span><br><span class=\"line\">    <span class=\"attr\">name</span>: <span class=\"string\">\"ABOUT\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">path</span>: <span class=\"string\">\"/about\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">component</span>: <span class=\"title class_\">About</span>,</span><br><span class=\"line\">  },</span><br><span class=\"line\">],</span><br></pre></td></tr></table></figure></div>\n\n<div class=\"highlight-container\" data-rel=\"Plaintext\"><figure class=\"iseeu highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div class=\"navigate\"&gt;</span><br><span class=\"line\">    &lt;!--三种路由跳转方式 --&gt;</span><br><span class=\"line\">    &lt;RouterLink to=\"/home\"&gt;首页 &lt;/RouterLink&gt;</span><br><span class=\"line\">     &lt;!--注意感叹号 --&gt;</span><br><span class=\"line\">    &lt;RouterLink :to=\"{ name: 'NEWS' }\"&gt;新闻 &lt;/RouterLink&gt;</span><br><span class=\"line\">    &lt;RouterLink :to=\"{ path: '/about' }\"&gt;关于 &lt;/RouterLink&gt;</span><br><span class=\"line\">&lt;/div&gt;</span><br></pre></td></tr></table></figure></div>\n\n<h3 id=\"嵌套路由\"><a href=\"#嵌套路由\" class=\"headerlink\" title=\"嵌套路由\"></a>嵌套路由</h3><p>P.S 路由页面要有<code>&lt;router-view/&gt;</code>来承载</p>\n<p>子路由</p>\n<div class=\"highlight-container\" data-rel=\"Typescript\"><figure class=\"iseeu highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">routes</span>: [</span><br><span class=\"line\">  <span class=\"comment\">// {</span></span><br><span class=\"line\">  <span class=\"comment\">//   name: \"路由名\",</span></span><br><span class=\"line\">  <span class=\"comment\">//   path: \"/路径\",</span></span><br><span class=\"line\">  <span class=\"comment\">//   component: 组件名,</span></span><br><span class=\"line\">  <span class=\"comment\">//   children: [</span></span><br><span class=\"line\">  <span class=\"comment\">//     {</span></span><br><span class=\"line\">  <span class=\"comment\">//       path: \"子路由路径\",</span></span><br><span class=\"line\">  <span class=\"comment\">//       component: 子路由组件名,</span></span><br><span class=\"line\">  <span class=\"comment\">//     },</span></span><br><span class=\"line\">  <span class=\"comment\">//   ],</span></span><br><span class=\"line\">  <span class=\"comment\">// },</span></span><br><span class=\"line\">  {</span><br><span class=\"line\">    <span class=\"attr\">name</span>: <span class=\"string\">\"NEWS\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">path</span>: <span class=\"string\">\"/news\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">component</span>: <span class=\"title class_\">News</span>,</span><br><span class=\"line\">    <span class=\"attr\">children</span>: [</span><br><span class=\"line\">      {</span><br><span class=\"line\">        <span class=\"attr\">name</span>: <span class=\"string\">'Detail'</span></span><br><span class=\"line\">        <span class=\"attr\">path</span>: <span class=\"string\">'detail'</span>,</span><br><span class=\"line\">        <span class=\"attr\">component</span>: <span class=\"title class_\">Detail</span>,</span><br><span class=\"line\">      },</span><br><span class=\"line\">    ],</span><br><span class=\"line\">  },</span><br><span class=\"line\">],</span><br></pre></td></tr></table></figure></div>\n\n<h3 id=\"路由传参\"><a href=\"#路由传参\" class=\"headerlink\" title=\"路由传参\"></a>路由传参</h3><h4 id=\"query\"><a href=\"#query\" class=\"headerlink\" title=\"query\"></a>query</h4><div class=\"highlight-container\" data-rel=\"Plaintext\"><figure class=\"iseeu highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!-- News.vue --&gt;</span><br><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">    &lt;!-- html --&gt;</span><br><span class=\"line\">    &lt;div&gt;</span><br><span class=\"line\">        &lt;ul&gt;</span><br><span class=\"line\">            &lt;li v-for=\"news in newsList\" :key=\"news.id\"&gt;</span><br><span class=\"line\">                &lt;RouterLink :to=\"`/news/detail?id=${news.id}&amp;title=${news.title}&amp;content=${news.content}`\"&gt;{{</span><br><span class=\"line\">                news.title }}&lt;/RouterLink&gt;</span><br><span class=\"line\">            &lt;/li&gt;</span><br><span class=\"line\">        &lt;/ul&gt;</span><br><span class=\"line\">        &lt;div class=\"main-content\" style=\"border: 1px solid red;height: 300px;width:300px\"&gt;</span><br><span class=\"line\">            &lt;RouterView&gt;&lt;/RouterView&gt;</span><br><span class=\"line\">        &lt;/div&gt;</span><br><span class=\"line\">    &lt;/div&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\">&lt;script lang=\"ts\" setup name=\"News\"&gt;</span><br><span class=\"line\">import { RouterView } from 'vue-router';</span><br><span class=\"line\">import { reactive } from 'vue'</span><br><span class=\"line\">const newsList = reactive([</span><br><span class=\"line\">    { id: '021120230', title: \"基于区块链\", content: 'solidity' },</span><br><span class=\"line\">    { id: '021120231', title: \"信息管理系统\", content: 'python' }</span><br><span class=\"line\">])</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure></div>\n\n<div class=\"highlight-container\" data-rel=\"Plaintext\"><figure class=\"iseeu highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">    &lt;!-- html --&gt;</span><br><span class=\"line\">    &lt;ul&gt;</span><br><span class=\"line\">        &lt;li&gt;编号：{{ route.query.id }}&lt;/li&gt;</span><br><span class=\"line\">        &lt;li&gt;标题：{{ route.query.title }}&lt;/li&gt;</span><br><span class=\"line\">        &lt;li&gt;内容：{{ route.query.content }}&lt;/li&gt;</span><br><span class=\"line\">    &lt;/ul&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\">&lt;script lang=\"ts\" setup name=\"Detail\"&gt;</span><br><span class=\"line\">import { useRoute } from 'vue-router'</span><br><span class=\"line\">let route = useRoute()</span><br></pre></td></tr></table></figure></div>\n\n<p>这个不好用，看看得了</p>\n<p>下面是<strong>使用对象传参</strong></p>\n<div class=\"highlight-container\" data-rel=\"Plaintext\"><figure class=\"iseeu highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!-- News.vue --&gt;</span><br><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">    &lt;!-- html --&gt;</span><br><span class=\"line\">    &lt;div&gt;</span><br><span class=\"line\">        &lt;ul&gt;</span><br><span class=\"line\">            &lt;li v-for=\"news in newsList\" :key=\"news.id\"&gt;</span><br><span class=\"line\">                &lt;RouterLink :to=\"{</span><br><span class=\"line\">                name: 'Detail',</span><br><span class=\"line\">                query: {</span><br><span class=\"line\">                    id: news.id,</span><br><span class=\"line\">                    title: news.title,</span><br><span class=\"line\">                    content: news.content</span><br><span class=\"line\">                }</span><br><span class=\"line\">            }\"&gt;{{ news.title }}&lt;/RouterLink&gt;</span><br><span class=\"line\">            &lt;/li&gt;</span><br><span class=\"line\">        &lt;/ul&gt;</span><br><span class=\"line\">        &lt;div class=\"main-content\" style=\"border: 1px solid red;height: 300px;width:300px\"&gt;</span><br><span class=\"line\">            &lt;RouterView&gt;&lt;/RouterView&gt;</span><br><span class=\"line\">        &lt;/div&gt;</span><br><span class=\"line\">    &lt;/div&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\">&lt;script lang=\"ts\" setup name=\"News\"&gt;</span><br><span class=\"line\">import { RouterView } from 'vue-router';</span><br><span class=\"line\">import { reactive } from 'vue'</span><br><span class=\"line\">const newsList = reactive([</span><br><span class=\"line\">    { id: '021120230', title: \"基于区块链\", content: 'solidity' },</span><br><span class=\"line\">    { id: '021120231', title: \"信息管理系统\", content: 'python' }</span><br><span class=\"line\">])</span><br><span class=\"line\">&lt;/script&gt;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></div>\n\n<div class=\"highlight-container\" data-rel=\"Plaintext\"><figure class=\"iseeu highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!-- detail.vue --&gt;</span><br><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">    &lt;!-- html --&gt;</span><br><span class=\"line\">    &lt;ul&gt;</span><br><span class=\"line\">        &lt;li&gt;编号：{{ query.id }}&lt;/li&gt;</span><br><span class=\"line\">        &lt;li&gt;标题：{{ query.title }}&lt;/li&gt;</span><br><span class=\"line\">        &lt;li&gt;内容：{{ query.content }}&lt;/li&gt;</span><br><span class=\"line\">    &lt;/ul&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\">&lt;script lang=\"ts\" setup name=\"Detail\"&gt;</span><br><span class=\"line\">import { toRefs } from 'vue';</span><br><span class=\"line\">import { useRoute } from 'vue-router'</span><br><span class=\"line\">let route = useRoute()</span><br><span class=\"line\">// 不使用toRefs会丢失响应式</span><br><span class=\"line\">let { query } = toRefs(route)</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure></div>\n\n<h4 id=\"params参数\"><a href=\"#params参数\" class=\"headerlink\" title=\"params参数\"></a>params参数</h4><p>在路由规则中占位</p>\n<div class=\"highlight-container\" data-rel=\"Typescript\"><figure class=\"iseeu highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">{</span><br><span class=\"line\">  <span class=\"attr\">name</span>: <span class=\"string\">\"NEWS\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">path</span>: <span class=\"string\">\"/news\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">component</span>: <span class=\"title class_\">News</span>,</span><br><span class=\"line\">  <span class=\"attr\">children</span>: [</span><br><span class=\"line\">    {</span><br><span class=\"line\">      <span class=\"attr\">name</span>: <span class=\"string\">\"Detail\"</span>,</span><br><span class=\"line\">      <span class=\"attr\">path</span>: <span class=\"string\">\"detail/:id/:title/:content\"</span>,</span><br><span class=\"line\">      <span class=\"attr\">component</span>: <span class=\"title class_\">Detail</span>,</span><br><span class=\"line\">    },</span><br><span class=\"line\">  ],</span><br><span class=\"line\">},</span><br></pre></td></tr></table></figure></div>\n\n<div class=\"highlight-container\" data-rel=\"Plaintext\"><figure class=\"iseeu highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!-- detail.vue --&gt;</span><br><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">    &lt;!-- html --&gt;</span><br><span class=\"line\">    &lt;ul&gt;</span><br><span class=\"line\">        &lt;li&gt;编号：{{ route.params.id }}&lt;/li&gt;</span><br><span class=\"line\">        &lt;li&gt;标题：{{ route.params.title }}&lt;/li&gt;</span><br><span class=\"line\">        &lt;li&gt;内容：{{ route.params.content }}&lt;/li&gt;</span><br><span class=\"line\">    &lt;/ul&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\">&lt;script lang=\"ts\" setup name=\"Detail\"&gt;</span><br><span class=\"line\">import { useRoute } from 'vue-router';</span><br><span class=\"line\">const route = useRoute()</span><br><span class=\"line\">console.log(route)</span><br><span class=\"line\">&lt;/script&gt;</span><br><span class=\"line\">&lt;style&gt;</span><br><span class=\"line\">/* 样式 */</span><br><span class=\"line\">&lt;/style&gt;</span><br></pre></td></tr></table></figure></div>\n\n<div class=\"highlight-container\" data-rel=\"Plaintext\"><figure class=\"iseeu highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!-- News.vue --&gt;</span><br><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">    &lt;!-- html --&gt;</span><br><span class=\"line\">    &lt;div&gt;</span><br><span class=\"line\">        &lt;ul&gt;</span><br><span class=\"line\">            &lt;li v-for=\"news in  newsList \" :key=\"news.id\"&gt;</span><br><span class=\"line\">                &lt;!-- 第一种写法 --&gt;</span><br><span class=\"line\">                &lt;!-- &lt;RouterLink :to=\"`/news/detail/${news.id}/${news.title}/${news.content}`\"&gt;{{ news.title }}</span><br><span class=\"line\">                &lt;/RouterLink&gt; --&gt;</span><br><span class=\"line\">                &lt;!-- 第二种写法 --&gt;</span><br><span class=\"line\">                &lt;RouterLink :to=\"{</span><br><span class=\"line\">                name: 'Detail',</span><br><span class=\"line\">                params: {</span><br><span class=\"line\">                    id: news.id,</span><br><span class=\"line\">                    title: news.title,</span><br><span class=\"line\">                    content: news.content</span><br><span class=\"line\">                }</span><br><span class=\"line\">            } as any\"&gt;{{ news.title }}</span><br><span class=\"line\">                &lt;/RouterLink&gt;</span><br><span class=\"line\">            &lt;/li&gt;</span><br><span class=\"line\">        &lt;/ul&gt;</span><br><span class=\"line\">        &lt;div class=\"main-content\" style=\"border: 1px solid red;height: 300px;width:300px\"&gt;</span><br><span class=\"line\">            &lt;RouterView&gt;&lt;/RouterView&gt;</span><br><span class=\"line\">        &lt;/div&gt;</span><br><span class=\"line\">    &lt;/div&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\">&lt;script lang=\"ts\" setup name=\"News\"&gt;</span><br><span class=\"line\">import { RouterView } from 'vue-router';</span><br><span class=\"line\">import { reactive } from 'vue'</span><br><span class=\"line\">const newsList = reactive([</span><br><span class=\"line\">    { id: '021120230', title: \"基于区块链\", content: 'solidity' },</span><br><span class=\"line\">    { id: '021120231', title: \"信息管理系统\", content: 'python' }</span><br><span class=\"line\">])</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure></div>\n\n<p>缺点：</p>\n<p>对象参数中不可以包含数组</p>\n<h3 id=\"路由props配置\"><a href=\"#路由props配置\" class=\"headerlink\" title=\"路由props配置\"></a>路由props配置</h3><p>路由规则中配置</p>\n<div class=\"highlight-container\" data-rel=\"Typescript\"><figure class=\"iseeu highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">{</span><br><span class=\"line\">  <span class=\"attr\">name</span>: <span class=\"string\">\"NEWS\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">path</span>: <span class=\"string\">\"/news\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">component</span>: <span class=\"title class_\">News</span>,</span><br><span class=\"line\">  <span class=\"attr\">children</span>: [</span><br><span class=\"line\">    {</span><br><span class=\"line\">      <span class=\"attr\">name</span>: <span class=\"string\">\"Detail\"</span>,</span><br><span class=\"line\">      <span class=\"comment\">// path: \"detail/:id/:title/:content\",//params写法</span></span><br><span class=\"line\">      <span class=\"attr\">path</span>: <span class=\"string\">\"detail\"</span>,</span><br><span class=\"line\">      <span class=\"attr\">component</span>: <span class=\"title class_\">Detail</span>,</span><br><span class=\"line\">      <span class=\"comment\">// props: true, //params</span></span><br><span class=\"line\">      <span class=\"comment\">// query写法</span></span><br><span class=\"line\">      <span class=\"title function_\">props</span>(<span class=\"params\">route</span>) {</span><br><span class=\"line\">        <span class=\"keyword\">return</span> route.<span class=\"property\">query</span>;</span><br><span class=\"line\">      },</span><br><span class=\"line\">    },</span><br><span class=\"line\">  ],</span><br><span class=\"line\">},</span><br></pre></td></tr></table></figure></div>\n\n <div class=\"highlight-container\" data-rel=\"Plaintext\"><figure class=\"iseeu highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!-- detail.vue --&gt;</span><br><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">    &lt;!-- html --&gt;</span><br><span class=\"line\">    &lt;ul&gt;</span><br><span class=\"line\">        &lt;li&gt;编号：{{ id }}&lt;/li&gt;</span><br><span class=\"line\">        &lt;li&gt;标题：{{ title }}&lt;/li&gt;</span><br><span class=\"line\">        &lt;li&gt;内容：{{ content }}&lt;/li&gt;</span><br><span class=\"line\">    &lt;/ul&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\">&lt;script lang=\"ts\" setup name=\"Detail\"&gt;</span><br><span class=\"line\">defineProps(['id', 'title', 'content'])</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure></div>\n\n<h3 id=\"replace属性\"><a href=\"#replace属性\" class=\"headerlink\" title=\"replace属性\"></a>replace属性</h3><p>作用：控制路由跳转时操作浏览器历史记录的模式</p>\n<p>浏览器历史记录有两种写入方式，分别为<code>push</code>和<code>replace</code></p>\n<ul>\n<li><code>push</code>：追加历史记录</li>\n<li><code>replace</code>：替换当前记录，点击过后不能返回</li>\n</ul>\n<p>开启<code>replace</code>模式</p>\n<div class=\"highlight-container\" data-rel=\"Plaintext\"><figure class=\"iseeu highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;RouterLink replace to=\"/home\"&gt;首页 &lt;/RouterLink&gt;</span><br></pre></td></tr></table></figure></div>\n\n<h3 id=\"编程式路由导航\"><a href=\"#编程式路由导航\" class=\"headerlink\" title=\"编程式路由导航\"></a>编程式路由导航</h3><p>使用频率很高，远远大于RouterLink</p>\n<div class=\"highlight-container\" data-rel=\"Plaintext\"><figure class=\"iseeu highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script lang=\"ts\" setup name=\"Home\"&gt;</span><br><span class=\"line\">//效果是，点击首页三秒后跳转至新闻页</span><br><span class=\"line\">import { onMounted } from 'vue';</span><br><span class=\"line\">import { useRouter } from 'vue-router';</span><br><span class=\"line\">const router = useRouter()</span><br><span class=\"line\">onMounted(() =&gt; {</span><br><span class=\"line\">    setTimeout(() =&gt; {</span><br><span class=\"line\">        router.push('/news')</span><br><span class=\"line\">    }, 3000)</span><br><span class=\"line\">})</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure></div>\n\n<h3 id=\"重定向\"><a href=\"#重定向\" class=\"headerlink\" title=\"重定向\"></a>重定向</h3><p>将指定路径重定向到另一个路径</p>\n<p>在规则中进行修改【此规则包含了所有路由配置写法】</p>\n<div class=\"highlight-container\" data-rel=\"Typescript\"><figure class=\"iseeu highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//写一个路由器并暴露出去</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> { createRouter, createWebHistory } <span class=\"keyword\">from</span> <span class=\"string\">\"vue-router\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">Home</span> <span class=\"keyword\">from</span> <span class=\"string\">\"@/pages/Home.vue\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">News</span> <span class=\"keyword\">from</span> <span class=\"string\">\"@/pages/News.vue\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">About</span> <span class=\"keyword\">from</span> <span class=\"string\">\"@/pages/About.vue\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">Detail</span> <span class=\"keyword\">from</span> <span class=\"string\">\"@/pages/detail.vue\"</span>;</span><br><span class=\"line\"><span class=\"comment\">//创建路由器</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> router = <span class=\"title function_\">createRouter</span>({</span><br><span class=\"line\">  <span class=\"comment\">//路由器工作模式</span></span><br><span class=\"line\">  <span class=\"attr\">history</span>: <span class=\"title function_\">createWebHistory</span>(),</span><br><span class=\"line\">  <span class=\"attr\">routes</span>: [</span><br><span class=\"line\">    <span class=\"comment\">// {</span></span><br><span class=\"line\">    <span class=\"comment\">//   name: \"路由名\",</span></span><br><span class=\"line\">    <span class=\"comment\">//   path: \"/路径\",</span></span><br><span class=\"line\">    <span class=\"comment\">//   component: 组件名,</span></span><br><span class=\"line\">    <span class=\"comment\">//   children: [</span></span><br><span class=\"line\">    <span class=\"comment\">//     {</span></span><br><span class=\"line\">    <span class=\"comment\">//       path: \"子路由路径\",</span></span><br><span class=\"line\">    <span class=\"comment\">//       component: 子路由组件名,</span></span><br><span class=\"line\">    <span class=\"comment\">//     },</span></span><br><span class=\"line\">    <span class=\"comment\">//   ],</span></span><br><span class=\"line\">    <span class=\"comment\">// },</span></span><br><span class=\"line\">    {</span><br><span class=\"line\">      <span class=\"attr\">name</span>: <span class=\"string\">\"HOME\"</span>,</span><br><span class=\"line\">      <span class=\"attr\">path</span>: <span class=\"string\">\"/home\"</span>,</span><br><span class=\"line\">      <span class=\"attr\">component</span>: <span class=\"title class_\">Home</span>,</span><br><span class=\"line\">    },</span><br><span class=\"line\">    {</span><br><span class=\"line\">      <span class=\"attr\">name</span>: <span class=\"string\">\"NEWS\"</span>,</span><br><span class=\"line\">      <span class=\"attr\">path</span>: <span class=\"string\">\"/news\"</span>,</span><br><span class=\"line\">      <span class=\"attr\">component</span>: <span class=\"title class_\">News</span>,</span><br><span class=\"line\">      <span class=\"attr\">children</span>: [</span><br><span class=\"line\">        {</span><br><span class=\"line\">          <span class=\"attr\">name</span>: <span class=\"string\">\"Detail\"</span>,</span><br><span class=\"line\">          <span class=\"comment\">// path: \"detail/:id/:title/:content\",//params写法</span></span><br><span class=\"line\">          <span class=\"attr\">path</span>: <span class=\"string\">\"detail\"</span>,</span><br><span class=\"line\">          <span class=\"attr\">component</span>: <span class=\"title class_\">Detail</span>,</span><br><span class=\"line\">          <span class=\"comment\">// props: true, //params</span></span><br><span class=\"line\">          <span class=\"comment\">// query写法</span></span><br><span class=\"line\">          <span class=\"title function_\">props</span>(<span class=\"params\">route</span>) {</span><br><span class=\"line\">            <span class=\"keyword\">return</span> route.<span class=\"property\">query</span>;</span><br><span class=\"line\">          },</span><br><span class=\"line\">        },</span><br><span class=\"line\">      ],</span><br><span class=\"line\">    },</span><br><span class=\"line\">    {</span><br><span class=\"line\">      <span class=\"attr\">name</span>: <span class=\"string\">\"ABOUT\"</span>,</span><br><span class=\"line\">      <span class=\"attr\">path</span>: <span class=\"string\">\"/about\"</span>,</span><br><span class=\"line\">      <span class=\"attr\">component</span>: <span class=\"title class_\">About</span>,</span><br><span class=\"line\">    },</span><br><span class=\"line\">    <span class=\"comment\">//重定向</span></span><br><span class=\"line\">    {</span><br><span class=\"line\">      <span class=\"attr\">path</span>: <span class=\"string\">\"/\"</span>,</span><br><span class=\"line\">      <span class=\"attr\">redirect</span>: <span class=\"string\">\"/home\"</span>,</span><br><span class=\"line\">    },</span><br><span class=\"line\">  ],</span><br><span class=\"line\">});</span><br><span class=\"line\"><span class=\"comment\">//把路由规则暴露出去</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> router;</span><br></pre></td></tr></table></figure></div>\n\n<h2 id=\"Pinia\"><a href=\"#Pinia\" class=\"headerlink\" title=\"Pinia\"></a>Pinia</h2><h3 id=\"安装和部署\"><a href=\"#安装和部署\" class=\"headerlink\" title=\"安装和部署\"></a>安装和部署</h3><p><strong>安装</strong></p>\n<div class=\"highlight-container\" data-rel=\"Plaintext\"><figure class=\"iseeu highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#安装pinia</span><br><span class=\"line\">$npm i pinia</span><br></pre></td></tr></table></figure></div>\n\n<p><strong>搭建环境</strong></p>\n<div class=\"highlight-container\" data-rel=\"Typescript\"><figure class=\"iseeu highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//main.ts</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> { createApp } <span class=\"keyword\">from</span> <span class=\"string\">\"vue\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">App</span> <span class=\"keyword\">from</span> <span class=\"string\">\"./App.vue\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> router <span class=\"keyword\">from</span> <span class=\"string\">\"./router\"</span>;</span><br><span class=\"line\"><span class=\"comment\">//引入pinia</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> { createPinia } <span class=\"keyword\">from</span> <span class=\"string\">\"pinia\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> app = <span class=\"title function_\">createApp</span>(<span class=\"title class_\">App</span>);</span><br><span class=\"line\"><span class=\"comment\">//创建pinia</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> pinia = <span class=\"title function_\">createPinia</span>();</span><br><span class=\"line\">app.<span class=\"title function_\">use</span>(router);</span><br><span class=\"line\">app.<span class=\"title function_\">mount</span>(<span class=\"string\">\"#app\"</span>);</span><br><span class=\"line\"><span class=\"comment\">//安装pinia</span></span><br><span class=\"line\">app.<span class=\"title function_\">use</span>(pinia);</span><br></pre></td></tr></table></figure></div>\n\n<h3 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h3><p>其作用相当于前端的仓库</p>\n<div class=\"highlight-container\" data-rel=\"Typescript\"><figure class=\"iseeu highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//src/store/count.ts</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> { defineStore } <span class=\"keyword\">from</span> <span class=\"string\">\"pinia\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> useContentStore = <span class=\"title function_\">defineStore</span>(<span class=\"string\">\"count\"</span>, {</span><br><span class=\"line\">  <span class=\"comment\">//真正存数据的地方</span></span><br><span class=\"line\">  <span class=\"title function_\">state</span>(<span class=\"params\"></span>) {</span><br><span class=\"line\">    <span class=\"keyword\">return</span> {</span><br><span class=\"line\">      <span class=\"attr\">sum</span>: <span class=\"number\">6</span>,</span><br><span class=\"line\">    };</span><br><span class=\"line\">  },</span><br><span class=\"line\">});</span><br></pre></td></tr></table></figure></div>\n\n<div class=\"highlight-container\" data-rel=\"Typescript\"><figure class=\"iseeu highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//src/store/talk.ts</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> { defineStore } <span class=\"keyword\">from</span> <span class=\"string\">\"pinia\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> useTalkStore = <span class=\"title function_\">defineStore</span>(<span class=\"string\">\"talk\"</span>, {</span><br><span class=\"line\">  <span class=\"comment\">//真正存数据的地方</span></span><br><span class=\"line\">  <span class=\"title function_\">state</span>(<span class=\"params\"></span>) {</span><br><span class=\"line\">    <span class=\"keyword\">return</span> {</span><br><span class=\"line\">      <span class=\"attr\">talkList</span>: [</span><br><span class=\"line\">        { <span class=\"attr\">id</span>: <span class=\"string\">\"1\"</span>, <span class=\"attr\">title</span>: <span class=\"string\">\"qqqqqqqqqqqqqqqqqqq\"</span> },</span><br><span class=\"line\">        { <span class=\"attr\">id</span>: <span class=\"string\">\"2\"</span>, <span class=\"attr\">title</span>: <span class=\"string\">\"wwwwwwwwwwwwwww\"</span> },</span><br><span class=\"line\">        { <span class=\"attr\">id</span>: <span class=\"string\">\"3\"</span>, <span class=\"attr\">title</span>: <span class=\"string\">\"eeeeeeeeeeeeeeeeeeeee\"</span> },</span><br><span class=\"line\">        { <span class=\"attr\">id</span>: <span class=\"string\">\"4\"</span>, <span class=\"attr\">title</span>: <span class=\"string\">\"rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr\"</span> },</span><br><span class=\"line\">      ],</span><br><span class=\"line\">    };</span><br><span class=\"line\">  },</span><br><span class=\"line\">});</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></div>\n\n<p><strong>调用</strong></p>\n<div class=\"highlight-container\" data-rel=\"Plaintext\"><figure class=\"iseeu highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!-- components/Love.vue --&gt;</span><br><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">    &lt;div class=\"talk\"&gt;</span><br><span class=\"line\">        &lt;button @click=\"getTalk\"&gt;获取一句土味情话&lt;/button&gt;</span><br><span class=\"line\">        &lt;ul&gt;</span><br><span class=\"line\">            &lt;li v-for=\"talk in talkStore.talkList\" :key=\"talk.id\"&gt;{{ talk.title }}&lt;/li&gt;</span><br><span class=\"line\">        &lt;/ul&gt;</span><br><span class=\"line\">    &lt;/div&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;script lang='ts' setup name='LoveTalk'&gt;</span><br><span class=\"line\">import axios from 'axios';</span><br><span class=\"line\">import { reactive } from 'vue';</span><br><span class=\"line\">import { nanoid } from 'nanoid'</span><br><span class=\"line\">import { useTalkStore } from '@/store/talk'</span><br><span class=\"line\">const talkStore = useTalkStore()</span><br><span class=\"line\">async function getTalk() {</span><br><span class=\"line\">    //发请求,连用两次解构赋值和一次重命名</span><br><span class=\"line\">    let { data: { content: title } } = await axios.get('https://api.uomg.com/api/rand.qinghua?format=json');</span><br><span class=\"line\">    // 把请求回来的字符串，包装成一个对象</span><br><span class=\"line\">    let obj = { id: nanoid(), title: title }</span><br><span class=\"line\">    console.log(obj)</span><br><span class=\"line\">    //放到数组中</span><br><span class=\"line\">    talkStore.talkList.unshift(obj)//最开始</span><br><span class=\"line\">    // talkList.push(obj)//最末尾</span><br><span class=\"line\">}</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure></div>\n\n<div class=\"highlight-container\" data-rel=\"Plaintext\"><figure class=\"iseeu highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!-- components/Count.vue --&gt;</span><br><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">    &lt;div class=\"count\"&gt;</span><br><span class=\"line\">        &lt;h2&gt;当前求和为:{{ countStore.sum }}&lt;/h2&gt;</span><br><span class=\"line\">    &lt;/div&gt;</span><br><span class=\"line\">    &lt;select v-model.number=\"n\"&gt;</span><br><span class=\"line\">        &lt;option value=\"1\"&gt;1&lt;/option&gt;</span><br><span class=\"line\">        &lt;option value=\"2\"&gt;2&lt;/option&gt;</span><br><span class=\"line\">        &lt;option value=\"3\"&gt;3&lt;/option&gt;</span><br><span class=\"line\">    &lt;/select&gt;</span><br><span class=\"line\">    &lt;button @click=\"add\"&gt;加&lt;/button&gt;</span><br><span class=\"line\">    &lt;button @click=\"minus\"&gt;减&lt;/button&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;script lang='ts' setup name=\"Count\"&gt;</span><br><span class=\"line\">import { ref } from 'vue'</span><br><span class=\"line\">import { useContentStore } from '@/store/count'</span><br><span class=\"line\">// countStore是一个响应式reactive对象，</span><br><span class=\"line\">// 并且会自动解构它下面的ref类型数据，因此不需要写.value</span><br><span class=\"line\">const countStore = useContentStore()</span><br><span class=\"line\">console.log('@@@', countStore.sum)</span><br><span class=\"line\"></span><br><span class=\"line\">//数据</span><br><span class=\"line\">let n = ref(1) //用户选择的数据</span><br><span class=\"line\"></span><br><span class=\"line\">function add() {</span><br><span class=\"line\">    countStore.sum += n.value</span><br><span class=\"line\">}</span><br><span class=\"line\">function minus() {</span><br><span class=\"line\">    countStore.sum -= n.value</span><br><span class=\"line\">}</span><br><span class=\"line\">&lt;/script&gt;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></div>\n\n<h3 id=\"修改数据-三种方式\"><a href=\"#修改数据-三种方式\" class=\"headerlink\" title=\"修改数据(三种方式)\"></a>修改数据(三种方式)</h3><div class=\"highlight-container\" data-rel=\"Typescript\"><figure class=\"iseeu highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//components/Count.vue</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">add</span>(<span class=\"params\"></span>) {</span><br><span class=\"line\">    <span class=\"comment\">//&lt;----------第一种修改方式-------------&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">// countStore.sum += n.value</span></span><br><span class=\"line\">    <span class=\"comment\">// countStore.school = '鸡大'</span></span><br><span class=\"line\">    <span class=\"comment\">//&lt;----------第二种修改方式-------------&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">// 适用于修改多个数据</span></span><br><span class=\"line\">    <span class=\"comment\">// countStore.$patch({</span></span><br><span class=\"line\">    <span class=\"comment\">//     sum: 88,</span></span><br><span class=\"line\">    <span class=\"comment\">//     school: '鸡大'</span></span><br><span class=\"line\">    <span class=\"comment\">// })</span></span><br><span class=\"line\">    <span class=\"comment\">//&lt;----------第二种修改方式-------------&gt;</span></span><br><span class=\"line\">    countStore.<span class=\"title function_\">increment</span>(n.<span class=\"property\">value</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure></div>\n\n<div class=\"highlight-container\" data-rel=\"Typescript\"><figure class=\"iseeu highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//src/store/count.ts</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> { defineStore } <span class=\"keyword\">from</span> <span class=\"string\">\"pinia\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> useContentStore = <span class=\"title function_\">defineStore</span>(<span class=\"string\">\"count\"</span>, {</span><br><span class=\"line\">  <span class=\"comment\">//actions里放置的是一个个方法，用于相应组件中的“动作”</span></span><br><span class=\"line\">  <span class=\"attr\">actions</span>: {</span><br><span class=\"line\">    <span class=\"title function_\">increment</span>(<span class=\"params\"><span class=\"attr\">value</span>: <span class=\"built_in\">any</span></span>) {</span><br><span class=\"line\">      <span class=\"variable language_\">this</span>.<span class=\"property\">sum</span> += value;</span><br><span class=\"line\">    },<span class=\"comment\">//很麻烦，日常开发用起来不方便，但是可以模块化，复用它</span></span><br><span class=\"line\">  },</span><br><span class=\"line\">  <span class=\"comment\">//真正存数据的地方</span></span><br><span class=\"line\">  <span class=\"title function_\">state</span>(<span class=\"params\"></span>) {</span><br><span class=\"line\">    <span class=\"keyword\">return</span> {</span><br><span class=\"line\">      <span class=\"attr\">sum</span>: <span class=\"number\">6</span>,</span><br><span class=\"line\">      <span class=\"attr\">school</span>: <span class=\"string\">\"SUES\"</span>,</span><br><span class=\"line\">    };</span><br><span class=\"line\">  },</span><br><span class=\"line\">});</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></div>\n\n<h3 id=\"subscribe的使用\"><a href=\"#subscribe的使用\" class=\"headerlink\" title=\"$subscribe的使用\"></a>$subscribe的使用</h3><p>能够在本地浏览器存储数据，使其不会因为浏览器的刷新而导致数据丢失</p>\n<p>还是以土味情话为例</p>\n<div class=\"highlight-container\" data-rel=\"Plaintext\"><figure class=\"iseeu highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!--Love.vue--&gt;</span><br><span class=\"line\">&lt;script lang='ts' setup name='LoveTalk'&gt;</span><br><span class=\"line\">import { useTalkStore } from '@/store/talk'</span><br><span class=\"line\">const talkStore = useTalkStore()</span><br><span class=\"line\">async function getTalk() {</span><br><span class=\"line\">    talkStore.getATalk()</span><br><span class=\"line\">    talkStore.$subscribe((mutate, state) =&gt; {</span><br><span class=\"line\">        //mutate表示发生变化的内容</span><br><span class=\"line\">        console.log('talkStore内的数据发生了变化', mutate, state)</span><br><span class=\"line\">        localStorage.setItem('talkList', JSON.stringify(state.talkList))</span><br><span class=\"line\">    })</span><br><span class=\"line\">}</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure></div>\n\n<div class=\"highlight-container\" data-rel=\"Typescript\"><figure class=\"iseeu highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//src/store/talk.ts</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> { defineStore } <span class=\"keyword\">from</span> <span class=\"string\">\"pinia\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> { nanoid } <span class=\"keyword\">from</span> <span class=\"string\">\"nanoid\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> axios <span class=\"keyword\">from</span> <span class=\"string\">\"axios\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> useTalkStore = <span class=\"title function_\">defineStore</span>(<span class=\"string\">\"talk\"</span>, {</span><br><span class=\"line\">  <span class=\"attr\">actions</span>: {</span><br><span class=\"line\">    <span class=\"keyword\">async</span> <span class=\"title function_\">getATalk</span>(<span class=\"params\"></span>) {</span><br><span class=\"line\">      <span class=\"comment\">//发请求,连用两次解构赋值和一次重命名</span></span><br><span class=\"line\">      <span class=\"keyword\">let</span> {</span><br><span class=\"line\">        <span class=\"attr\">data</span>: { <span class=\"attr\">content</span>: title },</span><br><span class=\"line\">      } = <span class=\"keyword\">await</span> axios.<span class=\"title function_\">get</span>(<span class=\"string\">\"https://api.uomg.com/api/rand.qinghua?format=json\"</span>);</span><br><span class=\"line\">      <span class=\"comment\">// 把请求回来的字符串，包装成一个对象</span></span><br><span class=\"line\">      <span class=\"keyword\">let</span> obj = { <span class=\"attr\">id</span>: <span class=\"title function_\">nanoid</span>(), <span class=\"attr\">title</span>: title };</span><br><span class=\"line\">      <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(obj);</span><br><span class=\"line\">      <span class=\"comment\">//放到数组中</span></span><br><span class=\"line\">      <span class=\"variable language_\">this</span>.<span class=\"property\">talkList</span>.<span class=\"title function_\">unshift</span>(obj); <span class=\"comment\">//最开始</span></span><br><span class=\"line\">      <span class=\"comment\">// talkList.push(obj)//最末尾</span></span><br><span class=\"line\">    },</span><br><span class=\"line\">  },</span><br><span class=\"line\">  <span class=\"comment\">//真正存数据的地方</span></span><br><span class=\"line\">  <span class=\"title function_\">state</span>(<span class=\"params\"></span>) {</span><br><span class=\"line\">    <span class=\"keyword\">return</span> {</span><br><span class=\"line\">      <span class=\"attr\">talkList</span>: <span class=\"title class_\">JSON</span>.<span class=\"title function_\">parse</span>(<span class=\"variable language_\">localStorage</span>.<span class=\"title function_\">getItem</span>(<span class=\"string\">\"talkList\"</span>) <span class=\"keyword\">as</span> <span class=\"built_in\">string</span>) || [],</span><br><span class=\"line\">    };</span><br><span class=\"line\">  },</span><br><span class=\"line\">});</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></div>\n\n<p><strong>效果：</strong></p>\n<p><img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/Vue3_note/image-20240317151105751.png\" alt=\"image-20240317151105751\"></p>\n<h3 id=\"组合式写法\"><a href=\"#组合式写法\" class=\"headerlink\" title=\"组合式写法\"></a>组合式写法</h3><div class=\"highlight-container\" data-rel=\"Typescript\"><figure class=\"iseeu highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//src/store/talk.ts</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> { reactive } <span class=\"keyword\">from</span> <span class=\"string\">\"vue\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> useTalkStore = <span class=\"title function_\">defineStore</span>(<span class=\"string\">\"talk\"</span>, <span class=\"keyword\">function</span> <span class=\"title function_\">a</span>(<span class=\"params\"></span>) {</span><br><span class=\"line\">  <span class=\"keyword\">const</span> talkList = <span class=\"title function_\">reactive</span>(</span><br><span class=\"line\">    <span class=\"title class_\">JSON</span>.<span class=\"title function_\">parse</span>(<span class=\"variable language_\">localStorage</span>.<span class=\"title function_\">getItem</span>(<span class=\"string\">\"talkList\"</span>) <span class=\"keyword\">as</span> <span class=\"built_in\">string</span>) || []</span><br><span class=\"line\">  );</span><br><span class=\"line\">  <span class=\"keyword\">async</span> <span class=\"keyword\">function</span> <span class=\"title function_\">getATalk</span>(<span class=\"params\"></span>) {</span><br><span class=\"line\">    <span class=\"comment\">//发请求,连用两次解构赋值和一次重命名</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> {</span><br><span class=\"line\">      <span class=\"attr\">data</span>: { <span class=\"attr\">content</span>: title },</span><br><span class=\"line\">    } = <span class=\"keyword\">await</span> axios.<span class=\"title function_\">get</span>(<span class=\"string\">\"https://api.uomg.com/api/rand.qinghua?format=json\"</span>);</span><br><span class=\"line\">    <span class=\"comment\">// 把请求回来的字符串，包装成一个对象</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> obj = { <span class=\"attr\">id</span>: <span class=\"title function_\">nanoid</span>(), <span class=\"attr\">title</span>: title };</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(obj);</span><br><span class=\"line\">    <span class=\"comment\">//放到数组中</span></span><br><span class=\"line\">    talkList.<span class=\"property\">talkList</span>.<span class=\"title function_\">unshift</span>(obj); <span class=\"comment\">//最开始</span></span><br><span class=\"line\">    <span class=\"comment\">// talkList.push(obj)//最末尾</span></span><br><span class=\"line\">  }</span><br><span class=\"line\">  <span class=\"keyword\">return</span> { talkList, getATalk };</span><br><span class=\"line\">});</span><br></pre></td></tr></table></figure></div>\n\n<h2 id=\"向后端发起请求\"><a href=\"#向后端发起请求\" class=\"headerlink\" title=\"向后端发起请求\"></a>向后端发起请求</h2><p>核心语句，当然后端要做好跨域访问</p>\n<div class=\"highlight-container\" data-rel=\"Typescript\"><figure class=\"iseeu highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> axios <span class=\"keyword\">from</span> <span class=\"string\">\"axios\"</span>; </span><br><span class=\"line\"><span class=\"keyword\">async</span> <span class=\"keyword\">function</span> <span class=\"title function_\">Login</span>(<span class=\"params\"></span>) {</span><br><span class=\"line\">\t<span class=\"keyword\">let</span> loginMessage = {</span><br><span class=\"line\">        <span class=\"attr\">user_id</span>: userid.<span class=\"property\">value</span>,</span><br><span class=\"line\">        <span class=\"attr\">password</span>: password.<span class=\"property\">value</span></span><br><span class=\"line\">    }</span><br><span class=\"line\"> \t<span class=\"keyword\">const</span> response = <span class=\"keyword\">await</span> axios.<span class=\"title function_\">post</span>(<span class=\"string\">'http://localhost:8080/login'</span>, loginMessage);</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure></div>\n\n<p>写个样例，向后端发送登录请求，并将返回的token存入Pinia中,同时在浏览器也做好存储，避免服务器重启以及刷新浏览器会丢失数据</p>\n<p>先新建仓库</p>\n<div class=\"highlight-container\" data-rel=\"Typescript\"><figure class=\"iseeu highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//store/loginStore.ts</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> { defineStore } <span class=\"keyword\">from</span> <span class=\"string\">\"pinia\"</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> { <span class=\"keyword\">type</span> <span class=\"title class_\">LoginResult</span> } <span class=\"keyword\">from</span> <span class=\"string\">\"@/interface/loginResult\"</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> { ref } <span class=\"keyword\">from</span> <span class=\"string\">\"vue\"</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> useLoginStore = <span class=\"title function_\">defineStore</span>(<span class=\"string\">\"login\"</span>, <span class=\"keyword\">function</span> <span class=\"title function_\">login</span>(<span class=\"params\"></span>) {</span><br><span class=\"line\">    <span class=\"comment\">//真正存数据的地方</span></span><br><span class=\"line\">    <span class=\"keyword\">const</span> userid = <span class=\"title function_\">ref</span>(<span class=\"variable language_\">localStorage</span>.<span class=\"title function_\">getItem</span>(<span class=\"string\">\"userid\"</span>) || <span class=\"string\">\"\"</span>)</span><br><span class=\"line\">    <span class=\"keyword\">const</span> username = <span class=\"title function_\">ref</span>(<span class=\"variable language_\">localStorage</span>.<span class=\"title function_\">getItem</span>(<span class=\"string\">\"username\"</span>) || <span class=\"string\">\"\"</span>)</span><br><span class=\"line\">    <span class=\"keyword\">const</span> publicKey = <span class=\"title function_\">ref</span>(<span class=\"variable language_\">localStorage</span>.<span class=\"title function_\">getItem</span>(<span class=\"string\">\"publicKey\"</span>) || <span class=\"string\">\"\"</span>)</span><br><span class=\"line\">    <span class=\"keyword\">const</span> konohaToken = <span class=\"title function_\">ref</span>(<span class=\"variable language_\">localStorage</span>.<span class=\"title function_\">getItem</span>(<span class=\"string\">\"konohaToken\"</span>) || <span class=\"string\">\"\"</span>)</span><br><span class=\"line\">    <span class=\"keyword\">function</span> <span class=\"title function_\">Login</span>(<span class=\"params\"><span class=\"attr\">loginResult</span>: <span class=\"title class_\">LoginResult</span></span>) {</span><br><span class=\"line\">        userid.<span class=\"property\">value</span> = loginResult.<span class=\"property\">user_id</span></span><br><span class=\"line\">        username.<span class=\"property\">value</span> = loginResult.<span class=\"property\">username</span></span><br><span class=\"line\">        publicKey.<span class=\"property\">value</span> = loginResult.<span class=\"property\">publicKey</span></span><br><span class=\"line\">        konohaToken.<span class=\"property\">value</span> = loginResult.<span class=\"property\">konohaToken</span></span><br><span class=\"line\">    }</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> { userid, username, publicKey, konohaToken, <span class=\"title class_\">Login</span> }</span><br><span class=\"line\">})</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></div>\n\n<p><code>login.vue</code>中</p>\n<div class=\"highlight-container\" data-rel=\"Typescript\"><figure class=\"iseeu highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> { useLoginStore } <span class=\"keyword\">from</span> <span class=\"string\">'@/store/loginStore'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> { <span class=\"title class_\">ElMessage</span> } <span class=\"keyword\">from</span> <span class=\"string\">'element-plus'</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> loginStore = <span class=\"title function_\">useLoginStore</span>()</span><br><span class=\"line\"><span class=\"keyword\">async</span> <span class=\"keyword\">function</span> <span class=\"title function_\">Login</span>(<span class=\"params\"></span>) {</span><br><span class=\"line\">    <span class=\"keyword\">let</span> loginMessage = {</span><br><span class=\"line\">        <span class=\"attr\">user_id</span>: userid.<span class=\"property\">value</span>,</span><br><span class=\"line\">        <span class=\"attr\">password</span>: password.<span class=\"property\">value</span></span><br><span class=\"line\">    }</span><br><span class=\"line\">    <span class=\"keyword\">try</span> {</span><br><span class=\"line\">        <span class=\"keyword\">const</span> response = <span class=\"keyword\">await</span> axios.<span class=\"title function_\">post</span>(<span class=\"string\">'http://localhost:8080/login'</span>, loginMessage);</span><br><span class=\"line\">        <span class=\"comment\">// console.log(loginMessage)</span></span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">'send successful:'</span>, response.<span class=\"property\">data</span>.<span class=\"property\">data</span>);</span><br><span class=\"line\">        <span class=\"keyword\">switch</span> (response.<span class=\"property\">data</span>.<span class=\"property\">code</span>) {</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"number\">200</span>:</span><br><span class=\"line\">                <span class=\"comment\">// 登录成功后的处理</span></span><br><span class=\"line\">                loginStore.<span class=\"title class_\">Login</span>(response.<span class=\"property\">data</span>.<span class=\"property\">data</span>)</span><br><span class=\"line\">                loginStore.$subscribe(<span class=\"function\">(<span class=\"params\">mutate, state</span>) =&gt;</span> {</span><br><span class=\"line\">                    <span class=\"comment\">//mutate表示发生变化的内容，同时更新浏览器存储</span></span><br><span class=\"line\">                    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">'loginStore内的数据发生了变化'</span>, mutate, state)</span><br><span class=\"line\">                    <span class=\"variable language_\">localStorage</span>.<span class=\"title function_\">setItem</span>(<span class=\"string\">'userid'</span>, state.<span class=\"property\">userid</span>)</span><br><span class=\"line\">                    <span class=\"variable language_\">localStorage</span>.<span class=\"title function_\">setItem</span>(<span class=\"string\">'username'</span>, state.<span class=\"property\">username</span>)</span><br><span class=\"line\">                    <span class=\"variable language_\">localStorage</span>.<span class=\"title function_\">setItem</span>(<span class=\"string\">'publicKey'</span>, state.<span class=\"property\">publicKey</span>)</span><br><span class=\"line\">                    <span class=\"variable language_\">localStorage</span>.<span class=\"title function_\">setItem</span>(<span class=\"string\">'konohaToken'</span>, state.<span class=\"property\">konohaToken</span>)</span><br><span class=\"line\">                })</span><br><span class=\"line\">                <span class=\"title class_\">ElMessage</span>({</span><br><span class=\"line\">                    <span class=\"attr\">message</span>: response.<span class=\"property\">data</span>.<span class=\"property\">msg</span>,</span><br><span class=\"line\">                    <span class=\"attr\">type</span>: <span class=\"string\">'success'</span>,</span><br><span class=\"line\">                })</span><br><span class=\"line\">                <span class=\"keyword\">break</span></span><br><span class=\"line\">            <span class=\"attr\">default</span>:</span><br><span class=\"line\">                <span class=\"comment\">//登陆失败或者异常时的处理</span></span><br><span class=\"line\">                <span class=\"title class_\">ElMessage</span>({</span><br><span class=\"line\">                    <span class=\"attr\">message</span>: response.<span class=\"property\">data</span>.<span class=\"property\">msg</span>,</span><br><span class=\"line\">                    <span class=\"attr\">type</span>: <span class=\"string\">'error'</span>,</span><br><span class=\"line\">                })</span><br><span class=\"line\">                <span class=\"comment\">//同时清空输入框，这里可以说是非常简单粗暴了</span></span><br><span class=\"line\">                userid.<span class=\"property\">value</span> =<span class=\"string\">''</span></span><br><span class=\"line\">                password.<span class=\"property\">value</span> = <span class=\"string\">''</span></span><br><span class=\"line\">                <span class=\"keyword\">break</span></span><br><span class=\"line\">        }</span><br><span class=\"line\">    } <span class=\"keyword\">catch</span> (error) {</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">error</span>(<span class=\"string\">'Login failed:'</span>, error);</span><br><span class=\"line\">        <span class=\"comment\">// 登录失败的处理</span></span><br><span class=\"line\">    }</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure></div>\n\n<p>P.S <code>get</code>请求要写完整，最后的斜杠不能少</p>\n<div class=\"highlight-container\" data-rel=\"Typescript\"><figure class=\"iseeu highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> response = <span class=\"keyword\">await</span> axios.<span class=\"title function_\">get</span>(<span class=\"string\">\"http://localhost:8080/showclaims/\"</span>)</span><br></pre></td></tr></table></figure></div>\n\n\n\n","more":"<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>因为我是先前并没有接触Vue3，因此这份笔记很基础很基础，尽量都写成傻瓜式的了，当然也有可能有些地方写的不是很清楚，毕竟最初的目的就是为了写给我自己看的，至于之后会不会再深入学习Typescript和Javascript，这谁又晓得呢？反正我修燃气用是不上这个。</p>\n<h2 id=\"工具包\"><a href=\"#工具包\" class=\"headerlink\" title=\"工具包\"></a>工具包</h2><p>课程链接：【尚硅谷Vue3入门到实战，最新版vue3+TypeScript前端开发教程】 <a class=\"link\" href=\"https://www.bilibili.com/video/BV1Za4y1r7KE/?share_source=copy_web&vd_source=d4c8e690ada3240d323ff6b395a76451\">https://www.bilibili.com/video/BV1Za4y1r7KE/?share_source=copy_web&amp;vd_source=d4c8e690ada3240d323ff6b395a76451 <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a></p>\n<h2 id=\"Vue3简介\"><a href=\"#Vue3简介\" class=\"headerlink\" title=\"Vue3简介\"></a>Vue3简介</h2><p>Vue3，截止至2023年10月，最新公开版本为3.3.4</p>\n<h2 id=\"Vue创建工程\"><a href=\"#Vue创建工程\" class=\"headerlink\" title=\"Vue创建工程\"></a>Vue创建工程</h2><h3 id=\"基于vite创建\"><a href=\"#基于vite创建\" class=\"headerlink\" title=\"基于vite创建\"></a>基于vite创建</h3><p>新的前端构建工具，特点如下：</p>\n<blockquote>\n<ul>\n<li>热重载</li>\n<li>对<code>TS</code>、<code>JSX</code>、<code>CSS</code>支持开箱即用</li>\n<li>按需编译</li>\n</ul>\n</blockquote>\n<p>webpack与vite构建对比图如下：</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/Vue3_note/image-20240105103235439.png\" alt=\"image-20240105103235439\">\n\n<p>终端创建指令：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm create vue@latest</span><br></pre></td></tr></table></figure>\n\n<p><img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/Vue3_note/image-20240423215020646.png\" alt=\"image-20240423215020646\"></p>\n<p><img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/Vue3_note/image-20240105104452696.png\" alt=\"image-20240105104452696\"></p>\n<h3 id=\"工作目录介绍\"><a href=\"#工作目录介绍\" class=\"headerlink\" title=\"工作目录介绍\"></a>工作目录介绍</h3><ul>\n<li>/<strong>public</strong><br>  用于存放网页顶端的图标</li>\n</ul>\n<p><img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/Vue3_note/image-20240105104835729.png\" alt=\"image-20240105104835729\"></p>\n<ul>\n<li><p>/<strong>src</strong><br>  工作目录</p>\n</li>\n<li><p>/<strong>node_modules</strong></p>\n<p>  执行<code>npm i</code>，下载依赖，会生成<code>node_modules</code>这个文件夹<br>  作用：写了前端常用文件（如.jpg,.txt）等等，再通过<code>env.d.ts</code>中的以下代码告诉Vue</p>\n</li>\n</ul>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/// &lt;reference types=\"vite/client\" /&gt;</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><p><strong>/index.html</strong><br>  入口文件</p>\n</li>\n<li><p>/<strong>package.json</strong><br>  包的声明文件</p>\n</li>\n<li><p>/<strong>vite.config.ts</strong><br>  工程的配置文件，配置插件等等</p>\n</li>\n<li><p><strong>/src/components</strong><br>  用于存放组件</p>\n</li>\n</ul>\n<p><img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/Vue3_note/image-20240105120758018.png\" alt=\"image-20240105120758018\"></p>\n<h2 id=\"编写一个App组件\"><a href=\"#编写一个App组件\" class=\"headerlink\" title=\"编写一个App组件\"></a>编写一个App组件</h2><p>在main.ts中</p>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">'./assets/main.css'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> { createApp } <span class=\"keyword\">from</span> <span class=\"string\">'vue'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">App</span> <span class=\"keyword\">from</span> <span class=\"string\">'./App.vue'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_\">createApp</span>(<span class=\"title class_\">App</span>).<span class=\"title function_\">mount</span>(<span class=\"string\">'#app'</span>)</span><br></pre></td></tr></table></figure>\n\n<p><code>createApp</code>:一个用于“造花盆”的方法</p>\n<p><code>App</code>：从<code>App.vue</code>中引用，是一个根组件，可以看作是一朵花，包括之后写的<code>A.vue</code>、<code>B.vue</code>，其实都是安装在根组件上的组件，类似“花上的叶子”，它们直接或间接下载在<code>App.vue</code>上</p>\n<p><code>createApp(App).mount('#app')</code>：将app传入<code>createApp()</code>中，创建一个名叫App的互联网应用，并且它的根组件叫<code>App</code>；<code>mount</code>：挂载，将App摆在名为app的容器中。</p>\n<p>vue组件中，包含以下内容</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">    &lt;!-- html --&gt;</span><br><span class=\"line\">    &lt;div class=\"app\"&gt;</span><br><span class=\"line\">        &lt;hl&gt;你好&lt;/hl&gt;</span><br><span class=\"line\">    &lt;/div&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\">&lt;script lang=\"ts\"&gt;</span><br><span class=\"line\">//  JS或者TS</span><br><span class=\"line\">export default{</span><br><span class=\"line\">    name:'App' //组件名</span><br><span class=\"line\">}</span><br><span class=\"line\">&lt;/script&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;style&gt;</span><br><span class=\"line\">/* 样式 */</span><br><span class=\"line\">.app{</span><br><span class=\"line\">    background-color: #ddd;</span><br><span class=\"line\">    box-shadow: 0 0 10px;</span><br><span class=\"line\">    border-radius: 10px;</span><br><span class=\"line\">    padding: 20px;</span><br><span class=\"line\">}</span><br><span class=\"line\">&lt;/style&gt;</span><br></pre></td></tr></table></figure>\n\n<p>之后运行 <code>npm run dev</code>，<code>在 Local:   http://localhost:5173/</code>中查看</p>\n<p><img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/Vue3_note/image-20240105155229131.png\" alt=\"image-20240105155229131\"></p>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><ul>\n<li><code>vite</code>项目中，<code>index.html</code>是项目的入口文件，在项目最外层</li>\n<li>加载<code>index.html</code>后，<code>vite</code>会解析<code>&lt;script type=\"module\" src=\"/src/main.ts\"&gt;&lt;/script&gt;</code>指向的js</li>\n<li>vue3是通过createApp的函数创建一个应用实例</li>\n</ul>\n<h2 id=\"OptionAPI\"><a href=\"#OptionAPI\" class=\"headerlink\" title=\"OptionAPI\"></a>OptionAPI</h2><p>这是Vue2的语法</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- Vue2 写法--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- html --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"person\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>姓名:{{ name }}<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>年龄:{{ age }}<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">\"changeName\"</span>&gt;</span>修改名字<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">\"changeAge\"</span>&gt;</span>修改年龄<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">\"showTel\"</span>&gt;</span>联系方式<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">lang</span>=<span class=\"string\">\"ts\"</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> {</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"attr\">name</span>: <span class=\"string\">'Person'</span>,<span class=\"comment\">//组件名</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"title function_\">data</span>(<span class=\"params\"></span>) {</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">return</span> {</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"attr\">name</span>: <span class=\"string\">'张三'</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"attr\">age</span>: <span class=\"number\">18</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"attr\">tel</span>: <span class=\"string\">'18019328622'</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        }</span></span><br><span class=\"line\"><span class=\"language-javascript\">    },</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"attr\">methods</span>: {</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"title function_\">showTel</span>(<span class=\"params\"></span>) {</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"title function_\">alert</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">tel</span>)</span></span><br><span class=\"line\"><span class=\"language-javascript\">        },</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"title function_\">changeName</span>(<span class=\"params\"></span>) {</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"variable language_\">this</span>.<span class=\"property\">name</span> = <span class=\"string\">'李四'</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        },</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"title function_\">changeAge</span>(<span class=\"params\"></span>) {</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"variable language_\">this</span>.<span class=\"property\">age</span> += <span class=\"number\">1</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        }</span></span><br><span class=\"line\"><span class=\"language-javascript\">    }</span></span><br><span class=\"line\"><span class=\"language-javascript\">}</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>在’枝干组件’<code>App.vue</code>中导入并引用</p>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">Person</span> <span class=\"keyword\">from</span> <span class=\"string\">'./components/Person.vue'</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> {</span><br><span class=\"line\">    <span class=\"attr\">name</span>: <span class=\"string\">'App'</span>,<span class=\"comment\">//组件名</span></span><br><span class=\"line\">    <span class=\"attr\">components</span>: { <span class=\"title class_\">Person</span> }<span class=\"comment\">//注册组件</span></span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- html --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"app\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">hl</span>&gt;</span>你好啊！<span class=\"tag\">&lt;/<span class=\"name\">hl</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">Person</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>效果如下</p>\n<p><img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/Vue3_note/image-20240108173531398.png\" alt=\"image-20240108173531398\"></p>\n<h3 id=\"弊端\"><a href=\"#弊端\" class=\"headerlink\" title=\"弊端\"></a>弊端</h3><p>optionAPI的语法弊端不难看出，数据、方法、计算属性都是分散在data、methods、computed中，想要新增功能就需要对上述进行修改，这显然是不便于维护和复用的。</p>\n<h2 id=\"compositionAPI\"><a href=\"#compositionAPI\" class=\"headerlink\" title=\"compositionAPI\"></a>compositionAPI</h2><h3 id=\"setup概述\"><a href=\"#setup概述\" class=\"headerlink\" title=\"setup概述\"></a>setup概述</h3><p>与optionalAPI不同，compositionAPI将组件的数据、方法、计算属性集中在一个名为setup()的方法中，写法如下：</p>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script lang=<span class=\"string\">\"ts\"</span>&gt;</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> {</span><br><span class=\"line\">    <span class=\"attr\">name</span>: <span class=\"string\">'Person'</span>,<span class=\"comment\">//组件名</span></span><br><span class=\"line\">    <span class=\"title function_\">setup</span>(<span class=\"params\"></span>) {</span><br><span class=\"line\">        <span class=\"comment\">//setup中的this是undefined，vue3中已经开始弱化this了</span></span><br><span class=\"line\">        <span class=\"comment\">//数据</span></span><br><span class=\"line\">        <span class=\"comment\">//此时的name，age，tel不是响应式的</span></span><br><span class=\"line\">        <span class=\"keyword\">let</span> name = <span class=\"string\">'张三'</span></span><br><span class=\"line\">        <span class=\"keyword\">let</span> age = <span class=\"number\">18</span></span><br><span class=\"line\">        <span class=\"keyword\">let</span> tel = <span class=\"string\">'18019328622'</span></span><br><span class=\"line\">        <span class=\"comment\">//方法</span></span><br><span class=\"line\">        <span class=\"keyword\">function</span> <span class=\"title function_\">changeName</span>(<span class=\"params\"></span>) {</span><br><span class=\"line\">            name = <span class=\"string\">'李四'</span>  <span class=\"comment\">//name确实修改了，但不是响应式的</span></span><br><span class=\"line\">        }</span><br><span class=\"line\">        <span class=\"keyword\">function</span> <span class=\"title function_\">changeAge</span>(<span class=\"params\"></span>) {</span><br><span class=\"line\">            age += <span class=\"number\">1</span></span><br><span class=\"line\">        }</span><br><span class=\"line\">        <span class=\"keyword\">function</span> <span class=\"title function_\">showTel</span>(<span class=\"params\"></span>) {</span><br><span class=\"line\">            <span class=\"title function_\">alert</span>(tel)</span><br><span class=\"line\">        }</span><br><span class=\"line\">        <span class=\"comment\">//必须要给予一个返回值，否则外部接收不到这些数据</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> { name, age, changeName, changeAge, showTel }</span><br><span class=\"line\">    }</span><br><span class=\"line\">}</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n\n<p>值得一提的是，vue2中的选项式语法和vue3中的新语法是可以同时出现的，并且由于setup的执行优先级高于optionalAPI中的内容，这导致optinalAPI中的内容可以访问到setup中的数据变量，但setup不能访问到optionalAPI中的数据变量，用例如下：</p>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script lang=<span class=\"string\">\"ts\"</span>&gt;</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> {</span><br><span class=\"line\">    <span class=\"attr\">name</span>: <span class=\"string\">'Person'</span>,<span class=\"comment\">//组件名</span></span><br><span class=\"line\">    <span class=\"title function_\">beforeCreate</span>(<span class=\"params\"></span>) {</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">'beforeCreate'</span>)</span><br><span class=\"line\">    },</span><br><span class=\"line\">    <span class=\"title function_\">data</span>(<span class=\"params\"></span>) {</span><br><span class=\"line\">        <span class=\"keyword\">return</span> {</span><br><span class=\"line\">            <span class=\"attr\">a</span>: <span class=\"variable language_\">this</span>.<span class=\"property\">name</span></span><br><span class=\"line\">        }</span><br><span class=\"line\">    },</span><br><span class=\"line\">    <span class=\"title function_\">setup</span>(<span class=\"params\"></span>) {</span><br><span class=\"line\">        <span class=\"comment\">//setup中的this是undefined，vue3中已经开始弱化this了</span></span><br><span class=\"line\">        <span class=\"comment\">//数据</span></span><br><span class=\"line\">        <span class=\"comment\">//此时的name，age，tel不是响应式的</span></span><br><span class=\"line\">        <span class=\"keyword\">let</span> name = <span class=\"string\">'张三'</span></span><br><span class=\"line\">        <span class=\"keyword\">let</span> age = <span class=\"number\">18</span></span><br><span class=\"line\">        <span class=\"keyword\">let</span> tel = <span class=\"string\">'18019328622'</span></span><br><span class=\"line\">        <span class=\"comment\">//方法</span></span><br><span class=\"line\">        <span class=\"keyword\">function</span> <span class=\"title function_\">changeName</span>(<span class=\"params\"></span>) {</span><br><span class=\"line\">            name = <span class=\"string\">'李四'</span>  <span class=\"comment\">//name确实修改了，但不是响应式的</span></span><br><span class=\"line\">        }</span><br><span class=\"line\">        <span class=\"keyword\">function</span> <span class=\"title function_\">changeAge</span>(<span class=\"params\"></span>) {</span><br><span class=\"line\">            age += <span class=\"number\">1</span></span><br><span class=\"line\">        }</span><br><span class=\"line\">        <span class=\"keyword\">function</span> <span class=\"title function_\">showTel</span>(<span class=\"params\"></span>) {</span><br><span class=\"line\">            <span class=\"title function_\">alert</span>(tel)</span><br><span class=\"line\">        }</span><br><span class=\"line\">        <span class=\"keyword\">return</span> { name, age, changeName, changeAge, showTel }</span><br><span class=\"line\">    }</span><br><span class=\"line\">}</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n\n<p><img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/Vue3_note/image-20240108233851273.png\" alt=\"image-20240108233851273\"></p>\n<h3 id=\"setup的语法糖\"><a href=\"#setup的语法糖\" class=\"headerlink\" title=\"setup的语法糖\"></a>setup的语法糖</h3><figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script lang=<span class=\"string\">\"ts\"</span>&gt;</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> {</span><br><span class=\"line\">    <span class=\"attr\">name</span>: <span class=\"string\">'Person'</span>,<span class=\"comment\">//组件名</span></span><br><span class=\"line\">}</span><br><span class=\"line\">&lt;/script&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">lang</span>=<span class=\"string\">\"ts\"</span> <span class=\"attr\">setup</span>&gt;</span><span class=\"language-javascript\"></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\"><span class=\"keyword\">let</span> name = <span class=\"string\">'张三'</span></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\"><span class=\"keyword\">let</span> age = <span class=\"number\">18</span></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\"><span class=\"keyword\">let</span> tel = <span class=\"string\">'18019328622'</span></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\"><span class=\"comment\">//方法</span></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\"><span class=\"keyword\">function</span> <span class=\"title function_\">changeName</span>(<span class=\"params\"></span>) {</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    name = <span class=\"string\">'李四'</span>  <span class=\"comment\">//name确实修改了，但不是响应式的</span></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">}</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\"><span class=\"keyword\">function</span> <span class=\"title function_\">changeAge</span>(<span class=\"params\"></span>) {</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    age += <span class=\"number\">1</span></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">}</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\"><span class=\"keyword\">function</span> <span class=\"title function_\">showTel</span>(<span class=\"params\"></span>) {</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    <span class=\"title function_\">alert</span>(tel)</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">}</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n\n<p>像这样编写可以不用写setup的返回值</p>\n<h4 id=\"插件配置方法\"><a href=\"#插件配置方法\" class=\"headerlink\" title=\"插件配置方法\"></a>插件配置方法</h4><p>如果想将上述合二为一，可以下载插件，指令 <code>npm i vite-plugin-vue-setup-extend -D</code></p>\n<p>在<code>vite.config.ts</code>中进行配置插件，<strong>其他插件方法也是类似</strong></p>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"keyword\">import</span> <span class=\"title class_\">VueSetupExtend</span> <span class=\"keyword\">from</span> <span class=\"string\">'vite-plugin-vue-setup-extend'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// https://vitejs.dev/config/</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"title function_\">defineConfig</span>({</span><br><span class=\"line\">  <span class=\"attr\">plugins</span>: [</span><br><span class=\"line\">    <span class=\"title function_\">vue</span>(),</span><br><span class=\"line\">    <span class=\"title class_\">VueSetupExtend</span>()</span><br><span class=\"line\">  ],</span><br><span class=\"line\">  <span class=\"attr\">resolve</span>: {</span><br><span class=\"line\">    <span class=\"attr\">alias</span>: {</span><br><span class=\"line\">      <span class=\"string\">'@'</span>: <span class=\"title function_\">fileURLToPath</span>(<span class=\"keyword\">new</span> <span class=\"title function_\">URL</span>(<span class=\"string\">'./src'</span>, <span class=\"keyword\">import</span>.<span class=\"property\">meta</span>.<span class=\"property\">url</span>))</span><br><span class=\"line\">    }</span><br><span class=\"line\">  }</span><br><span class=\"line\">})</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>最后对上述两个script合二为一</p>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script lang=<span class=\"string\">\"ts\"</span> setup name=<span class=\"string\">\"Person123\"</span>&gt;</span><br><span class=\"line\"><span class=\"keyword\">let</span> name = <span class=\"string\">'张三'</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> age = <span class=\"number\">18</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> tel = <span class=\"string\">'18019328622'</span></span><br><span class=\"line\"><span class=\"comment\">//方法</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">changeName</span>(<span class=\"params\"></span>) {</span><br><span class=\"line\">    name = <span class=\"string\">'李四'</span>  <span class=\"comment\">//name确实修改了，但不是响应式的</span></span><br><span class=\"line\">}</span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">changeAge</span>(<span class=\"params\"></span>) {</span><br><span class=\"line\">    age += <span class=\"number\">1</span></span><br><span class=\"line\">}</span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">showTel</span>(<span class=\"params\"></span>) {</span><br><span class=\"line\">    <span class=\"title function_\">alert</span>(tel)</span><br><span class=\"line\">}</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n\n<p>效果如下：</p>\n<p><img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/Vue3_note/image-20240109132721613.png\" alt=\"image-20240109132721613\"></p>\n<h2 id=\"响应式\"><a href=\"#响应式\" class=\"headerlink\" title=\"响应式\"></a>响应式</h2><p>响应式:能够实时变化的数据</p>\n<h3 id=\"响应式数据\"><a href=\"#响应式数据\" class=\"headerlink\" title=\"响应式数据\"></a>响应式数据</h3><figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//引用</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> { ref } <span class=\"keyword\">from</span> <span class=\"string\">'vue'</span></span><br><span class=\"line\"><span class=\"comment\">//包裹</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> name = <span class=\"title function_\">ref</span>(<span class=\"string\">'张三'</span>)</span><br><span class=\"line\"><span class=\"keyword\">let</span> age = <span class=\"title function_\">ref</span>(<span class=\"number\">18</span>)</span><br><span class=\"line\"><span class=\"keyword\">let</span> tel = <span class=\"string\">'18019328622'</span></span><br><span class=\"line\"><span class=\"comment\">//方法</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">changeName</span>(<span class=\"params\"></span>) {</span><br><span class=\"line\">    name.<span class=\"property\">value</span> = <span class=\"string\">'李四'</span></span><br><span class=\"line\">}</span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">changeAge</span>(<span class=\"params\"></span>) {</span><br><span class=\"line\">    age.<span class=\"property\">value</span> += <span class=\"number\">1</span></span><br><span class=\"line\">}</span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">showTel</span>(<span class=\"params\"></span>) {</span><br><span class=\"line\">    <span class=\"title function_\">alert</span>(tel)</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>觉得频繁写.value很麻烦？不妨试试volar</p>\n<img src=\"/img/Vue3_note/image-20240128222423403.png\" align=\"left\">\n</blockquote>\n<h3 id=\"响应式对象\"><a href=\"#响应式对象\" class=\"headerlink\" title=\"响应式对象\"></a>响应式对象</h3><p>响应式对象:被<code>reactive</code>包裹过后的对象</p>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> {reactive} <span class=\"keyword\">from</span> <span class=\"string\">'vue'</span></span><br><span class=\"line\">    <span class=\"comment\">//data</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> car = <span class=\"title function_\">reactive</span>({ <span class=\"attr\">brand</span>: <span class=\"string\">'奔驰'</span>, <span class=\"attr\">price</span>: <span class=\"number\">100</span> })</span><br><span class=\"line\">    <span class=\"keyword\">let</span> games = <span class=\"title function_\">reactive</span>([</span><br><span class=\"line\">        {<span class=\"attr\">id</span>:<span class=\"string\">'0000001'</span>,<span class=\"attr\">name</span>:<span class=\"string\">'AAA1'</span>},</span><br><span class=\"line\">        {<span class=\"attr\">id</span>:<span class=\"string\">'0000001'</span>,<span class=\"attr\">name</span>:<span class=\"string\">'AAA1'</span>},</span><br><span class=\"line\">        {<span class=\"attr\">id</span>:<span class=\"string\">'0000001'</span>,<span class=\"attr\">name</span>:<span class=\"string\">'AAA1'</span>}</span><br><span class=\"line\">    ])</span><br><span class=\"line\">    <span class=\"keyword\">let</span> obj =<span class=\"title function_\">reactive</span>({</span><br><span class=\"line\">        <span class=\"attr\">a</span>:{</span><br><span class=\"line\">            <span class=\"attr\">b</span>:{</span><br><span class=\"line\">                <span class=\"attr\">c</span>:<span class=\"number\">666</span></span><br><span class=\"line\">            }</span><br><span class=\"line\">        }</span><br><span class=\"line\">    })</span><br><span class=\"line\">    <span class=\"keyword\">function</span> <span class=\"title function_\">changePrice</span>(<span class=\"params\"></span>){</span><br><span class=\"line\">        car.<span class=\"property\">price</span> +=<span class=\"number\">10</span></span><br><span class=\"line\">    }</span><br><span class=\"line\">    <span class=\"keyword\">function</span> <span class=\"title function_\">changeName</span>(<span class=\"params\"></span>){</span><br><span class=\"line\">        games[<span class=\"number\">0</span>].<span class=\"property\">name</span> = <span class=\"string\">'BBB1'</span></span><br><span class=\"line\">    }</span><br><span class=\"line\">    <span class=\"keyword\">function</span> <span class=\"title function_\">changeObj</span>(<span class=\"params\"></span>){</span><br><span class=\"line\">        obj.<span class=\"property\">a</span>.<span class=\"property\">b</span>.<span class=\"property\">c</span> = <span class=\"number\">999</span></span><br><span class=\"line\">    }</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"使用ref定义对象类型的响应数据\"><a href=\"#使用ref定义对象类型的响应数据\" class=\"headerlink\" title=\"使用ref定义对象类型的响应数据\"></a>使用ref定义对象类型的响应数据</h3><figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> { ref } <span class=\"keyword\">from</span> <span class=\"string\">'vue'</span></span><br><span class=\"line\"><span class=\"comment\">//data</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> car = <span class=\"title function_\">ref</span>({ <span class=\"attr\">brand</span>: <span class=\"string\">'奔驰'</span>, <span class=\"attr\">price</span>: <span class=\"number\">100</span> })</span><br><span class=\"line\"><span class=\"keyword\">let</span> games = <span class=\"title function_\">ref</span>([</span><br><span class=\"line\">    { <span class=\"attr\">id</span>: <span class=\"string\">'0000001'</span>, <span class=\"attr\">name</span>: <span class=\"string\">'AAA1'</span> },</span><br><span class=\"line\">    { <span class=\"attr\">id</span>: <span class=\"string\">'0000001'</span>, <span class=\"attr\">name</span>: <span class=\"string\">'AAA1'</span> },</span><br><span class=\"line\">    { <span class=\"attr\">id</span>: <span class=\"string\">'0000001'</span>, <span class=\"attr\">name</span>: <span class=\"string\">'AAA1'</span> }</span><br><span class=\"line\">])</span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">changePrice</span>(<span class=\"params\"></span>) {</span><br><span class=\"line\">    car.<span class=\"property\">value</span>.<span class=\"property\">price</span> += <span class=\"number\">10</span></span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(car.<span class=\"property\">value</span>.<span class=\"property\">price</span>)</span><br><span class=\"line\">}</span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">changeName</span>(<span class=\"params\"></span>) {</span><br><span class=\"line\">    games.<span class=\"property\">value</span>[<span class=\"number\">0</span>].<span class=\"property\">name</span> = <span class=\"string\">'BBB1'</span></span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure>\n\n<p>结果：</p>\n<p><img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/Vue3_note/image-20240128220343854.png\" alt=\"image-20240128220343854\"></p>\n<p>可以看出表面是<code>ref</code>包裹的对象，但是实际还是使用<code>reactive</code>包裹实现的</p>\n<h3 id=\"ref和reactive的区别\"><a href=\"#ref和reactive的区别\" class=\"headerlink\" title=\"ref和reactive的区别\"></a>ref和reactive的区别</h3><table>\n<thead>\n<tr>\n<th align=\"center\">名称</th>\n<th align=\"center\">可以定义</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">ref</td>\n<td align=\"center\">基本类型、对象类型的响应式数据[层级不深]</td>\n</tr>\n<tr>\n<td align=\"center\">reactive</td>\n<td align=\"center\">可以定义：对象类型的响应式数据[层级深] <br>重新分配会丢失响应式的属性<a href=\"%E5%AF%B9%E5%B7%B2%E7%BB%8F%E7%94%A8%60reactive%60%E5%88%86%E9%85%8D%E5%A5%BD%E7%9A%84%E5%93%8D%E5%BA%94%E5%BC%8F%E5%AF%B9%E8%B1%A1%EF%BC%8C%E9%87%8D%E6%96%B0%E8%A6%86%E5%86%99%E4%B8%80%E4%B8%AA%E5%AF%B9%E8%B1%A1%E4%BC%9A%E4%BD%BF%E6%96%B0%E7%9A%84%E5%AF%B9%E8%B1%A1%E5%A4%B1%E5%8E%BB%E5%93%8D%E5%BA%94%E5%BC%8F\">^1</a></td>\n</tr>\n</tbody></table>\n<blockquote>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> { ref } <span class=\"keyword\">from</span> <span class=\"string\">'vue'</span></span><br><span class=\"line\"><span class=\"comment\">//data</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> car = <span class=\"title function_\">ref</span>({ <span class=\"attr\">brand</span>: <span class=\"string\">'奔驰'</span>, <span class=\"attr\">price</span>: <span class=\"number\">100</span> })</span><br><span class=\"line\"><span class=\"comment\">//method</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">changeCar</span>(<span class=\"params\"></span>){</span><br><span class=\"line\">    car.<span class=\"property\">value</span>={<span class=\"attr\">brand</span>:<span class=\"string\">'BYD'</span>,<span class=\"attr\">price</span>:<span class=\"number\">20</span>}</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure>\n\n<p>此时一旦使用changeCar()这个方法，那么奔驰就会被BYD覆盖并且覆盖它的BYD不具备响应式</p>\n<p>可以使用Object.assign(obj1,obj2)来解决，如下：</p>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> car = <span class=\"title function_\">reactive</span>({ <span class=\"attr\">brand</span>: <span class=\"string\">'奔驰'</span>, <span class=\"attr\">price</span>: <span class=\"number\">100</span> })</span><br><span class=\"line\"><span class=\"comment\">//method</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">changeCar</span>(<span class=\"params\"></span>){</span><br><span class=\"line\">    <span class=\"title class_\">Object</span>.<span class=\"title function_\">assign</span>(car,{ <span class=\"attr\">brand</span>: <span class=\"string\">'BYD'</span>,<span class=\"attr\">price</span>: <span class=\"number\">20</span>})</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure>\n\n<p>ref不需要这么写</p>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> car = <span class=\"title function_\">ref</span>({ <span class=\"attr\">brand</span>: <span class=\"string\">'奔驰'</span>, <span class=\"attr\">price</span>: <span class=\"number\">100</span> })</span><br><span class=\"line\"><span class=\"keyword\">let</span> games = <span class=\"title function_\">ref</span>([</span><br><span class=\"line\">    { <span class=\"attr\">id</span>: <span class=\"string\">'0000001'</span>, <span class=\"attr\">name</span>: <span class=\"string\">'AAA1'</span> },</span><br><span class=\"line\">    { <span class=\"attr\">id</span>: <span class=\"string\">'0000001'</span>, <span class=\"attr\">name</span>: <span class=\"string\">'AAA1'</span> },</span><br><span class=\"line\">    { <span class=\"attr\">id</span>: <span class=\"string\">'0000001'</span>, <span class=\"attr\">name</span>: <span class=\"string\">'AAA1'</span> }</span><br><span class=\"line\">])</span><br><span class=\"line\"><span class=\"comment\">//method</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">changePrice</span>(<span class=\"params\"></span>) {</span><br><span class=\"line\">    car.<span class=\"property\">value</span>.<span class=\"property\">price</span> += <span class=\"number\">10</span></span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(car.<span class=\"property\">value</span>.<span class=\"property\">brand</span>)</span><br><span class=\"line\">}</span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">changeName</span>(<span class=\"params\"></span>) {</span><br><span class=\"line\">    games.<span class=\"property\">value</span>[<span class=\"number\">0</span>].<span class=\"property\">name</span>=<span class=\"string\">'BBB1'</span></span><br><span class=\"line\">}</span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">changeCar</span>(<span class=\"params\"></span>){</span><br><span class=\"line\">    <span class=\"comment\">// Object.assign(car,{ brand: 'BYD',price: 20})</span></span><br><span class=\"line\">    car.<span class=\"property\">value</span> = { <span class=\"attr\">brand</span>: <span class=\"string\">'BYD'</span>,<span class=\"attr\">price</span>: <span class=\"number\">20</span>}</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure>\n\n<p>原因是ref的对象覆盖是发生在car.value上的</p>\n</blockquote>\n<h3 id=\"toRefs和toRef\"><a href=\"#toRefs和toRef\" class=\"headerlink\" title=\"toRefs和toRef\"></a>toRefs和toRef</h3><figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> { ref,reactive,toRefs,toRef } <span class=\"keyword\">from</span> <span class=\"string\">'vue'</span></span><br><span class=\"line\"><span class=\"comment\">//data</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> person = <span class=\"title function_\">reactive</span>({</span><br><span class=\"line\">    <span class=\"attr\">name</span>:<span class=\"string\">\"张三\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">age</span>:<span class=\"number\">18</span></span><br><span class=\"line\">})</span><br><span class=\"line\"><span class=\"keyword\">let</span> {name,age} = <span class=\"title function_\">toRefs</span>(person)</span><br><span class=\"line\"><span class=\"keyword\">let</span> age_2 = <span class=\"title function_\">toRef</span>(person,<span class=\"string\">'age'</span>)</span><br><span class=\"line\"><span class=\"comment\">//method</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">changeName</span>(<span class=\"params\"></span>){</span><br><span class=\"line\">    name.<span class=\"property\">value</span>+=<span class=\"string\">'~'</span></span><br><span class=\"line\">}   </span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">changeAge</span>(<span class=\"params\"></span>){</span><br><span class=\"line\">    age.<span class=\"property\">value</span>+=<span class=\"number\">1</span></span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure>\n\n<p>toRefs会接收一组由reactive构成的对象，然后把对象中的每一组key,value都拎出来，形成一个新的对象（依然具备响应式的属性）;</p>\n<p>toRef只会接受由reactive构成的对象当中的一个元素</p>\n<h2 id=\"computed计算属性\"><a href=\"#computed计算属性\" class=\"headerlink\" title=\"computed计算属性\"></a>computed计算属性</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">&lt;!-- html --&gt;</span><br><span class=\"line\">&lt;div class=\"person\"&gt;</span><br><span class=\"line\">    &lt;!-- 这样↓写是单向绑定 --&gt;</span><br><span class=\"line\">    &lt;!-- 姓：&lt;input type=\"text\" :value=\"firstName\"&gt;&lt;br&gt;  --&gt;</span><br><span class=\"line\">    姓：&lt;input type=\"text\" v-model=\"firstName\"&gt;&lt;br&gt;</span><br><span class=\"line\">    名：&lt;input type=\"text\" v-model=\"lastName\"&gt;&lt;br&gt;</span><br><span class=\"line\">    全名：&lt;span&gt;{{ fullName }}&lt;/span&gt;&lt;br&gt;</span><br><span class=\"line\">    &lt;button @click=\"changeFullName\"&gt;修改全名&lt;/button&gt;</span><br><span class=\"line\">    &lt;/div&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;script lang=\"ts\" setup name=\"Person123\"&gt;</span><br><span class=\"line\">    import { ref, computed } from 'vue'</span><br><span class=\"line\">    let firstName = ref('张')</span><br><span class=\"line\">    let lastName = ref('三')</span><br><span class=\"line\">    //如此定义的计算属性是只读的</span><br><span class=\"line\">    // let fullName = computed(()=&gt;{</span><br><span class=\"line\">    //     return firstName.value.slice(0,1).toUpperCase()+firstName.value.slice(1)+'-'+lastName.value.slice(0,1).toUpperCase()+lastName.value.slice(1)</span><br><span class=\"line\">    // })</span><br><span class=\"line\">    //如此定义的计算属性可读可写</span><br><span class=\"line\">    let fullName = computed({</span><br><span class=\"line\">        get() {</span><br><span class=\"line\">            return firstName.value.slice(0, 1).toUpperCase() + firstName.value.slice(1) + '-' + lastName.value.slice(0, 1).toUpperCase() + lastName.value.slice(1)</span><br><span class=\"line\">        },</span><br><span class=\"line\">        set(val) {</span><br><span class=\"line\">            const [str1, str2] = val.split('-')</span><br><span class=\"line\">            firstName.value = str1</span><br><span class=\"line\">            lastName.value = str2</span><br><span class=\"line\">        }</span><br><span class=\"line\">    })</span><br><span class=\"line\">    //method</span><br><span class=\"line\">    function changeFullName() {</span><br><span class=\"line\">        fullName.value = 'li-si'</span><br><span class=\"line\">    }</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n\n<p>上面代码段<code>let fullName = computed({//略})</code>相比于function(){ }，具备了缓存，只有计算属性依赖的数据发生变化时才会重新计算，数据不变即便是重复调用也不会反复执行computed中的内容;</p>\n<h2 id=\"Watch监视\"><a href=\"#Watch监视\" class=\"headerlink\" title=\"Watch监视\"></a>Watch监视</h2><p>watch基本格式：</p>\n<figure class=\"highlight txt\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import { watch } from 'vue'</span><br><span class=\"line\">watch(obj,func,config) //(被监视的数据，监视的回调，监视的配置)</span><br></pre></td></tr></table></figure>\n\n<p>它能够监视：</p>\n<figure class=\"highlight txt\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">一个有返回值的函数，ref，reactive响应式对象，或者由以上组成的数组</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"监视【ref】定义的【基本类型】数据\"><a href=\"#监视【ref】定义的【基本类型】数据\" class=\"headerlink\" title=\"监视【ref】定义的【基本类型】数据\"></a>监视【ref】定义的【基本类型】数据</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">    &lt;!-- html --&gt;</span><br><span class=\"line\">    &lt;div class=\"person\"&gt;</span><br><span class=\"line\">       &lt;h1&gt;情况一，监视[ref]定义的[基本类型]数据&lt;/h1&gt;</span><br><span class=\"line\">       &lt;h2&gt;当前求和为:{{ sum }}&lt;/h2&gt;</span><br><span class=\"line\">       &lt;button @click=\"changeNum\"&gt;sum++&lt;/button&gt;</span><br><span class=\"line\">    &lt;/div&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;script lang=\"ts\" setup name=\"Person123\"&gt;</span><br><span class=\"line\">import { ref, watch } from 'vue'</span><br><span class=\"line\">//data</span><br><span class=\"line\">let sum = ref(0);</span><br><span class=\"line\">//method</span><br><span class=\"line\">function changeNum(){</span><br><span class=\"line\">    sum.value+=1;</span><br><span class=\"line\">}</span><br><span class=\"line\">watch(sum,(newValue,oldValue)=&gt;{</span><br><span class=\"line\">    console.log('sum变化了',newValue,oldValue)</span><br><span class=\"line\">})</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n\n<p>关于停止监视以及箭头函数的补充：</p>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> stopWatch =<span class=\"title function_\">watch</span>(sum,<span class=\"keyword\">function</span>(<span class=\"params\">newValue,oldValue</span>){</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">'sum变化了'</span>,newValue,oldValue)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (newValue&gt;=<span class=\"number\">10</span>){</span><br><span class=\"line\">        <span class=\"title function_\">stopWatch</span>()</span><br><span class=\"line\">    }</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span></span><br><span class=\"line\">})</span><br></pre></td></tr></table></figure>\n\n<p>箭头函数就是<strong>不需要</strong>返回值(但是可以有)的function</p>\n<h3 id=\"监视【ref】定义的【对象类型】数据\"><a href=\"#监视【ref】定义的【对象类型】数据\" class=\"headerlink\" title=\"监视【ref】定义的【对象类型】数据\"></a>监视【ref】定义的【对象类型】数据</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">    &lt;!-- html --&gt;</span><br><span class=\"line\">    &lt;div class=\"person\"&gt;</span><br><span class=\"line\">       &lt;h1&gt;情况二，监视[ref]定义的[对象类型]数据&lt;/h1&gt;</span><br><span class=\"line\">       &lt;h2&gt;姓名：{{ person.name }}&lt;/h2&gt;</span><br><span class=\"line\">       &lt;h2&gt;年龄：{{ person.age }}&lt;/h2&gt;</span><br><span class=\"line\">       &lt;br&gt;</span><br><span class=\"line\">       &lt;button @click=\"changeName\"&gt;修改名字&lt;/button&gt;</span><br><span class=\"line\">       &lt;button @click=\"changeAge\"&gt;修改年龄&lt;/button&gt;</span><br><span class=\"line\">       &lt;button @click=\"changePerson\"&gt;修改人&lt;/button&gt;</span><br><span class=\"line\">    &lt;/div&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;script lang=\"ts\" setup name=\"Person123\"&gt;</span><br><span class=\"line\">import { ref, watch } from 'vue'</span><br><span class=\"line\">//data</span><br><span class=\"line\">let person =ref({</span><br><span class=\"line\">    name:\"张三\",</span><br><span class=\"line\">    age:18,</span><br><span class=\"line\">})</span><br><span class=\"line\">//method</span><br><span class=\"line\">function changeName(){</span><br><span class=\"line\">    person.value.name+=\"~\"</span><br><span class=\"line\">}</span><br><span class=\"line\">function changeAge(){</span><br><span class=\"line\">    person.value.age+=1</span><br><span class=\"line\">}</span><br><span class=\"line\">function changePerson(){</span><br><span class=\"line\">    person.value={name:\"李四\",age:22}</span><br><span class=\"line\">}</span><br><span class=\"line\">//watch</span><br><span class=\"line\">watch(person,(newValue,oldValue)=&gt;{</span><br><span class=\"line\">    console.log('person变化了',newValue,oldValue)</span><br><span class=\"line\">},{deep:true})</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n\n<p>如上，但是和监视基础类型相比，代码变化不大</p>\n<p>注意到，ref的替换对象是新旧替换，地址发生变化</p>\n<p><img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/Vue3_note/image-20240201213743914.png\" alt=\"image-20240201213743914\"></p>\n<h3 id=\"监视【reactive】定义的【对象类型】数据\"><a href=\"#监视【reactive】定义的【对象类型】数据\" class=\"headerlink\" title=\"监视【reactive】定义的【对象类型】数据\"></a>监视【reactive】定义的【对象类型】数据</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">    &lt;!-- html --&gt;</span><br><span class=\"line\">    &lt;div class=\"person\"&gt;</span><br><span class=\"line\">       &lt;h1&gt;情况三，监视[reactive]定义的[对象类型]数据&lt;/h1&gt;</span><br><span class=\"line\">       &lt;h2&gt;姓名：{{ person.name }}&lt;/h2&gt;</span><br><span class=\"line\">       &lt;h2&gt;年龄：{{ person.age }}&lt;/h2&gt;</span><br><span class=\"line\">       &lt;br&gt;</span><br><span class=\"line\">       &lt;button @click=\"changeName\"&gt;修改名字&lt;/button&gt;</span><br><span class=\"line\">       &lt;button @click=\"changeAge\"&gt;修改年龄&lt;/button&gt;</span><br><span class=\"line\">       &lt;button @click=\"changePerson\"&gt;修改人&lt;/button&gt;</span><br><span class=\"line\">    &lt;/div&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;script lang=\"ts\" setup name=\"Person123\"&gt;</span><br><span class=\"line\">import { reactive, watch } from 'vue'</span><br><span class=\"line\">//data</span><br><span class=\"line\">let person =reactive({</span><br><span class=\"line\">    name:\"张三\",</span><br><span class=\"line\">    age:18,</span><br><span class=\"line\">})</span><br><span class=\"line\">//method</span><br><span class=\"line\">function changeName(){</span><br><span class=\"line\">    person.name+=\"~\"</span><br><span class=\"line\">}</span><br><span class=\"line\">function changeAge(){</span><br><span class=\"line\">    person.age+=1</span><br><span class=\"line\">}</span><br><span class=\"line\">function changePerson(){</span><br><span class=\"line\">    Object.assign(person,{name:\"李四\",age:22})</span><br><span class=\"line\">}</span><br><span class=\"line\">//watch</span><br><span class=\"line\">//监视reactive定义的对象，会默认开启深度监视，且无法手动关闭</span><br><span class=\"line\">watch(person,(newValue,oldValue)=&gt;{</span><br><span class=\"line\">    console.log('person变化了',newValue,oldValue)</span><br><span class=\"line\">})</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n\n<p>效果：</p>\n<p><img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/Vue3_note/image-20240201212634644.png\" alt=\"image-20240201212634644\"></p>\n<p>可以注意到reactive替换对象是值覆盖，地址没有发生变化</p>\n<h3 id=\"监视【ref】或【reactive】定义的对象当中的属性\"><a href=\"#监视【ref】或【reactive】定义的对象当中的属性\" class=\"headerlink\" title=\"监视【ref】或【reactive】定义的对象当中的属性\"></a>监视【ref】或【reactive】定义的对象当中的属性</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">    &lt;!-- html --&gt;</span><br><span class=\"line\">    &lt;div class=\"person\"&gt;</span><br><span class=\"line\">        &lt;h1&gt;情况四，监视[ref,reactive]定义的[对象类型]数据中的某个属性&lt;/h1&gt;</span><br><span class=\"line\">        &lt;h2&gt;姓名:{{ person.name}}&lt;/h2&gt;</span><br><span class=\"line\">        &lt;h2&gt;年龄:{{ person.age}}&lt;/h2&gt;</span><br><span class=\"line\">        &lt;h2&gt;汽车:{{ person.car.c1}}\\{{ person.car.c2 }}&lt;/h2&gt;</span><br><span class=\"line\">        &lt;button @click=\"changeName\"&gt;修改名字&lt;/button&gt;</span><br><span class=\"line\">        &lt;button @click=\"changeAge\"&gt;修改年龄&lt;/button&gt;</span><br><span class=\"line\">        &lt;button @click=\"changeCar1\"&gt;修改第一台车&lt;/button&gt;</span><br><span class=\"line\">        &lt;button @click=\"changeCar2\"&gt;修改第二台车&lt;/button&gt;</span><br><span class=\"line\">        &lt;button @click=\"changeCar\"&gt;修改全部车&lt;/button&gt;</span><br><span class=\"line\">    &lt;/div&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;script lang=\"ts\" setup name=\"Person123\"&gt;</span><br><span class=\"line\">import {reactive,watch} from 'vue'</span><br><span class=\"line\">//data</span><br><span class=\"line\">let person  =reactive({</span><br><span class=\"line\">    name:\"张三\",</span><br><span class=\"line\">    age:18,</span><br><span class=\"line\">    car:{</span><br><span class=\"line\">        c1:\"奔驰\",</span><br><span class=\"line\">        c2:\"宝马\",</span><br><span class=\"line\">    }</span><br><span class=\"line\">})</span><br><span class=\"line\">//method</span><br><span class=\"line\">function changeName(){</span><br><span class=\"line\">    person.name+='~'</span><br><span class=\"line\">}</span><br><span class=\"line\">function changeAge(){</span><br><span class=\"line\">    person.age+=1</span><br><span class=\"line\">}</span><br><span class=\"line\">function changeCar1(){</span><br><span class=\"line\">    person.car.c1='雅迪'</span><br><span class=\"line\">}</span><br><span class=\"line\">function changeCar2(){</span><br><span class=\"line\">    person.car.c2='爱玛'</span><br><span class=\"line\">}</span><br><span class=\"line\">function changeCar(){</span><br><span class=\"line\">    person.car={c1:'五菱',c2:'BYD'}</span><br><span class=\"line\">}</span><br><span class=\"line\">//watch</span><br><span class=\"line\">watch (()=&gt;{return person.name},(newValue,oldValue)=&gt;{</span><br><span class=\"line\">    console.log('person.name变化了',newValue,oldValue)</span><br><span class=\"line\">})</span><br><span class=\"line\">watch (()=&gt;person.car,(newValue,oldValue)=&gt;{</span><br><span class=\"line\">    console.log('person.car变化了',newValue,oldValue)</span><br><span class=\"line\">},{deep:true})</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n\n<p>监视基本类型数据的时候，需要将其写成函数式；</p>\n<p>监视对象类型的时候，<strong>最好</strong>将其写成函数式（可以不写，但是有局限性）</p>\n<h3 id=\"监视上述多个数据\"><a href=\"#监视上述多个数据\" class=\"headerlink\" title=\"监视上述多个数据\"></a>监视上述多个数据</h3><figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">watch</span> ([<span class=\"function\">()=&gt;</span>person.<span class=\"property\">name</span>,person.<span class=\"property\">car</span>],<span class=\"function\">(<span class=\"params\">newValue,oldValue</span>)=&gt;</span>{</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">'person.car变化了'</span>,newValue,oldValue)</span><br><span class=\"line\">},{<span class=\"attr\">deep</span>:<span class=\"literal\">true</span>})</span><br></pre></td></tr></table></figure>\n\n<p>拿个数组包起来就行，数组里面不一定一定要是程式，也可以是对象，看需求</p>\n<h3 id=\"watchEffect\"><a href=\"#watchEffect\" class=\"headerlink\" title=\"watchEffect\"></a>watchEffect</h3><p>watchEffect可以自动执行监听，不需要指出监听对象</p>\n<p>而watch需要指明监听对象</p>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">watchEffect</span>(<span class=\"function\">()=&gt;</span>{</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(person.<span class=\"property\">age</span>&gt;=<span class=\"number\">20</span>||其他条件){</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">\"发送请求\"</span>)</span><br><span class=\"line\">    }</span><br><span class=\"line\">})</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"ref的标签属性\"><a href=\"#ref的标签属性\" class=\"headerlink\" title=\"ref的标签属性\"></a>ref的标签属性</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!-- </span><br><span class=\"line\">Person.vue </span><br><span class=\"line\">--&gt;</span><br><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">    &lt;!-- html --&gt;</span><br><span class=\"line\">    &lt;div class=\"person\"&gt;</span><br><span class=\"line\">        &lt;h1&gt;标签的ref属性&lt;/h1&gt;</span><br><span class=\"line\">        &lt;h2 ref=\"title2\"&gt;北京&lt;/h2&gt;</span><br><span class=\"line\">        &lt;button @click=\"showlog\"&gt;点我输出&lt;/button&gt;</span><br><span class=\"line\">    &lt;/div&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;script lang=\"ts\" setup name=\"Person123\"&gt;</span><br><span class=\"line\">import {ref} from 'vue'</span><br><span class=\"line\">//data</span><br><span class=\"line\">let title2 = ref()</span><br><span class=\"line\">let a = ref(0)</span><br><span class=\"line\">let b = ref(1)</span><br><span class=\"line\">let c = ref(2)</span><br><span class=\"line\">//method</span><br><span class=\"line\">function showlog(){</span><br><span class=\"line\">    console.log(title2.value)</span><br><span class=\"line\">}</span><br><span class=\"line\">defineExpose({a,b})//穿过保护性机制让外界可以看到</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!-- </span><br><span class=\"line\">App.vue </span><br><span class=\"line\">--&gt;</span><br><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">    &lt;!-- html --&gt;</span><br><span class=\"line\">    &lt;div class=\"app\"&gt;</span><br><span class=\"line\">        &lt;button @click=\"showlog\"&gt;测试&lt;/button&gt;</span><br><span class=\"line\">        &lt;Person ref =\"ren\"/&gt;</span><br><span class=\"line\">    &lt;/div&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\">&lt;script lang=\"ts\" setup name=\"App\"&gt;</span><br><span class=\"line\">//  JS或者TS</span><br><span class=\"line\">import Person from './components/Person.vue'</span><br><span class=\"line\">import {ref} from 'vue'</span><br><span class=\"line\">//data</span><br><span class=\"line\">let ren = ref()</span><br><span class=\"line\">//method</span><br><span class=\"line\">function showlog(){</span><br><span class=\"line\">    console.log(ren.value)</span><br><span class=\"line\">}</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n\n<p>点击测试按钮，会输出<code>Person</code>的组件对象，如果没有<code>defineExpose()</code>那么输出的组件对象里是看不到<code>Person</code>组件中定义的a，b，c，这也是防止多人开发的时候，命名冲突。</p>\n<p>ref组件输出的特点一方面是收到保护性机制（这是使用id所不具备的），另一方面也是具有响应式的特性，就是可以数据变化的时候相互传递并且快速更新。</p>\n<h2 id=\"回顾TS中的接口和泛型\"><a href=\"#回顾TS中的接口和泛型\" class=\"headerlink\" title=\"回顾TS中的接口和泛型\"></a>回顾TS中的接口和泛型</h2><figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//types/index.ts</span></span><br><span class=\"line\"><span class=\"comment\">//定义一个接口用于限制person对象的具体属性</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">interface</span> <span class=\"title class_\">PersonInter</span>{</span><br><span class=\"line\">    <span class=\"attr\">id</span>:<span class=\"built_in\">string</span>,</span><br><span class=\"line\">    <span class=\"attr\">name</span>:<span class=\"built_in\">string</span>,</span><br><span class=\"line\">    <span class=\"attr\">age</span>:<span class=\"built_in\">number</span></span><br><span class=\"line\">}</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">interface</span> <span class=\"title class_\">Personouter</span>{</span><br><span class=\"line\">    <span class=\"attr\">id</span>:<span class=\"built_in\">string</span>,</span><br><span class=\"line\">    <span class=\"attr\">name</span>:<span class=\"built_in\">string</span>,</span><br><span class=\"line\">    <span class=\"attr\">age</span>:<span class=\"built_in\">number</span></span><br><span class=\"line\">}</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">type</span> <span class=\"title class_\">Persons</span> =<span class=\"title class_\">PersonInter</span>[]</span><br></pre></td></tr></table></figure>\n\n<p>可以用它来约束变量</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!-- Person.vue --&gt;</span><br><span class=\"line\">&lt;script lang=\"ts\" setup name=\"Person123\"&gt;</span><br><span class=\"line\">import { type PersonInter, type Persons } from '@/types'</span><br><span class=\"line\">let person: Persons|PersonInter = [</span><br><span class=\"line\">    { id: '123', name: \"zhangsan\", age: 60 },</span><br><span class=\"line\">    { id: '123', name: \"zhangsan\", age: 60 },</span><br><span class=\"line\">]</span><br><span class=\"line\">let person2: Persons|PersonInter|Personouter = </span><br><span class=\"line\">    { id: '123', name: \"zhangsan\", age: 60 },</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"props的使用\"><a href=\"#props的使用\" class=\"headerlink\" title=\"props的使用\"></a>props的使用</h2><p>简而言之就是<strong>爸爸给儿子传话</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!-- App.vue --&gt;</span><br><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">    &lt;!-- html --&gt;</span><br><span class=\"line\">\t&lt;!-- 爸爸给儿子传参 --&gt;</span><br><span class=\"line\">    &lt;Person  a=\"hello\" :list = \"person\"/&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\">&lt;script lang=\"ts\" setup name=\"App\"&gt;</span><br><span class=\"line\">//  JS或者TS</span><br><span class=\"line\">import Person from './components/Person.vue'</span><br><span class=\"line\">import { type PersonInter, type Personouter, type Persons } from '@/types'</span><br><span class=\"line\">import { reactive } from 'vue'</span><br><span class=\"line\">let person: Persons | PersonInter = [</span><br><span class=\"line\">    { id: '123', name: \"zhangsan\", age: 60 },</span><br><span class=\"line\">    { id: '123', name: \"zhangsan\", age: 60 },</span><br><span class=\"line\">]</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!-- Person.vue --&gt;</span><br><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">    &lt;!-- html --&gt;</span><br><span class=\"line\">    &lt;div class=\"person\"&gt;</span><br><span class=\"line\">        &lt;ul&gt;</span><br><span class=\"line\">            &lt;!-- v-for遍历 --&gt;</span><br><span class=\"line\">            &lt;li v-for=\"personObj in list\" :key=\"personObj.id\"&gt;</span><br><span class=\"line\">                {{ personObj.name }} -- {{ personObj.age }}</span><br><span class=\"line\">            &lt;/li&gt;</span><br><span class=\"line\">        &lt;/ul&gt;</span><br><span class=\"line\">    &lt;/div&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;script lang=\"ts\" setup name=\"Person123\"&gt;</span><br><span class=\"line\">import { defineProps, withDefaults } from 'vue';</span><br><span class=\"line\">import { type Persons } from '@/types';</span><br><span class=\"line\">//接收</span><br><span class=\"line\">// defineProps(['a', 'list'])</span><br><span class=\"line\"></span><br><span class=\"line\">//接收a，同时将props保存起来</span><br><span class=\"line\">// let x = defineProps(['a'])</span><br><span class=\"line\">// console.log(x.a)</span><br><span class=\"line\"></span><br><span class=\"line\">//接收加限制类型</span><br><span class=\"line\">// defineProps&lt;{ list: Persons }&gt;()</span><br><span class=\"line\"></span><br><span class=\"line\">//接收list+限制类悉尼港+限制必要性+指定默认值</span><br><span class=\"line\">//withDefaults(defineProps(),{})</span><br><span class=\"line\">withDefaults(defineProps&lt;{ list?: Persons }&gt;(), {//第二个参数只接收函数返回值类型</span><br><span class=\"line\">    list: () =&gt; [</span><br><span class=\"line\">        { id: '123', name: \"zhangsan\", age: 60 },</span><br><span class=\"line\">        { id: '123', name: \"zhangsan\", age: 60 },</span><br><span class=\"line\">    ]</span><br><span class=\"line\">})</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n\n<p>效果：</p>\n<p><img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/Vue3_note/image-20240310184451213.png\" alt=\"image-20240310184451213\"></p>\n<h2 id=\"生命周期\"><a href=\"#生命周期\" class=\"headerlink\" title=\"生命周期\"></a>生命周期</h2><p>组件的生命周期</p>\n<blockquote>\n<ul>\n<li><strong>时刻</strong>[调用特定的函数]</li>\n<li><strong>创建</strong>[setup自动执行]</li>\n<li><strong>挂载</strong>[挂载前<code>onBeforeMount()</code>，挂载完毕<code>onMounted(</code>)]</li>\n<li><strong>更新</strong>[更新前<code>onBeforeUpdate()</code>，更新完毕<code>onUpdated()</code>]</li>\n<li><strong>卸载</strong>[销毁前<code>onBeforeUnmount()</code>，销毁完毕<code>onUnmounted()</code>]</li>\n</ul>\n</blockquote>\n<p>生命周期、生命周期函数、生命周期钩子</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!-- Person.vue --&gt;</span><br><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">    &lt;!-- html --&gt;</span><br><span class=\"line\">    &lt;div class=\"person\"&gt;</span><br><span class=\"line\">        &lt;ul&gt;{{ sum }}&lt;/ul&gt;</span><br><span class=\"line\">        &lt;button @click=\"add\"&gt;点我sum+1&lt;/button&gt;</span><br><span class=\"line\">    &lt;/div&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\">&lt;!-- Person.vue --&gt;</span><br><span class=\"line\">&lt;script lang=\"ts\" setup name=\"Person123\"&gt;</span><br><span class=\"line\">import { onBeforeMount, onBeforeUnmount, onBeforeUpdate, onMounted, onUnmounted, onUpdated, ref } from \"vue\"</span><br><span class=\"line\">let sum = ref(0)</span><br><span class=\"line\">function add() {</span><br><span class=\"line\">    sum.value = sum.value + 1</span><br><span class=\"line\">}</span><br><span class=\"line\">//创建</span><br><span class=\"line\">console.log('创建')</span><br><span class=\"line\">//挂载</span><br><span class=\"line\">onBeforeMount(() =&gt; {</span><br><span class=\"line\">    console.log(\"挂载前\")</span><br><span class=\"line\">})</span><br><span class=\"line\">//挂载完毕</span><br><span class=\"line\">onMounted(() =&gt; {</span><br><span class=\"line\">    console.log(\"挂载完毕\")</span><br><span class=\"line\">})</span><br><span class=\"line\">//更新前</span><br><span class=\"line\">onBeforeUpdate(() =&gt; {</span><br><span class=\"line\">    console.log(\"更新前\")</span><br><span class=\"line\">})</span><br><span class=\"line\">//更新完毕</span><br><span class=\"line\">onUpdated(() =&gt; {</span><br><span class=\"line\">    console.log(\"更新完毕\")</span><br><span class=\"line\">})</span><br><span class=\"line\">// 卸载</span><br><span class=\"line\">onBeforeUnmount(()=&gt;{</span><br><span class=\"line\">    console.log(\"卸载前\")</span><br><span class=\"line\">})</span><br><span class=\"line\">//卸载完毕</span><br><span class=\"line\">onUnmounted(() =&gt; {</span><br><span class=\"line\">    console.log(\"卸载完毕\")</span><br><span class=\"line\">})</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n\n<p>生命周期流程图[来自官网]</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/Vue3_note/lifecycle_zh-CN.FtDDVyNA.png\" alt=\"组件生命周期图示\" style=\"zoom:50%;\">\n\n<h2 id=\"自定义hook\"><a href=\"#自定义hook\" class=\"headerlink\" title=\"自定义hook\"></a>自定义hook</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 安装axios，非必要，只是此处样例用到了</span><br><span class=\"line\">$ npm i axios</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!-- Person.vue --&gt;</span><br><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">    &lt;!-- html --&gt;</span><br><span class=\"line\">    &lt;div class=\"person\"&gt;</span><br><span class=\"line\">        &lt;h2&gt;{{ sum }}&lt;/h2&gt;</span><br><span class=\"line\">        &lt;button @click=\"add\"&gt;点我sum+1&lt;/button&gt;</span><br><span class=\"line\">        &lt;hr&gt;</span><br><span class=\"line\">        &lt;img v-for=\"(dog, index) in doglist\" :src=\"dog\" :key=\"index\"&gt;</span><br><span class=\"line\">        &lt;button @click=\"getDog\"&gt;获取dog&lt;/button&gt;</span><br><span class=\"line\">    &lt;/div&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\">&lt;!-- Person.vue --&gt;</span><br><span class=\"line\">&lt;script lang=\"ts\" setup name=\"Person123\"&gt;</span><br><span class=\"line\">import useDog from '@/hooks/useDog';</span><br><span class=\"line\">import useSum from '@/hooks/useSum';</span><br><span class=\"line\">const { sum, add } = useSum()</span><br><span class=\"line\">const { doglist, getDog } = useDog()</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n\n<p>在<code>src/hooks</code>中</p>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//useSum.ts</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> { ref } <span class=\"keyword\">from</span> <span class=\"string\">\"vue\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"keyword\">function</span> (<span class=\"params\"></span>) {</span><br><span class=\"line\">  <span class=\"keyword\">let</span> sum = <span class=\"title function_\">ref</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">  <span class=\"keyword\">function</span> <span class=\"title function_\">add</span>(<span class=\"params\"></span>) {</span><br><span class=\"line\">    sum.<span class=\"property\">value</span> = sum.<span class=\"property\">value</span> + <span class=\"number\">1</span>;</span><br><span class=\"line\">  }</span><br><span class=\"line\">  <span class=\"keyword\">return</span> { sum, add };</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//useDog.ts</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> { reactive } <span class=\"keyword\">from</span> <span class=\"string\">\"vue\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> axios <span class=\"keyword\">from</span> <span class=\"string\">\"axios\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"keyword\">function</span> (<span class=\"params\"></span>) {</span><br><span class=\"line\">  <span class=\"keyword\">let</span> doglist = <span class=\"title function_\">reactive</span>([</span><br><span class=\"line\">    <span class=\"string\">\"https://images.dog.ceo/breeds/pembroke/n02113023_4373.jpg\"</span>,</span><br><span class=\"line\">  ]);</span><br><span class=\"line\">  <span class=\"keyword\">async</span> <span class=\"keyword\">function</span> <span class=\"title function_\">getDog</span>(<span class=\"params\"></span>) {</span><br><span class=\"line\">    <span class=\"keyword\">try</span> {</span><br><span class=\"line\">      <span class=\"keyword\">let</span> result = <span class=\"keyword\">await</span> axios.<span class=\"title function_\">get</span>(</span><br><span class=\"line\">        <span class=\"string\">\"https://dog.ceo/api/breed/pembroke/images/random\"</span></span><br><span class=\"line\">      );</span><br><span class=\"line\">      doglist.<span class=\"title function_\">push</span>(result.<span class=\"property\">data</span>.<span class=\"property\">message</span>);</span><br><span class=\"line\">      <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(result.<span class=\"property\">data</span>.<span class=\"property\">message</span>);</span><br><span class=\"line\">    } <span class=\"keyword\">catch</span> (error) {</span><br><span class=\"line\">      <span class=\"title function_\">alert</span>(error);</span><br><span class=\"line\">    }</span><br><span class=\"line\">  }</span><br><span class=\"line\">  <span class=\"comment\">//向外部提供东西</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> { doglist, getDog };</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>作用是啥？vue里看着干净些吧，俺也不知道还有没有别的用途了？</p>\n<h2 id=\"路由\"><a href=\"#路由\" class=\"headerlink\" title=\"路由\"></a>路由</h2><h3 id=\"安装和使用\"><a href=\"#安装和使用\" class=\"headerlink\" title=\"安装和使用\"></a>安装和使用</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#安装vue-router最新版</span><br><span class=\"line\">$npm i vue-router</span><br></pre></td></tr></table></figure>\n\n<p>对App.vue稍作调整</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!-- </span><br><span class=\"line\">App.vue </span><br><span class=\"line\">--&gt;</span><br><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">    &lt;!-- html --&gt;</span><br><span class=\"line\">    &lt;h2&gt;Vue路由测试&lt;/h2&gt;</span><br><span class=\"line\">    &lt;!-- 导航区 --&gt;</span><br><span class=\"line\">    &lt;div class=\"navigate\"&gt;</span><br><span class=\"line\">        &lt;RouterLink to=\"/home\"&gt;首页 &lt;/RouterLink&gt;</span><br><span class=\"line\">        &lt;RouterLink to=\"/news\"&gt;新闻 &lt;/RouterLink&gt;</span><br><span class=\"line\">        &lt;RouterLink to=\"/about\"&gt;关于 &lt;/RouterLink&gt;</span><br><span class=\"line\">    &lt;/div&gt;</span><br><span class=\"line\">    &lt;hr&gt;</span><br><span class=\"line\">    &lt;!-- 展示区 --&gt;</span><br><span class=\"line\">    &lt;div class=\"main-content\" style=\"border: 1px solid red;height: 300px;width:300px\"&gt;</span><br><span class=\"line\">        &lt;RouterView&gt;&lt;/RouterView&gt;</span><br><span class=\"line\">    &lt;/div&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\">&lt;script lang=\"ts\" setup name=\"App\"&gt;</span><br><span class=\"line\">import { RouterView } from 'vue-router';</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n\n<p>配置路由配置项<code>index.ts</code></p>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//写一个路由器并暴露出去</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> { createRouter, createWebHistory } <span class=\"keyword\">from</span> <span class=\"string\">\"vue-router\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">Home</span> <span class=\"keyword\">from</span> <span class=\"string\">\"@/components/Home.vue\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">News</span> <span class=\"keyword\">from</span> <span class=\"string\">\"@/components/News.vue\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">About</span> <span class=\"keyword\">from</span> <span class=\"string\">\"@/components/About.vue\"</span>;</span><br><span class=\"line\"><span class=\"comment\">//创建路由器</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> router = <span class=\"title function_\">createRouter</span>({</span><br><span class=\"line\">  <span class=\"comment\">//路由器工作模式,很重要👇👇👇</span></span><br><span class=\"line\">  <span class=\"attr\">history</span>: <span class=\"title function_\">createWebHistory</span>(),</span><br><span class=\"line\">  <span class=\"attr\">routes</span>: [</span><br><span class=\"line\">    <span class=\"comment\">// {</span></span><br><span class=\"line\">    <span class=\"comment\">//     path:'路径',</span></span><br><span class=\"line\">    <span class=\"comment\">//     component:组件</span></span><br><span class=\"line\">    <span class=\"comment\">// }</span></span><br><span class=\"line\">    {</span><br><span class=\"line\">      <span class=\"attr\">path</span>: <span class=\"string\">\"/home\"</span>,</span><br><span class=\"line\">      <span class=\"attr\">component</span>: <span class=\"title class_\">Home</span>,</span><br><span class=\"line\">    },</span><br><span class=\"line\">    {</span><br><span class=\"line\">      <span class=\"attr\">path</span>: <span class=\"string\">\"/news\"</span>,</span><br><span class=\"line\">      <span class=\"attr\">component</span>: <span class=\"title class_\">News</span>,</span><br><span class=\"line\">    },</span><br><span class=\"line\">    {</span><br><span class=\"line\">      <span class=\"attr\">path</span>: <span class=\"string\">\"/about\"</span>,</span><br><span class=\"line\">      <span class=\"attr\">component</span>: <span class=\"title class_\">About</span>,</span><br><span class=\"line\">    },</span><br><span class=\"line\">  ],</span><br><span class=\"line\">});</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> router;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>在<code>main.ts</code>中使用路由器</p>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//引入createApp用于创建应用</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> { createApp } <span class=\"keyword\">from</span> <span class=\"string\">\"vue\"</span>;</span><br><span class=\"line\"><span class=\"comment\">//引用App根组件</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">App</span> <span class=\"keyword\">from</span> <span class=\"string\">\"./App.vue\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> router <span class=\"keyword\">from</span> <span class=\"string\">\"./router\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//创建一个应用</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> app = <span class=\"title function_\">createApp</span>(<span class=\"title class_\">App</span>);</span><br><span class=\"line\"><span class=\"comment\">//使用路由器</span></span><br><span class=\"line\">app.<span class=\"title function_\">use</span>(router);</span><br><span class=\"line\"><span class=\"comment\">//挂载整个应用到app容器中</span></span><br><span class=\"line\">app.<span class=\"title function_\">mount</span>(<span class=\"string\">\"#app\"</span>);</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>效果：</p>\n<p><img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/Vue3_note/image-20240314224306984.png\" alt=\"image-20240314224306984\"></p>\n<p>路由组件：</p>\n<p>靠路由的规则渲染出来的：</p>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">routes</span>: [</span><br><span class=\"line\">    {</span><br><span class=\"line\">        <span class=\"attr\">path</span>: <span class=\"string\">'/demo'</span>,</span><br><span class=\"line\">        <span class=\"attr\">component</span>: demo</span><br><span class=\"line\">    }</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n\n<p>一般组件：</p>\n<p>亲手写标签出来的</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">demo</span>/&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"路由器工作模式\"><a href=\"#路由器工作模式\" class=\"headerlink\" title=\"路由器工作模式\"></a>路由器工作模式</h3><h5 id=\"history模式\"><a href=\"#history模式\" class=\"headerlink\" title=\"history模式\"></a>history模式</h5><figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> router = <span class=\"title function_\">createRouter</span>({</span><br><span class=\"line\">    <span class=\"attr\">history</span>: <span class=\"title function_\">createWebHistory</span>(),</span><br><span class=\"line\">    {</span><br><span class=\"line\">    \t<span class=\"attr\">path</span>:<span class=\"variable constant_\">XXX</span>,</span><br><span class=\"line\">    \t<span class=\"attr\">component</span>:<span class=\"variable constant_\">XXX</span></span><br><span class=\"line\">\t}</span><br><span class=\"line\">})</span><br></pre></td></tr></table></figure>\n\n<p>优点：<code>URL</code>更加美观，不带有<code>#</code>，更接近传统<code>URL</code></p>\n<p>缺点：后期项目上线，需要服务端配合处理路径问题，否则刷新会有<strong>404错误</strong></p>\n<h5 id=\"hash模式\"><a href=\"#hash模式\" class=\"headerlink\" title=\"hash模式\"></a>hash模式</h5><figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> router = <span class=\"title function_\">createRouter</span>({</span><br><span class=\"line\">    <span class=\"attr\">history</span>: <span class=\"title function_\">createWebHashHistory</span>(),</span><br><span class=\"line\">    {</span><br><span class=\"line\">    \t<span class=\"attr\">path</span>:<span class=\"variable constant_\">XXX</span>,</span><br><span class=\"line\">    \t<span class=\"attr\">component</span>:<span class=\"variable constant_\">XXX</span></span><br><span class=\"line\">\t}</span><br><span class=\"line\">})</span><br></pre></td></tr></table></figure>\n\n<p>优点：兼容性好，因为不需要服务器端处理路径</p>\n<p>缺点：<code>URL</code>带有<code>#</code>不太美观，<strong>且在<code>SEO</code>优化方面相对较差</strong></p>\n<h3 id=\"命名路由\"><a href=\"#命名路由\" class=\"headerlink\" title=\"命名路由\"></a>命名路由</h3><figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">routes</span>: [</span><br><span class=\"line\">  <span class=\"comment\">// {</span></span><br><span class=\"line\">  <span class=\"comment\">//     name:'路由名'</span></span><br><span class=\"line\">  <span class=\"comment\">//     path:'路径',</span></span><br><span class=\"line\">  <span class=\"comment\">//     component:组件</span></span><br><span class=\"line\">  <span class=\"comment\">// }</span></span><br><span class=\"line\">  {</span><br><span class=\"line\">    <span class=\"attr\">name</span>: <span class=\"string\">\"HOME\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">path</span>: <span class=\"string\">\"/home\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">component</span>: <span class=\"title class_\">Home</span>,</span><br><span class=\"line\">  },</span><br><span class=\"line\">  {</span><br><span class=\"line\">    <span class=\"attr\">name</span>: <span class=\"string\">\"NEWS\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">path</span>: <span class=\"string\">\"/news\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">component</span>: <span class=\"title class_\">News</span>,</span><br><span class=\"line\">  },</span><br><span class=\"line\">  {</span><br><span class=\"line\">    <span class=\"attr\">name</span>: <span class=\"string\">\"ABOUT\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">path</span>: <span class=\"string\">\"/about\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">component</span>: <span class=\"title class_\">About</span>,</span><br><span class=\"line\">  },</span><br><span class=\"line\">],</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div class=\"navigate\"&gt;</span><br><span class=\"line\">    &lt;!--三种路由跳转方式 --&gt;</span><br><span class=\"line\">    &lt;RouterLink to=\"/home\"&gt;首页 &lt;/RouterLink&gt;</span><br><span class=\"line\">     &lt;!--注意感叹号 --&gt;</span><br><span class=\"line\">    &lt;RouterLink :to=\"{ name: 'NEWS' }\"&gt;新闻 &lt;/RouterLink&gt;</span><br><span class=\"line\">    &lt;RouterLink :to=\"{ path: '/about' }\"&gt;关于 &lt;/RouterLink&gt;</span><br><span class=\"line\">&lt;/div&gt;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"嵌套路由\"><a href=\"#嵌套路由\" class=\"headerlink\" title=\"嵌套路由\"></a>嵌套路由</h3><p>P.S 路由页面要有<code>&lt;router-view/&gt;</code>来承载</p>\n<p>子路由</p>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">routes</span>: [</span><br><span class=\"line\">  <span class=\"comment\">// {</span></span><br><span class=\"line\">  <span class=\"comment\">//   name: \"路由名\",</span></span><br><span class=\"line\">  <span class=\"comment\">//   path: \"/路径\",</span></span><br><span class=\"line\">  <span class=\"comment\">//   component: 组件名,</span></span><br><span class=\"line\">  <span class=\"comment\">//   children: [</span></span><br><span class=\"line\">  <span class=\"comment\">//     {</span></span><br><span class=\"line\">  <span class=\"comment\">//       path: \"子路由路径\",</span></span><br><span class=\"line\">  <span class=\"comment\">//       component: 子路由组件名,</span></span><br><span class=\"line\">  <span class=\"comment\">//     },</span></span><br><span class=\"line\">  <span class=\"comment\">//   ],</span></span><br><span class=\"line\">  <span class=\"comment\">// },</span></span><br><span class=\"line\">  {</span><br><span class=\"line\">    <span class=\"attr\">name</span>: <span class=\"string\">\"NEWS\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">path</span>: <span class=\"string\">\"/news\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">component</span>: <span class=\"title class_\">News</span>,</span><br><span class=\"line\">    <span class=\"attr\">children</span>: [</span><br><span class=\"line\">      {</span><br><span class=\"line\">        <span class=\"attr\">name</span>: <span class=\"string\">'Detail'</span></span><br><span class=\"line\">        <span class=\"attr\">path</span>: <span class=\"string\">'detail'</span>,</span><br><span class=\"line\">        <span class=\"attr\">component</span>: <span class=\"title class_\">Detail</span>,</span><br><span class=\"line\">      },</span><br><span class=\"line\">    ],</span><br><span class=\"line\">  },</span><br><span class=\"line\">],</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"路由传参\"><a href=\"#路由传参\" class=\"headerlink\" title=\"路由传参\"></a>路由传参</h3><h4 id=\"query\"><a href=\"#query\" class=\"headerlink\" title=\"query\"></a>query</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!-- News.vue --&gt;</span><br><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">    &lt;!-- html --&gt;</span><br><span class=\"line\">    &lt;div&gt;</span><br><span class=\"line\">        &lt;ul&gt;</span><br><span class=\"line\">            &lt;li v-for=\"news in newsList\" :key=\"news.id\"&gt;</span><br><span class=\"line\">                &lt;RouterLink :to=\"`/news/detail?id=${news.id}&amp;title=${news.title}&amp;content=${news.content}`\"&gt;{{</span><br><span class=\"line\">                news.title }}&lt;/RouterLink&gt;</span><br><span class=\"line\">            &lt;/li&gt;</span><br><span class=\"line\">        &lt;/ul&gt;</span><br><span class=\"line\">        &lt;div class=\"main-content\" style=\"border: 1px solid red;height: 300px;width:300px\"&gt;</span><br><span class=\"line\">            &lt;RouterView&gt;&lt;/RouterView&gt;</span><br><span class=\"line\">        &lt;/div&gt;</span><br><span class=\"line\">    &lt;/div&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\">&lt;script lang=\"ts\" setup name=\"News\"&gt;</span><br><span class=\"line\">import { RouterView } from 'vue-router';</span><br><span class=\"line\">import { reactive } from 'vue'</span><br><span class=\"line\">const newsList = reactive([</span><br><span class=\"line\">    { id: '021120230', title: \"基于区块链\", content: 'solidity' },</span><br><span class=\"line\">    { id: '021120231', title: \"信息管理系统\", content: 'python' }</span><br><span class=\"line\">])</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">    &lt;!-- html --&gt;</span><br><span class=\"line\">    &lt;ul&gt;</span><br><span class=\"line\">        &lt;li&gt;编号：{{ route.query.id }}&lt;/li&gt;</span><br><span class=\"line\">        &lt;li&gt;标题：{{ route.query.title }}&lt;/li&gt;</span><br><span class=\"line\">        &lt;li&gt;内容：{{ route.query.content }}&lt;/li&gt;</span><br><span class=\"line\">    &lt;/ul&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\">&lt;script lang=\"ts\" setup name=\"Detail\"&gt;</span><br><span class=\"line\">import { useRoute } from 'vue-router'</span><br><span class=\"line\">let route = useRoute()</span><br></pre></td></tr></table></figure>\n\n<p>这个不好用，看看得了</p>\n<p>下面是<strong>使用对象传参</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!-- News.vue --&gt;</span><br><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">    &lt;!-- html --&gt;</span><br><span class=\"line\">    &lt;div&gt;</span><br><span class=\"line\">        &lt;ul&gt;</span><br><span class=\"line\">            &lt;li v-for=\"news in newsList\" :key=\"news.id\"&gt;</span><br><span class=\"line\">                &lt;RouterLink :to=\"{</span><br><span class=\"line\">                name: 'Detail',</span><br><span class=\"line\">                query: {</span><br><span class=\"line\">                    id: news.id,</span><br><span class=\"line\">                    title: news.title,</span><br><span class=\"line\">                    content: news.content</span><br><span class=\"line\">                }</span><br><span class=\"line\">            }\"&gt;{{ news.title }}&lt;/RouterLink&gt;</span><br><span class=\"line\">            &lt;/li&gt;</span><br><span class=\"line\">        &lt;/ul&gt;</span><br><span class=\"line\">        &lt;div class=\"main-content\" style=\"border: 1px solid red;height: 300px;width:300px\"&gt;</span><br><span class=\"line\">            &lt;RouterView&gt;&lt;/RouterView&gt;</span><br><span class=\"line\">        &lt;/div&gt;</span><br><span class=\"line\">    &lt;/div&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\">&lt;script lang=\"ts\" setup name=\"News\"&gt;</span><br><span class=\"line\">import { RouterView } from 'vue-router';</span><br><span class=\"line\">import { reactive } from 'vue'</span><br><span class=\"line\">const newsList = reactive([</span><br><span class=\"line\">    { id: '021120230', title: \"基于区块链\", content: 'solidity' },</span><br><span class=\"line\">    { id: '021120231', title: \"信息管理系统\", content: 'python' }</span><br><span class=\"line\">])</span><br><span class=\"line\">&lt;/script&gt;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!-- detail.vue --&gt;</span><br><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">    &lt;!-- html --&gt;</span><br><span class=\"line\">    &lt;ul&gt;</span><br><span class=\"line\">        &lt;li&gt;编号：{{ query.id }}&lt;/li&gt;</span><br><span class=\"line\">        &lt;li&gt;标题：{{ query.title }}&lt;/li&gt;</span><br><span class=\"line\">        &lt;li&gt;内容：{{ query.content }}&lt;/li&gt;</span><br><span class=\"line\">    &lt;/ul&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\">&lt;script lang=\"ts\" setup name=\"Detail\"&gt;</span><br><span class=\"line\">import { toRefs } from 'vue';</span><br><span class=\"line\">import { useRoute } from 'vue-router'</span><br><span class=\"line\">let route = useRoute()</span><br><span class=\"line\">// 不使用toRefs会丢失响应式</span><br><span class=\"line\">let { query } = toRefs(route)</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"params参数\"><a href=\"#params参数\" class=\"headerlink\" title=\"params参数\"></a>params参数</h4><p>在路由规则中占位</p>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">{</span><br><span class=\"line\">  <span class=\"attr\">name</span>: <span class=\"string\">\"NEWS\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">path</span>: <span class=\"string\">\"/news\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">component</span>: <span class=\"title class_\">News</span>,</span><br><span class=\"line\">  <span class=\"attr\">children</span>: [</span><br><span class=\"line\">    {</span><br><span class=\"line\">      <span class=\"attr\">name</span>: <span class=\"string\">\"Detail\"</span>,</span><br><span class=\"line\">      <span class=\"attr\">path</span>: <span class=\"string\">\"detail/:id/:title/:content\"</span>,</span><br><span class=\"line\">      <span class=\"attr\">component</span>: <span class=\"title class_\">Detail</span>,</span><br><span class=\"line\">    },</span><br><span class=\"line\">  ],</span><br><span class=\"line\">},</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!-- detail.vue --&gt;</span><br><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">    &lt;!-- html --&gt;</span><br><span class=\"line\">    &lt;ul&gt;</span><br><span class=\"line\">        &lt;li&gt;编号：{{ route.params.id }}&lt;/li&gt;</span><br><span class=\"line\">        &lt;li&gt;标题：{{ route.params.title }}&lt;/li&gt;</span><br><span class=\"line\">        &lt;li&gt;内容：{{ route.params.content }}&lt;/li&gt;</span><br><span class=\"line\">    &lt;/ul&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\">&lt;script lang=\"ts\" setup name=\"Detail\"&gt;</span><br><span class=\"line\">import { useRoute } from 'vue-router';</span><br><span class=\"line\">const route = useRoute()</span><br><span class=\"line\">console.log(route)</span><br><span class=\"line\">&lt;/script&gt;</span><br><span class=\"line\">&lt;style&gt;</span><br><span class=\"line\">/* 样式 */</span><br><span class=\"line\">&lt;/style&gt;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!-- News.vue --&gt;</span><br><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">    &lt;!-- html --&gt;</span><br><span class=\"line\">    &lt;div&gt;</span><br><span class=\"line\">        &lt;ul&gt;</span><br><span class=\"line\">            &lt;li v-for=\"news in  newsList \" :key=\"news.id\"&gt;</span><br><span class=\"line\">                &lt;!-- 第一种写法 --&gt;</span><br><span class=\"line\">                &lt;!-- &lt;RouterLink :to=\"`/news/detail/${news.id}/${news.title}/${news.content}`\"&gt;{{ news.title }}</span><br><span class=\"line\">                &lt;/RouterLink&gt; --&gt;</span><br><span class=\"line\">                &lt;!-- 第二种写法 --&gt;</span><br><span class=\"line\">                &lt;RouterLink :to=\"{</span><br><span class=\"line\">                name: 'Detail',</span><br><span class=\"line\">                params: {</span><br><span class=\"line\">                    id: news.id,</span><br><span class=\"line\">                    title: news.title,</span><br><span class=\"line\">                    content: news.content</span><br><span class=\"line\">                }</span><br><span class=\"line\">            } as any\"&gt;{{ news.title }}</span><br><span class=\"line\">                &lt;/RouterLink&gt;</span><br><span class=\"line\">            &lt;/li&gt;</span><br><span class=\"line\">        &lt;/ul&gt;</span><br><span class=\"line\">        &lt;div class=\"main-content\" style=\"border: 1px solid red;height: 300px;width:300px\"&gt;</span><br><span class=\"line\">            &lt;RouterView&gt;&lt;/RouterView&gt;</span><br><span class=\"line\">        &lt;/div&gt;</span><br><span class=\"line\">    &lt;/div&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\">&lt;script lang=\"ts\" setup name=\"News\"&gt;</span><br><span class=\"line\">import { RouterView } from 'vue-router';</span><br><span class=\"line\">import { reactive } from 'vue'</span><br><span class=\"line\">const newsList = reactive([</span><br><span class=\"line\">    { id: '021120230', title: \"基于区块链\", content: 'solidity' },</span><br><span class=\"line\">    { id: '021120231', title: \"信息管理系统\", content: 'python' }</span><br><span class=\"line\">])</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n\n<p>缺点：</p>\n<p>对象参数中不可以包含数组</p>\n<h3 id=\"路由props配置\"><a href=\"#路由props配置\" class=\"headerlink\" title=\"路由props配置\"></a>路由props配置</h3><p>路由规则中配置</p>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">{</span><br><span class=\"line\">  <span class=\"attr\">name</span>: <span class=\"string\">\"NEWS\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">path</span>: <span class=\"string\">\"/news\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">component</span>: <span class=\"title class_\">News</span>,</span><br><span class=\"line\">  <span class=\"attr\">children</span>: [</span><br><span class=\"line\">    {</span><br><span class=\"line\">      <span class=\"attr\">name</span>: <span class=\"string\">\"Detail\"</span>,</span><br><span class=\"line\">      <span class=\"comment\">// path: \"detail/:id/:title/:content\",//params写法</span></span><br><span class=\"line\">      <span class=\"attr\">path</span>: <span class=\"string\">\"detail\"</span>,</span><br><span class=\"line\">      <span class=\"attr\">component</span>: <span class=\"title class_\">Detail</span>,</span><br><span class=\"line\">      <span class=\"comment\">// props: true, //params</span></span><br><span class=\"line\">      <span class=\"comment\">// query写法</span></span><br><span class=\"line\">      <span class=\"title function_\">props</span>(<span class=\"params\">route</span>) {</span><br><span class=\"line\">        <span class=\"keyword\">return</span> route.<span class=\"property\">query</span>;</span><br><span class=\"line\">      },</span><br><span class=\"line\">    },</span><br><span class=\"line\">  ],</span><br><span class=\"line\">},</span><br></pre></td></tr></table></figure>\n\n <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!-- detail.vue --&gt;</span><br><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">    &lt;!-- html --&gt;</span><br><span class=\"line\">    &lt;ul&gt;</span><br><span class=\"line\">        &lt;li&gt;编号：{{ id }}&lt;/li&gt;</span><br><span class=\"line\">        &lt;li&gt;标题：{{ title }}&lt;/li&gt;</span><br><span class=\"line\">        &lt;li&gt;内容：{{ content }}&lt;/li&gt;</span><br><span class=\"line\">    &lt;/ul&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\">&lt;script lang=\"ts\" setup name=\"Detail\"&gt;</span><br><span class=\"line\">defineProps(['id', 'title', 'content'])</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"replace属性\"><a href=\"#replace属性\" class=\"headerlink\" title=\"replace属性\"></a>replace属性</h3><p>作用：控制路由跳转时操作浏览器历史记录的模式</p>\n<p>浏览器历史记录有两种写入方式，分别为<code>push</code>和<code>replace</code></p>\n<ul>\n<li><code>push</code>：追加历史记录</li>\n<li><code>replace</code>：替换当前记录，点击过后不能返回</li>\n</ul>\n<p>开启<code>replace</code>模式</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;RouterLink replace to=\"/home\"&gt;首页 &lt;/RouterLink&gt;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"编程式路由导航\"><a href=\"#编程式路由导航\" class=\"headerlink\" title=\"编程式路由导航\"></a>编程式路由导航</h3><p>使用频率很高，远远大于RouterLink</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script lang=\"ts\" setup name=\"Home\"&gt;</span><br><span class=\"line\">//效果是，点击首页三秒后跳转至新闻页</span><br><span class=\"line\">import { onMounted } from 'vue';</span><br><span class=\"line\">import { useRouter } from 'vue-router';</span><br><span class=\"line\">const router = useRouter()</span><br><span class=\"line\">onMounted(() =&gt; {</span><br><span class=\"line\">    setTimeout(() =&gt; {</span><br><span class=\"line\">        router.push('/news')</span><br><span class=\"line\">    }, 3000)</span><br><span class=\"line\">})</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"重定向\"><a href=\"#重定向\" class=\"headerlink\" title=\"重定向\"></a>重定向</h3><p>将指定路径重定向到另一个路径</p>\n<p>在规则中进行修改【此规则包含了所有路由配置写法】</p>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//写一个路由器并暴露出去</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> { createRouter, createWebHistory } <span class=\"keyword\">from</span> <span class=\"string\">\"vue-router\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">Home</span> <span class=\"keyword\">from</span> <span class=\"string\">\"@/pages/Home.vue\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">News</span> <span class=\"keyword\">from</span> <span class=\"string\">\"@/pages/News.vue\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">About</span> <span class=\"keyword\">from</span> <span class=\"string\">\"@/pages/About.vue\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">Detail</span> <span class=\"keyword\">from</span> <span class=\"string\">\"@/pages/detail.vue\"</span>;</span><br><span class=\"line\"><span class=\"comment\">//创建路由器</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> router = <span class=\"title function_\">createRouter</span>({</span><br><span class=\"line\">  <span class=\"comment\">//路由器工作模式</span></span><br><span class=\"line\">  <span class=\"attr\">history</span>: <span class=\"title function_\">createWebHistory</span>(),</span><br><span class=\"line\">  <span class=\"attr\">routes</span>: [</span><br><span class=\"line\">    <span class=\"comment\">// {</span></span><br><span class=\"line\">    <span class=\"comment\">//   name: \"路由名\",</span></span><br><span class=\"line\">    <span class=\"comment\">//   path: \"/路径\",</span></span><br><span class=\"line\">    <span class=\"comment\">//   component: 组件名,</span></span><br><span class=\"line\">    <span class=\"comment\">//   children: [</span></span><br><span class=\"line\">    <span class=\"comment\">//     {</span></span><br><span class=\"line\">    <span class=\"comment\">//       path: \"子路由路径\",</span></span><br><span class=\"line\">    <span class=\"comment\">//       component: 子路由组件名,</span></span><br><span class=\"line\">    <span class=\"comment\">//     },</span></span><br><span class=\"line\">    <span class=\"comment\">//   ],</span></span><br><span class=\"line\">    <span class=\"comment\">// },</span></span><br><span class=\"line\">    {</span><br><span class=\"line\">      <span class=\"attr\">name</span>: <span class=\"string\">\"HOME\"</span>,</span><br><span class=\"line\">      <span class=\"attr\">path</span>: <span class=\"string\">\"/home\"</span>,</span><br><span class=\"line\">      <span class=\"attr\">component</span>: <span class=\"title class_\">Home</span>,</span><br><span class=\"line\">    },</span><br><span class=\"line\">    {</span><br><span class=\"line\">      <span class=\"attr\">name</span>: <span class=\"string\">\"NEWS\"</span>,</span><br><span class=\"line\">      <span class=\"attr\">path</span>: <span class=\"string\">\"/news\"</span>,</span><br><span class=\"line\">      <span class=\"attr\">component</span>: <span class=\"title class_\">News</span>,</span><br><span class=\"line\">      <span class=\"attr\">children</span>: [</span><br><span class=\"line\">        {</span><br><span class=\"line\">          <span class=\"attr\">name</span>: <span class=\"string\">\"Detail\"</span>,</span><br><span class=\"line\">          <span class=\"comment\">// path: \"detail/:id/:title/:content\",//params写法</span></span><br><span class=\"line\">          <span class=\"attr\">path</span>: <span class=\"string\">\"detail\"</span>,</span><br><span class=\"line\">          <span class=\"attr\">component</span>: <span class=\"title class_\">Detail</span>,</span><br><span class=\"line\">          <span class=\"comment\">// props: true, //params</span></span><br><span class=\"line\">          <span class=\"comment\">// query写法</span></span><br><span class=\"line\">          <span class=\"title function_\">props</span>(<span class=\"params\">route</span>) {</span><br><span class=\"line\">            <span class=\"keyword\">return</span> route.<span class=\"property\">query</span>;</span><br><span class=\"line\">          },</span><br><span class=\"line\">        },</span><br><span class=\"line\">      ],</span><br><span class=\"line\">    },</span><br><span class=\"line\">    {</span><br><span class=\"line\">      <span class=\"attr\">name</span>: <span class=\"string\">\"ABOUT\"</span>,</span><br><span class=\"line\">      <span class=\"attr\">path</span>: <span class=\"string\">\"/about\"</span>,</span><br><span class=\"line\">      <span class=\"attr\">component</span>: <span class=\"title class_\">About</span>,</span><br><span class=\"line\">    },</span><br><span class=\"line\">    <span class=\"comment\">//重定向</span></span><br><span class=\"line\">    {</span><br><span class=\"line\">      <span class=\"attr\">path</span>: <span class=\"string\">\"/\"</span>,</span><br><span class=\"line\">      <span class=\"attr\">redirect</span>: <span class=\"string\">\"/home\"</span>,</span><br><span class=\"line\">    },</span><br><span class=\"line\">  ],</span><br><span class=\"line\">});</span><br><span class=\"line\"><span class=\"comment\">//把路由规则暴露出去</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> router;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Pinia\"><a href=\"#Pinia\" class=\"headerlink\" title=\"Pinia\"></a>Pinia</h2><h3 id=\"安装和部署\"><a href=\"#安装和部署\" class=\"headerlink\" title=\"安装和部署\"></a>安装和部署</h3><p><strong>安装</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#安装pinia</span><br><span class=\"line\">$npm i pinia</span><br></pre></td></tr></table></figure>\n\n<p><strong>搭建环境</strong></p>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//main.ts</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> { createApp } <span class=\"keyword\">from</span> <span class=\"string\">\"vue\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">App</span> <span class=\"keyword\">from</span> <span class=\"string\">\"./App.vue\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> router <span class=\"keyword\">from</span> <span class=\"string\">\"./router\"</span>;</span><br><span class=\"line\"><span class=\"comment\">//引入pinia</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> { createPinia } <span class=\"keyword\">from</span> <span class=\"string\">\"pinia\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> app = <span class=\"title function_\">createApp</span>(<span class=\"title class_\">App</span>);</span><br><span class=\"line\"><span class=\"comment\">//创建pinia</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> pinia = <span class=\"title function_\">createPinia</span>();</span><br><span class=\"line\">app.<span class=\"title function_\">use</span>(router);</span><br><span class=\"line\">app.<span class=\"title function_\">mount</span>(<span class=\"string\">\"#app\"</span>);</span><br><span class=\"line\"><span class=\"comment\">//安装pinia</span></span><br><span class=\"line\">app.<span class=\"title function_\">use</span>(pinia);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h3><p>其作用相当于前端的仓库</p>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//src/store/count.ts</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> { defineStore } <span class=\"keyword\">from</span> <span class=\"string\">\"pinia\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> useContentStore = <span class=\"title function_\">defineStore</span>(<span class=\"string\">\"count\"</span>, {</span><br><span class=\"line\">  <span class=\"comment\">//真正存数据的地方</span></span><br><span class=\"line\">  <span class=\"title function_\">state</span>(<span class=\"params\"></span>) {</span><br><span class=\"line\">    <span class=\"keyword\">return</span> {</span><br><span class=\"line\">      <span class=\"attr\">sum</span>: <span class=\"number\">6</span>,</span><br><span class=\"line\">    };</span><br><span class=\"line\">  },</span><br><span class=\"line\">});</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//src/store/talk.ts</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> { defineStore } <span class=\"keyword\">from</span> <span class=\"string\">\"pinia\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> useTalkStore = <span class=\"title function_\">defineStore</span>(<span class=\"string\">\"talk\"</span>, {</span><br><span class=\"line\">  <span class=\"comment\">//真正存数据的地方</span></span><br><span class=\"line\">  <span class=\"title function_\">state</span>(<span class=\"params\"></span>) {</span><br><span class=\"line\">    <span class=\"keyword\">return</span> {</span><br><span class=\"line\">      <span class=\"attr\">talkList</span>: [</span><br><span class=\"line\">        { <span class=\"attr\">id</span>: <span class=\"string\">\"1\"</span>, <span class=\"attr\">title</span>: <span class=\"string\">\"qqqqqqqqqqqqqqqqqqq\"</span> },</span><br><span class=\"line\">        { <span class=\"attr\">id</span>: <span class=\"string\">\"2\"</span>, <span class=\"attr\">title</span>: <span class=\"string\">\"wwwwwwwwwwwwwww\"</span> },</span><br><span class=\"line\">        { <span class=\"attr\">id</span>: <span class=\"string\">\"3\"</span>, <span class=\"attr\">title</span>: <span class=\"string\">\"eeeeeeeeeeeeeeeeeeeee\"</span> },</span><br><span class=\"line\">        { <span class=\"attr\">id</span>: <span class=\"string\">\"4\"</span>, <span class=\"attr\">title</span>: <span class=\"string\">\"rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr\"</span> },</span><br><span class=\"line\">      ],</span><br><span class=\"line\">    };</span><br><span class=\"line\">  },</span><br><span class=\"line\">});</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p><strong>调用</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!-- components/Love.vue --&gt;</span><br><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">    &lt;div class=\"talk\"&gt;</span><br><span class=\"line\">        &lt;button @click=\"getTalk\"&gt;获取一句土味情话&lt;/button&gt;</span><br><span class=\"line\">        &lt;ul&gt;</span><br><span class=\"line\">            &lt;li v-for=\"talk in talkStore.talkList\" :key=\"talk.id\"&gt;{{ talk.title }}&lt;/li&gt;</span><br><span class=\"line\">        &lt;/ul&gt;</span><br><span class=\"line\">    &lt;/div&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;script lang='ts' setup name='LoveTalk'&gt;</span><br><span class=\"line\">import axios from 'axios';</span><br><span class=\"line\">import { reactive } from 'vue';</span><br><span class=\"line\">import { nanoid } from 'nanoid'</span><br><span class=\"line\">import { useTalkStore } from '@/store/talk'</span><br><span class=\"line\">const talkStore = useTalkStore()</span><br><span class=\"line\">async function getTalk() {</span><br><span class=\"line\">    //发请求,连用两次解构赋值和一次重命名</span><br><span class=\"line\">    let { data: { content: title } } = await axios.get('https://api.uomg.com/api/rand.qinghua?format=json');</span><br><span class=\"line\">    // 把请求回来的字符串，包装成一个对象</span><br><span class=\"line\">    let obj = { id: nanoid(), title: title }</span><br><span class=\"line\">    console.log(obj)</span><br><span class=\"line\">    //放到数组中</span><br><span class=\"line\">    talkStore.talkList.unshift(obj)//最开始</span><br><span class=\"line\">    // talkList.push(obj)//最末尾</span><br><span class=\"line\">}</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!-- components/Count.vue --&gt;</span><br><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">    &lt;div class=\"count\"&gt;</span><br><span class=\"line\">        &lt;h2&gt;当前求和为:{{ countStore.sum }}&lt;/h2&gt;</span><br><span class=\"line\">    &lt;/div&gt;</span><br><span class=\"line\">    &lt;select v-model.number=\"n\"&gt;</span><br><span class=\"line\">        &lt;option value=\"1\"&gt;1&lt;/option&gt;</span><br><span class=\"line\">        &lt;option value=\"2\"&gt;2&lt;/option&gt;</span><br><span class=\"line\">        &lt;option value=\"3\"&gt;3&lt;/option&gt;</span><br><span class=\"line\">    &lt;/select&gt;</span><br><span class=\"line\">    &lt;button @click=\"add\"&gt;加&lt;/button&gt;</span><br><span class=\"line\">    &lt;button @click=\"minus\"&gt;减&lt;/button&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;script lang='ts' setup name=\"Count\"&gt;</span><br><span class=\"line\">import { ref } from 'vue'</span><br><span class=\"line\">import { useContentStore } from '@/store/count'</span><br><span class=\"line\">// countStore是一个响应式reactive对象，</span><br><span class=\"line\">// 并且会自动解构它下面的ref类型数据，因此不需要写.value</span><br><span class=\"line\">const countStore = useContentStore()</span><br><span class=\"line\">console.log('@@@', countStore.sum)</span><br><span class=\"line\"></span><br><span class=\"line\">//数据</span><br><span class=\"line\">let n = ref(1) //用户选择的数据</span><br><span class=\"line\"></span><br><span class=\"line\">function add() {</span><br><span class=\"line\">    countStore.sum += n.value</span><br><span class=\"line\">}</span><br><span class=\"line\">function minus() {</span><br><span class=\"line\">    countStore.sum -= n.value</span><br><span class=\"line\">}</span><br><span class=\"line\">&lt;/script&gt;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"修改数据-三种方式\"><a href=\"#修改数据-三种方式\" class=\"headerlink\" title=\"修改数据(三种方式)\"></a>修改数据(三种方式)</h3><figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//components/Count.vue</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">add</span>(<span class=\"params\"></span>) {</span><br><span class=\"line\">    <span class=\"comment\">//&lt;----------第一种修改方式-------------&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">// countStore.sum += n.value</span></span><br><span class=\"line\">    <span class=\"comment\">// countStore.school = '鸡大'</span></span><br><span class=\"line\">    <span class=\"comment\">//&lt;----------第二种修改方式-------------&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">// 适用于修改多个数据</span></span><br><span class=\"line\">    <span class=\"comment\">// countStore.$patch({</span></span><br><span class=\"line\">    <span class=\"comment\">//     sum: 88,</span></span><br><span class=\"line\">    <span class=\"comment\">//     school: '鸡大'</span></span><br><span class=\"line\">    <span class=\"comment\">// })</span></span><br><span class=\"line\">    <span class=\"comment\">//&lt;----------第二种修改方式-------------&gt;</span></span><br><span class=\"line\">    countStore.<span class=\"title function_\">increment</span>(n.<span class=\"property\">value</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//src/store/count.ts</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> { defineStore } <span class=\"keyword\">from</span> <span class=\"string\">\"pinia\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> useContentStore = <span class=\"title function_\">defineStore</span>(<span class=\"string\">\"count\"</span>, {</span><br><span class=\"line\">  <span class=\"comment\">//actions里放置的是一个个方法，用于相应组件中的“动作”</span></span><br><span class=\"line\">  <span class=\"attr\">actions</span>: {</span><br><span class=\"line\">    <span class=\"title function_\">increment</span>(<span class=\"params\"><span class=\"attr\">value</span>: <span class=\"built_in\">any</span></span>) {</span><br><span class=\"line\">      <span class=\"variable language_\">this</span>.<span class=\"property\">sum</span> += value;</span><br><span class=\"line\">    },<span class=\"comment\">//很麻烦，日常开发用起来不方便，但是可以模块化，复用它</span></span><br><span class=\"line\">  },</span><br><span class=\"line\">  <span class=\"comment\">//真正存数据的地方</span></span><br><span class=\"line\">  <span class=\"title function_\">state</span>(<span class=\"params\"></span>) {</span><br><span class=\"line\">    <span class=\"keyword\">return</span> {</span><br><span class=\"line\">      <span class=\"attr\">sum</span>: <span class=\"number\">6</span>,</span><br><span class=\"line\">      <span class=\"attr\">school</span>: <span class=\"string\">\"SUES\"</span>,</span><br><span class=\"line\">    };</span><br><span class=\"line\">  },</span><br><span class=\"line\">});</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"subscribe的使用\"><a href=\"#subscribe的使用\" class=\"headerlink\" title=\"$subscribe的使用\"></a>$subscribe的使用</h3><p>能够在本地浏览器存储数据，使其不会因为浏览器的刷新而导致数据丢失</p>\n<p>还是以土味情话为例</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!--Love.vue--&gt;</span><br><span class=\"line\">&lt;script lang='ts' setup name='LoveTalk'&gt;</span><br><span class=\"line\">import { useTalkStore } from '@/store/talk'</span><br><span class=\"line\">const talkStore = useTalkStore()</span><br><span class=\"line\">async function getTalk() {</span><br><span class=\"line\">    talkStore.getATalk()</span><br><span class=\"line\">    talkStore.$subscribe((mutate, state) =&gt; {</span><br><span class=\"line\">        //mutate表示发生变化的内容</span><br><span class=\"line\">        console.log('talkStore内的数据发生了变化', mutate, state)</span><br><span class=\"line\">        localStorage.setItem('talkList', JSON.stringify(state.talkList))</span><br><span class=\"line\">    })</span><br><span class=\"line\">}</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//src/store/talk.ts</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> { defineStore } <span class=\"keyword\">from</span> <span class=\"string\">\"pinia\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> { nanoid } <span class=\"keyword\">from</span> <span class=\"string\">\"nanoid\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> axios <span class=\"keyword\">from</span> <span class=\"string\">\"axios\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> useTalkStore = <span class=\"title function_\">defineStore</span>(<span class=\"string\">\"talk\"</span>, {</span><br><span class=\"line\">  <span class=\"attr\">actions</span>: {</span><br><span class=\"line\">    <span class=\"keyword\">async</span> <span class=\"title function_\">getATalk</span>(<span class=\"params\"></span>) {</span><br><span class=\"line\">      <span class=\"comment\">//发请求,连用两次解构赋值和一次重命名</span></span><br><span class=\"line\">      <span class=\"keyword\">let</span> {</span><br><span class=\"line\">        <span class=\"attr\">data</span>: { <span class=\"attr\">content</span>: title },</span><br><span class=\"line\">      } = <span class=\"keyword\">await</span> axios.<span class=\"title function_\">get</span>(<span class=\"string\">\"https://api.uomg.com/api/rand.qinghua?format=json\"</span>);</span><br><span class=\"line\">      <span class=\"comment\">// 把请求回来的字符串，包装成一个对象</span></span><br><span class=\"line\">      <span class=\"keyword\">let</span> obj = { <span class=\"attr\">id</span>: <span class=\"title function_\">nanoid</span>(), <span class=\"attr\">title</span>: title };</span><br><span class=\"line\">      <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(obj);</span><br><span class=\"line\">      <span class=\"comment\">//放到数组中</span></span><br><span class=\"line\">      <span class=\"variable language_\">this</span>.<span class=\"property\">talkList</span>.<span class=\"title function_\">unshift</span>(obj); <span class=\"comment\">//最开始</span></span><br><span class=\"line\">      <span class=\"comment\">// talkList.push(obj)//最末尾</span></span><br><span class=\"line\">    },</span><br><span class=\"line\">  },</span><br><span class=\"line\">  <span class=\"comment\">//真正存数据的地方</span></span><br><span class=\"line\">  <span class=\"title function_\">state</span>(<span class=\"params\"></span>) {</span><br><span class=\"line\">    <span class=\"keyword\">return</span> {</span><br><span class=\"line\">      <span class=\"attr\">talkList</span>: <span class=\"title class_\">JSON</span>.<span class=\"title function_\">parse</span>(<span class=\"variable language_\">localStorage</span>.<span class=\"title function_\">getItem</span>(<span class=\"string\">\"talkList\"</span>) <span class=\"keyword\">as</span> <span class=\"built_in\">string</span>) || [],</span><br><span class=\"line\">    };</span><br><span class=\"line\">  },</span><br><span class=\"line\">});</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p><strong>效果：</strong></p>\n<p><img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/Vue3_note/image-20240317151105751.png\" alt=\"image-20240317151105751\"></p>\n<h3 id=\"组合式写法\"><a href=\"#组合式写法\" class=\"headerlink\" title=\"组合式写法\"></a>组合式写法</h3><figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//src/store/talk.ts</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> { reactive } <span class=\"keyword\">from</span> <span class=\"string\">\"vue\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> useTalkStore = <span class=\"title function_\">defineStore</span>(<span class=\"string\">\"talk\"</span>, <span class=\"keyword\">function</span> <span class=\"title function_\">a</span>(<span class=\"params\"></span>) {</span><br><span class=\"line\">  <span class=\"keyword\">const</span> talkList = <span class=\"title function_\">reactive</span>(</span><br><span class=\"line\">    <span class=\"title class_\">JSON</span>.<span class=\"title function_\">parse</span>(<span class=\"variable language_\">localStorage</span>.<span class=\"title function_\">getItem</span>(<span class=\"string\">\"talkList\"</span>) <span class=\"keyword\">as</span> <span class=\"built_in\">string</span>) || []</span><br><span class=\"line\">  );</span><br><span class=\"line\">  <span class=\"keyword\">async</span> <span class=\"keyword\">function</span> <span class=\"title function_\">getATalk</span>(<span class=\"params\"></span>) {</span><br><span class=\"line\">    <span class=\"comment\">//发请求,连用两次解构赋值和一次重命名</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> {</span><br><span class=\"line\">      <span class=\"attr\">data</span>: { <span class=\"attr\">content</span>: title },</span><br><span class=\"line\">    } = <span class=\"keyword\">await</span> axios.<span class=\"title function_\">get</span>(<span class=\"string\">\"https://api.uomg.com/api/rand.qinghua?format=json\"</span>);</span><br><span class=\"line\">    <span class=\"comment\">// 把请求回来的字符串，包装成一个对象</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> obj = { <span class=\"attr\">id</span>: <span class=\"title function_\">nanoid</span>(), <span class=\"attr\">title</span>: title };</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(obj);</span><br><span class=\"line\">    <span class=\"comment\">//放到数组中</span></span><br><span class=\"line\">    talkList.<span class=\"property\">talkList</span>.<span class=\"title function_\">unshift</span>(obj); <span class=\"comment\">//最开始</span></span><br><span class=\"line\">    <span class=\"comment\">// talkList.push(obj)//最末尾</span></span><br><span class=\"line\">  }</span><br><span class=\"line\">  <span class=\"keyword\">return</span> { talkList, getATalk };</span><br><span class=\"line\">});</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"向后端发起请求\"><a href=\"#向后端发起请求\" class=\"headerlink\" title=\"向后端发起请求\"></a>向后端发起请求</h2><p>核心语句，当然后端要做好跨域访问</p>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> axios <span class=\"keyword\">from</span> <span class=\"string\">\"axios\"</span>; </span><br><span class=\"line\"><span class=\"keyword\">async</span> <span class=\"keyword\">function</span> <span class=\"title function_\">Login</span>(<span class=\"params\"></span>) {</span><br><span class=\"line\">\t<span class=\"keyword\">let</span> loginMessage = {</span><br><span class=\"line\">        <span class=\"attr\">user_id</span>: userid.<span class=\"property\">value</span>,</span><br><span class=\"line\">        <span class=\"attr\">password</span>: password.<span class=\"property\">value</span></span><br><span class=\"line\">    }</span><br><span class=\"line\"> \t<span class=\"keyword\">const</span> response = <span class=\"keyword\">await</span> axios.<span class=\"title function_\">post</span>(<span class=\"string\">'http://localhost:8080/login'</span>, loginMessage);</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure>\n\n<p>写个样例，向后端发送登录请求，并将返回的token存入Pinia中,同时在浏览器也做好存储，避免服务器重启以及刷新浏览器会丢失数据</p>\n<p>先新建仓库</p>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//store/loginStore.ts</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> { defineStore } <span class=\"keyword\">from</span> <span class=\"string\">\"pinia\"</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> { <span class=\"keyword\">type</span> <span class=\"title class_\">LoginResult</span> } <span class=\"keyword\">from</span> <span class=\"string\">\"@/interface/loginResult\"</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> { ref } <span class=\"keyword\">from</span> <span class=\"string\">\"vue\"</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> useLoginStore = <span class=\"title function_\">defineStore</span>(<span class=\"string\">\"login\"</span>, <span class=\"keyword\">function</span> <span class=\"title function_\">login</span>(<span class=\"params\"></span>) {</span><br><span class=\"line\">    <span class=\"comment\">//真正存数据的地方</span></span><br><span class=\"line\">    <span class=\"keyword\">const</span> userid = <span class=\"title function_\">ref</span>(<span class=\"variable language_\">localStorage</span>.<span class=\"title function_\">getItem</span>(<span class=\"string\">\"userid\"</span>) || <span class=\"string\">\"\"</span>)</span><br><span class=\"line\">    <span class=\"keyword\">const</span> username = <span class=\"title function_\">ref</span>(<span class=\"variable language_\">localStorage</span>.<span class=\"title function_\">getItem</span>(<span class=\"string\">\"username\"</span>) || <span class=\"string\">\"\"</span>)</span><br><span class=\"line\">    <span class=\"keyword\">const</span> publicKey = <span class=\"title function_\">ref</span>(<span class=\"variable language_\">localStorage</span>.<span class=\"title function_\">getItem</span>(<span class=\"string\">\"publicKey\"</span>) || <span class=\"string\">\"\"</span>)</span><br><span class=\"line\">    <span class=\"keyword\">const</span> konohaToken = <span class=\"title function_\">ref</span>(<span class=\"variable language_\">localStorage</span>.<span class=\"title function_\">getItem</span>(<span class=\"string\">\"konohaToken\"</span>) || <span class=\"string\">\"\"</span>)</span><br><span class=\"line\">    <span class=\"keyword\">function</span> <span class=\"title function_\">Login</span>(<span class=\"params\"><span class=\"attr\">loginResult</span>: <span class=\"title class_\">LoginResult</span></span>) {</span><br><span class=\"line\">        userid.<span class=\"property\">value</span> = loginResult.<span class=\"property\">user_id</span></span><br><span class=\"line\">        username.<span class=\"property\">value</span> = loginResult.<span class=\"property\">username</span></span><br><span class=\"line\">        publicKey.<span class=\"property\">value</span> = loginResult.<span class=\"property\">publicKey</span></span><br><span class=\"line\">        konohaToken.<span class=\"property\">value</span> = loginResult.<span class=\"property\">konohaToken</span></span><br><span class=\"line\">    }</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> { userid, username, publicKey, konohaToken, <span class=\"title class_\">Login</span> }</span><br><span class=\"line\">})</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p><code>login.vue</code>中</p>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> { useLoginStore } <span class=\"keyword\">from</span> <span class=\"string\">'@/store/loginStore'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> { <span class=\"title class_\">ElMessage</span> } <span class=\"keyword\">from</span> <span class=\"string\">'element-plus'</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> loginStore = <span class=\"title function_\">useLoginStore</span>()</span><br><span class=\"line\"><span class=\"keyword\">async</span> <span class=\"keyword\">function</span> <span class=\"title function_\">Login</span>(<span class=\"params\"></span>) {</span><br><span class=\"line\">    <span class=\"keyword\">let</span> loginMessage = {</span><br><span class=\"line\">        <span class=\"attr\">user_id</span>: userid.<span class=\"property\">value</span>,</span><br><span class=\"line\">        <span class=\"attr\">password</span>: password.<span class=\"property\">value</span></span><br><span class=\"line\">    }</span><br><span class=\"line\">    <span class=\"keyword\">try</span> {</span><br><span class=\"line\">        <span class=\"keyword\">const</span> response = <span class=\"keyword\">await</span> axios.<span class=\"title function_\">post</span>(<span class=\"string\">'http://localhost:8080/login'</span>, loginMessage);</span><br><span class=\"line\">        <span class=\"comment\">// console.log(loginMessage)</span></span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">'send successful:'</span>, response.<span class=\"property\">data</span>.<span class=\"property\">data</span>);</span><br><span class=\"line\">        <span class=\"keyword\">switch</span> (response.<span class=\"property\">data</span>.<span class=\"property\">code</span>) {</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"number\">200</span>:</span><br><span class=\"line\">                <span class=\"comment\">// 登录成功后的处理</span></span><br><span class=\"line\">                loginStore.<span class=\"title class_\">Login</span>(response.<span class=\"property\">data</span>.<span class=\"property\">data</span>)</span><br><span class=\"line\">                loginStore.$subscribe(<span class=\"function\">(<span class=\"params\">mutate, state</span>) =&gt;</span> {</span><br><span class=\"line\">                    <span class=\"comment\">//mutate表示发生变化的内容，同时更新浏览器存储</span></span><br><span class=\"line\">                    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">'loginStore内的数据发生了变化'</span>, mutate, state)</span><br><span class=\"line\">                    <span class=\"variable language_\">localStorage</span>.<span class=\"title function_\">setItem</span>(<span class=\"string\">'userid'</span>, state.<span class=\"property\">userid</span>)</span><br><span class=\"line\">                    <span class=\"variable language_\">localStorage</span>.<span class=\"title function_\">setItem</span>(<span class=\"string\">'username'</span>, state.<span class=\"property\">username</span>)</span><br><span class=\"line\">                    <span class=\"variable language_\">localStorage</span>.<span class=\"title function_\">setItem</span>(<span class=\"string\">'publicKey'</span>, state.<span class=\"property\">publicKey</span>)</span><br><span class=\"line\">                    <span class=\"variable language_\">localStorage</span>.<span class=\"title function_\">setItem</span>(<span class=\"string\">'konohaToken'</span>, state.<span class=\"property\">konohaToken</span>)</span><br><span class=\"line\">                })</span><br><span class=\"line\">                <span class=\"title class_\">ElMessage</span>({</span><br><span class=\"line\">                    <span class=\"attr\">message</span>: response.<span class=\"property\">data</span>.<span class=\"property\">msg</span>,</span><br><span class=\"line\">                    <span class=\"attr\">type</span>: <span class=\"string\">'success'</span>,</span><br><span class=\"line\">                })</span><br><span class=\"line\">                <span class=\"keyword\">break</span></span><br><span class=\"line\">            <span class=\"attr\">default</span>:</span><br><span class=\"line\">                <span class=\"comment\">//登陆失败或者异常时的处理</span></span><br><span class=\"line\">                <span class=\"title class_\">ElMessage</span>({</span><br><span class=\"line\">                    <span class=\"attr\">message</span>: response.<span class=\"property\">data</span>.<span class=\"property\">msg</span>,</span><br><span class=\"line\">                    <span class=\"attr\">type</span>: <span class=\"string\">'error'</span>,</span><br><span class=\"line\">                })</span><br><span class=\"line\">                <span class=\"comment\">//同时清空输入框，这里可以说是非常简单粗暴了</span></span><br><span class=\"line\">                userid.<span class=\"property\">value</span> =<span class=\"string\">''</span></span><br><span class=\"line\">                password.<span class=\"property\">value</span> = <span class=\"string\">''</span></span><br><span class=\"line\">                <span class=\"keyword\">break</span></span><br><span class=\"line\">        }</span><br><span class=\"line\">    } <span class=\"keyword\">catch</span> (error) {</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">error</span>(<span class=\"string\">'Login failed:'</span>, error);</span><br><span class=\"line\">        <span class=\"comment\">// 登录失败的处理</span></span><br><span class=\"line\">    }</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure>\n\n<p>P.S <code>get</code>请求要写完整，最后的斜杠不能少</p>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> response = <span class=\"keyword\">await</span> axios.<span class=\"title function_\">get</span>(<span class=\"string\">\"http://localhost:8080/showclaims/\"</span>)</span><br></pre></td></tr></table></figure>\n\n\n\n"},{"title":"结绳","description":"结绳","date":"2024-08-16T13:16:00.000Z","excerpt":"想发展点业余爱好来着，搞点绳子编编","_content":"\n","source":"_posts/hairTie.md","raw":"---\ntitle: 结绳\ncategories:\n  - 生活记录\ndescription: \"结绳\"\ndate: 2024-08-16 21:16\nexcerpt: \"想发展点业余爱好来着，搞点绳子编编\"\ntags:\n  - 手工DIY\n\n\n---\n\n","slug":"hairTie","published":1,"updated":"2024-08-24T05:46:24.216Z","comments":1,"layout":"post","photos":[],"_id":"cm0b0qx7f000bjwur37kqfw0c","content":"","more":""},{"title":"泉城-济南","date":"2024-07-14T02:43:00.000Z","thumbnail":"img/thumbnail/jinan.png","cover":"img/cover/jinan.png","excerpt":"2024年6月21日，独自前往山东进行游玩，济南市停留了一天半时间游玩。","_content":"\n## 行程记录\n\n```txt\n6月21日：小雨转暴雨\n05：40 驱车前往上海虹桥火车站\n07：38 乘坐G110次列车前往济南西站\n11：40 到达济南西站，买了两张刮刮乐，一张没中\n12：35 乘坐G6999次列车前往济南站\n13：00 前往酒店，放下行李，前往最近的一个超意兴吃饭\n15：00 步行前往大观园\n16：00 抵达趵突泉\n19：00 返回酒店\n19：40 骑自行车前往千佛山\n21：15 打车返回酒店\n\n6月22日：晴\n08：30 出发前往济南站办理行李寄存，加一顿早饭\n08：52 乘坐K3次公交车，在共青团路站下车，骑车前往五龙潭公园 \n11：30 骑车前往芙蓉街\n12：30 穿过芙蓉街来到曲水亭街\n12：55 穿过曲水亭街来到大明湖\n13：00 沿着大明湖步行游览\n14：00 进入超然楼进行观光\n16：45 骑车前往宽厚里\n17：15 从宽厚里步行前往黑虎泉\n18：00 骑车返回曲水亭街\n18：40 骑车前往超然楼\n19：30 骑车前往济南站\n\n```\n\n## 出行路线\n\n<img src=\"/img/jinan_travel/7707e2487fcdfccad200b6d92c858b1.png\" alt=\"7707e2487fcdfccad200b6d92c858b1\" style=\"zoom: 50%;\" />\n\n## 大观园\n\n阿油给我的酒店定在槐荫区经三路省立医院附近地希岸酒店，个人还是很满意这家酒店的，不论是卫生还是配套设施；\n\n因为下雨，我刚开始的计划是步行前往大观园，结束之后直接返回酒店休息的\n\n步行路上正好路过了网红打卡点，有不少人在此处拍照，老城区的一些城市文化做的还是很可以的\n\n<img src=\"/img/jinan_travel/%E5%A4%B9%E5%BF%83%E8%83%A1%E5%90%8C.png\" alt=\"夹心胡同\" style=\"zoom:15%;\" />\n\n<br>\n\n<img src=\"/img/jinan_travel/%E6%B5%8E%E5%8D%97%E5%A2%99.png\" alt=\"济南墙\" style=\"zoom:15%;\" />\n\n<br>\n\n<img src=\"/img/jinan_travel/%E7%88%B1%E5%BF%83%E7%BA%A2%E7%81%AF.png\" alt=\"爱心红灯\" style=\"zoom:13.5%;\" />\n\n计划赶不上变化，大观园显然是被自媒体捧过头了😂\n\n小吃街规模不算很大，能逛的区域不算很多，个人觉得不算很惊艳，不过里面有一些非物质文化的小店，包括相声，泥砖等等\n\n<img src=\"/img/jinan_travel/%E5%A4%A7%E8%A7%82%E5%9B%AD.png\" alt=\"大观园\" style=\"zoom:20%;\" />\n\n## 趵突泉\n\n向东一路步行过去，走到了济南绿地普利中心，运气不太妙啊，到这的时候突然下起了暴雨\n\n<img src=\"/img/jinan_travel/e77f1a35c400301fb207671d1211242.png\" alt=\"e77f1a35c400301fb207671d1211242\" style=\"zoom:25%;\" />\n\n一阵暴雨过后，前往趵突泉的路上走错了地方，误入了一个小胡同里，遇到一个阿姨，帮我指明了前往趵突泉的途径，然后塞给了我一本小册子（果然是考公考编大省）\n\n<img src=\"/img/jinan_travel/image-20240702132800880.png\" alt=\"image-20240702132800880\" style=\"zoom: 75%;\" />\n\n趵突泉这个景点凭借全日制学生证，在当地的一个app-----369出行上绑定学信网信息之后会生成一个通过码，免费参观趵突泉，不过学校在这个节骨眼提前给我的学信网提交了毕业信息，导致这个认证并没有通过，最后还是购买的学生票，这个只看学生证信息，比较宽松，20r一张\n\n![image-20240702134340918](/img/jinan_travel/image-20240702134340918.png)\n\n济南之所以叫泉城，不是因为这里有号称天下第一趵突泉，而是因为这里有着一个较大范围的泉群，包括一些小胡同的命名也是根据小胡同里的泉名来的。\n\n所谓的趵突泉其实是一个三眼泉，我刚到的时候正在下雨，泉水的翻腾并不是很明显，看过去就像是小泡泡升起一样。\n\n![趵突泉](/img/jinan_travel/%E8%B6%B5%E7%AA%81%E6%B3%89.png)\n\n值得一提的是，不仅是这一片泉水池，几乎园区里能观察到的泉水池几乎都有这个特性，水池清澈见底，观赏的鱼也是肥美华丽，鱼和水之间虽然达不到皆若空游无所依的地步，但也能轻松的望见鱼的游耍以及池底的植被。这一方面是因为泉水本身的水质足够好，另一方面也是因为园区对泉群的管理到位，几乎每一个有泉池的地方都能听见广播在播放禁止游客投喂米油，馒头，面包之类的话语。\n\n在这片园区之中，还有一些纪念馆，包括李清照纪念馆以及五三惨案纪念馆等等\n\n<img src=\"/img/jinan_travel/%E6%9D%8E%E6%B8%85%E7%85%A7%E7%94%BB%E5%83%8F.png\" alt=\"李清照画像\" style=\"zoom:15%;\" />\n\n> 济南惨案，又称五三惨案。1928年2月，蒋、桂、冯、阎联合发动了与张作霖争夺东北的战争。1928年4月，蒋介石军队北进。为阻止英、美势力向北发展，1928年5月3日，日本侵略者在山东省济南向国民党军发动进攻。由于蒋介石一味妥协退让并下达不抵抗命令，大量中国军民遭到屠杀。当国民革命军进占济南时，日本帝国主义借口保护日侨，出兵干涉，并于1928年5月3日凶残地杀害了国民政府山东特派交涉员蔡公时等17名外交人员，进而强占全城，恣意杀戮中国军民6123人，激起全中国人民的极大愤慨，同时也受到世界舆论的谴责。美、英等国从他们在华利益出发，也向日本施加压力。1929年2月28日，日本政府与国民党政府达成协定，并从济南撤军，济南事件即告结束。\n\n出于对不幸遇难的那些亡者的敬意，五三惨案纪念馆以及纪念碑都没有拍摄照片。不过，在纪念馆中存放着济南城墙的原貌修复模型。\n\n<img src=\"/img/jinan_travel/%E8%80%81%E6%B5%8E%E5%8D%97%E5%A4%8D%E5%8E%9F%E6%A8%A1%E5%9E%8B.png\" alt=\"老济南复原模型\" style=\"zoom: 15%;\" />\n\n可以看到济南曾经也是有里外两层城墙的，在经历了五三惨案中的炮击过后，城墙损失惨重，建国之后又拆除了一大部分，直至现在前去的时候已经看不到城墙的影子了。\n\n## 千佛山\n\n千佛山本来没准备爬的，但是始终碍于想弄个收集，所以在19点多的时候，眼瞅着雨下的不大，外套一披，登山杖一挂，美团自行车一蹬就出发了。\n\n<img src=\"/img/jinan_travel/image-20240703101658725.png\" alt=\"image-20240703101658725\" style=\"zoom:25%;\" />\n\n走错了地方，从偏门进去的，千佛山晚上18点之后不收门票。不过今天天气不是特别好，所以，夜里过来的人并不多，但偶尔还是可以碰到一些的。\n\n上山走的路似乎不是大路，不仅狭窄，而且没有什么路灯。\n\n<img src=\"/img/jinan_travel/image-20240704121142124.png\" alt=\"image-20240704121142124\" style=\"zoom:25%;\" />\n\n<br>\n\n<img src=\"/img/jinan_travel/image-20240704110017720.png\" alt=\"image-20240704110017720\" style=\"zoom: 80%;\" />\n\n在接近山顶的位置有一个较大的平台，因为下午下雨，往山顶方向的台阶被放了告示牌，因此，实际上这一次我并没有登顶。\n\n![image-20240704110552965](/img/jinan_travel/image-20240704110552965.png)\n\n平台上方可以看到济南老城区的全貌，不过由于下午下了一场不小的阵雨，导致晚间的雾气遮住了夜景\n\n<img src=\"/img/jinan_travel/image-20240704110651807.png\" alt=\"image-20240704110651807\" style=\"zoom: 10%;\" />\n\n下山走的大路，从正门出来的。\n\n<img src=\"/img/jinan_travel/image-20240704121647858.png\" alt=\"image-20240704121647858\" style=\"zoom:25%;\" />\n\n## 五龙潭公园\n\n乘坐K3次公交车，至共青团路之后，骑车到达五龙潭公园南部，实际上我是从中共山东早期历史纪念馆的后门（南）进入公园的。\n\n<img src=\"/img/jinan_travel/image-20240704155606548.png\" alt=\"image-20240704155606548\" style=\"zoom: 50%;\" />\n\n五龙潭因为五龙迎宾得名，这里依着泉群修建，自然也搭配了直饮水，不过，水不如黑虎泉的量大，因此小小的水龙头前排起了长长的队伍，我也就没有去打水了。\n\n在超然楼中的木雕也刻了五龙迎宾的画面。\n\n<img src=\"/img/jinan_travel/%E4%BA%94%E9%BE%99%E8%BF%8E%E5%AE%BE.png\" alt=\"五龙迎宾\" style=\"zoom:15%;\" />\n\n水池边有不少的小孩在嬉水，拿着水枪喷水玩。\n\n水池中的水很清澈，事实上大多泉水都像这样，不负泉城之名；听说九寨沟的水更加的神奇，希望有一天能亲眼看看。\n\n<img src=\"/img/jinan_travel/%E4%BA%94%E9%BE%99%E6%BD%AD%E5%85%AC%E5%9B%AD.png\" alt=\"五龙潭公园\" style=\"zoom:13%;\" />\n\n## 芙蓉街\n\n从五龙潭公园南门出来向东骑行可以快速抵达芙蓉街。\n\n<img src=\"/img/jinan_travel/%E8%8A%99%E8%93%89%E8%A1%97.png\" alt=\"芙蓉街\" style=\"zoom:15%;\" />\n\n芙蓉街因为芙蓉泉得名，这边有很多的小吃店，规模略微逊色于宽厚里。\n\n在这里踩了第一个坑，30r买的爆肚，感觉不是很划算，味道也中规中矩。\n\n<img src=\"/img/jinan_travel/image-20240704161658983.png\" alt=\"image-20240704161658983\" style=\"zoom: 50%;\" />\n\n买的烧饼夹牛肉，味道非常不错，饼烤得很好，14r\n\n<img src=\"/img/jinan_travel/%E7%83%A7%E9%A5%BC%E5%A4%B9%E7%89%9B%E8%82%89.png\" alt=\"烧饼夹牛肉\" style=\"zoom:10%;\" />\n\n继续往北走，会碰到一家卖西瓜汁的，用广播放“免费灌泉水”，我看了眼背包，两瓶水都见底了，但我又不好意思只灌水，所以又花了5r买了一小杯西瓜汁，西瓜汁是鲜榨的，味道很甜。\n\n<img src=\"/img/jinan_travel/image-20240704162422780.png\" alt=\"image-20240704162422780\" style=\"zoom:15%;\" />\n\n## 大明湖\n\n无意间走进了曲水亭街，一路向北，就到达了大明湖\n\n<img src=\"/img/jinan_travel/%E5%A4%A7%E6%98%8E%E6%B9%96.png\" alt=\"大明湖\" style=\"zoom:25%;\" />\n\n这个时间选择去逛大明湖实在不是一个比较合适的时机，正值夏至的中午，太阳毒辣无比，但也正是这种高温天，荷花开的十分旺盛。\n\n天气太热了，确实是有点影响观光的心情，我觉得这片糊域或许更适合晚饭后散步或者春秋天观光。\n\n<img src=\"/img/jinan_travel/%E5%A4%A7%E6%98%8E%E6%B9%96%E8%8D%B7%E8%8A%B1.png\" alt=\"大明湖荷花\" style=\"zoom:15%;\" />\n\n这是一块放在超然楼门口的木雕，压缩了整个老济南的景点。\n\n<img src=\"/img/jinan_travel/%E8%B6%85%E7%84%B6%E6%A5%BC%E6%9C%A8%E9%9B%95.png\" alt=\"超然楼木雕\" style=\"zoom:25%;\" />\n\n这个应该是大明湖的荷花木雕图\n\n<img src=\"/img/jinan_travel/%E8%B6%85%E7%84%B6%E6%A5%BC%E6%9C%A8%E9%9B%952.png\" alt=\"超然楼木雕2\" style=\"zoom:25%;\" />\n\n超然楼外景\n\n<img src=\"/img/jinan_travel/%E8%B6%85%E7%84%B6%E6%A5%BC.png\" alt=\"超然楼\" style=\"zoom:13%;\" />\n\n在前往济南站之前我从曲水亭街又专门骑车过来看超然楼的灯景，但是正值夏至，等到19：25分都没有开灯，只好先行放弃了。\n\n不过，看了一会广场舞哈哈哈。\n\n<img src=\"/img/jinan_travel/Videoframe_20240713_153346_com.huawei.himovie.loc.jpg\" alt=\"Videoframe_20240713_153346_com.huawei.himovie.loc\" style=\"zoom:25%;\" />\n\n最后前往济南站的路线是骑自行车去的，济南的老城区非机动车道还是很宽阔的，路修得也很不错，非常适合骑车\n\n<img src=\"/img/jinan_travel/%E6%B5%8E%E5%8D%97%E8%87%AA%E8%A1%8C%E8%BD%A6%E9%81%93.png\" alt=\"济南自行车道\" style=\"zoom: 10%;\" />\n\n<br>\n\n<img src=\"/img/jinan_travel/sporthealth-1-20240713-153633_edit_42309425324064.jpg\" alt=\"sporthealth-1-20240713-153633_edit_42309425324064\" style=\"zoom:25%;\" />\n\n## 解放阁\n\n这里我没上去。。。路过拍了张照片\n\n<img src=\"/img/jinan_travel/%E8%A7%A3%E6%94%BE%E9%98%81.png\" alt=\"解放阁\" style=\"zoom:15%;\" />\n\n## 宽厚里\n\n性质和芙蓉街很像，属于被改造过的商业街道，但是小吃数量不亚于芙蓉街\n\n<img src=\"/img/jinan_travel/%E5%AE%BD%E5%8E%9A%E9%87%8C.png\" alt=\"宽厚里\" style=\"zoom:15%;\" />\n\n<br>\n\n<img src=\"/img/jinan_travel/%E5%AE%BD%E5%8E%9A%E9%87%8C2.png\" alt=\"宽厚里2\" style=\"zoom:18%;\" />\n\n## 黑虎泉\n\n黑虎泉位于解放阁的西南角，需要穿过一条护城河\n\n黑虎泉的水源可以说是十分充足，水池边上也有很多好看的模特在拍照，如果有个大光圈镜头，确实是非常出片的。\n\n<img src=\"/img/jinan_travel/%E9%BB%91%E8%99%8E%E6%B3%892.png\" alt=\"黑虎泉泉水\" style=\"zoom:15%;\" />\n\n景区有为游客开槽，借助石壁开好的槽口，可以直接灌水，当地的居民也经常会用一个一个的大桶去接水。我把自己已经空空如也的两个水瓶全都打满了。这里的水和平时买到的矿泉水和家里的自来水口感不太一样，要更加绵软柔和。\n\n<img src=\"/img/jinan_travel/%E9%BB%91%E8%99%8E%E6%B3%89.png\" alt=\"黑虎泉\" style=\"zoom:20%;\" />\n\n## 曲水亭街\n\n之后听了阿油的建议，我又返回了曲水亭街，虽然都是所谓的老街，但是和芙蓉街还是有着明显的不同。\n\n曲水亭街更像是旧时代遗留下的纯粹的遗产，而芙蓉街更像是新时代用来吸引游客的产物。\n\n但事实上，曲水亭街现在也在逐步改造，可以看到有不少老房子里面已经人去房空，被贴上封条了。\n\n<img src=\"/img/jinan_travel/%E8%80%81%E6%B5%8E%E5%8D%97%E8%83%A1%E5%90%8C%E6%94%B9%E9%80%A0.png\" alt=\"老济南胡同改造\" style=\"zoom:25%;\" />\n\n<br>\n\n<img src=\"/img/jinan_travel/%E8%80%81%E6%B5%8E%E5%8D%97%E5%A5%B6%E6%B2%B9%E5%86%B0%E6%A3%8D.png\" alt=\"老济南奶油冰棍\" style=\"zoom:25%;\" />\n\n<br>\n\n<img src=\"/img/jinan_travel/%E6%9B%B2%E6%B0%B4%E4%BA%AD%E8%A1%97.png\" alt=\"曲水亭街\" style=\"zoom: 33%;\" />\n\n<br>\n\n<img src=\"/img/jinan_travel/%E6%B5%8E%E5%8D%97%E8%80%81%E8%83%A1%E5%90%8C.png\" alt=\"济南老胡同\" style=\"zoom:10%;\" />\n\n<br>\n\n<img src=\"/img/jinan_travel/%E8%B5%B7%E9%A3%8E%E6%A1%A5.png\" alt=\"起风桥\" style=\"zoom:15%;\" />\n\n【这里要是有一架无人机就好了】\n\n【一定会有的！！】\n\n## 超意兴\n\n来到济南的第一顿饭，在超意兴吃的快餐，25r，非常的划算\n\n<img src=\"/img/jinan_travel/IMG_20240621_135248.png\" alt=\"IMG_20240621_135248\" style=\"zoom:20%;\" />\n\n从大明湖出来以后还有一些时间，去武岳庙吃了块把子肉，个人评价口感有些比不上超意兴（切的有点厚，虽然知道它是快餐），当然这也有可能是天气太炎热了，又从大明湖走了一圈导致的食欲下降。\n\n## LAST\n\n济南老城区的文化部署还是做的很到位的，很多地方都成立了第三产业发展的部门，它的产物包括大观园（似乎还并不完善？）、芙蓉街、宽厚里以及未来的曲水亭街，在不破坏布局的情况下进行翻新，既保留了过去老胡同的徒感，又保证了新时代的观赏性，如果换一个合适的天气和气温，这样的地方或许会有一个更好的旅行体验。\n\n另外，一个人的旅行或许是孤独了一些，包括应对一些突发状况并不成熟，但是相比团队出行，多了一份宁静和自由，对于突如其来的念头，也可以随时付诸实践想法产生->制定计划->执行计划），不仅如此，因为旅行个体数量的减少，和当地人接触的频率也提高了很多，这有助于我们产生对不同地域的人的看法和观感（或者说纠正更合适？），网上总是有很多人在开地图炮，人云亦云地传播，以至于演变到后面可能对没有见过的人产生一些错误的认知。\n\n当然了，就我这两天和当地人接触下来，济南这边的人是非常热情好客的，不仅不抗拒和陌生游客的交流，还很乐意为游客提供一些经验上的帮助，包括路线，景点等等。\n\n#### 小插曲\n\n> 1）车票定的是学生票，但其实我是不具备购买学生票的条件的（学生证上需要盖章），但是最后也没有查这个，也算是占了点小便宜吧\n>\n> 2）11点到13点那会的太阳太毒辣了，胳膊没做防晒，导致两条手臂和后脖子都被晒伤了，持续不断的蜕皮。😥\n>\n> <img src=\"/img/jinan_travel/wx_camera_1719046544940.jpg\" alt=\"wx_camera_1719046544940\" style=\"zoom:25%;\" />\n>\n> 后来的后来，过了几天\n>\n> <img src=\"/img/jinan_travel/wx_camera_1719390403383.jpg\" alt=\"wx_camera_1719390403383\" style=\"zoom:25%;\" />\n>\n> 3）大明湖边上买了一包济南老酸奶大麻花，10r，里面也没吃到酸奶，纯面，太干了，啃了半个扔掉了\n>\n> 4）订票定错了，定成18点出发的车票了，导致19点45到的时候急得团团转，最后上车补票才坐到末班车，不仅比原来定的票贵而且还是站票。\n","source":"_posts/jinan_travel.md","raw":"---\ntitle: 泉城-济南\ncategories:\n  - 生活记录\ndate: 2024-07-14 10:43\nthumbnail: \"img/thumbnail/jinan.png\"\ncover: \"img/cover/jinan.png\"\nexcerpt: \"2024年6月21日，独自前往山东进行游玩，济南市停留了一天半时间游玩。\"\ntags:\n    - 旅途\n---\n\n## 行程记录\n\n```txt\n6月21日：小雨转暴雨\n05：40 驱车前往上海虹桥火车站\n07：38 乘坐G110次列车前往济南西站\n11：40 到达济南西站，买了两张刮刮乐，一张没中\n12：35 乘坐G6999次列车前往济南站\n13：00 前往酒店，放下行李，前往最近的一个超意兴吃饭\n15：00 步行前往大观园\n16：00 抵达趵突泉\n19：00 返回酒店\n19：40 骑自行车前往千佛山\n21：15 打车返回酒店\n\n6月22日：晴\n08：30 出发前往济南站办理行李寄存，加一顿早饭\n08：52 乘坐K3次公交车，在共青团路站下车，骑车前往五龙潭公园 \n11：30 骑车前往芙蓉街\n12：30 穿过芙蓉街来到曲水亭街\n12：55 穿过曲水亭街来到大明湖\n13：00 沿着大明湖步行游览\n14：00 进入超然楼进行观光\n16：45 骑车前往宽厚里\n17：15 从宽厚里步行前往黑虎泉\n18：00 骑车返回曲水亭街\n18：40 骑车前往超然楼\n19：30 骑车前往济南站\n\n```\n\n## 出行路线\n\n<img src=\"/img/jinan_travel/7707e2487fcdfccad200b6d92c858b1.png\" alt=\"7707e2487fcdfccad200b6d92c858b1\" style=\"zoom: 50%;\" />\n\n## 大观园\n\n阿油给我的酒店定在槐荫区经三路省立医院附近地希岸酒店，个人还是很满意这家酒店的，不论是卫生还是配套设施；\n\n因为下雨，我刚开始的计划是步行前往大观园，结束之后直接返回酒店休息的\n\n步行路上正好路过了网红打卡点，有不少人在此处拍照，老城区的一些城市文化做的还是很可以的\n\n<img src=\"/img/jinan_travel/%E5%A4%B9%E5%BF%83%E8%83%A1%E5%90%8C.png\" alt=\"夹心胡同\" style=\"zoom:15%;\" />\n\n<br>\n\n<img src=\"/img/jinan_travel/%E6%B5%8E%E5%8D%97%E5%A2%99.png\" alt=\"济南墙\" style=\"zoom:15%;\" />\n\n<br>\n\n<img src=\"/img/jinan_travel/%E7%88%B1%E5%BF%83%E7%BA%A2%E7%81%AF.png\" alt=\"爱心红灯\" style=\"zoom:13.5%;\" />\n\n计划赶不上变化，大观园显然是被自媒体捧过头了😂\n\n小吃街规模不算很大，能逛的区域不算很多，个人觉得不算很惊艳，不过里面有一些非物质文化的小店，包括相声，泥砖等等\n\n<img src=\"/img/jinan_travel/%E5%A4%A7%E8%A7%82%E5%9B%AD.png\" alt=\"大观园\" style=\"zoom:20%;\" />\n\n## 趵突泉\n\n向东一路步行过去，走到了济南绿地普利中心，运气不太妙啊，到这的时候突然下起了暴雨\n\n<img src=\"/img/jinan_travel/e77f1a35c400301fb207671d1211242.png\" alt=\"e77f1a35c400301fb207671d1211242\" style=\"zoom:25%;\" />\n\n一阵暴雨过后，前往趵突泉的路上走错了地方，误入了一个小胡同里，遇到一个阿姨，帮我指明了前往趵突泉的途径，然后塞给了我一本小册子（果然是考公考编大省）\n\n<img src=\"/img/jinan_travel/image-20240702132800880.png\" alt=\"image-20240702132800880\" style=\"zoom: 75%;\" />\n\n趵突泉这个景点凭借全日制学生证，在当地的一个app-----369出行上绑定学信网信息之后会生成一个通过码，免费参观趵突泉，不过学校在这个节骨眼提前给我的学信网提交了毕业信息，导致这个认证并没有通过，最后还是购买的学生票，这个只看学生证信息，比较宽松，20r一张\n\n![image-20240702134340918](/img/jinan_travel/image-20240702134340918.png)\n\n济南之所以叫泉城，不是因为这里有号称天下第一趵突泉，而是因为这里有着一个较大范围的泉群，包括一些小胡同的命名也是根据小胡同里的泉名来的。\n\n所谓的趵突泉其实是一个三眼泉，我刚到的时候正在下雨，泉水的翻腾并不是很明显，看过去就像是小泡泡升起一样。\n\n![趵突泉](/img/jinan_travel/%E8%B6%B5%E7%AA%81%E6%B3%89.png)\n\n值得一提的是，不仅是这一片泉水池，几乎园区里能观察到的泉水池几乎都有这个特性，水池清澈见底，观赏的鱼也是肥美华丽，鱼和水之间虽然达不到皆若空游无所依的地步，但也能轻松的望见鱼的游耍以及池底的植被。这一方面是因为泉水本身的水质足够好，另一方面也是因为园区对泉群的管理到位，几乎每一个有泉池的地方都能听见广播在播放禁止游客投喂米油，馒头，面包之类的话语。\n\n在这片园区之中，还有一些纪念馆，包括李清照纪念馆以及五三惨案纪念馆等等\n\n<img src=\"/img/jinan_travel/%E6%9D%8E%E6%B8%85%E7%85%A7%E7%94%BB%E5%83%8F.png\" alt=\"李清照画像\" style=\"zoom:15%;\" />\n\n> 济南惨案，又称五三惨案。1928年2月，蒋、桂、冯、阎联合发动了与张作霖争夺东北的战争。1928年4月，蒋介石军队北进。为阻止英、美势力向北发展，1928年5月3日，日本侵略者在山东省济南向国民党军发动进攻。由于蒋介石一味妥协退让并下达不抵抗命令，大量中国军民遭到屠杀。当国民革命军进占济南时，日本帝国主义借口保护日侨，出兵干涉，并于1928年5月3日凶残地杀害了国民政府山东特派交涉员蔡公时等17名外交人员，进而强占全城，恣意杀戮中国军民6123人，激起全中国人民的极大愤慨，同时也受到世界舆论的谴责。美、英等国从他们在华利益出发，也向日本施加压力。1929年2月28日，日本政府与国民党政府达成协定，并从济南撤军，济南事件即告结束。\n\n出于对不幸遇难的那些亡者的敬意，五三惨案纪念馆以及纪念碑都没有拍摄照片。不过，在纪念馆中存放着济南城墙的原貌修复模型。\n\n<img src=\"/img/jinan_travel/%E8%80%81%E6%B5%8E%E5%8D%97%E5%A4%8D%E5%8E%9F%E6%A8%A1%E5%9E%8B.png\" alt=\"老济南复原模型\" style=\"zoom: 15%;\" />\n\n可以看到济南曾经也是有里外两层城墙的，在经历了五三惨案中的炮击过后，城墙损失惨重，建国之后又拆除了一大部分，直至现在前去的时候已经看不到城墙的影子了。\n\n## 千佛山\n\n千佛山本来没准备爬的，但是始终碍于想弄个收集，所以在19点多的时候，眼瞅着雨下的不大，外套一披，登山杖一挂，美团自行车一蹬就出发了。\n\n<img src=\"/img/jinan_travel/image-20240703101658725.png\" alt=\"image-20240703101658725\" style=\"zoom:25%;\" />\n\n走错了地方，从偏门进去的，千佛山晚上18点之后不收门票。不过今天天气不是特别好，所以，夜里过来的人并不多，但偶尔还是可以碰到一些的。\n\n上山走的路似乎不是大路，不仅狭窄，而且没有什么路灯。\n\n<img src=\"/img/jinan_travel/image-20240704121142124.png\" alt=\"image-20240704121142124\" style=\"zoom:25%;\" />\n\n<br>\n\n<img src=\"/img/jinan_travel/image-20240704110017720.png\" alt=\"image-20240704110017720\" style=\"zoom: 80%;\" />\n\n在接近山顶的位置有一个较大的平台，因为下午下雨，往山顶方向的台阶被放了告示牌，因此，实际上这一次我并没有登顶。\n\n![image-20240704110552965](/img/jinan_travel/image-20240704110552965.png)\n\n平台上方可以看到济南老城区的全貌，不过由于下午下了一场不小的阵雨，导致晚间的雾气遮住了夜景\n\n<img src=\"/img/jinan_travel/image-20240704110651807.png\" alt=\"image-20240704110651807\" style=\"zoom: 10%;\" />\n\n下山走的大路，从正门出来的。\n\n<img src=\"/img/jinan_travel/image-20240704121647858.png\" alt=\"image-20240704121647858\" style=\"zoom:25%;\" />\n\n## 五龙潭公园\n\n乘坐K3次公交车，至共青团路之后，骑车到达五龙潭公园南部，实际上我是从中共山东早期历史纪念馆的后门（南）进入公园的。\n\n<img src=\"/img/jinan_travel/image-20240704155606548.png\" alt=\"image-20240704155606548\" style=\"zoom: 50%;\" />\n\n五龙潭因为五龙迎宾得名，这里依着泉群修建，自然也搭配了直饮水，不过，水不如黑虎泉的量大，因此小小的水龙头前排起了长长的队伍，我也就没有去打水了。\n\n在超然楼中的木雕也刻了五龙迎宾的画面。\n\n<img src=\"/img/jinan_travel/%E4%BA%94%E9%BE%99%E8%BF%8E%E5%AE%BE.png\" alt=\"五龙迎宾\" style=\"zoom:15%;\" />\n\n水池边有不少的小孩在嬉水，拿着水枪喷水玩。\n\n水池中的水很清澈，事实上大多泉水都像这样，不负泉城之名；听说九寨沟的水更加的神奇，希望有一天能亲眼看看。\n\n<img src=\"/img/jinan_travel/%E4%BA%94%E9%BE%99%E6%BD%AD%E5%85%AC%E5%9B%AD.png\" alt=\"五龙潭公园\" style=\"zoom:13%;\" />\n\n## 芙蓉街\n\n从五龙潭公园南门出来向东骑行可以快速抵达芙蓉街。\n\n<img src=\"/img/jinan_travel/%E8%8A%99%E8%93%89%E8%A1%97.png\" alt=\"芙蓉街\" style=\"zoom:15%;\" />\n\n芙蓉街因为芙蓉泉得名，这边有很多的小吃店，规模略微逊色于宽厚里。\n\n在这里踩了第一个坑，30r买的爆肚，感觉不是很划算，味道也中规中矩。\n\n<img src=\"/img/jinan_travel/image-20240704161658983.png\" alt=\"image-20240704161658983\" style=\"zoom: 50%;\" />\n\n买的烧饼夹牛肉，味道非常不错，饼烤得很好，14r\n\n<img src=\"/img/jinan_travel/%E7%83%A7%E9%A5%BC%E5%A4%B9%E7%89%9B%E8%82%89.png\" alt=\"烧饼夹牛肉\" style=\"zoom:10%;\" />\n\n继续往北走，会碰到一家卖西瓜汁的，用广播放“免费灌泉水”，我看了眼背包，两瓶水都见底了，但我又不好意思只灌水，所以又花了5r买了一小杯西瓜汁，西瓜汁是鲜榨的，味道很甜。\n\n<img src=\"/img/jinan_travel/image-20240704162422780.png\" alt=\"image-20240704162422780\" style=\"zoom:15%;\" />\n\n## 大明湖\n\n无意间走进了曲水亭街，一路向北，就到达了大明湖\n\n<img src=\"/img/jinan_travel/%E5%A4%A7%E6%98%8E%E6%B9%96.png\" alt=\"大明湖\" style=\"zoom:25%;\" />\n\n这个时间选择去逛大明湖实在不是一个比较合适的时机，正值夏至的中午，太阳毒辣无比，但也正是这种高温天，荷花开的十分旺盛。\n\n天气太热了，确实是有点影响观光的心情，我觉得这片糊域或许更适合晚饭后散步或者春秋天观光。\n\n<img src=\"/img/jinan_travel/%E5%A4%A7%E6%98%8E%E6%B9%96%E8%8D%B7%E8%8A%B1.png\" alt=\"大明湖荷花\" style=\"zoom:15%;\" />\n\n这是一块放在超然楼门口的木雕，压缩了整个老济南的景点。\n\n<img src=\"/img/jinan_travel/%E8%B6%85%E7%84%B6%E6%A5%BC%E6%9C%A8%E9%9B%95.png\" alt=\"超然楼木雕\" style=\"zoom:25%;\" />\n\n这个应该是大明湖的荷花木雕图\n\n<img src=\"/img/jinan_travel/%E8%B6%85%E7%84%B6%E6%A5%BC%E6%9C%A8%E9%9B%952.png\" alt=\"超然楼木雕2\" style=\"zoom:25%;\" />\n\n超然楼外景\n\n<img src=\"/img/jinan_travel/%E8%B6%85%E7%84%B6%E6%A5%BC.png\" alt=\"超然楼\" style=\"zoom:13%;\" />\n\n在前往济南站之前我从曲水亭街又专门骑车过来看超然楼的灯景，但是正值夏至，等到19：25分都没有开灯，只好先行放弃了。\n\n不过，看了一会广场舞哈哈哈。\n\n<img src=\"/img/jinan_travel/Videoframe_20240713_153346_com.huawei.himovie.loc.jpg\" alt=\"Videoframe_20240713_153346_com.huawei.himovie.loc\" style=\"zoom:25%;\" />\n\n最后前往济南站的路线是骑自行车去的，济南的老城区非机动车道还是很宽阔的，路修得也很不错，非常适合骑车\n\n<img src=\"/img/jinan_travel/%E6%B5%8E%E5%8D%97%E8%87%AA%E8%A1%8C%E8%BD%A6%E9%81%93.png\" alt=\"济南自行车道\" style=\"zoom: 10%;\" />\n\n<br>\n\n<img src=\"/img/jinan_travel/sporthealth-1-20240713-153633_edit_42309425324064.jpg\" alt=\"sporthealth-1-20240713-153633_edit_42309425324064\" style=\"zoom:25%;\" />\n\n## 解放阁\n\n这里我没上去。。。路过拍了张照片\n\n<img src=\"/img/jinan_travel/%E8%A7%A3%E6%94%BE%E9%98%81.png\" alt=\"解放阁\" style=\"zoom:15%;\" />\n\n## 宽厚里\n\n性质和芙蓉街很像，属于被改造过的商业街道，但是小吃数量不亚于芙蓉街\n\n<img src=\"/img/jinan_travel/%E5%AE%BD%E5%8E%9A%E9%87%8C.png\" alt=\"宽厚里\" style=\"zoom:15%;\" />\n\n<br>\n\n<img src=\"/img/jinan_travel/%E5%AE%BD%E5%8E%9A%E9%87%8C2.png\" alt=\"宽厚里2\" style=\"zoom:18%;\" />\n\n## 黑虎泉\n\n黑虎泉位于解放阁的西南角，需要穿过一条护城河\n\n黑虎泉的水源可以说是十分充足，水池边上也有很多好看的模特在拍照，如果有个大光圈镜头，确实是非常出片的。\n\n<img src=\"/img/jinan_travel/%E9%BB%91%E8%99%8E%E6%B3%892.png\" alt=\"黑虎泉泉水\" style=\"zoom:15%;\" />\n\n景区有为游客开槽，借助石壁开好的槽口，可以直接灌水，当地的居民也经常会用一个一个的大桶去接水。我把自己已经空空如也的两个水瓶全都打满了。这里的水和平时买到的矿泉水和家里的自来水口感不太一样，要更加绵软柔和。\n\n<img src=\"/img/jinan_travel/%E9%BB%91%E8%99%8E%E6%B3%89.png\" alt=\"黑虎泉\" style=\"zoom:20%;\" />\n\n## 曲水亭街\n\n之后听了阿油的建议，我又返回了曲水亭街，虽然都是所谓的老街，但是和芙蓉街还是有着明显的不同。\n\n曲水亭街更像是旧时代遗留下的纯粹的遗产，而芙蓉街更像是新时代用来吸引游客的产物。\n\n但事实上，曲水亭街现在也在逐步改造，可以看到有不少老房子里面已经人去房空，被贴上封条了。\n\n<img src=\"/img/jinan_travel/%E8%80%81%E6%B5%8E%E5%8D%97%E8%83%A1%E5%90%8C%E6%94%B9%E9%80%A0.png\" alt=\"老济南胡同改造\" style=\"zoom:25%;\" />\n\n<br>\n\n<img src=\"/img/jinan_travel/%E8%80%81%E6%B5%8E%E5%8D%97%E5%A5%B6%E6%B2%B9%E5%86%B0%E6%A3%8D.png\" alt=\"老济南奶油冰棍\" style=\"zoom:25%;\" />\n\n<br>\n\n<img src=\"/img/jinan_travel/%E6%9B%B2%E6%B0%B4%E4%BA%AD%E8%A1%97.png\" alt=\"曲水亭街\" style=\"zoom: 33%;\" />\n\n<br>\n\n<img src=\"/img/jinan_travel/%E6%B5%8E%E5%8D%97%E8%80%81%E8%83%A1%E5%90%8C.png\" alt=\"济南老胡同\" style=\"zoom:10%;\" />\n\n<br>\n\n<img src=\"/img/jinan_travel/%E8%B5%B7%E9%A3%8E%E6%A1%A5.png\" alt=\"起风桥\" style=\"zoom:15%;\" />\n\n【这里要是有一架无人机就好了】\n\n【一定会有的！！】\n\n## 超意兴\n\n来到济南的第一顿饭，在超意兴吃的快餐，25r，非常的划算\n\n<img src=\"/img/jinan_travel/IMG_20240621_135248.png\" alt=\"IMG_20240621_135248\" style=\"zoom:20%;\" />\n\n从大明湖出来以后还有一些时间，去武岳庙吃了块把子肉，个人评价口感有些比不上超意兴（切的有点厚，虽然知道它是快餐），当然这也有可能是天气太炎热了，又从大明湖走了一圈导致的食欲下降。\n\n## LAST\n\n济南老城区的文化部署还是做的很到位的，很多地方都成立了第三产业发展的部门，它的产物包括大观园（似乎还并不完善？）、芙蓉街、宽厚里以及未来的曲水亭街，在不破坏布局的情况下进行翻新，既保留了过去老胡同的徒感，又保证了新时代的观赏性，如果换一个合适的天气和气温，这样的地方或许会有一个更好的旅行体验。\n\n另外，一个人的旅行或许是孤独了一些，包括应对一些突发状况并不成熟，但是相比团队出行，多了一份宁静和自由，对于突如其来的念头，也可以随时付诸实践想法产生->制定计划->执行计划），不仅如此，因为旅行个体数量的减少，和当地人接触的频率也提高了很多，这有助于我们产生对不同地域的人的看法和观感（或者说纠正更合适？），网上总是有很多人在开地图炮，人云亦云地传播，以至于演变到后面可能对没有见过的人产生一些错误的认知。\n\n当然了，就我这两天和当地人接触下来，济南这边的人是非常热情好客的，不仅不抗拒和陌生游客的交流，还很乐意为游客提供一些经验上的帮助，包括路线，景点等等。\n\n#### 小插曲\n\n> 1）车票定的是学生票，但其实我是不具备购买学生票的条件的（学生证上需要盖章），但是最后也没有查这个，也算是占了点小便宜吧\n>\n> 2）11点到13点那会的太阳太毒辣了，胳膊没做防晒，导致两条手臂和后脖子都被晒伤了，持续不断的蜕皮。😥\n>\n> <img src=\"/img/jinan_travel/wx_camera_1719046544940.jpg\" alt=\"wx_camera_1719046544940\" style=\"zoom:25%;\" />\n>\n> 后来的后来，过了几天\n>\n> <img src=\"/img/jinan_travel/wx_camera_1719390403383.jpg\" alt=\"wx_camera_1719390403383\" style=\"zoom:25%;\" />\n>\n> 3）大明湖边上买了一包济南老酸奶大麻花，10r，里面也没吃到酸奶，纯面，太干了，啃了半个扔掉了\n>\n> 4）订票定错了，定成18点出发的车票了，导致19点45到的时候急得团团转，最后上车补票才坐到末班车，不仅比原来定的票贵而且还是站票。\n","slug":"jinan_travel","published":1,"updated":"2024-08-24T08:03:46.379Z","comments":1,"layout":"post","photos":[],"_id":"cm0b0qx7h000fjwur3mmd1d1p","content":"<h2 id=\"行程记录\"><a href=\"#行程记录\" class=\"headerlink\" title=\"行程记录\"></a>行程记录</h2><div class=\"highlight-container\" data-rel=\"Txt\"><figure class=\"iseeu highlight txt\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">6月21日：小雨转暴雨</span><br><span class=\"line\">05：40 驱车前往上海虹桥火车站</span><br><span class=\"line\">07：38 乘坐G110次列车前往济南西站</span><br><span class=\"line\">11：40 到达济南西站，买了两张刮刮乐，一张没中</span><br><span class=\"line\">12：35 乘坐G6999次列车前往济南站</span><br><span class=\"line\">13：00 前往酒店，放下行李，前往最近的一个超意兴吃饭</span><br><span class=\"line\">15：00 步行前往大观园</span><br><span class=\"line\">16：00 抵达趵突泉</span><br><span class=\"line\">19：00 返回酒店</span><br><span class=\"line\">19：40 骑自行车前往千佛山</span><br><span class=\"line\">21：15 打车返回酒店</span><br><span class=\"line\"></span><br><span class=\"line\">6月22日：晴</span><br><span class=\"line\">08：30 出发前往济南站办理行李寄存，加一顿早饭</span><br><span class=\"line\">08：52 乘坐K3次公交车，在共青团路站下车，骑车前往五龙潭公园 </span><br><span class=\"line\">11：30 骑车前往芙蓉街</span><br><span class=\"line\">12：30 穿过芙蓉街来到曲水亭街</span><br><span class=\"line\">12：55 穿过曲水亭街来到大明湖</span><br><span class=\"line\">13：00 沿着大明湖步行游览</span><br><span class=\"line\">14：00 进入超然楼进行观光</span><br><span class=\"line\">16：45 骑车前往宽厚里</span><br><span class=\"line\">17：15 从宽厚里步行前往黑虎泉</span><br><span class=\"line\">18：00 骑车返回曲水亭街</span><br><span class=\"line\">18：40 骑车前往超然楼</span><br><span class=\"line\">19：30 骑车前往济南站</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></div>\n\n<h2 id=\"出行路线\"><a href=\"#出行路线\" class=\"headerlink\" title=\"出行路线\"></a>出行路线</h2><img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/jinan_travel/7707e2487fcdfccad200b6d92c858b1.png\" alt=\"7707e2487fcdfccad200b6d92c858b1\" style=\"zoom: 50%;\">\n\n<h2 id=\"大观园\"><a href=\"#大观园\" class=\"headerlink\" title=\"大观园\"></a>大观园</h2><p>阿油给我的酒店定在槐荫区经三路省立医院附近地希岸酒店，个人还是很满意这家酒店的，不论是卫生还是配套设施；</p>\n<p>因为下雨，我刚开始的计划是步行前往大观园，结束之后直接返回酒店休息的</p>\n<p>步行路上正好路过了网红打卡点，有不少人在此处拍照，老城区的一些城市文化做的还是很可以的</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/jinan_travel/%E5%A4%B9%E5%BF%83%E8%83%A1%E5%90%8C.png\" alt=\"夹心胡同\" style=\"zoom:15%;\">\n\n<br>\n\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/jinan_travel/%E6%B5%8E%E5%8D%97%E5%A2%99.png\" alt=\"济南墙\" style=\"zoom:15%;\">\n\n<br>\n\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/jinan_travel/%E7%88%B1%E5%BF%83%E7%BA%A2%E7%81%AF.png\" alt=\"爱心红灯\" style=\"zoom:13.5%;\">\n\n<p>计划赶不上变化，大观园显然是被自媒体捧过头了😂</p>\n<p>小吃街规模不算很大，能逛的区域不算很多，个人觉得不算很惊艳，不过里面有一些非物质文化的小店，包括相声，泥砖等等</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/jinan_travel/%E5%A4%A7%E8%A7%82%E5%9B%AD.png\" alt=\"大观园\" style=\"zoom:20%;\">\n\n<h2 id=\"趵突泉\"><a href=\"#趵突泉\" class=\"headerlink\" title=\"趵突泉\"></a>趵突泉</h2><p>向东一路步行过去，走到了济南绿地普利中心，运气不太妙啊，到这的时候突然下起了暴雨</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/jinan_travel/e77f1a35c400301fb207671d1211242.png\" alt=\"e77f1a35c400301fb207671d1211242\" style=\"zoom:25%;\">\n\n<p>一阵暴雨过后，前往趵突泉的路上走错了地方，误入了一个小胡同里，遇到一个阿姨，帮我指明了前往趵突泉的途径，然后塞给了我一本小册子（果然是考公考编大省）</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/jinan_travel/image-20240702132800880.png\" alt=\"image-20240702132800880\" style=\"zoom: 75%;\">\n\n<p>趵突泉这个景点凭借全日制学生证，在当地的一个app—–369出行上绑定学信网信息之后会生成一个通过码，免费参观趵突泉，不过学校在这个节骨眼提前给我的学信网提交了毕业信息，导致这个认证并没有通过，最后还是购买的学生票，这个只看学生证信息，比较宽松，20r一张</p>\n<p><img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/jinan_travel/image-20240702134340918.png\" alt=\"image-20240702134340918\"></p>\n<p>济南之所以叫泉城，不是因为这里有号称天下第一趵突泉，而是因为这里有着一个较大范围的泉群，包括一些小胡同的命名也是根据小胡同里的泉名来的。</p>\n<p>所谓的趵突泉其实是一个三眼泉，我刚到的时候正在下雨，泉水的翻腾并不是很明显，看过去就像是小泡泡升起一样。</p>\n<p><img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/jinan_travel/%E8%B6%B5%E7%AA%81%E6%B3%89.png\" alt=\"趵突泉\"></p>\n<p>值得一提的是，不仅是这一片泉水池，几乎园区里能观察到的泉水池几乎都有这个特性，水池清澈见底，观赏的鱼也是肥美华丽，鱼和水之间虽然达不到皆若空游无所依的地步，但也能轻松的望见鱼的游耍以及池底的植被。这一方面是因为泉水本身的水质足够好，另一方面也是因为园区对泉群的管理到位，几乎每一个有泉池的地方都能听见广播在播放禁止游客投喂米油，馒头，面包之类的话语。</p>\n<p>在这片园区之中，还有一些纪念馆，包括李清照纪念馆以及五三惨案纪念馆等等</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/jinan_travel/%E6%9D%8E%E6%B8%85%E7%85%A7%E7%94%BB%E5%83%8F.png\" alt=\"李清照画像\" style=\"zoom:15%;\">\n\n<blockquote>\n<p>济南惨案，又称五三惨案。1928年2月，蒋、桂、冯、阎联合发动了与张作霖争夺东北的战争。1928年4月，蒋介石军队北进。为阻止英、美势力向北发展，1928年5月3日，日本侵略者在山东省济南向国民党军发动进攻。由于蒋介石一味妥协退让并下达不抵抗命令，大量中国军民遭到屠杀。当国民革命军进占济南时，日本帝国主义借口保护日侨，出兵干涉，并于1928年5月3日凶残地杀害了国民政府山东特派交涉员蔡公时等17名外交人员，进而强占全城，恣意杀戮中国军民6123人，激起全中国人民的极大愤慨，同时也受到世界舆论的谴责。美、英等国从他们在华利益出发，也向日本施加压力。1929年2月28日，日本政府与国民党政府达成协定，并从济南撤军，济南事件即告结束。</p>\n</blockquote>\n<p>出于对不幸遇难的那些亡者的敬意，五三惨案纪念馆以及纪念碑都没有拍摄照片。不过，在纪念馆中存放着济南城墙的原貌修复模型。</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/jinan_travel/%E8%80%81%E6%B5%8E%E5%8D%97%E5%A4%8D%E5%8E%9F%E6%A8%A1%E5%9E%8B.png\" alt=\"老济南复原模型\" style=\"zoom: 15%;\">\n\n<p>可以看到济南曾经也是有里外两层城墙的，在经历了五三惨案中的炮击过后，城墙损失惨重，建国之后又拆除了一大部分，直至现在前去的时候已经看不到城墙的影子了。</p>\n<h2 id=\"千佛山\"><a href=\"#千佛山\" class=\"headerlink\" title=\"千佛山\"></a>千佛山</h2><p>千佛山本来没准备爬的，但是始终碍于想弄个收集，所以在19点多的时候，眼瞅着雨下的不大，外套一披，登山杖一挂，美团自行车一蹬就出发了。</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/jinan_travel/image-20240703101658725.png\" alt=\"image-20240703101658725\" style=\"zoom:25%;\">\n\n<p>走错了地方，从偏门进去的，千佛山晚上18点之后不收门票。不过今天天气不是特别好，所以，夜里过来的人并不多，但偶尔还是可以碰到一些的。</p>\n<p>上山走的路似乎不是大路，不仅狭窄，而且没有什么路灯。</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/jinan_travel/image-20240704121142124.png\" alt=\"image-20240704121142124\" style=\"zoom:25%;\">\n\n<br>\n\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/jinan_travel/image-20240704110017720.png\" alt=\"image-20240704110017720\" style=\"zoom: 80%;\">\n\n<p>在接近山顶的位置有一个较大的平台，因为下午下雨，往山顶方向的台阶被放了告示牌，因此，实际上这一次我并没有登顶。</p>\n<p><img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/jinan_travel/image-20240704110552965.png\" alt=\"image-20240704110552965\"></p>\n<p>平台上方可以看到济南老城区的全貌，不过由于下午下了一场不小的阵雨，导致晚间的雾气遮住了夜景</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/jinan_travel/image-20240704110651807.png\" alt=\"image-20240704110651807\" style=\"zoom: 10%;\">\n\n<p>下山走的大路，从正门出来的。</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/jinan_travel/image-20240704121647858.png\" alt=\"image-20240704121647858\" style=\"zoom:25%;\">\n\n<h2 id=\"五龙潭公园\"><a href=\"#五龙潭公园\" class=\"headerlink\" title=\"五龙潭公园\"></a>五龙潭公园</h2><p>乘坐K3次公交车，至共青团路之后，骑车到达五龙潭公园南部，实际上我是从中共山东早期历史纪念馆的后门（南）进入公园的。</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/jinan_travel/image-20240704155606548.png\" alt=\"image-20240704155606548\" style=\"zoom: 50%;\">\n\n<p>五龙潭因为五龙迎宾得名，这里依着泉群修建，自然也搭配了直饮水，不过，水不如黑虎泉的量大，因此小小的水龙头前排起了长长的队伍，我也就没有去打水了。</p>\n<p>在超然楼中的木雕也刻了五龙迎宾的画面。</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/jinan_travel/%E4%BA%94%E9%BE%99%E8%BF%8E%E5%AE%BE.png\" alt=\"五龙迎宾\" style=\"zoom:15%;\">\n\n<p>水池边有不少的小孩在嬉水，拿着水枪喷水玩。</p>\n<p>水池中的水很清澈，事实上大多泉水都像这样，不负泉城之名；听说九寨沟的水更加的神奇，希望有一天能亲眼看看。</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/jinan_travel/%E4%BA%94%E9%BE%99%E6%BD%AD%E5%85%AC%E5%9B%AD.png\" alt=\"五龙潭公园\" style=\"zoom:13%;\">\n\n<h2 id=\"芙蓉街\"><a href=\"#芙蓉街\" class=\"headerlink\" title=\"芙蓉街\"></a>芙蓉街</h2><p>从五龙潭公园南门出来向东骑行可以快速抵达芙蓉街。</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/jinan_travel/%E8%8A%99%E8%93%89%E8%A1%97.png\" alt=\"芙蓉街\" style=\"zoom:15%;\">\n\n<p>芙蓉街因为芙蓉泉得名，这边有很多的小吃店，规模略微逊色于宽厚里。</p>\n<p>在这里踩了第一个坑，30r买的爆肚，感觉不是很划算，味道也中规中矩。</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/jinan_travel/image-20240704161658983.png\" alt=\"image-20240704161658983\" style=\"zoom: 50%;\">\n\n<p>买的烧饼夹牛肉，味道非常不错，饼烤得很好，14r</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/jinan_travel/%E7%83%A7%E9%A5%BC%E5%A4%B9%E7%89%9B%E8%82%89.png\" alt=\"烧饼夹牛肉\" style=\"zoom:10%;\">\n\n<p>继续往北走，会碰到一家卖西瓜汁的，用广播放“免费灌泉水”，我看了眼背包，两瓶水都见底了，但我又不好意思只灌水，所以又花了5r买了一小杯西瓜汁，西瓜汁是鲜榨的，味道很甜。</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/jinan_travel/image-20240704162422780.png\" alt=\"image-20240704162422780\" style=\"zoom:15%;\">\n\n<h2 id=\"大明湖\"><a href=\"#大明湖\" class=\"headerlink\" title=\"大明湖\"></a>大明湖</h2><p>无意间走进了曲水亭街，一路向北，就到达了大明湖</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/jinan_travel/%E5%A4%A7%E6%98%8E%E6%B9%96.png\" alt=\"大明湖\" style=\"zoom:25%;\">\n\n<p>这个时间选择去逛大明湖实在不是一个比较合适的时机，正值夏至的中午，太阳毒辣无比，但也正是这种高温天，荷花开的十分旺盛。</p>\n<p>天气太热了，确实是有点影响观光的心情，我觉得这片糊域或许更适合晚饭后散步或者春秋天观光。</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/jinan_travel/%E5%A4%A7%E6%98%8E%E6%B9%96%E8%8D%B7%E8%8A%B1.png\" alt=\"大明湖荷花\" style=\"zoom:15%;\">\n\n<p>这是一块放在超然楼门口的木雕，压缩了整个老济南的景点。</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/jinan_travel/%E8%B6%85%E7%84%B6%E6%A5%BC%E6%9C%A8%E9%9B%95.png\" alt=\"超然楼木雕\" style=\"zoom:25%;\">\n\n<p>这个应该是大明湖的荷花木雕图</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/jinan_travel/%E8%B6%85%E7%84%B6%E6%A5%BC%E6%9C%A8%E9%9B%952.png\" alt=\"超然楼木雕2\" style=\"zoom:25%;\">\n\n<p>超然楼外景</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/jinan_travel/%E8%B6%85%E7%84%B6%E6%A5%BC.png\" alt=\"超然楼\" style=\"zoom:13%;\">\n\n<p>在前往济南站之前我从曲水亭街又专门骑车过来看超然楼的灯景，但是正值夏至，等到19：25分都没有开灯，只好先行放弃了。</p>\n<p>不过，看了一会广场舞哈哈哈。</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/jinan_travel/Videoframe_20240713_153346_com.huawei.himovie.loc.jpg\" alt=\"Videoframe_20240713_153346_com.huawei.himovie.loc\" style=\"zoom:25%;\">\n\n<p>最后前往济南站的路线是骑自行车去的，济南的老城区非机动车道还是很宽阔的，路修得也很不错，非常适合骑车</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/jinan_travel/%E6%B5%8E%E5%8D%97%E8%87%AA%E8%A1%8C%E8%BD%A6%E9%81%93.png\" alt=\"济南自行车道\" style=\"zoom: 10%;\">\n\n<br>\n\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/jinan_travel/sporthealth-1-20240713-153633_edit_42309425324064.jpg\" alt=\"sporthealth-1-20240713-153633_edit_42309425324064\" style=\"zoom:25%;\">\n\n<h2 id=\"解放阁\"><a href=\"#解放阁\" class=\"headerlink\" title=\"解放阁\"></a>解放阁</h2><p>这里我没上去。。。路过拍了张照片</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/jinan_travel/%E8%A7%A3%E6%94%BE%E9%98%81.png\" alt=\"解放阁\" style=\"zoom:15%;\">\n\n<h2 id=\"宽厚里\"><a href=\"#宽厚里\" class=\"headerlink\" title=\"宽厚里\"></a>宽厚里</h2><p>性质和芙蓉街很像，属于被改造过的商业街道，但是小吃数量不亚于芙蓉街</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/jinan_travel/%E5%AE%BD%E5%8E%9A%E9%87%8C.png\" alt=\"宽厚里\" style=\"zoom:15%;\">\n\n<br>\n\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/jinan_travel/%E5%AE%BD%E5%8E%9A%E9%87%8C2.png\" alt=\"宽厚里2\" style=\"zoom:18%;\">\n\n<h2 id=\"黑虎泉\"><a href=\"#黑虎泉\" class=\"headerlink\" title=\"黑虎泉\"></a>黑虎泉</h2><p>黑虎泉位于解放阁的西南角，需要穿过一条护城河</p>\n<p>黑虎泉的水源可以说是十分充足，水池边上也有很多好看的模特在拍照，如果有个大光圈镜头，确实是非常出片的。</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/jinan_travel/%E9%BB%91%E8%99%8E%E6%B3%892.png\" alt=\"黑虎泉泉水\" style=\"zoom:15%;\">\n\n<p>景区有为游客开槽，借助石壁开好的槽口，可以直接灌水，当地的居民也经常会用一个一个的大桶去接水。我把自己已经空空如也的两个水瓶全都打满了。这里的水和平时买到的矿泉水和家里的自来水口感不太一样，要更加绵软柔和。</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/jinan_travel/%E9%BB%91%E8%99%8E%E6%B3%89.png\" alt=\"黑虎泉\" style=\"zoom:20%;\">\n\n<h2 id=\"曲水亭街\"><a href=\"#曲水亭街\" class=\"headerlink\" title=\"曲水亭街\"></a>曲水亭街</h2><p>之后听了阿油的建议，我又返回了曲水亭街，虽然都是所谓的老街，但是和芙蓉街还是有着明显的不同。</p>\n<p>曲水亭街更像是旧时代遗留下的纯粹的遗产，而芙蓉街更像是新时代用来吸引游客的产物。</p>\n<p>但事实上，曲水亭街现在也在逐步改造，可以看到有不少老房子里面已经人去房空，被贴上封条了。</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/jinan_travel/%E8%80%81%E6%B5%8E%E5%8D%97%E8%83%A1%E5%90%8C%E6%94%B9%E9%80%A0.png\" alt=\"老济南胡同改造\" style=\"zoom:25%;\">\n\n<br>\n\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/jinan_travel/%E8%80%81%E6%B5%8E%E5%8D%97%E5%A5%B6%E6%B2%B9%E5%86%B0%E6%A3%8D.png\" alt=\"老济南奶油冰棍\" style=\"zoom:25%;\">\n\n<br>\n\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/jinan_travel/%E6%9B%B2%E6%B0%B4%E4%BA%AD%E8%A1%97.png\" alt=\"曲水亭街\" style=\"zoom: 33%;\">\n\n<br>\n\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/jinan_travel/%E6%B5%8E%E5%8D%97%E8%80%81%E8%83%A1%E5%90%8C.png\" alt=\"济南老胡同\" style=\"zoom:10%;\">\n\n<br>\n\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/jinan_travel/%E8%B5%B7%E9%A3%8E%E6%A1%A5.png\" alt=\"起风桥\" style=\"zoom:15%;\">\n\n<p>【这里要是有一架无人机就好了】</p>\n<p>【一定会有的！！】</p>\n<h2 id=\"超意兴\"><a href=\"#超意兴\" class=\"headerlink\" title=\"超意兴\"></a>超意兴</h2><p>来到济南的第一顿饭，在超意兴吃的快餐，25r，非常的划算</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/jinan_travel/IMG_20240621_135248.png\" alt=\"IMG_20240621_135248\" style=\"zoom:20%;\">\n\n<p>从大明湖出来以后还有一些时间，去武岳庙吃了块把子肉，个人评价口感有些比不上超意兴（切的有点厚，虽然知道它是快餐），当然这也有可能是天气太炎热了，又从大明湖走了一圈导致的食欲下降。</p>\n<h2 id=\"LAST\"><a href=\"#LAST\" class=\"headerlink\" title=\"LAST\"></a>LAST</h2><p>济南老城区的文化部署还是做的很到位的，很多地方都成立了第三产业发展的部门，它的产物包括大观园（似乎还并不完善？）、芙蓉街、宽厚里以及未来的曲水亭街，在不破坏布局的情况下进行翻新，既保留了过去老胡同的徒感，又保证了新时代的观赏性，如果换一个合适的天气和气温，这样的地方或许会有一个更好的旅行体验。</p>\n<p>另外，一个人的旅行或许是孤独了一些，包括应对一些突发状况并不成熟，但是相比团队出行，多了一份宁静和自由，对于突如其来的念头，也可以随时付诸实践想法产生-&gt;制定计划-&gt;执行计划），不仅如此，因为旅行个体数量的减少，和当地人接触的频率也提高了很多，这有助于我们产生对不同地域的人的看法和观感（或者说纠正更合适？），网上总是有很多人在开地图炮，人云亦云地传播，以至于演变到后面可能对没有见过的人产生一些错误的认知。</p>\n<p>当然了，就我这两天和当地人接触下来，济南这边的人是非常热情好客的，不仅不抗拒和陌生游客的交流，还很乐意为游客提供一些经验上的帮助，包括路线，景点等等。</p>\n<h4 id=\"小插曲\"><a href=\"#小插曲\" class=\"headerlink\" title=\"小插曲\"></a>小插曲</h4><blockquote>\n<p>1）车票定的是学生票，但其实我是不具备购买学生票的条件的（学生证上需要盖章），但是最后也没有查这个，也算是占了点小便宜吧</p>\n<p>2）11点到13点那会的太阳太毒辣了，胳膊没做防晒，导致两条手臂和后脖子都被晒伤了，持续不断的蜕皮。😥</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/jinan_travel/wx_camera_1719046544940.jpg\" alt=\"wx_camera_1719046544940\" style=\"zoom:25%;\">\n\n<p>后来的后来，过了几天</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/jinan_travel/wx_camera_1719390403383.jpg\" alt=\"wx_camera_1719390403383\" style=\"zoom:25%;\">\n\n<p>3）大明湖边上买了一包济南老酸奶大麻花，10r，里面也没吃到酸奶，纯面，太干了，啃了半个扔掉了</p>\n<p>4）订票定错了，定成18点出发的车票了，导致19点45到的时候急得团团转，最后上车补票才坐到末班车，不仅比原来定的票贵而且还是站票。</p>\n</blockquote>\n","more":"<h2 id=\"行程记录\"><a href=\"#行程记录\" class=\"headerlink\" title=\"行程记录\"></a>行程记录</h2><figure class=\"highlight txt\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">6月21日：小雨转暴雨</span><br><span class=\"line\">05：40 驱车前往上海虹桥火车站</span><br><span class=\"line\">07：38 乘坐G110次列车前往济南西站</span><br><span class=\"line\">11：40 到达济南西站，买了两张刮刮乐，一张没中</span><br><span class=\"line\">12：35 乘坐G6999次列车前往济南站</span><br><span class=\"line\">13：00 前往酒店，放下行李，前往最近的一个超意兴吃饭</span><br><span class=\"line\">15：00 步行前往大观园</span><br><span class=\"line\">16：00 抵达趵突泉</span><br><span class=\"line\">19：00 返回酒店</span><br><span class=\"line\">19：40 骑自行车前往千佛山</span><br><span class=\"line\">21：15 打车返回酒店</span><br><span class=\"line\"></span><br><span class=\"line\">6月22日：晴</span><br><span class=\"line\">08：30 出发前往济南站办理行李寄存，加一顿早饭</span><br><span class=\"line\">08：52 乘坐K3次公交车，在共青团路站下车，骑车前往五龙潭公园 </span><br><span class=\"line\">11：30 骑车前往芙蓉街</span><br><span class=\"line\">12：30 穿过芙蓉街来到曲水亭街</span><br><span class=\"line\">12：55 穿过曲水亭街来到大明湖</span><br><span class=\"line\">13：00 沿着大明湖步行游览</span><br><span class=\"line\">14：00 进入超然楼进行观光</span><br><span class=\"line\">16：45 骑车前往宽厚里</span><br><span class=\"line\">17：15 从宽厚里步行前往黑虎泉</span><br><span class=\"line\">18：00 骑车返回曲水亭街</span><br><span class=\"line\">18：40 骑车前往超然楼</span><br><span class=\"line\">19：30 骑车前往济南站</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"出行路线\"><a href=\"#出行路线\" class=\"headerlink\" title=\"出行路线\"></a>出行路线</h2><img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/jinan_travel/7707e2487fcdfccad200b6d92c858b1.png\" alt=\"7707e2487fcdfccad200b6d92c858b1\" style=\"zoom: 50%;\">\n\n<h2 id=\"大观园\"><a href=\"#大观园\" class=\"headerlink\" title=\"大观园\"></a>大观园</h2><p>阿油给我的酒店定在槐荫区经三路省立医院附近地希岸酒店，个人还是很满意这家酒店的，不论是卫生还是配套设施；</p>\n<p>因为下雨，我刚开始的计划是步行前往大观园，结束之后直接返回酒店休息的</p>\n<p>步行路上正好路过了网红打卡点，有不少人在此处拍照，老城区的一些城市文化做的还是很可以的</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/jinan_travel/%E5%A4%B9%E5%BF%83%E8%83%A1%E5%90%8C.png\" alt=\"夹心胡同\" style=\"zoom:15%;\">\n\n<br>\n\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/jinan_travel/%E6%B5%8E%E5%8D%97%E5%A2%99.png\" alt=\"济南墙\" style=\"zoom:15%;\">\n\n<br>\n\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/jinan_travel/%E7%88%B1%E5%BF%83%E7%BA%A2%E7%81%AF.png\" alt=\"爱心红灯\" style=\"zoom:13.5%;\">\n\n<p>计划赶不上变化，大观园显然是被自媒体捧过头了😂</p>\n<p>小吃街规模不算很大，能逛的区域不算很多，个人觉得不算很惊艳，不过里面有一些非物质文化的小店，包括相声，泥砖等等</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/jinan_travel/%E5%A4%A7%E8%A7%82%E5%9B%AD.png\" alt=\"大观园\" style=\"zoom:20%;\">\n\n<h2 id=\"趵突泉\"><a href=\"#趵突泉\" class=\"headerlink\" title=\"趵突泉\"></a>趵突泉</h2><p>向东一路步行过去，走到了济南绿地普利中心，运气不太妙啊，到这的时候突然下起了暴雨</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/jinan_travel/e77f1a35c400301fb207671d1211242.png\" alt=\"e77f1a35c400301fb207671d1211242\" style=\"zoom:25%;\">\n\n<p>一阵暴雨过后，前往趵突泉的路上走错了地方，误入了一个小胡同里，遇到一个阿姨，帮我指明了前往趵突泉的途径，然后塞给了我一本小册子（果然是考公考编大省）</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/jinan_travel/image-20240702132800880.png\" alt=\"image-20240702132800880\" style=\"zoom: 75%;\">\n\n<p>趵突泉这个景点凭借全日制学生证，在当地的一个app—–369出行上绑定学信网信息之后会生成一个通过码，免费参观趵突泉，不过学校在这个节骨眼提前给我的学信网提交了毕业信息，导致这个认证并没有通过，最后还是购买的学生票，这个只看学生证信息，比较宽松，20r一张</p>\n<p><img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/jinan_travel/image-20240702134340918.png\" alt=\"image-20240702134340918\"></p>\n<p>济南之所以叫泉城，不是因为这里有号称天下第一趵突泉，而是因为这里有着一个较大范围的泉群，包括一些小胡同的命名也是根据小胡同里的泉名来的。</p>\n<p>所谓的趵突泉其实是一个三眼泉，我刚到的时候正在下雨，泉水的翻腾并不是很明显，看过去就像是小泡泡升起一样。</p>\n<p><img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/jinan_travel/%E8%B6%B5%E7%AA%81%E6%B3%89.png\" alt=\"趵突泉\"></p>\n<p>值得一提的是，不仅是这一片泉水池，几乎园区里能观察到的泉水池几乎都有这个特性，水池清澈见底，观赏的鱼也是肥美华丽，鱼和水之间虽然达不到皆若空游无所依的地步，但也能轻松的望见鱼的游耍以及池底的植被。这一方面是因为泉水本身的水质足够好，另一方面也是因为园区对泉群的管理到位，几乎每一个有泉池的地方都能听见广播在播放禁止游客投喂米油，馒头，面包之类的话语。</p>\n<p>在这片园区之中，还有一些纪念馆，包括李清照纪念馆以及五三惨案纪念馆等等</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/jinan_travel/%E6%9D%8E%E6%B8%85%E7%85%A7%E7%94%BB%E5%83%8F.png\" alt=\"李清照画像\" style=\"zoom:15%;\">\n\n<blockquote>\n<p>济南惨案，又称五三惨案。1928年2月，蒋、桂、冯、阎联合发动了与张作霖争夺东北的战争。1928年4月，蒋介石军队北进。为阻止英、美势力向北发展，1928年5月3日，日本侵略者在山东省济南向国民党军发动进攻。由于蒋介石一味妥协退让并下达不抵抗命令，大量中国军民遭到屠杀。当国民革命军进占济南时，日本帝国主义借口保护日侨，出兵干涉，并于1928年5月3日凶残地杀害了国民政府山东特派交涉员蔡公时等17名外交人员，进而强占全城，恣意杀戮中国军民6123人，激起全中国人民的极大愤慨，同时也受到世界舆论的谴责。美、英等国从他们在华利益出发，也向日本施加压力。1929年2月28日，日本政府与国民党政府达成协定，并从济南撤军，济南事件即告结束。</p>\n</blockquote>\n<p>出于对不幸遇难的那些亡者的敬意，五三惨案纪念馆以及纪念碑都没有拍摄照片。不过，在纪念馆中存放着济南城墙的原貌修复模型。</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/jinan_travel/%E8%80%81%E6%B5%8E%E5%8D%97%E5%A4%8D%E5%8E%9F%E6%A8%A1%E5%9E%8B.png\" alt=\"老济南复原模型\" style=\"zoom: 15%;\">\n\n<p>可以看到济南曾经也是有里外两层城墙的，在经历了五三惨案中的炮击过后，城墙损失惨重，建国之后又拆除了一大部分，直至现在前去的时候已经看不到城墙的影子了。</p>\n<h2 id=\"千佛山\"><a href=\"#千佛山\" class=\"headerlink\" title=\"千佛山\"></a>千佛山</h2><p>千佛山本来没准备爬的，但是始终碍于想弄个收集，所以在19点多的时候，眼瞅着雨下的不大，外套一披，登山杖一挂，美团自行车一蹬就出发了。</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/jinan_travel/image-20240703101658725.png\" alt=\"image-20240703101658725\" style=\"zoom:25%;\">\n\n<p>走错了地方，从偏门进去的，千佛山晚上18点之后不收门票。不过今天天气不是特别好，所以，夜里过来的人并不多，但偶尔还是可以碰到一些的。</p>\n<p>上山走的路似乎不是大路，不仅狭窄，而且没有什么路灯。</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/jinan_travel/image-20240704121142124.png\" alt=\"image-20240704121142124\" style=\"zoom:25%;\">\n\n<br>\n\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/jinan_travel/image-20240704110017720.png\" alt=\"image-20240704110017720\" style=\"zoom: 80%;\">\n\n<p>在接近山顶的位置有一个较大的平台，因为下午下雨，往山顶方向的台阶被放了告示牌，因此，实际上这一次我并没有登顶。</p>\n<p><img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/jinan_travel/image-20240704110552965.png\" alt=\"image-20240704110552965\"></p>\n<p>平台上方可以看到济南老城区的全貌，不过由于下午下了一场不小的阵雨，导致晚间的雾气遮住了夜景</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/jinan_travel/image-20240704110651807.png\" alt=\"image-20240704110651807\" style=\"zoom: 10%;\">\n\n<p>下山走的大路，从正门出来的。</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/jinan_travel/image-20240704121647858.png\" alt=\"image-20240704121647858\" style=\"zoom:25%;\">\n\n<h2 id=\"五龙潭公园\"><a href=\"#五龙潭公园\" class=\"headerlink\" title=\"五龙潭公园\"></a>五龙潭公园</h2><p>乘坐K3次公交车，至共青团路之后，骑车到达五龙潭公园南部，实际上我是从中共山东早期历史纪念馆的后门（南）进入公园的。</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/jinan_travel/image-20240704155606548.png\" alt=\"image-20240704155606548\" style=\"zoom: 50%;\">\n\n<p>五龙潭因为五龙迎宾得名，这里依着泉群修建，自然也搭配了直饮水，不过，水不如黑虎泉的量大，因此小小的水龙头前排起了长长的队伍，我也就没有去打水了。</p>\n<p>在超然楼中的木雕也刻了五龙迎宾的画面。</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/jinan_travel/%E4%BA%94%E9%BE%99%E8%BF%8E%E5%AE%BE.png\" alt=\"五龙迎宾\" style=\"zoom:15%;\">\n\n<p>水池边有不少的小孩在嬉水，拿着水枪喷水玩。</p>\n<p>水池中的水很清澈，事实上大多泉水都像这样，不负泉城之名；听说九寨沟的水更加的神奇，希望有一天能亲眼看看。</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/jinan_travel/%E4%BA%94%E9%BE%99%E6%BD%AD%E5%85%AC%E5%9B%AD.png\" alt=\"五龙潭公园\" style=\"zoom:13%;\">\n\n<h2 id=\"芙蓉街\"><a href=\"#芙蓉街\" class=\"headerlink\" title=\"芙蓉街\"></a>芙蓉街</h2><p>从五龙潭公园南门出来向东骑行可以快速抵达芙蓉街。</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/jinan_travel/%E8%8A%99%E8%93%89%E8%A1%97.png\" alt=\"芙蓉街\" style=\"zoom:15%;\">\n\n<p>芙蓉街因为芙蓉泉得名，这边有很多的小吃店，规模略微逊色于宽厚里。</p>\n<p>在这里踩了第一个坑，30r买的爆肚，感觉不是很划算，味道也中规中矩。</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/jinan_travel/image-20240704161658983.png\" alt=\"image-20240704161658983\" style=\"zoom: 50%;\">\n\n<p>买的烧饼夹牛肉，味道非常不错，饼烤得很好，14r</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/jinan_travel/%E7%83%A7%E9%A5%BC%E5%A4%B9%E7%89%9B%E8%82%89.png\" alt=\"烧饼夹牛肉\" style=\"zoom:10%;\">\n\n<p>继续往北走，会碰到一家卖西瓜汁的，用广播放“免费灌泉水”，我看了眼背包，两瓶水都见底了，但我又不好意思只灌水，所以又花了5r买了一小杯西瓜汁，西瓜汁是鲜榨的，味道很甜。</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/jinan_travel/image-20240704162422780.png\" alt=\"image-20240704162422780\" style=\"zoom:15%;\">\n\n<h2 id=\"大明湖\"><a href=\"#大明湖\" class=\"headerlink\" title=\"大明湖\"></a>大明湖</h2><p>无意间走进了曲水亭街，一路向北，就到达了大明湖</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/jinan_travel/%E5%A4%A7%E6%98%8E%E6%B9%96.png\" alt=\"大明湖\" style=\"zoom:25%;\">\n\n<p>这个时间选择去逛大明湖实在不是一个比较合适的时机，正值夏至的中午，太阳毒辣无比，但也正是这种高温天，荷花开的十分旺盛。</p>\n<p>天气太热了，确实是有点影响观光的心情，我觉得这片糊域或许更适合晚饭后散步或者春秋天观光。</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/jinan_travel/%E5%A4%A7%E6%98%8E%E6%B9%96%E8%8D%B7%E8%8A%B1.png\" alt=\"大明湖荷花\" style=\"zoom:15%;\">\n\n<p>这是一块放在超然楼门口的木雕，压缩了整个老济南的景点。</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/jinan_travel/%E8%B6%85%E7%84%B6%E6%A5%BC%E6%9C%A8%E9%9B%95.png\" alt=\"超然楼木雕\" style=\"zoom:25%;\">\n\n<p>这个应该是大明湖的荷花木雕图</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/jinan_travel/%E8%B6%85%E7%84%B6%E6%A5%BC%E6%9C%A8%E9%9B%952.png\" alt=\"超然楼木雕2\" style=\"zoom:25%;\">\n\n<p>超然楼外景</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/jinan_travel/%E8%B6%85%E7%84%B6%E6%A5%BC.png\" alt=\"超然楼\" style=\"zoom:13%;\">\n\n<p>在前往济南站之前我从曲水亭街又专门骑车过来看超然楼的灯景，但是正值夏至，等到19：25分都没有开灯，只好先行放弃了。</p>\n<p>不过，看了一会广场舞哈哈哈。</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/jinan_travel/Videoframe_20240713_153346_com.huawei.himovie.loc.jpg\" alt=\"Videoframe_20240713_153346_com.huawei.himovie.loc\" style=\"zoom:25%;\">\n\n<p>最后前往济南站的路线是骑自行车去的，济南的老城区非机动车道还是很宽阔的，路修得也很不错，非常适合骑车</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/jinan_travel/%E6%B5%8E%E5%8D%97%E8%87%AA%E8%A1%8C%E8%BD%A6%E9%81%93.png\" alt=\"济南自行车道\" style=\"zoom: 10%;\">\n\n<br>\n\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/jinan_travel/sporthealth-1-20240713-153633_edit_42309425324064.jpg\" alt=\"sporthealth-1-20240713-153633_edit_42309425324064\" style=\"zoom:25%;\">\n\n<h2 id=\"解放阁\"><a href=\"#解放阁\" class=\"headerlink\" title=\"解放阁\"></a>解放阁</h2><p>这里我没上去。。。路过拍了张照片</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/jinan_travel/%E8%A7%A3%E6%94%BE%E9%98%81.png\" alt=\"解放阁\" style=\"zoom:15%;\">\n\n<h2 id=\"宽厚里\"><a href=\"#宽厚里\" class=\"headerlink\" title=\"宽厚里\"></a>宽厚里</h2><p>性质和芙蓉街很像，属于被改造过的商业街道，但是小吃数量不亚于芙蓉街</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/jinan_travel/%E5%AE%BD%E5%8E%9A%E9%87%8C.png\" alt=\"宽厚里\" style=\"zoom:15%;\">\n\n<br>\n\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/jinan_travel/%E5%AE%BD%E5%8E%9A%E9%87%8C2.png\" alt=\"宽厚里2\" style=\"zoom:18%;\">\n\n<h2 id=\"黑虎泉\"><a href=\"#黑虎泉\" class=\"headerlink\" title=\"黑虎泉\"></a>黑虎泉</h2><p>黑虎泉位于解放阁的西南角，需要穿过一条护城河</p>\n<p>黑虎泉的水源可以说是十分充足，水池边上也有很多好看的模特在拍照，如果有个大光圈镜头，确实是非常出片的。</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/jinan_travel/%E9%BB%91%E8%99%8E%E6%B3%892.png\" alt=\"黑虎泉泉水\" style=\"zoom:15%;\">\n\n<p>景区有为游客开槽，借助石壁开好的槽口，可以直接灌水，当地的居民也经常会用一个一个的大桶去接水。我把自己已经空空如也的两个水瓶全都打满了。这里的水和平时买到的矿泉水和家里的自来水口感不太一样，要更加绵软柔和。</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/jinan_travel/%E9%BB%91%E8%99%8E%E6%B3%89.png\" alt=\"黑虎泉\" style=\"zoom:20%;\">\n\n<h2 id=\"曲水亭街\"><a href=\"#曲水亭街\" class=\"headerlink\" title=\"曲水亭街\"></a>曲水亭街</h2><p>之后听了阿油的建议，我又返回了曲水亭街，虽然都是所谓的老街，但是和芙蓉街还是有着明显的不同。</p>\n<p>曲水亭街更像是旧时代遗留下的纯粹的遗产，而芙蓉街更像是新时代用来吸引游客的产物。</p>\n<p>但事实上，曲水亭街现在也在逐步改造，可以看到有不少老房子里面已经人去房空，被贴上封条了。</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/jinan_travel/%E8%80%81%E6%B5%8E%E5%8D%97%E8%83%A1%E5%90%8C%E6%94%B9%E9%80%A0.png\" alt=\"老济南胡同改造\" style=\"zoom:25%;\">\n\n<br>\n\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/jinan_travel/%E8%80%81%E6%B5%8E%E5%8D%97%E5%A5%B6%E6%B2%B9%E5%86%B0%E6%A3%8D.png\" alt=\"老济南奶油冰棍\" style=\"zoom:25%;\">\n\n<br>\n\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/jinan_travel/%E6%9B%B2%E6%B0%B4%E4%BA%AD%E8%A1%97.png\" alt=\"曲水亭街\" style=\"zoom: 33%;\">\n\n<br>\n\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/jinan_travel/%E6%B5%8E%E5%8D%97%E8%80%81%E8%83%A1%E5%90%8C.png\" alt=\"济南老胡同\" style=\"zoom:10%;\">\n\n<br>\n\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/jinan_travel/%E8%B5%B7%E9%A3%8E%E6%A1%A5.png\" alt=\"起风桥\" style=\"zoom:15%;\">\n\n<p>【这里要是有一架无人机就好了】</p>\n<p>【一定会有的！！】</p>\n<h2 id=\"超意兴\"><a href=\"#超意兴\" class=\"headerlink\" title=\"超意兴\"></a>超意兴</h2><p>来到济南的第一顿饭，在超意兴吃的快餐，25r，非常的划算</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/jinan_travel/IMG_20240621_135248.png\" alt=\"IMG_20240621_135248\" style=\"zoom:20%;\">\n\n<p>从大明湖出来以后还有一些时间，去武岳庙吃了块把子肉，个人评价口感有些比不上超意兴（切的有点厚，虽然知道它是快餐），当然这也有可能是天气太炎热了，又从大明湖走了一圈导致的食欲下降。</p>\n<h2 id=\"LAST\"><a href=\"#LAST\" class=\"headerlink\" title=\"LAST\"></a>LAST</h2><p>济南老城区的文化部署还是做的很到位的，很多地方都成立了第三产业发展的部门，它的产物包括大观园（似乎还并不完善？）、芙蓉街、宽厚里以及未来的曲水亭街，在不破坏布局的情况下进行翻新，既保留了过去老胡同的徒感，又保证了新时代的观赏性，如果换一个合适的天气和气温，这样的地方或许会有一个更好的旅行体验。</p>\n<p>另外，一个人的旅行或许是孤独了一些，包括应对一些突发状况并不成熟，但是相比团队出行，多了一份宁静和自由，对于突如其来的念头，也可以随时付诸实践想法产生-&gt;制定计划-&gt;执行计划），不仅如此，因为旅行个体数量的减少，和当地人接触的频率也提高了很多，这有助于我们产生对不同地域的人的看法和观感（或者说纠正更合适？），网上总是有很多人在开地图炮，人云亦云地传播，以至于演变到后面可能对没有见过的人产生一些错误的认知。</p>\n<p>当然了，就我这两天和当地人接触下来，济南这边的人是非常热情好客的，不仅不抗拒和陌生游客的交流，还很乐意为游客提供一些经验上的帮助，包括路线，景点等等。</p>\n<h4 id=\"小插曲\"><a href=\"#小插曲\" class=\"headerlink\" title=\"小插曲\"></a>小插曲</h4><blockquote>\n<p>1）车票定的是学生票，但其实我是不具备购买学生票的条件的（学生证上需要盖章），但是最后也没有查这个，也算是占了点小便宜吧</p>\n<p>2）11点到13点那会的太阳太毒辣了，胳膊没做防晒，导致两条手臂和后脖子都被晒伤了，持续不断的蜕皮。😥</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/jinan_travel/wx_camera_1719046544940.jpg\" alt=\"wx_camera_1719046544940\" style=\"zoom:25%;\">\n\n<p>后来的后来，过了几天</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/jinan_travel/wx_camera_1719390403383.jpg\" alt=\"wx_camera_1719390403383\" style=\"zoom:25%;\">\n\n<p>3）大明湖边上买了一包济南老酸奶大麻花，10r，里面也没吃到酸奶，纯面，太干了，啃了半个扔掉了</p>\n<p>4）订票定错了，定成18点出发的车票了，导致19点45到的时候急得团团转，最后上车补票才坐到末班车，不仅比原来定的票贵而且还是站票。</p>\n</blockquote>\n"},{"title":"软考笔记（网工）","description":"软考笔记","date":"2024-08-10T13:16:00.000Z","excerpt":"准备一手网工的软考，🐛🐛","_content":"\n## 工具包\n\n本笔记大部分内容来源于 **SUMMER课堂 **的课件【淘宝买的】【好像是盗版？就10来块钱，如果是盗版的话真是抱歉啊抱歉】\n\n## 网络基础理论\n\n### 逻辑运算\n\n$$\nX\\cdot Y\\,\\,\\,与运算\\,\\,\\,全部为1时，结果才为1\\\\\n X+Y\\,\\,\\,或运算\\,\\,\\,有一个为1,则结果为1\\\\\n X \\oplus Y\\,异或\\,或者说半加法，\\,1和0得1，\\,1和1得0，\\,0和0得0\n$$\n\n### CRC冗余校验标准\n\n教程来自【[CRC校验]手算与直观演示】 https://www.bilibili.com/video/BV1V4411Z7VA\n\n1. 先用给出的CRC多项式，写出CRC除数\n2. 在需要添加校验数的数据串后加0（阶数个0）\n3. 用上一条加工过的数据串和CRC除数做异或运算，直至无法进行异或运算，由此得到CRC校验和\n4. 将校验和添加值数据串后，得到带CRC校验的数据\n\n**作用是对传输的数据包进行校验，而且只会校验不会纠错**\n\n补充说明，来自[CRC校验原理及步骤-CSDN博客](https://blog.csdn.net/d_leo/article/details/73572373)\n\n> **CRC校验原理：**\n>\n> 其根本思想就是先在要发送的帧后面附加一个数（这个就是用来校验的校验码，但要注意，这里的数也是二进制序列的，下同），生成一个新帧发送给接收端。当然，这个附加的数不是随意的，它要使所生成的新帧能与发送端和接收端共同选定的某个特定数整除（注意，这里不是直接采用二进制除法，而是采用一种称之为“ **模2除法**”）。到达接收端后，再把接收到的新帧除以（同样采用“ **模2除法**”）这个选定的除数。因为在发送端发送数据帧之前就已通过附加一个数，做了“去余”处理（也就已经能整除了），所以结果应该是没有余数。如果有余数，则表明该帧在传输过程中出现了差错。\n>\n> CRC校验中有两个关键点，一是预先确定一个发送送端和接收端都用来作为除数的二进制比特串（或多项式），可以随机选择，也可以使用国际标准，但是最高位和最低位必须为1；二是把原始帧与上面计算出的除数进行模2除法运算，计算出CRC码。\n\n<img src=\"/img/software_exam/0930abe368ad014ddd3d5a98f87c25d.png\" alt=\"0930abe368ad014ddd3d5a98f87c25d\" style=\"zoom:15%;\" />\n\n### TCP/IP  &&  OSI模型\n\n<img src=\"/img/software_exam/54573865e5952bd00fb98cbf2d505be8.jpeg\" alt=\"54573865e5952bd00fb98cbf2d505be8\" style=\"zoom: 67%;\" />\n\n***1. 应用层***：这是最顶层，直接与应用程序交互，定义了应用程序如何通过网络[发送数据](https://so.csdn.net/so/search?q=发送数据&spm=1001.2101.3001.7020)。常见的应用层协议有HTTP、FTP、SMTP、DNS等，它们分别负责网页浏览、文件传输、电子邮件以及域名解析等功能。\n\n***2. 运输层***：提供端到端的数据传输服务，主要关注确保数据包能够正确、可靠地到达目的地。这一层最重要的两个协议是TCP（传输控制协议）和UDP（用户数据报协议）。TCP提供面向连接的、可靠的服务，通过序列号、确认机制和重传机制保证数据完整性；而UDP则提供无连接的、不可靠但速度快的服务。\n\n***3. 网络层***：主要负责主机到主机之间的通信，即数据包从源网络传输到目的网络的过程。IP（互联网协议）是这一层的核心协议，它给每个数据包加上源和目的地址（即IP地址），并通过路由器进行路径选择。\n\n***4. 网络接口层***（包括数据链路层和物理层）：负责封装成帧、错误检测、访问媒介以及物理寻址。例如，以太网协议（Ethernet）就属于这一层，它提供MAC（Media Access Control）地址，并处理数据在网络中的实际传输。\n\n#### 各层协议\n\n<img src=\"/img/software_exam/image-20240818113830275.png\" alt=\"image-20240818113830275\" style=\"zoom: 33%;\" />\n\n#### TCP链接\n\n\n\n### 网络安全技术IDS\n\n### 单播地址/组播地址\n\n### DHCP & SMTP & SNMP & ARP等协议\n\n### 辅助域名服务器 & 转发域名服务器\n\n### Kerberos\n\n### GANTT图 & PERT图\n\n\n\n## 计算机网络概论\n\n\n\n## 数据通信基础\n\n- 信道带宽W\n- 模拟信道：f2和f1分别表示最高/最低频率，单位赫兹Hz\n\n$$\nW=f_{2}-f_{1}\n$$\n\n\n\n- 数字信道：数字信道是离散信道，带宽为信道能够达到的最大数据传输效率，单位是bit/s\n\n![image-20240821211304579](/img/software_exam/image-20240821211304579.png)\n\n- 码元：一个数字脉冲称为一个码元（可以理解为时钟周期的信号）\n\n- 码元速率：单位时间内传送的码元个数。如果码元宽度（脉冲周期）为T，则码元速率（波特率）为`B=1/T`，单位是**波特**\n\n- 一个码元携带的信息量n（位）与码元种类数（N）的关系为\n\n$$\n\\mathrm{n}=\\log _{2} N\n$$\n\n### 奈奎斯特定理\n\n在没有噪声干扰的信道（理想）中，若信号带宽为W，则最大码元速率为**B=2W（Baud）**\n\n极限数据速率为\n$$\n\\mathrm{R}=\\mathrm{B\\,\\,log}_{2} \\mathrm{~N}=2 \\mathrm{~W} \\log _{2} \\mathrm{~N}\n$$\n\n- 码元速率：每秒发送的包裹个数\n- 数据速率：每秒发送的包裹重量\n\n### 香农定理\n\n在一个噪声信道的极限数据速率和带宽之间的关系\n\n极限速率公式为：\n$$\n\\mathrm{C}=\\mathrm{Wlog}_{2}(1+\\mathrm{S} / \\mathrm{N})\n$$\n其中，W为信道带宽，S为信号平均功率，N为噪声平均功率，S/N为信噪比\n\n分贝与信噪比的关系：\n$$\n\\mathrm{dB}=10 \\log _{10} \\mathrm{~S} / \\mathrm{N}\n$$\n一般来说，题目可能不会直接给 **S/N** ，\n\n- **dB=10** ==> **S/N=10**\n- **dB=30** ==> **S/N=30**\n\n","source":"_posts/software_exam.md","raw":"---\ntitle: 软考笔记（网工）\ncategories:\n  - 软考\ndescription: \"软考笔记\"\ndate: 2024-08-10 21:16\nexcerpt: \"准备一手网工的软考，🐛🐛\"\ntags:\n  - 网络工程\n\n---\n\n## 工具包\n\n本笔记大部分内容来源于 **SUMMER课堂 **的课件【淘宝买的】【好像是盗版？就10来块钱，如果是盗版的话真是抱歉啊抱歉】\n\n## 网络基础理论\n\n### 逻辑运算\n\n$$\nX\\cdot Y\\,\\,\\,与运算\\,\\,\\,全部为1时，结果才为1\\\\\n X+Y\\,\\,\\,或运算\\,\\,\\,有一个为1,则结果为1\\\\\n X \\oplus Y\\,异或\\,或者说半加法，\\,1和0得1，\\,1和1得0，\\,0和0得0\n$$\n\n### CRC冗余校验标准\n\n教程来自【[CRC校验]手算与直观演示】 https://www.bilibili.com/video/BV1V4411Z7VA\n\n1. 先用给出的CRC多项式，写出CRC除数\n2. 在需要添加校验数的数据串后加0（阶数个0）\n3. 用上一条加工过的数据串和CRC除数做异或运算，直至无法进行异或运算，由此得到CRC校验和\n4. 将校验和添加值数据串后，得到带CRC校验的数据\n\n**作用是对传输的数据包进行校验，而且只会校验不会纠错**\n\n补充说明，来自[CRC校验原理及步骤-CSDN博客](https://blog.csdn.net/d_leo/article/details/73572373)\n\n> **CRC校验原理：**\n>\n> 其根本思想就是先在要发送的帧后面附加一个数（这个就是用来校验的校验码，但要注意，这里的数也是二进制序列的，下同），生成一个新帧发送给接收端。当然，这个附加的数不是随意的，它要使所生成的新帧能与发送端和接收端共同选定的某个特定数整除（注意，这里不是直接采用二进制除法，而是采用一种称之为“ **模2除法**”）。到达接收端后，再把接收到的新帧除以（同样采用“ **模2除法**”）这个选定的除数。因为在发送端发送数据帧之前就已通过附加一个数，做了“去余”处理（也就已经能整除了），所以结果应该是没有余数。如果有余数，则表明该帧在传输过程中出现了差错。\n>\n> CRC校验中有两个关键点，一是预先确定一个发送送端和接收端都用来作为除数的二进制比特串（或多项式），可以随机选择，也可以使用国际标准，但是最高位和最低位必须为1；二是把原始帧与上面计算出的除数进行模2除法运算，计算出CRC码。\n\n<img src=\"/img/software_exam/0930abe368ad014ddd3d5a98f87c25d.png\" alt=\"0930abe368ad014ddd3d5a98f87c25d\" style=\"zoom:15%;\" />\n\n### TCP/IP  &&  OSI模型\n\n<img src=\"/img/software_exam/54573865e5952bd00fb98cbf2d505be8.jpeg\" alt=\"54573865e5952bd00fb98cbf2d505be8\" style=\"zoom: 67%;\" />\n\n***1. 应用层***：这是最顶层，直接与应用程序交互，定义了应用程序如何通过网络[发送数据](https://so.csdn.net/so/search?q=发送数据&spm=1001.2101.3001.7020)。常见的应用层协议有HTTP、FTP、SMTP、DNS等，它们分别负责网页浏览、文件传输、电子邮件以及域名解析等功能。\n\n***2. 运输层***：提供端到端的数据传输服务，主要关注确保数据包能够正确、可靠地到达目的地。这一层最重要的两个协议是TCP（传输控制协议）和UDP（用户数据报协议）。TCP提供面向连接的、可靠的服务，通过序列号、确认机制和重传机制保证数据完整性；而UDP则提供无连接的、不可靠但速度快的服务。\n\n***3. 网络层***：主要负责主机到主机之间的通信，即数据包从源网络传输到目的网络的过程。IP（互联网协议）是这一层的核心协议，它给每个数据包加上源和目的地址（即IP地址），并通过路由器进行路径选择。\n\n***4. 网络接口层***（包括数据链路层和物理层）：负责封装成帧、错误检测、访问媒介以及物理寻址。例如，以太网协议（Ethernet）就属于这一层，它提供MAC（Media Access Control）地址，并处理数据在网络中的实际传输。\n\n#### 各层协议\n\n<img src=\"/img/software_exam/image-20240818113830275.png\" alt=\"image-20240818113830275\" style=\"zoom: 33%;\" />\n\n#### TCP链接\n\n\n\n### 网络安全技术IDS\n\n### 单播地址/组播地址\n\n### DHCP & SMTP & SNMP & ARP等协议\n\n### 辅助域名服务器 & 转发域名服务器\n\n### Kerberos\n\n### GANTT图 & PERT图\n\n\n\n## 计算机网络概论\n\n\n\n## 数据通信基础\n\n- 信道带宽W\n- 模拟信道：f2和f1分别表示最高/最低频率，单位赫兹Hz\n\n$$\nW=f_{2}-f_{1}\n$$\n\n\n\n- 数字信道：数字信道是离散信道，带宽为信道能够达到的最大数据传输效率，单位是bit/s\n\n![image-20240821211304579](/img/software_exam/image-20240821211304579.png)\n\n- 码元：一个数字脉冲称为一个码元（可以理解为时钟周期的信号）\n\n- 码元速率：单位时间内传送的码元个数。如果码元宽度（脉冲周期）为T，则码元速率（波特率）为`B=1/T`，单位是**波特**\n\n- 一个码元携带的信息量n（位）与码元种类数（N）的关系为\n\n$$\n\\mathrm{n}=\\log _{2} N\n$$\n\n### 奈奎斯特定理\n\n在没有噪声干扰的信道（理想）中，若信号带宽为W，则最大码元速率为**B=2W（Baud）**\n\n极限数据速率为\n$$\n\\mathrm{R}=\\mathrm{B\\,\\,log}_{2} \\mathrm{~N}=2 \\mathrm{~W} \\log _{2} \\mathrm{~N}\n$$\n\n- 码元速率：每秒发送的包裹个数\n- 数据速率：每秒发送的包裹重量\n\n### 香农定理\n\n在一个噪声信道的极限数据速率和带宽之间的关系\n\n极限速率公式为：\n$$\n\\mathrm{C}=\\mathrm{Wlog}_{2}(1+\\mathrm{S} / \\mathrm{N})\n$$\n其中，W为信道带宽，S为信号平均功率，N为噪声平均功率，S/N为信噪比\n\n分贝与信噪比的关系：\n$$\n\\mathrm{dB}=10 \\log _{10} \\mathrm{~S} / \\mathrm{N}\n$$\n一般来说，题目可能不会直接给 **S/N** ，\n\n- **dB=10** ==> **S/N=10**\n- **dB=30** ==> **S/N=30**\n\n","slug":"software_exam","published":1,"updated":"2024-08-24T16:07:07.126Z","comments":1,"layout":"post","photos":[],"_id":"cm0b0qx7i000hjwurg06paqhs","content":"<h2 id=\"工具包\"><a href=\"#工具包\" class=\"headerlink\" title=\"工具包\"></a>工具包</h2><p>本笔记大部分内容来源于 **SUMMER课堂 **的课件【淘宝买的】【好像是盗版？就10来块钱，如果是盗版的话真是抱歉啊抱歉】</p>\n<h2 id=\"网络基础理论\"><a href=\"#网络基础理论\" class=\"headerlink\" title=\"网络基础理论\"></a>网络基础理论</h2><h3 id=\"逻辑运算\"><a href=\"#逻辑运算\" class=\"headerlink\" title=\"逻辑运算\"></a>逻辑运算</h3><p><mjx-container class=\"MathJax\" jax=\"SVG\" display=\"true\"><svg style=\"vertical-align: -0.452ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"142.571ex\" height=\"2.149ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 63016.3 950\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1074.2,0)\"><path data-c=\"22C5\" d=\"M78 250Q78 274 95 292T138 310Q162 310 180 294T199 251Q199 226 182 208T139 190T96 207T78 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1574.4,0)\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2337.4,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2782.1,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(3226.8,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(3671.4,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">与</text></g><g data-mml-node=\"mi\" transform=\"translate(4671.4,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">运</text></g><g data-mml-node=\"mi\" transform=\"translate(5671.4,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">算</text></g><g data-mml-node=\"mo\" transform=\"translate(6671.4,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(7116.1,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(7560.8,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(8005.4,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">全</text></g><g data-mml-node=\"mi\" transform=\"translate(9005.4,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">部</text></g><g data-mml-node=\"mi\" transform=\"translate(10005.4,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">为</text></g><g data-mml-node=\"mn\" transform=\"translate(11005.4,0)\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(11505.4,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">时</text></g><g data-mml-node=\"mi\" transform=\"translate(12505.4,0)\"><text data-variant=\"italic\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\" font-style=\"italic\">，</text></g><g data-mml-node=\"mi\" transform=\"translate(13505.4,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">结</text></g><g data-mml-node=\"mi\" transform=\"translate(14505.4,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">果</text></g><g data-mml-node=\"mi\" transform=\"translate(15505.4,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">才</text></g><g data-mml-node=\"mi\" transform=\"translate(16505.4,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">为</text></g><g data-mml-node=\"mn\" transform=\"translate(17505.4,0)\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path></g><g data-mml-node=\"mtext\" transform=\"translate(18005.4,0)\"><path data-c=\"A0\" d=\"\"></path></g><g data-mml-node=\"mi\" transform=\"translate(18255.4,0)\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(19329.7,0)\"><path data-c=\"2B\" d=\"M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(20329.9,0)\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(21092.9,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(21537.6,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(21982.2,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(22426.9,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">或</text></g><g data-mml-node=\"mi\" transform=\"translate(23426.9,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">运</text></g><g data-mml-node=\"mi\" transform=\"translate(24426.9,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">算</text></g><g data-mml-node=\"mo\" transform=\"translate(25426.9,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(25871.6,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(26316.2,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(26760.9,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">有</text></g><g data-mml-node=\"mi\" transform=\"translate(27760.9,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">一</text></g><g data-mml-node=\"mi\" transform=\"translate(28760.9,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">个</text></g><g data-mml-node=\"mi\" transform=\"translate(29760.9,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">为</text></g><g data-mml-node=\"mn\" transform=\"translate(30760.9,0)\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(31260.9,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(31705.6,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">则</text></g><g data-mml-node=\"mi\" transform=\"translate(32705.6,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">结</text></g><g data-mml-node=\"mi\" transform=\"translate(33705.6,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">果</text></g><g data-mml-node=\"mi\" transform=\"translate(34705.6,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">为</text></g><g data-mml-node=\"mn\" transform=\"translate(35705.6,0)\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path></g><g data-mml-node=\"mtext\" transform=\"translate(36205.6,0)\"><path data-c=\"A0\" d=\"\"></path></g><g data-mml-node=\"mi\" transform=\"translate(36455.6,0)\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(37529.8,0)\"><path data-c=\"2295\" d=\"M56 250Q56 394 156 488T384 583Q530 583 626 485T722 250Q722 110 625 14T390 -83Q249 -83 153 14T56 250ZM364 542Q308 539 251 509T148 418T96 278V270H369V542H364ZM681 278Q675 338 650 386T592 462T522 509T458 535T412 542H409V270H681V278ZM96 222Q104 150 139 95T219 12T302 -29T366 -42H369V230H96V222ZM681 222V230H409V-42H412Q429 -42 456 -36T521 -10T590 37T649 113T681 222Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(38530,0)\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(39293,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(39737.7,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">异</text></g><g data-mml-node=\"mi\" transform=\"translate(40737.7,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">或</text></g><g data-mml-node=\"mo\" transform=\"translate(41737.7,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(42182.3,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">或</text></g><g data-mml-node=\"mi\" transform=\"translate(43182.3,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">者</text></g><g data-mml-node=\"mi\" transform=\"translate(44182.3,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">说</text></g><g data-mml-node=\"mi\" transform=\"translate(45182.3,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">半</text></g><g data-mml-node=\"mi\" transform=\"translate(46182.3,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">加</text></g><g data-mml-node=\"mi\" transform=\"translate(47182.3,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">法</text></g><g data-mml-node=\"mi\" transform=\"translate(48182.3,0)\"><text data-variant=\"italic\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\" font-style=\"italic\">，</text></g><g data-mml-node=\"mo\" transform=\"translate(49182.3,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(49627,0)\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(50127,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">和</text></g><g data-mml-node=\"mn\" transform=\"translate(51127,0)\"><path data-c=\"30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(51627,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">得</text></g><g data-mml-node=\"mn\" transform=\"translate(52627,0)\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(53127,0)\"><text data-variant=\"italic\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\" font-style=\"italic\">，</text></g><g data-mml-node=\"mo\" transform=\"translate(54127,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(54571.7,0)\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(55071.7,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">和</text></g><g data-mml-node=\"mn\" transform=\"translate(56071.7,0)\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(56571.7,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">得</text></g><g data-mml-node=\"mn\" transform=\"translate(57571.7,0)\"><path data-c=\"30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(58071.7,0)\"><text data-variant=\"italic\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\" font-style=\"italic\">，</text></g><g data-mml-node=\"mo\" transform=\"translate(59071.7,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(59516.3,0)\"><path data-c=\"30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(60016.3,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">和</text></g><g data-mml-node=\"mn\" transform=\"translate(61016.3,0)\"><path data-c=\"30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(61516.3,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">得</text></g><g data-mml-node=\"mn\" transform=\"translate(62516.3,0)\"><path data-c=\"30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\"></path></g></g></g></svg></mjx-container></p>\n<h3 id=\"CRC冗余校验标准\"><a href=\"#CRC冗余校验标准\" class=\"headerlink\" title=\"CRC冗余校验标准\"></a>CRC冗余校验标准</h3><p>教程来自【[CRC校验]手算与直观演示】 <a class=\"link\" href=\"https://www.bilibili.com/video/BV1V4411Z7VA\">https://www.bilibili.com/video/BV1V4411Z7VA <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a></p>\n<ol>\n<li>先用给出的CRC多项式，写出CRC除数</li>\n<li>在需要添加校验数的数据串后加0（阶数个0）</li>\n<li>用上一条加工过的数据串和CRC除数做异或运算，直至无法进行异或运算，由此得到CRC校验和</li>\n<li>将校验和添加值数据串后，得到带CRC校验的数据</li>\n</ol>\n<p><strong>作用是对传输的数据包进行校验，而且只会校验不会纠错</strong></p>\n<p>补充说明，来自<a class=\"link\" href=\"https://blog.csdn.net/d_leo/article/details/73572373\">CRC校验原理及步骤-CSDN博客 <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a></p>\n<blockquote>\n<p><strong>CRC校验原理：</strong></p>\n<p>其根本思想就是先在要发送的帧后面附加一个数（这个就是用来校验的校验码，但要注意，这里的数也是二进制序列的，下同），生成一个新帧发送给接收端。当然，这个附加的数不是随意的，它要使所生成的新帧能与发送端和接收端共同选定的某个特定数整除（注意，这里不是直接采用二进制除法，而是采用一种称之为“ <strong>模2除法</strong>”）。到达接收端后，再把接收到的新帧除以（同样采用“ <strong>模2除法</strong>”）这个选定的除数。因为在发送端发送数据帧之前就已通过附加一个数，做了“去余”处理（也就已经能整除了），所以结果应该是没有余数。如果有余数，则表明该帧在传输过程中出现了差错。</p>\n<p>CRC校验中有两个关键点，一是预先确定一个发送送端和接收端都用来作为除数的二进制比特串（或多项式），可以随机选择，也可以使用国际标准，但是最高位和最低位必须为1；二是把原始帧与上面计算出的除数进行模2除法运算，计算出CRC码。</p>\n</blockquote>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/software_exam/0930abe368ad014ddd3d5a98f87c25d.png\" alt=\"0930abe368ad014ddd3d5a98f87c25d\" style=\"zoom:15%;\">\n\n<h3 id=\"TCP-IP-OSI模型\"><a href=\"#TCP-IP-OSI模型\" class=\"headerlink\" title=\"TCP/IP  &&  OSI模型\"></a>TCP/IP  &amp;&amp;  OSI模型</h3><img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/software_exam/54573865e5952bd00fb98cbf2d505be8.jpeg\" alt=\"54573865e5952bd00fb98cbf2d505be8\" style=\"zoom: 67%;\">\n\n<p><em><strong>1. 应用层</strong></em>：这是最顶层，直接与应用程序交互，定义了应用程序如何通过网络<a class=\"link\" href=\"https://so.csdn.net/so/search?q=%E5%8F%91%E9%80%81%E6%95%B0%E6%8D%AE&spm=1001.2101.3001.7020\">发送数据 <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a>。常见的应用层协议有HTTP、FTP、SMTP、DNS等，它们分别负责网页浏览、文件传输、电子邮件以及域名解析等功能。</p>\n<p><em><strong>2. 运输层</strong></em>：提供端到端的数据传输服务，主要关注确保数据包能够正确、可靠地到达目的地。这一层最重要的两个协议是TCP（传输控制协议）和UDP（用户数据报协议）。TCP提供面向连接的、可靠的服务，通过序列号、确认机制和重传机制保证数据完整性；而UDP则提供无连接的、不可靠但速度快的服务。</p>\n<p><em><strong>3. 网络层</strong></em>：主要负责主机到主机之间的通信，即数据包从源网络传输到目的网络的过程。IP（互联网协议）是这一层的核心协议，它给每个数据包加上源和目的地址（即IP地址），并通过路由器进行路径选择。</p>\n<p><em><strong>4. 网络接口层</strong></em>（包括数据链路层和物理层）：负责封装成帧、错误检测、访问媒介以及物理寻址。例如，以太网协议（Ethernet）就属于这一层，它提供MAC（Media Access Control）地址，并处理数据在网络中的实际传输。</p>\n<h4 id=\"各层协议\"><a href=\"#各层协议\" class=\"headerlink\" title=\"各层协议\"></a>各层协议</h4><img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/software_exam/image-20240818113830275.png\" alt=\"image-20240818113830275\" style=\"zoom: 33%;\">\n\n<h4 id=\"TCP链接\"><a href=\"#TCP链接\" class=\"headerlink\" title=\"TCP链接\"></a>TCP链接</h4><h3 id=\"网络安全技术IDS\"><a href=\"#网络安全技术IDS\" class=\"headerlink\" title=\"网络安全技术IDS\"></a>网络安全技术IDS</h3><h3 id=\"单播地址-组播地址\"><a href=\"#单播地址-组播地址\" class=\"headerlink\" title=\"单播地址/组播地址\"></a>单播地址/组播地址</h3><h3 id=\"DHCP-SMTP-SNMP-ARP等协议\"><a href=\"#DHCP-SMTP-SNMP-ARP等协议\" class=\"headerlink\" title=\"DHCP & SMTP & SNMP & ARP等协议\"></a>DHCP &amp; SMTP &amp; SNMP &amp; ARP等协议</h3><h3 id=\"辅助域名服务器-转发域名服务器\"><a href=\"#辅助域名服务器-转发域名服务器\" class=\"headerlink\" title=\"辅助域名服务器 & 转发域名服务器\"></a>辅助域名服务器 &amp; 转发域名服务器</h3><h3 id=\"Kerberos\"><a href=\"#Kerberos\" class=\"headerlink\" title=\"Kerberos\"></a>Kerberos</h3><h3 id=\"GANTT图-PERT图\"><a href=\"#GANTT图-PERT图\" class=\"headerlink\" title=\"GANTT图 & PERT图\"></a>GANTT图 &amp; PERT图</h3><h2 id=\"计算机网络概论\"><a href=\"#计算机网络概论\" class=\"headerlink\" title=\"计算机网络概论\"></a>计算机网络概论</h2><h2 id=\"数据通信基础\"><a href=\"#数据通信基础\" class=\"headerlink\" title=\"数据通信基础\"></a>数据通信基础</h2><ul>\n<li>信道带宽W</li>\n<li>模拟信道：f2和f1分别表示最高/最低频率，单位赫兹Hz</li>\n</ul>\n<p><mjx-container class=\"MathJax\" jax=\"SVG\" display=\"true\"><svg style=\"vertical-align: -0.464ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"12.346ex\" height=\"2.059ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -705 5457.1 910\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44A\" d=\"M436 683Q450 683 486 682T553 680Q604 680 638 681T677 682Q695 682 695 674Q695 670 692 659Q687 641 683 639T661 637Q636 636 621 632T600 624T597 615Q597 603 613 377T629 138L631 141Q633 144 637 151T649 170T666 200T690 241T720 295T759 362Q863 546 877 572T892 604Q892 619 873 628T831 637Q817 637 817 647Q817 650 819 660Q823 676 825 679T839 682Q842 682 856 682T895 682T949 681Q1015 681 1034 683Q1048 683 1048 672Q1048 666 1045 655T1038 640T1028 637Q1006 637 988 631T958 617T939 600T927 584L923 578L754 282Q586 -14 585 -15Q579 -22 561 -22Q546 -22 542 -17Q539 -14 523 229T506 480L494 462Q472 425 366 239Q222 -13 220 -15T215 -19Q210 -22 197 -22Q178 -22 176 -15Q176 -12 154 304T131 622Q129 631 121 633T82 637H58Q51 644 51 648Q52 671 64 683H76Q118 680 176 680Q301 680 313 683H323Q329 677 329 674T327 656Q322 641 318 637H297Q236 634 232 620Q262 160 266 136L501 550L499 587Q496 629 489 632Q483 636 447 637Q428 637 422 639T416 648Q416 650 418 660Q419 664 420 669T421 676T424 680T428 682T436 683Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1325.8,0)\"><path data-c=\"3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path></g><g data-mml-node=\"msub\" transform=\"translate(2381.6,0)\"><g data-mml-node=\"mi\"><path data-c=\"1D453\" d=\"M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z\"></path></g><g data-mml-node=\"TeXAtom\" transform=\"translate(523,-150) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mn\"><path data-c=\"32\" d=\"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z\"></path></g></g></g><g data-mml-node=\"mo\" transform=\"translate(3530.3,0)\"><path data-c=\"2212\" d=\"M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z\"></path></g><g data-mml-node=\"msub\" transform=\"translate(4530.6,0)\"><g data-mml-node=\"mi\"><path data-c=\"1D453\" d=\"M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z\"></path></g><g data-mml-node=\"TeXAtom\" transform=\"translate(523,-150) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mn\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path></g></g></g></g></g></svg></mjx-container></p>\n<ul>\n<li>数字信道：数字信道是离散信道，带宽为信道能够达到的最大数据传输效率，单位是bit/s</li>\n</ul>\n<p><img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/software_exam/image-20240821211304579.png\" alt=\"image-20240821211304579\"></p>\n<ul>\n<li><p>码元：一个数字脉冲称为一个码元（可以理解为时钟周期的信号）</p>\n</li>\n<li><p>码元速率：单位时间内传送的码元个数。如果码元宽度（脉冲周期）为T，则码元速率（波特率）为<code>B=1/T</code>，单位是<strong>波特</strong></p>\n</li>\n<li><p>一个码元携带的信息量n（位）与码元种类数（N）的关系为</p>\n</li>\n</ul>\n<p><mjx-container class=\"MathJax\" jax=\"SVG\" display=\"true\"><svg style=\"vertical-align: -0.546ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"10.54ex\" height=\"2.116ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -694 4658.8 935.4\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"TeXAtom\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><path data-c=\"6E\" d=\"M41 46H55Q94 46 102 60V68Q102 77 102 91T102 122T103 161T103 203Q103 234 103 269T102 328V351Q99 370 88 376T43 385H25V408Q25 431 27 431L37 432Q47 433 65 434T102 436Q119 437 138 438T167 441T178 442H181V402Q181 364 182 364T187 369T199 384T218 402T247 421T285 437Q305 442 336 442Q450 438 463 329Q464 322 464 190V104Q464 66 466 59T477 49Q498 46 526 46H542V0H534L510 1Q487 2 460 2T422 3Q319 3 310 0H302V46H318Q379 46 379 62Q380 64 380 200Q379 335 378 343Q372 371 358 385T334 402T308 404Q263 404 229 370Q202 343 195 315T187 232V168V108Q187 78 188 68T191 55T200 49Q221 46 249 46H265V0H257L234 1Q210 2 183 2T145 3Q42 3 33 0H25V46H41Z\"></path></g></g><g data-mml-node=\"mo\" transform=\"translate(833.8,0)\"><path data-c=\"3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path></g><g data-mml-node=\"msub\" transform=\"translate(1889.6,0)\"><g data-mml-node=\"mi\"><path data-c=\"6C\" d=\"M42 46H56Q95 46 103 60V68Q103 77 103 91T103 124T104 167T104 217T104 272T104 329Q104 366 104 407T104 482T104 542T103 586T103 603Q100 622 89 628T44 637H26V660Q26 683 28 683L38 684Q48 685 67 686T104 688Q121 689 141 690T171 693T182 694H185V379Q185 62 186 60Q190 52 198 49Q219 46 247 46H263V0H255L232 1Q209 2 183 2T145 3T107 3T57 1L34 0H26V46H42Z\"></path><path data-c=\"6F\" d=\"M28 214Q28 309 93 378T250 448Q340 448 405 380T471 215Q471 120 407 55T250 -10Q153 -10 91 57T28 214ZM250 30Q372 30 372 193V225V250Q372 272 371 288T364 326T348 362T317 390T268 410Q263 411 252 411Q222 411 195 399Q152 377 139 338T126 246V226Q126 130 145 91Q177 30 250 30Z\" transform=\"translate(278,0)\"></path><path data-c=\"67\" d=\"M329 409Q373 453 429 453Q459 453 472 434T485 396Q485 382 476 371T449 360Q416 360 412 390Q410 404 415 411Q415 412 416 414V415Q388 412 363 393Q355 388 355 386Q355 385 359 381T368 369T379 351T388 325T392 292Q392 230 343 187T222 143Q172 143 123 171Q112 153 112 133Q112 98 138 81Q147 75 155 75T227 73Q311 72 335 67Q396 58 431 26Q470 -13 470 -72Q470 -139 392 -175Q332 -206 250 -206Q167 -206 107 -175Q29 -140 29 -75Q29 -39 50 -15T92 18L103 24Q67 55 67 108Q67 155 96 193Q52 237 52 292Q52 355 102 398T223 442Q274 442 318 416L329 409ZM299 343Q294 371 273 387T221 404Q192 404 171 388T145 343Q142 326 142 292Q142 248 149 227T179 192Q196 182 222 182Q244 182 260 189T283 207T294 227T299 242Q302 258 302 292T299 343ZM403 -75Q403 -50 389 -34T348 -11T299 -2T245 0H218Q151 0 138 -6Q118 -15 107 -34T95 -74Q95 -84 101 -97T122 -127T170 -155T250 -167Q319 -167 361 -139T403 -75Z\" transform=\"translate(778,0)\"></path></g><g data-mml-node=\"TeXAtom\" transform=\"translate(1311,-241.4) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mn\"><path data-c=\"32\" d=\"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z\"></path></g></g></g><g data-mml-node=\"mo\" transform=\"translate(3604.1,0)\"><path data-c=\"2061\" d=\"\"></path></g><g data-mml-node=\"mi\" transform=\"translate(3770.8,0)\"><path data-c=\"1D441\" d=\"M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z\"></path></g></g></g></svg></mjx-container></p>\n<h3 id=\"奈奎斯特定理\"><a href=\"#奈奎斯特定理\" class=\"headerlink\" title=\"奈奎斯特定理\"></a>奈奎斯特定理</h3><p>在没有噪声干扰的信道（理想）中，若信号带宽为W，则最大码元速率为<strong>B=2W（Baud）</strong></p>\n<p>极限数据速率为<br>$$<br>\\mathrm{R}=\\mathrm{B,,log}_{2} \\mathrm{<del>N}=2 \\mathrm{</del>W} \\log _{2} \\mathrm{~N}<br>$$</p>\n<ul>\n<li>码元速率：每秒发送的包裹个数</li>\n<li>数据速率：每秒发送的包裹重量</li>\n</ul>\n<h3 id=\"香农定理\"><a href=\"#香农定理\" class=\"headerlink\" title=\"香农定理\"></a>香农定理</h3><p>在一个噪声信道的极限数据速率和带宽之间的关系</p>\n<p>极限速率公式为：<br><mjx-container class=\"MathJax\" jax=\"SVG\" display=\"true\"><svg style=\"vertical-align: -0.566ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"20.599ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 9104.6 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"TeXAtom\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><path data-c=\"43\" d=\"M56 342Q56 428 89 500T174 615T283 681T391 705Q394 705 400 705T408 704Q499 704 569 636L582 624L612 663Q639 700 643 704Q644 704 647 704T653 705H657Q660 705 666 699V419L660 413H626Q620 419 619 430Q610 512 571 572T476 651Q457 658 426 658Q322 658 252 588Q173 509 173 342Q173 221 211 151Q232 111 263 84T328 45T384 29T428 24Q517 24 571 93T626 244Q626 251 632 257H660L666 251V236Q661 133 590 56T403 -21Q262 -21 159 83T56 342Z\"></path></g></g><g data-mml-node=\"mo\" transform=\"translate(999.8,0)\"><path data-c=\"3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path></g><g data-mml-node=\"msub\" transform=\"translate(2055.6,0)\"><g data-mml-node=\"TeXAtom\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><path data-c=\"57\" d=\"M792 683Q810 680 914 680Q991 680 1003 683H1009V637H996Q931 633 915 598Q912 591 863 438T766 135T716 -17Q711 -22 694 -22Q676 -22 673 -15Q671 -13 593 231L514 477L435 234Q416 174 391 92T358 -6T341 -22H331Q314 -21 310 -15Q309 -14 208 302T104 622Q98 632 87 633Q73 637 35 637H18V683H27Q69 681 154 681Q164 681 181 681T216 681T249 682T276 683H287H298V637H285Q213 637 213 620Q213 616 289 381L364 144L427 339Q490 535 492 546Q487 560 482 578T475 602T468 618T461 628T449 633T433 636T408 637H380V683H388Q397 680 508 680Q629 680 650 683H660V637H647Q576 637 576 619L727 146Q869 580 869 600Q869 605 863 612T839 627T794 637H783V683H792Z\"></path><path data-c=\"6C\" d=\"M42 46H56Q95 46 103 60V68Q103 77 103 91T103 124T104 167T104 217T104 272T104 329Q104 366 104 407T104 482T104 542T103 586T103 603Q100 622 89 628T44 637H26V660Q26 683 28 683L38 684Q48 685 67 686T104 688Q121 689 141 690T171 693T182 694H185V379Q185 62 186 60Q190 52 198 49Q219 46 247 46H263V0H255L232 1Q209 2 183 2T145 3T107 3T57 1L34 0H26V46H42Z\" transform=\"translate(1028,0)\"></path><path data-c=\"6F\" d=\"M28 214Q28 309 93 378T250 448Q340 448 405 380T471 215Q471 120 407 55T250 -10Q153 -10 91 57T28 214ZM250 30Q372 30 372 193V225V250Q372 272 371 288T364 326T348 362T317 390T268 410Q263 411 252 411Q222 411 195 399Q152 377 139 338T126 246V226Q126 130 145 91Q177 30 250 30Z\" transform=\"translate(1306,0)\"></path><path data-c=\"67\" d=\"M329 409Q373 453 429 453Q459 453 472 434T485 396Q485 382 476 371T449 360Q416 360 412 390Q410 404 415 411Q415 412 416 414V415Q388 412 363 393Q355 388 355 386Q355 385 359 381T368 369T379 351T388 325T392 292Q392 230 343 187T222 143Q172 143 123 171Q112 153 112 133Q112 98 138 81Q147 75 155 75T227 73Q311 72 335 67Q396 58 431 26Q470 -13 470 -72Q470 -139 392 -175Q332 -206 250 -206Q167 -206 107 -175Q29 -140 29 -75Q29 -39 50 -15T92 18L103 24Q67 55 67 108Q67 155 96 193Q52 237 52 292Q52 355 102 398T223 442Q274 442 318 416L329 409ZM299 343Q294 371 273 387T221 404Q192 404 171 388T145 343Q142 326 142 292Q142 248 149 227T179 192Q196 182 222 182Q244 182 260 189T283 207T294 227T299 242Q302 258 302 292T299 343ZM403 -75Q403 -50 389 -34T348 -11T299 -2T245 0H218Q151 0 138 -6Q118 -15 107 -34T95 -74Q95 -84 101 -97T122 -127T170 -155T250 -167Q319 -167 361 -139T403 -75Z\" transform=\"translate(1806,0)\"></path></g></g><g data-mml-node=\"TeXAtom\" transform=\"translate(2339,-241.4) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mn\"><path data-c=\"32\" d=\"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z\"></path></g></g></g><g data-mml-node=\"mo\" transform=\"translate(4798.1,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(5187.1,0)\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(5909.3,0)\"><path data-c=\"2B\" d=\"M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z\"></path></g><g data-mml-node=\"TeXAtom\" data-mjx-texclass=\"ORD\" transform=\"translate(6909.6,0)\"><g data-mml-node=\"mi\"><path data-c=\"53\" d=\"M55 507Q55 590 112 647T243 704H257Q342 704 405 641L426 672Q431 679 436 687T446 700L449 704Q450 704 453 704T459 705H463Q466 705 472 699V462L466 456H448Q437 456 435 459T430 479Q413 605 329 646Q292 662 254 662Q201 662 168 626T135 542Q135 508 152 480T200 435Q210 431 286 412T370 389Q427 367 463 314T500 191Q500 110 448 45T301 -21Q245 -21 201 -4T140 27L122 41Q118 36 107 21T87 -7T78 -21Q76 -22 68 -22H64Q61 -22 55 -16V101Q55 220 56 222Q58 227 76 227H89Q95 221 95 214Q95 182 105 151T139 90T205 42T305 24Q352 24 386 62T420 155Q420 198 398 233T340 281Q284 295 266 300Q261 301 239 306T206 314T174 325T141 343T112 367T85 402Q55 451 55 507Z\"></path></g></g><g data-mml-node=\"TeXAtom\" data-mjx-texclass=\"ORD\" transform=\"translate(7465.6,0)\"><g data-mml-node=\"mo\"><path data-c=\"2F\" d=\"M423 750Q432 750 438 744T444 730Q444 725 271 248T92 -240Q85 -250 75 -250Q68 -250 62 -245T56 -231Q56 -221 230 257T407 740Q411 750 423 750Z\"></path></g></g><g data-mml-node=\"TeXAtom\" data-mjx-texclass=\"ORD\" transform=\"translate(7965.6,0)\"><g data-mml-node=\"mi\"><path data-c=\"4E\" d=\"M42 46Q74 48 94 56T118 69T128 86V634H124Q114 637 52 637H25V683H232L235 680Q237 679 322 554T493 303L578 178V598Q572 608 568 613T544 627T492 637H475V683H483Q498 680 600 680Q706 680 715 683H724V637H707Q634 633 622 598L621 302V6L614 0H600Q585 0 582 3T481 150T282 443T171 605V345L172 86Q183 50 257 46H274V0H265Q250 3 150 3Q48 3 33 0H25V46H42Z\"></path></g></g><g data-mml-node=\"mo\" transform=\"translate(8715.6,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container><br>其中，W为信道带宽，S为信号平均功率，N为噪声平均功率，S/N为信噪比</p>\n<p>分贝与信噪比的关系：<br><mjx-container class=\"MathJax\" jax=\"SVG\" display=\"true\"><svg style=\"vertical-align: -0.581ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"18.224ex\" height=\"2.278ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 8055 1006.9\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"TeXAtom\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><path data-c=\"64\" d=\"M376 495Q376 511 376 535T377 568Q377 613 367 624T316 637H298V660Q298 683 300 683L310 684Q320 685 339 686T376 688Q393 689 413 690T443 693T454 694H457V390Q457 84 458 81Q461 61 472 55T517 46H535V0Q533 0 459 -5T380 -11H373V44L365 37Q307 -11 235 -11Q158 -11 96 50T34 215Q34 315 97 378T244 442Q319 442 376 393V495ZM373 342Q328 405 260 405Q211 405 173 369Q146 341 139 305T131 211Q131 155 138 120T173 59Q203 26 251 26Q322 26 373 103V342Z\"></path><path data-c=\"42\" d=\"M131 622Q124 629 120 631T104 634T61 637H28V683H229H267H346Q423 683 459 678T531 651Q574 627 599 590T624 512Q624 461 583 419T476 360L466 357Q539 348 595 302T651 187Q651 119 600 67T469 3Q456 1 242 0H28V46H61Q103 47 112 49T131 61V622ZM511 513Q511 560 485 594T416 636Q415 636 403 636T371 636T333 637Q266 637 251 636T232 628Q229 624 229 499V374H312L396 375L406 377Q410 378 417 380T442 393T474 417T499 456T511 513ZM537 188Q537 239 509 282T430 336L329 337H229V200V116Q229 57 234 52Q240 47 334 47H383Q425 47 443 53Q486 67 511 104T537 188Z\" transform=\"translate(556,0)\"></path></g></g><g data-mml-node=\"mo\" transform=\"translate(1541.8,0)\"><path data-c=\"3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(2597.6,0)\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path><path data-c=\"30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\" transform=\"translate(500,0)\"></path></g><g data-mml-node=\"msub\" transform=\"translate(3764.2,0)\"><g data-mml-node=\"mi\"><path data-c=\"6C\" d=\"M42 46H56Q95 46 103 60V68Q103 77 103 91T103 124T104 167T104 217T104 272T104 329Q104 366 104 407T104 482T104 542T103 586T103 603Q100 622 89 628T44 637H26V660Q26 683 28 683L38 684Q48 685 67 686T104 688Q121 689 141 690T171 693T182 694H185V379Q185 62 186 60Q190 52 198 49Q219 46 247 46H263V0H255L232 1Q209 2 183 2T145 3T107 3T57 1L34 0H26V46H42Z\"></path><path data-c=\"6F\" d=\"M28 214Q28 309 93 378T250 448Q340 448 405 380T471 215Q471 120 407 55T250 -10Q153 -10 91 57T28 214ZM250 30Q372 30 372 193V225V250Q372 272 371 288T364 326T348 362T317 390T268 410Q263 411 252 411Q222 411 195 399Q152 377 139 338T126 246V226Q126 130 145 91Q177 30 250 30Z\" transform=\"translate(278,0)\"></path><path data-c=\"67\" d=\"M329 409Q373 453 429 453Q459 453 472 434T485 396Q485 382 476 371T449 360Q416 360 412 390Q410 404 415 411Q415 412 416 414V415Q388 412 363 393Q355 388 355 386Q355 385 359 381T368 369T379 351T388 325T392 292Q392 230 343 187T222 143Q172 143 123 171Q112 153 112 133Q112 98 138 81Q147 75 155 75T227 73Q311 72 335 67Q396 58 431 26Q470 -13 470 -72Q470 -139 392 -175Q332 -206 250 -206Q167 -206 107 -175Q29 -140 29 -75Q29 -39 50 -15T92 18L103 24Q67 55 67 108Q67 155 96 193Q52 237 52 292Q52 355 102 398T223 442Q274 442 318 416L329 409ZM299 343Q294 371 273 387T221 404Q192 404 171 388T145 343Q142 326 142 292Q142 248 149 227T179 192Q196 182 222 182Q244 182 260 189T283 207T294 227T299 242Q302 258 302 292T299 343ZM403 -75Q403 -50 389 -34T348 -11T299 -2T245 0H218Q151 0 138 -6Q118 -15 107 -34T95 -74Q95 -84 101 -97T122 -127T170 -155T250 -167Q319 -167 361 -139T403 -75Z\" transform=\"translate(778,0)\"></path></g><g data-mml-node=\"TeXAtom\" transform=\"translate(1311,-241.4) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mn\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path><path data-c=\"30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\" transform=\"translate(500,0)\"></path></g></g></g><g data-mml-node=\"mo\" transform=\"translate(5832.3,0)\"><path data-c=\"2061\" d=\"\"></path></g><g data-mml-node=\"TeXAtom\" data-mjx-texclass=\"ORD\" transform=\"translate(5999,0)\"><g data-mml-node=\"mtext\"><path data-c=\"A0\" d=\"\"></path></g><g data-mml-node=\"mi\" transform=\"translate(250,0)\"><path data-c=\"53\" d=\"M55 507Q55 590 112 647T243 704H257Q342 704 405 641L426 672Q431 679 436 687T446 700L449 704Q450 704 453 704T459 705H463Q466 705 472 699V462L466 456H448Q437 456 435 459T430 479Q413 605 329 646Q292 662 254 662Q201 662 168 626T135 542Q135 508 152 480T200 435Q210 431 286 412T370 389Q427 367 463 314T500 191Q500 110 448 45T301 -21Q245 -21 201 -4T140 27L122 41Q118 36 107 21T87 -7T78 -21Q76 -22 68 -22H64Q61 -22 55 -16V101Q55 220 56 222Q58 227 76 227H89Q95 221 95 214Q95 182 105 151T139 90T205 42T305 24Q352 24 386 62T420 155Q420 198 398 233T340 281Q284 295 266 300Q261 301 239 306T206 314T174 325T141 343T112 367T85 402Q55 451 55 507Z\"></path></g></g><g data-mml-node=\"TeXAtom\" data-mjx-texclass=\"ORD\" transform=\"translate(6805,0)\"><g data-mml-node=\"mo\"><path data-c=\"2F\" d=\"M423 750Q432 750 438 744T444 730Q444 725 271 248T92 -240Q85 -250 75 -250Q68 -250 62 -245T56 -231Q56 -221 230 257T407 740Q411 750 423 750Z\"></path></g></g><g data-mml-node=\"TeXAtom\" data-mjx-texclass=\"ORD\" transform=\"translate(7305,0)\"><g data-mml-node=\"mi\"><path data-c=\"4E\" d=\"M42 46Q74 48 94 56T118 69T128 86V634H124Q114 637 52 637H25V683H232L235 680Q237 679 322 554T493 303L578 178V598Q572 608 568 613T544 627T492 637H475V683H483Q498 680 600 680Q706 680 715 683H724V637H707Q634 633 622 598L621 302V6L614 0H600Q585 0 582 3T481 150T282 443T171 605V345L172 86Q183 50 257 46H274V0H265Q250 3 150 3Q48 3 33 0H25V46H42Z\"></path></g></g></g></g></svg></mjx-container><br>一般来说，题目可能不会直接给 <strong>S/N</strong> ，</p>\n<ul>\n<li><strong>dB=10</strong> ==&gt; <strong>S/N=10</strong></li>\n<li><strong>dB=30</strong> ==&gt; <strong>S/N=30</strong></li>\n</ul>\n","more":"<h2 id=\"工具包\"><a href=\"#工具包\" class=\"headerlink\" title=\"工具包\"></a>工具包</h2><p>本笔记大部分内容来源于 **SUMMER课堂 **的课件【淘宝买的】【好像是盗版？就10来块钱，如果是盗版的话真是抱歉啊抱歉】</p>\n<h2 id=\"网络基础理论\"><a href=\"#网络基础理论\" class=\"headerlink\" title=\"网络基础理论\"></a>网络基础理论</h2><h3 id=\"逻辑运算\"><a href=\"#逻辑运算\" class=\"headerlink\" title=\"逻辑运算\"></a>逻辑运算</h3><p><mjx-container class=\"MathJax\" jax=\"SVG\" display=\"true\"><svg style=\"vertical-align: -0.452ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"142.571ex\" height=\"2.149ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 63016.3 950\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1074.2,0)\"><path data-c=\"22C5\" d=\"M78 250Q78 274 95 292T138 310Q162 310 180 294T199 251Q199 226 182 208T139 190T96 207T78 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1574.4,0)\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2337.4,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2782.1,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(3226.8,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(3671.4,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">与</text></g><g data-mml-node=\"mi\" transform=\"translate(4671.4,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">运</text></g><g data-mml-node=\"mi\" transform=\"translate(5671.4,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">算</text></g><g data-mml-node=\"mo\" transform=\"translate(6671.4,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(7116.1,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(7560.8,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(8005.4,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">全</text></g><g data-mml-node=\"mi\" transform=\"translate(9005.4,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">部</text></g><g data-mml-node=\"mi\" transform=\"translate(10005.4,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">为</text></g><g data-mml-node=\"mn\" transform=\"translate(11005.4,0)\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(11505.4,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">时</text></g><g data-mml-node=\"mi\" transform=\"translate(12505.4,0)\"><text data-variant=\"italic\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\" font-style=\"italic\">，</text></g><g data-mml-node=\"mi\" transform=\"translate(13505.4,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">结</text></g><g data-mml-node=\"mi\" transform=\"translate(14505.4,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">果</text></g><g data-mml-node=\"mi\" transform=\"translate(15505.4,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">才</text></g><g data-mml-node=\"mi\" transform=\"translate(16505.4,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">为</text></g><g data-mml-node=\"mn\" transform=\"translate(17505.4,0)\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path></g><g data-mml-node=\"mtext\" transform=\"translate(18005.4,0)\"><path data-c=\"A0\" d=\"\"></path></g><g data-mml-node=\"mi\" transform=\"translate(18255.4,0)\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(19329.7,0)\"><path data-c=\"2B\" d=\"M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(20329.9,0)\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(21092.9,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(21537.6,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(21982.2,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(22426.9,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">或</text></g><g data-mml-node=\"mi\" transform=\"translate(23426.9,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">运</text></g><g data-mml-node=\"mi\" transform=\"translate(24426.9,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">算</text></g><g data-mml-node=\"mo\" transform=\"translate(25426.9,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(25871.6,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(26316.2,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(26760.9,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">有</text></g><g data-mml-node=\"mi\" transform=\"translate(27760.9,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">一</text></g><g data-mml-node=\"mi\" transform=\"translate(28760.9,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">个</text></g><g data-mml-node=\"mi\" transform=\"translate(29760.9,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">为</text></g><g data-mml-node=\"mn\" transform=\"translate(30760.9,0)\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(31260.9,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(31705.6,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">则</text></g><g data-mml-node=\"mi\" transform=\"translate(32705.6,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">结</text></g><g data-mml-node=\"mi\" transform=\"translate(33705.6,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">果</text></g><g data-mml-node=\"mi\" transform=\"translate(34705.6,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">为</text></g><g data-mml-node=\"mn\" transform=\"translate(35705.6,0)\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path></g><g data-mml-node=\"mtext\" transform=\"translate(36205.6,0)\"><path data-c=\"A0\" d=\"\"></path></g><g data-mml-node=\"mi\" transform=\"translate(36455.6,0)\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(37529.8,0)\"><path data-c=\"2295\" d=\"M56 250Q56 394 156 488T384 583Q530 583 626 485T722 250Q722 110 625 14T390 -83Q249 -83 153 14T56 250ZM364 542Q308 539 251 509T148 418T96 278V270H369V542H364ZM681 278Q675 338 650 386T592 462T522 509T458 535T412 542H409V270H681V278ZM96 222Q104 150 139 95T219 12T302 -29T366 -42H369V230H96V222ZM681 222V230H409V-42H412Q429 -42 456 -36T521 -10T590 37T649 113T681 222Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(38530,0)\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(39293,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(39737.7,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">异</text></g><g data-mml-node=\"mi\" transform=\"translate(40737.7,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">或</text></g><g data-mml-node=\"mo\" transform=\"translate(41737.7,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(42182.3,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">或</text></g><g data-mml-node=\"mi\" transform=\"translate(43182.3,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">者</text></g><g data-mml-node=\"mi\" transform=\"translate(44182.3,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">说</text></g><g data-mml-node=\"mi\" transform=\"translate(45182.3,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">半</text></g><g data-mml-node=\"mi\" transform=\"translate(46182.3,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">加</text></g><g data-mml-node=\"mi\" transform=\"translate(47182.3,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">法</text></g><g data-mml-node=\"mi\" transform=\"translate(48182.3,0)\"><text data-variant=\"italic\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\" font-style=\"italic\">，</text></g><g data-mml-node=\"mo\" transform=\"translate(49182.3,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(49627,0)\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(50127,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">和</text></g><g data-mml-node=\"mn\" transform=\"translate(51127,0)\"><path data-c=\"30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(51627,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">得</text></g><g data-mml-node=\"mn\" transform=\"translate(52627,0)\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(53127,0)\"><text data-variant=\"italic\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\" font-style=\"italic\">，</text></g><g data-mml-node=\"mo\" transform=\"translate(54127,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(54571.7,0)\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(55071.7,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">和</text></g><g data-mml-node=\"mn\" transform=\"translate(56071.7,0)\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(56571.7,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">得</text></g><g data-mml-node=\"mn\" transform=\"translate(57571.7,0)\"><path data-c=\"30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(58071.7,0)\"><text data-variant=\"italic\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\" font-style=\"italic\">，</text></g><g data-mml-node=\"mo\" transform=\"translate(59071.7,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(59516.3,0)\"><path data-c=\"30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(60016.3,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">和</text></g><g data-mml-node=\"mn\" transform=\"translate(61016.3,0)\"><path data-c=\"30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(61516.3,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">得</text></g><g data-mml-node=\"mn\" transform=\"translate(62516.3,0)\"><path data-c=\"30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\"></path></g></g></g></svg></mjx-container></p>\n<h3 id=\"CRC冗余校验标准\"><a href=\"#CRC冗余校验标准\" class=\"headerlink\" title=\"CRC冗余校验标准\"></a>CRC冗余校验标准</h3><p>教程来自【[CRC校验]手算与直观演示】 <a class=\"link\" href=\"https://www.bilibili.com/video/BV1V4411Z7VA\">https://www.bilibili.com/video/BV1V4411Z7VA <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a></p>\n<ol>\n<li>先用给出的CRC多项式，写出CRC除数</li>\n<li>在需要添加校验数的数据串后加0（阶数个0）</li>\n<li>用上一条加工过的数据串和CRC除数做异或运算，直至无法进行异或运算，由此得到CRC校验和</li>\n<li>将校验和添加值数据串后，得到带CRC校验的数据</li>\n</ol>\n<p><strong>作用是对传输的数据包进行校验，而且只会校验不会纠错</strong></p>\n<p>补充说明，来自<a class=\"link\" href=\"https://blog.csdn.net/d_leo/article/details/73572373\">CRC校验原理及步骤-CSDN博客 <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a></p>\n<blockquote>\n<p><strong>CRC校验原理：</strong></p>\n<p>其根本思想就是先在要发送的帧后面附加一个数（这个就是用来校验的校验码，但要注意，这里的数也是二进制序列的，下同），生成一个新帧发送给接收端。当然，这个附加的数不是随意的，它要使所生成的新帧能与发送端和接收端共同选定的某个特定数整除（注意，这里不是直接采用二进制除法，而是采用一种称之为“ <strong>模2除法</strong>”）。到达接收端后，再把接收到的新帧除以（同样采用“ <strong>模2除法</strong>”）这个选定的除数。因为在发送端发送数据帧之前就已通过附加一个数，做了“去余”处理（也就已经能整除了），所以结果应该是没有余数。如果有余数，则表明该帧在传输过程中出现了差错。</p>\n<p>CRC校验中有两个关键点，一是预先确定一个发送送端和接收端都用来作为除数的二进制比特串（或多项式），可以随机选择，也可以使用国际标准，但是最高位和最低位必须为1；二是把原始帧与上面计算出的除数进行模2除法运算，计算出CRC码。</p>\n</blockquote>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/software_exam/0930abe368ad014ddd3d5a98f87c25d.png\" alt=\"0930abe368ad014ddd3d5a98f87c25d\" style=\"zoom:15%;\">\n\n<h3 id=\"TCP-IP-OSI模型\"><a href=\"#TCP-IP-OSI模型\" class=\"headerlink\" title=\"TCP/IP  &&  OSI模型\"></a>TCP/IP  &amp;&amp;  OSI模型</h3><img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/software_exam/54573865e5952bd00fb98cbf2d505be8.jpeg\" alt=\"54573865e5952bd00fb98cbf2d505be8\" style=\"zoom: 67%;\">\n\n<p><em><strong>1. 应用层</strong></em>：这是最顶层，直接与应用程序交互，定义了应用程序如何通过网络<a class=\"link\" href=\"https://so.csdn.net/so/search?q=%E5%8F%91%E9%80%81%E6%95%B0%E6%8D%AE&spm=1001.2101.3001.7020\">发送数据 <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a>。常见的应用层协议有HTTP、FTP、SMTP、DNS等，它们分别负责网页浏览、文件传输、电子邮件以及域名解析等功能。</p>\n<p><em><strong>2. 运输层</strong></em>：提供端到端的数据传输服务，主要关注确保数据包能够正确、可靠地到达目的地。这一层最重要的两个协议是TCP（传输控制协议）和UDP（用户数据报协议）。TCP提供面向连接的、可靠的服务，通过序列号、确认机制和重传机制保证数据完整性；而UDP则提供无连接的、不可靠但速度快的服务。</p>\n<p><em><strong>3. 网络层</strong></em>：主要负责主机到主机之间的通信，即数据包从源网络传输到目的网络的过程。IP（互联网协议）是这一层的核心协议，它给每个数据包加上源和目的地址（即IP地址），并通过路由器进行路径选择。</p>\n<p><em><strong>4. 网络接口层</strong></em>（包括数据链路层和物理层）：负责封装成帧、错误检测、访问媒介以及物理寻址。例如，以太网协议（Ethernet）就属于这一层，它提供MAC（Media Access Control）地址，并处理数据在网络中的实际传输。</p>\n<h4 id=\"各层协议\"><a href=\"#各层协议\" class=\"headerlink\" title=\"各层协议\"></a>各层协议</h4><img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/software_exam/image-20240818113830275.png\" alt=\"image-20240818113830275\" style=\"zoom: 33%;\">\n\n<h4 id=\"TCP链接\"><a href=\"#TCP链接\" class=\"headerlink\" title=\"TCP链接\"></a>TCP链接</h4><h3 id=\"网络安全技术IDS\"><a href=\"#网络安全技术IDS\" class=\"headerlink\" title=\"网络安全技术IDS\"></a>网络安全技术IDS</h3><h3 id=\"单播地址-组播地址\"><a href=\"#单播地址-组播地址\" class=\"headerlink\" title=\"单播地址/组播地址\"></a>单播地址/组播地址</h3><h3 id=\"DHCP-SMTP-SNMP-ARP等协议\"><a href=\"#DHCP-SMTP-SNMP-ARP等协议\" class=\"headerlink\" title=\"DHCP & SMTP & SNMP & ARP等协议\"></a>DHCP &amp; SMTP &amp; SNMP &amp; ARP等协议</h3><h3 id=\"辅助域名服务器-转发域名服务器\"><a href=\"#辅助域名服务器-转发域名服务器\" class=\"headerlink\" title=\"辅助域名服务器 & 转发域名服务器\"></a>辅助域名服务器 &amp; 转发域名服务器</h3><h3 id=\"Kerberos\"><a href=\"#Kerberos\" class=\"headerlink\" title=\"Kerberos\"></a>Kerberos</h3><h3 id=\"GANTT图-PERT图\"><a href=\"#GANTT图-PERT图\" class=\"headerlink\" title=\"GANTT图 & PERT图\"></a>GANTT图 &amp; PERT图</h3><h2 id=\"计算机网络概论\"><a href=\"#计算机网络概论\" class=\"headerlink\" title=\"计算机网络概论\"></a>计算机网络概论</h2><h2 id=\"数据通信基础\"><a href=\"#数据通信基础\" class=\"headerlink\" title=\"数据通信基础\"></a>数据通信基础</h2><ul>\n<li>信道带宽W</li>\n<li>模拟信道：f2和f1分别表示最高/最低频率，单位赫兹Hz</li>\n</ul>\n<p><mjx-container class=\"MathJax\" jax=\"SVG\" display=\"true\"><svg style=\"vertical-align: -0.464ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"12.346ex\" height=\"2.059ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -705 5457.1 910\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44A\" d=\"M436 683Q450 683 486 682T553 680Q604 680 638 681T677 682Q695 682 695 674Q695 670 692 659Q687 641 683 639T661 637Q636 636 621 632T600 624T597 615Q597 603 613 377T629 138L631 141Q633 144 637 151T649 170T666 200T690 241T720 295T759 362Q863 546 877 572T892 604Q892 619 873 628T831 637Q817 637 817 647Q817 650 819 660Q823 676 825 679T839 682Q842 682 856 682T895 682T949 681Q1015 681 1034 683Q1048 683 1048 672Q1048 666 1045 655T1038 640T1028 637Q1006 637 988 631T958 617T939 600T927 584L923 578L754 282Q586 -14 585 -15Q579 -22 561 -22Q546 -22 542 -17Q539 -14 523 229T506 480L494 462Q472 425 366 239Q222 -13 220 -15T215 -19Q210 -22 197 -22Q178 -22 176 -15Q176 -12 154 304T131 622Q129 631 121 633T82 637H58Q51 644 51 648Q52 671 64 683H76Q118 680 176 680Q301 680 313 683H323Q329 677 329 674T327 656Q322 641 318 637H297Q236 634 232 620Q262 160 266 136L501 550L499 587Q496 629 489 632Q483 636 447 637Q428 637 422 639T416 648Q416 650 418 660Q419 664 420 669T421 676T424 680T428 682T436 683Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1325.8,0)\"><path data-c=\"3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path></g><g data-mml-node=\"msub\" transform=\"translate(2381.6,0)\"><g data-mml-node=\"mi\"><path data-c=\"1D453\" d=\"M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z\"></path></g><g data-mml-node=\"TeXAtom\" transform=\"translate(523,-150) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mn\"><path data-c=\"32\" d=\"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z\"></path></g></g></g><g data-mml-node=\"mo\" transform=\"translate(3530.3,0)\"><path data-c=\"2212\" d=\"M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z\"></path></g><g data-mml-node=\"msub\" transform=\"translate(4530.6,0)\"><g data-mml-node=\"mi\"><path data-c=\"1D453\" d=\"M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z\"></path></g><g data-mml-node=\"TeXAtom\" transform=\"translate(523,-150) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mn\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path></g></g></g></g></g></svg></mjx-container></p>\n<ul>\n<li>数字信道：数字信道是离散信道，带宽为信道能够达到的最大数据传输效率，单位是bit/s</li>\n</ul>\n<p><img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/software_exam/image-20240821211304579.png\" alt=\"image-20240821211304579\"></p>\n<ul>\n<li><p>码元：一个数字脉冲称为一个码元（可以理解为时钟周期的信号）</p>\n</li>\n<li><p>码元速率：单位时间内传送的码元个数。如果码元宽度（脉冲周期）为T，则码元速率（波特率）为<code>B=1/T</code>，单位是<strong>波特</strong></p>\n</li>\n<li><p>一个码元携带的信息量n（位）与码元种类数（N）的关系为</p>\n</li>\n</ul>\n<p><mjx-container class=\"MathJax\" jax=\"SVG\" display=\"true\"><svg style=\"vertical-align: -0.546ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"10.54ex\" height=\"2.116ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -694 4658.8 935.4\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"TeXAtom\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><path data-c=\"6E\" d=\"M41 46H55Q94 46 102 60V68Q102 77 102 91T102 122T103 161T103 203Q103 234 103 269T102 328V351Q99 370 88 376T43 385H25V408Q25 431 27 431L37 432Q47 433 65 434T102 436Q119 437 138 438T167 441T178 442H181V402Q181 364 182 364T187 369T199 384T218 402T247 421T285 437Q305 442 336 442Q450 438 463 329Q464 322 464 190V104Q464 66 466 59T477 49Q498 46 526 46H542V0H534L510 1Q487 2 460 2T422 3Q319 3 310 0H302V46H318Q379 46 379 62Q380 64 380 200Q379 335 378 343Q372 371 358 385T334 402T308 404Q263 404 229 370Q202 343 195 315T187 232V168V108Q187 78 188 68T191 55T200 49Q221 46 249 46H265V0H257L234 1Q210 2 183 2T145 3Q42 3 33 0H25V46H41Z\"></path></g></g><g data-mml-node=\"mo\" transform=\"translate(833.8,0)\"><path data-c=\"3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path></g><g data-mml-node=\"msub\" transform=\"translate(1889.6,0)\"><g data-mml-node=\"mi\"><path data-c=\"6C\" d=\"M42 46H56Q95 46 103 60V68Q103 77 103 91T103 124T104 167T104 217T104 272T104 329Q104 366 104 407T104 482T104 542T103 586T103 603Q100 622 89 628T44 637H26V660Q26 683 28 683L38 684Q48 685 67 686T104 688Q121 689 141 690T171 693T182 694H185V379Q185 62 186 60Q190 52 198 49Q219 46 247 46H263V0H255L232 1Q209 2 183 2T145 3T107 3T57 1L34 0H26V46H42Z\"></path><path data-c=\"6F\" d=\"M28 214Q28 309 93 378T250 448Q340 448 405 380T471 215Q471 120 407 55T250 -10Q153 -10 91 57T28 214ZM250 30Q372 30 372 193V225V250Q372 272 371 288T364 326T348 362T317 390T268 410Q263 411 252 411Q222 411 195 399Q152 377 139 338T126 246V226Q126 130 145 91Q177 30 250 30Z\" transform=\"translate(278,0)\"></path><path data-c=\"67\" d=\"M329 409Q373 453 429 453Q459 453 472 434T485 396Q485 382 476 371T449 360Q416 360 412 390Q410 404 415 411Q415 412 416 414V415Q388 412 363 393Q355 388 355 386Q355 385 359 381T368 369T379 351T388 325T392 292Q392 230 343 187T222 143Q172 143 123 171Q112 153 112 133Q112 98 138 81Q147 75 155 75T227 73Q311 72 335 67Q396 58 431 26Q470 -13 470 -72Q470 -139 392 -175Q332 -206 250 -206Q167 -206 107 -175Q29 -140 29 -75Q29 -39 50 -15T92 18L103 24Q67 55 67 108Q67 155 96 193Q52 237 52 292Q52 355 102 398T223 442Q274 442 318 416L329 409ZM299 343Q294 371 273 387T221 404Q192 404 171 388T145 343Q142 326 142 292Q142 248 149 227T179 192Q196 182 222 182Q244 182 260 189T283 207T294 227T299 242Q302 258 302 292T299 343ZM403 -75Q403 -50 389 -34T348 -11T299 -2T245 0H218Q151 0 138 -6Q118 -15 107 -34T95 -74Q95 -84 101 -97T122 -127T170 -155T250 -167Q319 -167 361 -139T403 -75Z\" transform=\"translate(778,0)\"></path></g><g data-mml-node=\"TeXAtom\" transform=\"translate(1311,-241.4) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mn\"><path data-c=\"32\" d=\"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z\"></path></g></g></g><g data-mml-node=\"mo\" transform=\"translate(3604.1,0)\"><path data-c=\"2061\" d=\"\"></path></g><g data-mml-node=\"mi\" transform=\"translate(3770.8,0)\"><path data-c=\"1D441\" d=\"M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z\"></path></g></g></g></svg></mjx-container></p>\n<h3 id=\"奈奎斯特定理\"><a href=\"#奈奎斯特定理\" class=\"headerlink\" title=\"奈奎斯特定理\"></a>奈奎斯特定理</h3><p>在没有噪声干扰的信道（理想）中，若信号带宽为W，则最大码元速率为<strong>B=2W（Baud）</strong></p>\n<p>极限数据速率为<br>$$<br>\\mathrm{R}=\\mathrm{B,,log}_{2} \\mathrm{<del>N}=2 \\mathrm{</del>W} \\log _{2} \\mathrm{~N}<br>$$</p>\n<ul>\n<li>码元速率：每秒发送的包裹个数</li>\n<li>数据速率：每秒发送的包裹重量</li>\n</ul>\n<h3 id=\"香农定理\"><a href=\"#香农定理\" class=\"headerlink\" title=\"香农定理\"></a>香农定理</h3><p>在一个噪声信道的极限数据速率和带宽之间的关系</p>\n<p>极限速率公式为：<br><mjx-container class=\"MathJax\" jax=\"SVG\" display=\"true\"><svg style=\"vertical-align: -0.566ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"20.599ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 9104.6 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"TeXAtom\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><path data-c=\"43\" d=\"M56 342Q56 428 89 500T174 615T283 681T391 705Q394 705 400 705T408 704Q499 704 569 636L582 624L612 663Q639 700 643 704Q644 704 647 704T653 705H657Q660 705 666 699V419L660 413H626Q620 419 619 430Q610 512 571 572T476 651Q457 658 426 658Q322 658 252 588Q173 509 173 342Q173 221 211 151Q232 111 263 84T328 45T384 29T428 24Q517 24 571 93T626 244Q626 251 632 257H660L666 251V236Q661 133 590 56T403 -21Q262 -21 159 83T56 342Z\"></path></g></g><g data-mml-node=\"mo\" transform=\"translate(999.8,0)\"><path data-c=\"3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path></g><g data-mml-node=\"msub\" transform=\"translate(2055.6,0)\"><g data-mml-node=\"TeXAtom\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><path data-c=\"57\" d=\"M792 683Q810 680 914 680Q991 680 1003 683H1009V637H996Q931 633 915 598Q912 591 863 438T766 135T716 -17Q711 -22 694 -22Q676 -22 673 -15Q671 -13 593 231L514 477L435 234Q416 174 391 92T358 -6T341 -22H331Q314 -21 310 -15Q309 -14 208 302T104 622Q98 632 87 633Q73 637 35 637H18V683H27Q69 681 154 681Q164 681 181 681T216 681T249 682T276 683H287H298V637H285Q213 637 213 620Q213 616 289 381L364 144L427 339Q490 535 492 546Q487 560 482 578T475 602T468 618T461 628T449 633T433 636T408 637H380V683H388Q397 680 508 680Q629 680 650 683H660V637H647Q576 637 576 619L727 146Q869 580 869 600Q869 605 863 612T839 627T794 637H783V683H792Z\"></path><path data-c=\"6C\" d=\"M42 46H56Q95 46 103 60V68Q103 77 103 91T103 124T104 167T104 217T104 272T104 329Q104 366 104 407T104 482T104 542T103 586T103 603Q100 622 89 628T44 637H26V660Q26 683 28 683L38 684Q48 685 67 686T104 688Q121 689 141 690T171 693T182 694H185V379Q185 62 186 60Q190 52 198 49Q219 46 247 46H263V0H255L232 1Q209 2 183 2T145 3T107 3T57 1L34 0H26V46H42Z\" transform=\"translate(1028,0)\"></path><path data-c=\"6F\" d=\"M28 214Q28 309 93 378T250 448Q340 448 405 380T471 215Q471 120 407 55T250 -10Q153 -10 91 57T28 214ZM250 30Q372 30 372 193V225V250Q372 272 371 288T364 326T348 362T317 390T268 410Q263 411 252 411Q222 411 195 399Q152 377 139 338T126 246V226Q126 130 145 91Q177 30 250 30Z\" transform=\"translate(1306,0)\"></path><path data-c=\"67\" d=\"M329 409Q373 453 429 453Q459 453 472 434T485 396Q485 382 476 371T449 360Q416 360 412 390Q410 404 415 411Q415 412 416 414V415Q388 412 363 393Q355 388 355 386Q355 385 359 381T368 369T379 351T388 325T392 292Q392 230 343 187T222 143Q172 143 123 171Q112 153 112 133Q112 98 138 81Q147 75 155 75T227 73Q311 72 335 67Q396 58 431 26Q470 -13 470 -72Q470 -139 392 -175Q332 -206 250 -206Q167 -206 107 -175Q29 -140 29 -75Q29 -39 50 -15T92 18L103 24Q67 55 67 108Q67 155 96 193Q52 237 52 292Q52 355 102 398T223 442Q274 442 318 416L329 409ZM299 343Q294 371 273 387T221 404Q192 404 171 388T145 343Q142 326 142 292Q142 248 149 227T179 192Q196 182 222 182Q244 182 260 189T283 207T294 227T299 242Q302 258 302 292T299 343ZM403 -75Q403 -50 389 -34T348 -11T299 -2T245 0H218Q151 0 138 -6Q118 -15 107 -34T95 -74Q95 -84 101 -97T122 -127T170 -155T250 -167Q319 -167 361 -139T403 -75Z\" transform=\"translate(1806,0)\"></path></g></g><g data-mml-node=\"TeXAtom\" transform=\"translate(2339,-241.4) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mn\"><path data-c=\"32\" d=\"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z\"></path></g></g></g><g data-mml-node=\"mo\" transform=\"translate(4798.1,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(5187.1,0)\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(5909.3,0)\"><path data-c=\"2B\" d=\"M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z\"></path></g><g data-mml-node=\"TeXAtom\" data-mjx-texclass=\"ORD\" transform=\"translate(6909.6,0)\"><g data-mml-node=\"mi\"><path data-c=\"53\" d=\"M55 507Q55 590 112 647T243 704H257Q342 704 405 641L426 672Q431 679 436 687T446 700L449 704Q450 704 453 704T459 705H463Q466 705 472 699V462L466 456H448Q437 456 435 459T430 479Q413 605 329 646Q292 662 254 662Q201 662 168 626T135 542Q135 508 152 480T200 435Q210 431 286 412T370 389Q427 367 463 314T500 191Q500 110 448 45T301 -21Q245 -21 201 -4T140 27L122 41Q118 36 107 21T87 -7T78 -21Q76 -22 68 -22H64Q61 -22 55 -16V101Q55 220 56 222Q58 227 76 227H89Q95 221 95 214Q95 182 105 151T139 90T205 42T305 24Q352 24 386 62T420 155Q420 198 398 233T340 281Q284 295 266 300Q261 301 239 306T206 314T174 325T141 343T112 367T85 402Q55 451 55 507Z\"></path></g></g><g data-mml-node=\"TeXAtom\" data-mjx-texclass=\"ORD\" transform=\"translate(7465.6,0)\"><g data-mml-node=\"mo\"><path data-c=\"2F\" d=\"M423 750Q432 750 438 744T444 730Q444 725 271 248T92 -240Q85 -250 75 -250Q68 -250 62 -245T56 -231Q56 -221 230 257T407 740Q411 750 423 750Z\"></path></g></g><g data-mml-node=\"TeXAtom\" data-mjx-texclass=\"ORD\" transform=\"translate(7965.6,0)\"><g data-mml-node=\"mi\"><path data-c=\"4E\" d=\"M42 46Q74 48 94 56T118 69T128 86V634H124Q114 637 52 637H25V683H232L235 680Q237 679 322 554T493 303L578 178V598Q572 608 568 613T544 627T492 637H475V683H483Q498 680 600 680Q706 680 715 683H724V637H707Q634 633 622 598L621 302V6L614 0H600Q585 0 582 3T481 150T282 443T171 605V345L172 86Q183 50 257 46H274V0H265Q250 3 150 3Q48 3 33 0H25V46H42Z\"></path></g></g><g data-mml-node=\"mo\" transform=\"translate(8715.6,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container><br>其中，W为信道带宽，S为信号平均功率，N为噪声平均功率，S/N为信噪比</p>\n<p>分贝与信噪比的关系：<br><mjx-container class=\"MathJax\" jax=\"SVG\" display=\"true\"><svg style=\"vertical-align: -0.581ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"18.224ex\" height=\"2.278ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 8055 1006.9\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"TeXAtom\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><path data-c=\"64\" d=\"M376 495Q376 511 376 535T377 568Q377 613 367 624T316 637H298V660Q298 683 300 683L310 684Q320 685 339 686T376 688Q393 689 413 690T443 693T454 694H457V390Q457 84 458 81Q461 61 472 55T517 46H535V0Q533 0 459 -5T380 -11H373V44L365 37Q307 -11 235 -11Q158 -11 96 50T34 215Q34 315 97 378T244 442Q319 442 376 393V495ZM373 342Q328 405 260 405Q211 405 173 369Q146 341 139 305T131 211Q131 155 138 120T173 59Q203 26 251 26Q322 26 373 103V342Z\"></path><path data-c=\"42\" d=\"M131 622Q124 629 120 631T104 634T61 637H28V683H229H267H346Q423 683 459 678T531 651Q574 627 599 590T624 512Q624 461 583 419T476 360L466 357Q539 348 595 302T651 187Q651 119 600 67T469 3Q456 1 242 0H28V46H61Q103 47 112 49T131 61V622ZM511 513Q511 560 485 594T416 636Q415 636 403 636T371 636T333 637Q266 637 251 636T232 628Q229 624 229 499V374H312L396 375L406 377Q410 378 417 380T442 393T474 417T499 456T511 513ZM537 188Q537 239 509 282T430 336L329 337H229V200V116Q229 57 234 52Q240 47 334 47H383Q425 47 443 53Q486 67 511 104T537 188Z\" transform=\"translate(556,0)\"></path></g></g><g data-mml-node=\"mo\" transform=\"translate(1541.8,0)\"><path data-c=\"3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(2597.6,0)\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path><path data-c=\"30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\" transform=\"translate(500,0)\"></path></g><g data-mml-node=\"msub\" transform=\"translate(3764.2,0)\"><g data-mml-node=\"mi\"><path data-c=\"6C\" d=\"M42 46H56Q95 46 103 60V68Q103 77 103 91T103 124T104 167T104 217T104 272T104 329Q104 366 104 407T104 482T104 542T103 586T103 603Q100 622 89 628T44 637H26V660Q26 683 28 683L38 684Q48 685 67 686T104 688Q121 689 141 690T171 693T182 694H185V379Q185 62 186 60Q190 52 198 49Q219 46 247 46H263V0H255L232 1Q209 2 183 2T145 3T107 3T57 1L34 0H26V46H42Z\"></path><path data-c=\"6F\" d=\"M28 214Q28 309 93 378T250 448Q340 448 405 380T471 215Q471 120 407 55T250 -10Q153 -10 91 57T28 214ZM250 30Q372 30 372 193V225V250Q372 272 371 288T364 326T348 362T317 390T268 410Q263 411 252 411Q222 411 195 399Q152 377 139 338T126 246V226Q126 130 145 91Q177 30 250 30Z\" transform=\"translate(278,0)\"></path><path data-c=\"67\" d=\"M329 409Q373 453 429 453Q459 453 472 434T485 396Q485 382 476 371T449 360Q416 360 412 390Q410 404 415 411Q415 412 416 414V415Q388 412 363 393Q355 388 355 386Q355 385 359 381T368 369T379 351T388 325T392 292Q392 230 343 187T222 143Q172 143 123 171Q112 153 112 133Q112 98 138 81Q147 75 155 75T227 73Q311 72 335 67Q396 58 431 26Q470 -13 470 -72Q470 -139 392 -175Q332 -206 250 -206Q167 -206 107 -175Q29 -140 29 -75Q29 -39 50 -15T92 18L103 24Q67 55 67 108Q67 155 96 193Q52 237 52 292Q52 355 102 398T223 442Q274 442 318 416L329 409ZM299 343Q294 371 273 387T221 404Q192 404 171 388T145 343Q142 326 142 292Q142 248 149 227T179 192Q196 182 222 182Q244 182 260 189T283 207T294 227T299 242Q302 258 302 292T299 343ZM403 -75Q403 -50 389 -34T348 -11T299 -2T245 0H218Q151 0 138 -6Q118 -15 107 -34T95 -74Q95 -84 101 -97T122 -127T170 -155T250 -167Q319 -167 361 -139T403 -75Z\" transform=\"translate(778,0)\"></path></g><g data-mml-node=\"TeXAtom\" transform=\"translate(1311,-241.4) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mn\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path><path data-c=\"30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\" transform=\"translate(500,0)\"></path></g></g></g><g data-mml-node=\"mo\" transform=\"translate(5832.3,0)\"><path data-c=\"2061\" d=\"\"></path></g><g data-mml-node=\"TeXAtom\" data-mjx-texclass=\"ORD\" transform=\"translate(5999,0)\"><g data-mml-node=\"mtext\"><path data-c=\"A0\" d=\"\"></path></g><g data-mml-node=\"mi\" transform=\"translate(250,0)\"><path data-c=\"53\" d=\"M55 507Q55 590 112 647T243 704H257Q342 704 405 641L426 672Q431 679 436 687T446 700L449 704Q450 704 453 704T459 705H463Q466 705 472 699V462L466 456H448Q437 456 435 459T430 479Q413 605 329 646Q292 662 254 662Q201 662 168 626T135 542Q135 508 152 480T200 435Q210 431 286 412T370 389Q427 367 463 314T500 191Q500 110 448 45T301 -21Q245 -21 201 -4T140 27L122 41Q118 36 107 21T87 -7T78 -21Q76 -22 68 -22H64Q61 -22 55 -16V101Q55 220 56 222Q58 227 76 227H89Q95 221 95 214Q95 182 105 151T139 90T205 42T305 24Q352 24 386 62T420 155Q420 198 398 233T340 281Q284 295 266 300Q261 301 239 306T206 314T174 325T141 343T112 367T85 402Q55 451 55 507Z\"></path></g></g><g data-mml-node=\"TeXAtom\" data-mjx-texclass=\"ORD\" transform=\"translate(6805,0)\"><g data-mml-node=\"mo\"><path data-c=\"2F\" d=\"M423 750Q432 750 438 744T444 730Q444 725 271 248T92 -240Q85 -250 75 -250Q68 -250 62 -245T56 -231Q56 -221 230 257T407 740Q411 750 423 750Z\"></path></g></g><g data-mml-node=\"TeXAtom\" data-mjx-texclass=\"ORD\" transform=\"translate(7305,0)\"><g data-mml-node=\"mi\"><path data-c=\"4E\" d=\"M42 46Q74 48 94 56T118 69T128 86V634H124Q114 637 52 637H25V683H232L235 680Q237 679 322 554T493 303L578 178V598Q572 608 568 613T544 627T492 637H475V683H483Q498 680 600 680Q706 680 715 683H724V637H707Q634 633 622 598L621 302V6L614 0H600Q585 0 582 3T481 150T282 443T171 605V345L172 86Q183 50 257 46H274V0H265Q250 3 150 3Q48 3 33 0H25V46H42Z\"></path></g></g></g></g></svg></mjx-container><br>一般来说，题目可能不会直接给 <strong>S/N</strong> ，</p>\n<ul>\n<li><strong>dB=10</strong> ==&gt; <strong>S/N=10</strong></li>\n<li><strong>dB=30</strong> ==&gt; <strong>S/N=30</strong></li>\n</ul>\n"},{"title":"水门车险的开发记录（前端）","description":"水门车险开发过程记录","date":"2024-05-06T08:08:00.000Z","thumbnail":"img/thumbnail/minato.png","excerpt":"该文档为水门车险的前端部分，记录了水门车险在前端这个模块的开发过程，组件库方面选择了 ElementPLUS，这个组件库在官网有着非常详细的文档，非常适合前端不熟悉的人用其制作精美的页面；","_content":"\n## 前言\n\n这个文档记录了**水门车险前端模块**开发过程中的部分功能实现方法。\n\n内容是基于区块链技术开发的一个车险系统，关于区块链的的概念详见其他 Markdown；\n\n这个系统并没有往实际使用的方向开发，纯粹是应付毕业设计所准备的，因此可能存在很多不合理的设计或者是奇奇怪怪的 bug，总之，一切努力只为能够通过毕设考核。\n\n整个项目暂定分成三个模块，前端、后端、区块链。\n\n```terminal\nD:.\n├─gin-minato\n├─hardhat-minato\n└─vue-minato\n```\n\n- 架构设计\n\n<img src=\"/img/minatosys_FrontEnd_note/image-20240423222551537.png\" alt=\"image-20240423222551537\" style=\"zoom:67%;\" />\n\ngo ~ go ~ go！\n\n## 准备工作\n\n需要安装`node.js`\n\n```terminal\nPS D:\\study_test\\Minato_Sys\\vue-Minato> node --version\nv18.18.0\n```\n\n#### 安装和部署\n\n```terminal\n# 选择一个你喜欢的包管理器\n# 安装element-plus\n# NPM\n$ npm install element-plus --save\n# Yarn\n$ yarn add element-plus\n# pnpm\n$ pnpm install element-plus\n\n# “自动导入”插件\n$ npm install -D unplugin-vue-components unplugin-auto-import\n\n# 安装setup语法糖插件\n$ npm i vite-plugin-vue-setup-extend -D\n\n# 安装icon图标库\n$ npm install @element-plus/icons-vue\n\n# 安装Metamask插件\n$ npm i @metamask/detect-provider\n\n# 安装axios\n$ npm i axios\n\n# 安装pinia\n$ npm i pinia\n```\n\n使用 Element-plus 的方法请参考官方文档，写得非常详细，我觉得完全没必要多此一举再写一遍：https://element-plus.org/zh-CN\n\n同时，您还需要准备一个`Metamask`钱包，用以对接接受支付和接受赔偿金的环节\n\n<img src=\"/img/minatosys_FrontEnd_note/image-20240429092312447.png\" alt=\"image-20240429092312447\" style=\"zoom: 67%;\" />\n\n## 页面设计\n\n`src`下的目录大概像这样，其中经常复用的如侧边栏、顶栏、页脚被写进了`components`文件夹\n\n_//很多页面的 UI 都是\"**借鉴**\"了各大网页的，包括了`Mozilla`、中国平安等等等等_\n\n```terminal\n|-- App.vue\n|-- components\n|   |-- ClaimSide.vue\n|   |-- InsuranceSide.vue\n|   |-- PageBotton.vue\n|   `-- PageTop.vue\n|-- interface\n|   |-- claimForm.ts\n|   `-- loginResult.ts\n|-- main.ts\n|-- pages\n|   |-- HomePage.vue\n|   |-- Login.vue\n|   |-- Register.vue\n|   |-- admin_Claim.vue\n|   |-- admin_Claim_Detail.vue\n|   |-- user_Claim.vue\n|   |-- user_ClaimQuery.vue\n|   |-- user_InsuranceBought.vue\n|   `-- user_InsuranceQuery.vue\n|-- router\n|   `-- index.ts\n|-- scripts\n|   |-- Codecheck.ts\n|   |-- Minatosys.ts\n|   |-- chineseCities.ts\n|   |-- claim_helper.ts\n|   |-- constants.ts\n|   `-- ethers-5.7.esm.min.js\n|-- store\n|   `-- loginStore.ts\n\n```\n\n<img src=\"/img/minatosys_FrontEnd_note/image-20240429095339280.png\" alt=\"image-20240429095339280\" style=\"zoom:80%;\" />\n\n<img src=\"/img/minatosys_FrontEnd_note/image-20240429100428388.png\" alt=\"image-20240429100428388\" style=\"zoom:80%;\" />\n\n<img src=\"/img/minatosys_FrontEnd_note/image-20240429100543929.png\" alt=\"image-20240429100543929\" style=\"zoom:80%;\" />\n\n![image-20240429100702637](/img/minatosys_FrontEnd_note/image-20240429100702637.png)\n\n<img src=\"/img/minatosys_FrontEnd_note/image-20240429100754037.png\" alt=\"image-20240429100754037\" style=\"zoom:80%;\" />\n\n## 理赔申报\n\n用户需要填写表单并且上传文件\n\n上传文件使用的是`ElementPlus`中的`el-upload`，这里上传的文件会直接以 POST 的方法传到 http://localhost:8080/update，后端需要对这个文件进行接收\n\n```vue\n<el-form-item\n  label=\"上传事故责任确认书、保险单复印件、驾驶证复印件以及维修费清单\"\n  required\n  prop=\"claimfile\">\n\t<el-upload\n\t\tref=\"uploadRef\"\n        class=\"upload-demo\"\n        drag action=\"http://localhost:8080/update\"\n      \tmultiple style=\"width: 50vw\"\n       \t:auto-upload=\"false\"\n       \tlist-type=\"picture\"\n       :before-upload=\"beforeClaimfileUpload\"\n        @change=\"handleChange\">\n        \t<el-icon class=\"el-icon--upload\"><upload-filled /></el-icon>\n            \t<div class=\"el-upload__text\">\n                \t将文件拖至此处或 <em>点击上传</em>\n                </div>\n    </el-upload>\n</el-form-item>\n```\n\n后端接收文件，这里以`Gin`为例\n\n```golang\nfunc (f FileController) Updatefile(ctx *gin.Context) {\n\tfile, err := ctx.FormFile(\"file\")\n\tif err != nil {\n\t\tfmt.Sprintf(\"get form err: %s\", err.Error())\n\t\tconfig.ReturnFalse(ctx, 3001, \"接收文件失败\")\n\t}\n\t// 保存文件到本地\n\terr = ctx.SaveUploadedFile(file, \"uploads/\"+file.Filename)\n\tif err != nil {\n\t\tfmt.Sprintf(\"upload file err: %s\", err.Error())\n\t\tconfig.ReturnFalse(ctx, 3002, \"保存文件失败\")\n\t}\n\tconfig.ReturnSuccess(ctx, 200, \"成功接受并保存文件！\", file, 1) // 返回文件名\n}\n```\n\n申报需要对用户提交的内容进行验证\n\n这里我们尽量在前端将这些都完成，避免无用表单对后端造成压力\n\n首先在 el-form 中添加规则\n\n```vue\n<el-form ref=\"claimFormRef\" :rules=\"rules\"></el-form>\n```\n\n接着引入数据类型，也可以在当前页面直接定义，不过因为这个和表单提交部分复用了，所以我单独写了一个接口，方便之后使用\n\n```typescript\n//引入ClaimForm的钩子\nimport { type ClaimForm } from \"@/interface/claimForm\";\n```\n\n定义响应式，初始化和接收数据\n\n```typescript\n// 初始化各项数据，其中insuranceid不论怎么写最终读取都是字符串格式\n// 因此不必过多纠结，打包的时候将其转换成number类型即可\nconst claimForm = reactive<ClaimForm>({\n  claimid: nanoid(),\n  username: \"\",\n  userid: \"\",\n  callnumber: \"\",\n  insuranceid: \"\",\n  carid: \"\",\n  region: \"\",\n  date: \"\",\n  claimfile: [\"\"],\n});\n```\n\n定义验证规则\n\n```typescript\nconst rules = reactive<FormRules<ClaimForm>>({\n  username: [\n    { required: true, message: \"请输入用户名！\", trigger: \"blur\" },\n    { min: 2, max: 10, message: \"请输入真实用户名！\", trigger: \"blur\" },\n  ],\n  userid: [\n    { required: true, message: \"请输入身份证号！\", trigger: \"blur\" },\n    { validator: checkID, trigger: \"blur\" },\n  ],\n  //以下验证规则省略，基本同上\n  callnumber: [],\n  carid: [],\n  insuranceid: [],\n  region: [],\n  date: [],\n  claimfile: [],\n});\n```\n\n其中，身份证校验需要单独写一份正则表达式加以验证：\n\n_//这部分来自网上，下方有链接_\n\n```typescript\n// 有关身份证校验码\n// 原文链接：https://blog.csdn.net/Cavendixe/article/details/129581874\nlet checkProv = function (val: string) {\n  var pattern = /^[1-9][0-9]/;\n  var provs: { [key: string]: string } = {\n    11: \"北京\",\n    12: \"天津\",\n    13: \"河北\",\n    14: \"山西\",\n    15: \"内蒙古\",\n    21: \"辽宁\",\n    22: \"吉林\",\n    23: \"黑龙江\",\n    31: \"上海\",\n    32: \"江苏\",\n    33: \"浙江\",\n    34: \"安徽\",\n    35: \"福建\",\n    36: \"江西\",\n    37: \"山东\",\n    41: \"河南\",\n    42: \"湖北\",\n    43: \"湖南\",\n    44: \"广东\",\n    45: \"广西\",\n    46: \"海南\",\n    50: \"重庆\",\n    51: \"四川\",\n    52: \"贵州\",\n    53: \"云南\",\n    54: \"西藏\",\n    61: \"陕西\",\n    62: \"甘肃\",\n    63: \"青海\",\n    64: \"宁夏\",\n    65: \"新疆\",\n    71: \"台湾\",\n    81: \"香港\",\n    82: \"澳门\",\n  };\n  if (pattern.test(val)) {\n    if (provs[val]) {\n      return true;\n    }\n  }\n  return false;\n};\nlet checkDate = function (val: string) {\n  var pattern =\n    /^(18|19|20)\\d{2}((0[1-9])|(1[0-2]))(([0-2][1-9])|10|20|30|31)$/;\n  if (pattern.test(val)) {\n    var year = val.substring(0, 4);\n    var month = val.substring(4, 6);\n    var date = val.substring(6, 8);\n    var date2 = new Date(year + \"-\" + month + \"-\" + date);\n    if (date2 && date2.getMonth() == parseInt(month) - 1) {\n      return true;\n    }\n  }\n  return false;\n};\nlet checkCode = function (val: any) {\n  var p =\n    /^[1-9]\\d{5}(18|19|20)\\d{2}((0[1-9])|(1[0-2]))(([0-2][1-9])|10|20|30|31)\\d{3}[0-9Xx]$/;\n  var factor = [7, 9, 10, 5, 8, 4, 2, 1, 6, 3, 7, 9, 10, 5, 8, 4, 2];\n  var parity = [1, 0, \"X\", 9, 8, 7, 6, 5, 4, 3, 2];\n  var code = val.substring(17);\n  if (p.test(val)) {\n    var sum = 0;\n    for (var i = 0; i < 17; i++) {\n      sum += val[i] * factor[i];\n    }\n    if (parity[sum % 11] == code.toUpperCase()) {\n      return true;\n    } else {\n      console.log(parity[sum % 11]);\n      return false;\n    }\n  }\n  return false;\n};\n\nexport let checkID = function (rule: any, value: any, callback: any) {\n  if (checkCode(value)) {\n    var date = value.substring(6, 14);\n    if (checkDate(date)) {\n      if (checkProv(value.substring(0, 2))) {\n        callback();\n      }\n    }\n  } else {\n    callback(new Error(\"请输入合法身份证号\"));\n    // console.log(value)\n  }\n};\n```\n\n同时，我们还需要在提交表单前，手动确认表单，也就是在点击提交按钮后执行一次表单验证\n\n```typescript\nconst formcheck = async (\n  formEl: FormInstance | undefined\n): Promise<boolean> => {\n  if (!formEl) return false;\n  try {\n    await formEl.validate();\n    console.log(\"submit!\");\n    return Promise.resolve(true);\n  } catch (error) {\n    console.log(\"error submit!\", error);\n    return Promise.reject(false);\n  }\n};\nconst combinedClick = async () => {\n  //这里先经过表单验证，通过后会像后端开始发送json报文\n  const isValid = await formcheck(claimFormRef.value);\n  if (isValid) {\n    //通过表单验证之后执行下方的方法\n    submitClaimForm();\n    submitUpload();\n  } else {\n    return;\n  }\n};\n```\n\n提交表单\n\n```typescript\nasync function submitClaimForm() {\n  //打包表单内容\n  let claimMessage = {\n    claim_id: claimForm.claimid,\n    claim_user: claimForm.userid,\n    claim_insurance: parseInt(claimForm.insuranceid),\n    callnumber: claimForm.callnumber,\n    car_id: claimForm.carid,\n    region: claimForm.region,\n    createtime: claimForm.date,\n    // claim_file: claimForm.claimfile,\n  };\n  // console.log(\"提交表单内容为\", claimMessage)\n  try {\n    const response = await axios.post(\n      \"http://localhost:8080/addclaim\",\n      claimMessage\n    );\n    // console.log(\"send successful:\", response.data.data)\n    switch (response.data.code) {\n      case 200:\n        ElMessage({\n          message: \"申报成功！\",\n          type: \"success\",\n        });\n        //3秒后跳转至理赔查询\n        setTimeout(() => {\n          router.push(\"/3-2\");\n        }, 300);\n        // 可以添加其他情况的处理\n        break;\n      //其他提交失败的结果\n      case 2001:\n      default:\n    }\n  } catch (error) {\n    console.error(\"Claim failed:\", error);\n    // 申报失败的处理\n  }\n}\n```\n\n但是，el-update 提交的表单不能修改文件名，始终会显示变量只读，我也不知道怎么修改\n\n所以我换了一个思路，在前端拿到文件的时候，将文件名存储在一个数组中，同时记录对应的申报 id，也就是`claimid`，将这些内容打包发送至后端，由后端接受并对保存的文件进行改名。\n\n```typescript\n//上传前会对文件进行检查，只允许jpg格式的文件上传至后端\nconst beforeClaimfileUpload: UploadProps[\"beforeUpload\"] = (rawFile) => {\n  if (rawFile.type !== \"image/jpeg\") {\n    ElMessage.error(\"图片仅支持jpeg格式\");\n    return false;\n  } else if (rawFile.size / 1024 / 1024 > 5) {\n    ElMessage.error(\"图片不能超过5MB!\");\n    return false;\n  }\n  return true;\n};\n// 监听上传组件的 change 事件，只要一有文件被加进来就会触发\n//目的是为了获取上传的文件名并就将其保存在claimForm.claimfile[]这个数组中\nconst handleChange = (file: any, fileList: any) => {\n  // 获取第一个文件的文件名\n  if (fileList.length > 0) {\n    for (let i = 0; i < fileList.length; i++) {\n      //fileList.name这个属性是只读的，没办法修改，很叫人头疼\n      claimForm.claimfile[i] = fileList[i].name;\n      // console.log(\"上传文件为\", claimForm.claimfile[i])\n    }\n  } else {\n    claimForm.claimfile[0] = \"\";\n  }\n};\n\n//功能是对提交表单的补充，目的是上传文件并将上传的文件名，绑定的申报单号发送至后端\nconst submitUpload = () => {\n  uploadRef.value!.submit();\n  let fileMessage = {\n    filename: claimForm.claimfile,\n    file_according: claimForm.claimid,\n    createtime: claimForm.date,\n  };\n  // console.log(\"修改表单内容为\", fileMessage)\n  //延迟提交，这个补充的改名接口必须等到图片以及被保存之后再执行，否则可能会出现图片还没保存，改名指令已经提交过来了，后端会因为找不到文件名而改名失败。\n  //这实在不是一个很好地办法，最好的办法还是能够在前端就对文件进行改名\n  setTimeout(async () => {\n    await axios.post(\"http://localhost:8080/updatesupport\", fileMessage);\n  }, 200);\n  // console.log(\"send successful:\", response.data.data)\n};\n```\n\n至此，用户申报部分就完成了，整个背后的流程分别是：\n\n用户填写表单/存储表单文件名=>表单验证=>表单提交=>表单文件验证=>表单文件提交=>表单文件名数组+表单号提交\n\n## 区块链交互\n\n区块链的交易需要使用用户私钥，如果完全由我们执行的话，但是对于区块链而言，账户私钥基本上算是把钱包权限完全交出去了，不仅我们需要花费资源和精力妥善保管，一不小心可能还有被篡改的风险。\n\n因此，在水门车险中我们使用`Metamask`来完成这一点，`Metamask`算是一个比较成熟的钱包，由它来负责保管用户的私钥。就好比我们使用支付宝进行支付一样，我们无需在商店门口一个一个输入自己的银行卡号和密码，只需要支付宝轻轻一扫。\n\n但是在使用前我们需要在前端验证浏览器有没有安装`Metamask`插件，这里我们使用`ethers-5.7.esm.min.js`，可以自己下载也可以npm安装。但是具体使用方法要看版本号以及对应的文档。\n\n```typescript\nimport { ethers } from \"@/scripts/ethers-5.7.esm.min.js\"\n// 用以检查浏览器有没有安装Metamask扩展\nasync function connect() {\n    if (typeof (window as any).ethereum !== \"undefined\") {\n        await (window as any).ethereum.request({\n            method: \"eth_requestAccounts\",\n        })\n    } else {\n        console.log(\"No metamask!\")\n    }\n}\n```\n\n接着我们需要实例化一个合约钱包，用以调用钱包中的方法，在那之前我们需要将合约的信息封装起来\n\n```typescript\n//constant.ts\n//合约地址\nexport const contractAddress = \"0x03cDbE6020084eb013b02B8d8e0A90BE018fb39E\"\n//合约编译生成的abi\nexport const abi = [\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"priceFeedAddress\",\n                type: \"address\",\n            },\n        ],\n        stateMutability: \"nonpayable\",\n        type: \"constructor\",\n    },\n]\n```\n\n接着实例化\n\n```typescript\nimport { ethers } from \"@/scripts/ethers-5.7.esm.min.js\"\nimport { abi, contractAddress } from \"./constants\"\n// 假设 1 人民币 = 39,583,333,333,333 wei\n// 其实这里偷懒了，和合约那边的喂价合约没对应上，最好是传数字到合约中的方法，之后再通过喂价合约转换成wei\nconst RMB_TO_WEI_RATE = BigInt(\"39583333333333\")\nconst provider = new ethers.providers.Web3Provider((window as any).ethereum)\nconst signer = provider.getSigner()\n//创建智能合约实例\nconst contract = new ethers.Contract(contractAddress, abi, signer)\n```\n\n接着我们使用这个实例化后的钱包调用合约中的方法\n\n```typescript\n//Minatosys.ts\n//管理员转账\nimport { updateAddress } from \"./claim_helper\"\nasync function compensation(\n    toAddress: any,\n    amountInCNY: number,\n    claimid: string,\n) {\n    let amountInWei: BigInt = BigInt(amountInCNY) * RMB_TO_WEI_RATE\n    console.log(\"Funding with\", toAddress)\n    if (typeof (window as any).ethereum !== \"undefined\") {\n        // 这里需要严格对应上合约中的方法，注意方法需要的参数类型\n        const tx = await contract.withdrawToAddress(\n            toAddress,\n            ethers.BigNumber.from(amountInWei),\n        )\n        await tx.wait()\n        updateAddress(tx.hash, claimid)\n        console.log(\"Transaction successful\")\n    } else {\n        console.log(\"No metamask!\")\n    }\n}\n```\n\n其中，关于引入的`updateAddress`\n\n```typescript\n//updateAddress.ts\n//用以更新数据库中交易的地址\nimport axios from \"axios\"\nexport async function updateAddress(address: string, claimid: string) {\n    let updateaddress = {\n        claim_id: claimid,\n        address: address,\n    }\n    await axios\n        .post(\"http://localhost:8080/updateaddress\", updateaddress)\n        .then((response) => {\n            console.log(response.data)\n        })\n}\nexport async function updateCompensation(\n    compensation: number,\n    claimid: string,\n) {\n    let updatestatus = {\n        claim_id: claimid,\n        compensation: compensation,\n    }\n    await axios\n        .post(\"http://localhost:8080/updatestatus\", updatestatus)\n        .then((response) => {\n            console.log(response.data)\n        })\n}\n\n```\n\n在封装好方法之后，我们需要调用它\n\n```typescript\nconst open = () => {\n    ElMessageBox.prompt('请输入赔偿金额（元）', '确认', {\n        confirmButtonText: '交易执行',\n        cancelButtonText: '取消',\n        inputErrorMessage: 'Invalid Email',\n    })\n        .then(({ value }) => {\n            const updatePromise = updateCompensation(parseFloat(value), tableData.value.claimid);\n            const compenstationPromise = compensation(tableData.value.publicKey, BigInt(value), tableData.value.claimid);\n            ElMessage({\n                type: 'success',\n                message: `正在建立交易，请稍后`,\n            });\n            return Promise.all([updatePromise, compenstationPromise]);\n        })\n        .then(() => {\n            setTimeout(() => {\n                router.push(\"/3-4\");\n            }, 3000);\n        })\n        .catch(() => {\n            ElMessage({\n                type: 'error',\n                message: '交易取消',\n            })\n        })\n}\n```\n\n这样就大功告成了，效果如下：\n\n<img src=\"/img/minatosys_FrontEnd_note/image-20240506160655596.png\" alt=\"image-20240506160655596\" style=\"zoom:80%;\" />\n\n<img src=\"/img/minatosys_FrontEnd_note/image-20240506160609536.png\" alt=\"image-20240506160609536\" style=\"zoom:80%;\" />\n\n静等片刻得到如下回复(当然你也可以再掏一笔燃气费用于加速交易)\n\n<img src=\"/img/minatosys_FrontEnd_note/image-20240506160424465.png\" alt=\"image-20240506160424465\" style=\"zoom:80%;\" />F\n","source":"_posts/minatosys_FrontEnd_note.md","raw":"---\ntitle: 水门车险的开发记录（前端）\ncategories:\n  - 前端\ndescription: \"水门车险开发过程记录\"\ndate: 2024-05-06 16:08\nthumbnail: \"img/thumbnail/minato.png\"\nexcerpt: \"该文档为水门车险的前端部分，记录了水门车险在前端这个模块的开发过程，组件库方面选择了 ElementPLUS，这个组件库在官网有着非常详细的文档，非常适合前端不熟悉的人用其制作精美的页面；\"\ntags:\n  - Vue3.0\n  - Typescript\n---\n\n## 前言\n\n这个文档记录了**水门车险前端模块**开发过程中的部分功能实现方法。\n\n内容是基于区块链技术开发的一个车险系统，关于区块链的的概念详见其他 Markdown；\n\n这个系统并没有往实际使用的方向开发，纯粹是应付毕业设计所准备的，因此可能存在很多不合理的设计或者是奇奇怪怪的 bug，总之，一切努力只为能够通过毕设考核。\n\n整个项目暂定分成三个模块，前端、后端、区块链。\n\n```terminal\nD:.\n├─gin-minato\n├─hardhat-minato\n└─vue-minato\n```\n\n- 架构设计\n\n<img src=\"/img/minatosys_FrontEnd_note/image-20240423222551537.png\" alt=\"image-20240423222551537\" style=\"zoom:67%;\" />\n\ngo ~ go ~ go！\n\n## 准备工作\n\n需要安装`node.js`\n\n```terminal\nPS D:\\study_test\\Minato_Sys\\vue-Minato> node --version\nv18.18.0\n```\n\n#### 安装和部署\n\n```terminal\n# 选择一个你喜欢的包管理器\n# 安装element-plus\n# NPM\n$ npm install element-plus --save\n# Yarn\n$ yarn add element-plus\n# pnpm\n$ pnpm install element-plus\n\n# “自动导入”插件\n$ npm install -D unplugin-vue-components unplugin-auto-import\n\n# 安装setup语法糖插件\n$ npm i vite-plugin-vue-setup-extend -D\n\n# 安装icon图标库\n$ npm install @element-plus/icons-vue\n\n# 安装Metamask插件\n$ npm i @metamask/detect-provider\n\n# 安装axios\n$ npm i axios\n\n# 安装pinia\n$ npm i pinia\n```\n\n使用 Element-plus 的方法请参考官方文档，写得非常详细，我觉得完全没必要多此一举再写一遍：https://element-plus.org/zh-CN\n\n同时，您还需要准备一个`Metamask`钱包，用以对接接受支付和接受赔偿金的环节\n\n<img src=\"/img/minatosys_FrontEnd_note/image-20240429092312447.png\" alt=\"image-20240429092312447\" style=\"zoom: 67%;\" />\n\n## 页面设计\n\n`src`下的目录大概像这样，其中经常复用的如侧边栏、顶栏、页脚被写进了`components`文件夹\n\n_//很多页面的 UI 都是\"**借鉴**\"了各大网页的，包括了`Mozilla`、中国平安等等等等_\n\n```terminal\n|-- App.vue\n|-- components\n|   |-- ClaimSide.vue\n|   |-- InsuranceSide.vue\n|   |-- PageBotton.vue\n|   `-- PageTop.vue\n|-- interface\n|   |-- claimForm.ts\n|   `-- loginResult.ts\n|-- main.ts\n|-- pages\n|   |-- HomePage.vue\n|   |-- Login.vue\n|   |-- Register.vue\n|   |-- admin_Claim.vue\n|   |-- admin_Claim_Detail.vue\n|   |-- user_Claim.vue\n|   |-- user_ClaimQuery.vue\n|   |-- user_InsuranceBought.vue\n|   `-- user_InsuranceQuery.vue\n|-- router\n|   `-- index.ts\n|-- scripts\n|   |-- Codecheck.ts\n|   |-- Minatosys.ts\n|   |-- chineseCities.ts\n|   |-- claim_helper.ts\n|   |-- constants.ts\n|   `-- ethers-5.7.esm.min.js\n|-- store\n|   `-- loginStore.ts\n\n```\n\n<img src=\"/img/minatosys_FrontEnd_note/image-20240429095339280.png\" alt=\"image-20240429095339280\" style=\"zoom:80%;\" />\n\n<img src=\"/img/minatosys_FrontEnd_note/image-20240429100428388.png\" alt=\"image-20240429100428388\" style=\"zoom:80%;\" />\n\n<img src=\"/img/minatosys_FrontEnd_note/image-20240429100543929.png\" alt=\"image-20240429100543929\" style=\"zoom:80%;\" />\n\n![image-20240429100702637](/img/minatosys_FrontEnd_note/image-20240429100702637.png)\n\n<img src=\"/img/minatosys_FrontEnd_note/image-20240429100754037.png\" alt=\"image-20240429100754037\" style=\"zoom:80%;\" />\n\n## 理赔申报\n\n用户需要填写表单并且上传文件\n\n上传文件使用的是`ElementPlus`中的`el-upload`，这里上传的文件会直接以 POST 的方法传到 http://localhost:8080/update，后端需要对这个文件进行接收\n\n```vue\n<el-form-item\n  label=\"上传事故责任确认书、保险单复印件、驾驶证复印件以及维修费清单\"\n  required\n  prop=\"claimfile\">\n\t<el-upload\n\t\tref=\"uploadRef\"\n        class=\"upload-demo\"\n        drag action=\"http://localhost:8080/update\"\n      \tmultiple style=\"width: 50vw\"\n       \t:auto-upload=\"false\"\n       \tlist-type=\"picture\"\n       :before-upload=\"beforeClaimfileUpload\"\n        @change=\"handleChange\">\n        \t<el-icon class=\"el-icon--upload\"><upload-filled /></el-icon>\n            \t<div class=\"el-upload__text\">\n                \t将文件拖至此处或 <em>点击上传</em>\n                </div>\n    </el-upload>\n</el-form-item>\n```\n\n后端接收文件，这里以`Gin`为例\n\n```golang\nfunc (f FileController) Updatefile(ctx *gin.Context) {\n\tfile, err := ctx.FormFile(\"file\")\n\tif err != nil {\n\t\tfmt.Sprintf(\"get form err: %s\", err.Error())\n\t\tconfig.ReturnFalse(ctx, 3001, \"接收文件失败\")\n\t}\n\t// 保存文件到本地\n\terr = ctx.SaveUploadedFile(file, \"uploads/\"+file.Filename)\n\tif err != nil {\n\t\tfmt.Sprintf(\"upload file err: %s\", err.Error())\n\t\tconfig.ReturnFalse(ctx, 3002, \"保存文件失败\")\n\t}\n\tconfig.ReturnSuccess(ctx, 200, \"成功接受并保存文件！\", file, 1) // 返回文件名\n}\n```\n\n申报需要对用户提交的内容进行验证\n\n这里我们尽量在前端将这些都完成，避免无用表单对后端造成压力\n\n首先在 el-form 中添加规则\n\n```vue\n<el-form ref=\"claimFormRef\" :rules=\"rules\"></el-form>\n```\n\n接着引入数据类型，也可以在当前页面直接定义，不过因为这个和表单提交部分复用了，所以我单独写了一个接口，方便之后使用\n\n```typescript\n//引入ClaimForm的钩子\nimport { type ClaimForm } from \"@/interface/claimForm\";\n```\n\n定义响应式，初始化和接收数据\n\n```typescript\n// 初始化各项数据，其中insuranceid不论怎么写最终读取都是字符串格式\n// 因此不必过多纠结，打包的时候将其转换成number类型即可\nconst claimForm = reactive<ClaimForm>({\n  claimid: nanoid(),\n  username: \"\",\n  userid: \"\",\n  callnumber: \"\",\n  insuranceid: \"\",\n  carid: \"\",\n  region: \"\",\n  date: \"\",\n  claimfile: [\"\"],\n});\n```\n\n定义验证规则\n\n```typescript\nconst rules = reactive<FormRules<ClaimForm>>({\n  username: [\n    { required: true, message: \"请输入用户名！\", trigger: \"blur\" },\n    { min: 2, max: 10, message: \"请输入真实用户名！\", trigger: \"blur\" },\n  ],\n  userid: [\n    { required: true, message: \"请输入身份证号！\", trigger: \"blur\" },\n    { validator: checkID, trigger: \"blur\" },\n  ],\n  //以下验证规则省略，基本同上\n  callnumber: [],\n  carid: [],\n  insuranceid: [],\n  region: [],\n  date: [],\n  claimfile: [],\n});\n```\n\n其中，身份证校验需要单独写一份正则表达式加以验证：\n\n_//这部分来自网上，下方有链接_\n\n```typescript\n// 有关身份证校验码\n// 原文链接：https://blog.csdn.net/Cavendixe/article/details/129581874\nlet checkProv = function (val: string) {\n  var pattern = /^[1-9][0-9]/;\n  var provs: { [key: string]: string } = {\n    11: \"北京\",\n    12: \"天津\",\n    13: \"河北\",\n    14: \"山西\",\n    15: \"内蒙古\",\n    21: \"辽宁\",\n    22: \"吉林\",\n    23: \"黑龙江\",\n    31: \"上海\",\n    32: \"江苏\",\n    33: \"浙江\",\n    34: \"安徽\",\n    35: \"福建\",\n    36: \"江西\",\n    37: \"山东\",\n    41: \"河南\",\n    42: \"湖北\",\n    43: \"湖南\",\n    44: \"广东\",\n    45: \"广西\",\n    46: \"海南\",\n    50: \"重庆\",\n    51: \"四川\",\n    52: \"贵州\",\n    53: \"云南\",\n    54: \"西藏\",\n    61: \"陕西\",\n    62: \"甘肃\",\n    63: \"青海\",\n    64: \"宁夏\",\n    65: \"新疆\",\n    71: \"台湾\",\n    81: \"香港\",\n    82: \"澳门\",\n  };\n  if (pattern.test(val)) {\n    if (provs[val]) {\n      return true;\n    }\n  }\n  return false;\n};\nlet checkDate = function (val: string) {\n  var pattern =\n    /^(18|19|20)\\d{2}((0[1-9])|(1[0-2]))(([0-2][1-9])|10|20|30|31)$/;\n  if (pattern.test(val)) {\n    var year = val.substring(0, 4);\n    var month = val.substring(4, 6);\n    var date = val.substring(6, 8);\n    var date2 = new Date(year + \"-\" + month + \"-\" + date);\n    if (date2 && date2.getMonth() == parseInt(month) - 1) {\n      return true;\n    }\n  }\n  return false;\n};\nlet checkCode = function (val: any) {\n  var p =\n    /^[1-9]\\d{5}(18|19|20)\\d{2}((0[1-9])|(1[0-2]))(([0-2][1-9])|10|20|30|31)\\d{3}[0-9Xx]$/;\n  var factor = [7, 9, 10, 5, 8, 4, 2, 1, 6, 3, 7, 9, 10, 5, 8, 4, 2];\n  var parity = [1, 0, \"X\", 9, 8, 7, 6, 5, 4, 3, 2];\n  var code = val.substring(17);\n  if (p.test(val)) {\n    var sum = 0;\n    for (var i = 0; i < 17; i++) {\n      sum += val[i] * factor[i];\n    }\n    if (parity[sum % 11] == code.toUpperCase()) {\n      return true;\n    } else {\n      console.log(parity[sum % 11]);\n      return false;\n    }\n  }\n  return false;\n};\n\nexport let checkID = function (rule: any, value: any, callback: any) {\n  if (checkCode(value)) {\n    var date = value.substring(6, 14);\n    if (checkDate(date)) {\n      if (checkProv(value.substring(0, 2))) {\n        callback();\n      }\n    }\n  } else {\n    callback(new Error(\"请输入合法身份证号\"));\n    // console.log(value)\n  }\n};\n```\n\n同时，我们还需要在提交表单前，手动确认表单，也就是在点击提交按钮后执行一次表单验证\n\n```typescript\nconst formcheck = async (\n  formEl: FormInstance | undefined\n): Promise<boolean> => {\n  if (!formEl) return false;\n  try {\n    await formEl.validate();\n    console.log(\"submit!\");\n    return Promise.resolve(true);\n  } catch (error) {\n    console.log(\"error submit!\", error);\n    return Promise.reject(false);\n  }\n};\nconst combinedClick = async () => {\n  //这里先经过表单验证，通过后会像后端开始发送json报文\n  const isValid = await formcheck(claimFormRef.value);\n  if (isValid) {\n    //通过表单验证之后执行下方的方法\n    submitClaimForm();\n    submitUpload();\n  } else {\n    return;\n  }\n};\n```\n\n提交表单\n\n```typescript\nasync function submitClaimForm() {\n  //打包表单内容\n  let claimMessage = {\n    claim_id: claimForm.claimid,\n    claim_user: claimForm.userid,\n    claim_insurance: parseInt(claimForm.insuranceid),\n    callnumber: claimForm.callnumber,\n    car_id: claimForm.carid,\n    region: claimForm.region,\n    createtime: claimForm.date,\n    // claim_file: claimForm.claimfile,\n  };\n  // console.log(\"提交表单内容为\", claimMessage)\n  try {\n    const response = await axios.post(\n      \"http://localhost:8080/addclaim\",\n      claimMessage\n    );\n    // console.log(\"send successful:\", response.data.data)\n    switch (response.data.code) {\n      case 200:\n        ElMessage({\n          message: \"申报成功！\",\n          type: \"success\",\n        });\n        //3秒后跳转至理赔查询\n        setTimeout(() => {\n          router.push(\"/3-2\");\n        }, 300);\n        // 可以添加其他情况的处理\n        break;\n      //其他提交失败的结果\n      case 2001:\n      default:\n    }\n  } catch (error) {\n    console.error(\"Claim failed:\", error);\n    // 申报失败的处理\n  }\n}\n```\n\n但是，el-update 提交的表单不能修改文件名，始终会显示变量只读，我也不知道怎么修改\n\n所以我换了一个思路，在前端拿到文件的时候，将文件名存储在一个数组中，同时记录对应的申报 id，也就是`claimid`，将这些内容打包发送至后端，由后端接受并对保存的文件进行改名。\n\n```typescript\n//上传前会对文件进行检查，只允许jpg格式的文件上传至后端\nconst beforeClaimfileUpload: UploadProps[\"beforeUpload\"] = (rawFile) => {\n  if (rawFile.type !== \"image/jpeg\") {\n    ElMessage.error(\"图片仅支持jpeg格式\");\n    return false;\n  } else if (rawFile.size / 1024 / 1024 > 5) {\n    ElMessage.error(\"图片不能超过5MB!\");\n    return false;\n  }\n  return true;\n};\n// 监听上传组件的 change 事件，只要一有文件被加进来就会触发\n//目的是为了获取上传的文件名并就将其保存在claimForm.claimfile[]这个数组中\nconst handleChange = (file: any, fileList: any) => {\n  // 获取第一个文件的文件名\n  if (fileList.length > 0) {\n    for (let i = 0; i < fileList.length; i++) {\n      //fileList.name这个属性是只读的，没办法修改，很叫人头疼\n      claimForm.claimfile[i] = fileList[i].name;\n      // console.log(\"上传文件为\", claimForm.claimfile[i])\n    }\n  } else {\n    claimForm.claimfile[0] = \"\";\n  }\n};\n\n//功能是对提交表单的补充，目的是上传文件并将上传的文件名，绑定的申报单号发送至后端\nconst submitUpload = () => {\n  uploadRef.value!.submit();\n  let fileMessage = {\n    filename: claimForm.claimfile,\n    file_according: claimForm.claimid,\n    createtime: claimForm.date,\n  };\n  // console.log(\"修改表单内容为\", fileMessage)\n  //延迟提交，这个补充的改名接口必须等到图片以及被保存之后再执行，否则可能会出现图片还没保存，改名指令已经提交过来了，后端会因为找不到文件名而改名失败。\n  //这实在不是一个很好地办法，最好的办法还是能够在前端就对文件进行改名\n  setTimeout(async () => {\n    await axios.post(\"http://localhost:8080/updatesupport\", fileMessage);\n  }, 200);\n  // console.log(\"send successful:\", response.data.data)\n};\n```\n\n至此，用户申报部分就完成了，整个背后的流程分别是：\n\n用户填写表单/存储表单文件名=>表单验证=>表单提交=>表单文件验证=>表单文件提交=>表单文件名数组+表单号提交\n\n## 区块链交互\n\n区块链的交易需要使用用户私钥，如果完全由我们执行的话，但是对于区块链而言，账户私钥基本上算是把钱包权限完全交出去了，不仅我们需要花费资源和精力妥善保管，一不小心可能还有被篡改的风险。\n\n因此，在水门车险中我们使用`Metamask`来完成这一点，`Metamask`算是一个比较成熟的钱包，由它来负责保管用户的私钥。就好比我们使用支付宝进行支付一样，我们无需在商店门口一个一个输入自己的银行卡号和密码，只需要支付宝轻轻一扫。\n\n但是在使用前我们需要在前端验证浏览器有没有安装`Metamask`插件，这里我们使用`ethers-5.7.esm.min.js`，可以自己下载也可以npm安装。但是具体使用方法要看版本号以及对应的文档。\n\n```typescript\nimport { ethers } from \"@/scripts/ethers-5.7.esm.min.js\"\n// 用以检查浏览器有没有安装Metamask扩展\nasync function connect() {\n    if (typeof (window as any).ethereum !== \"undefined\") {\n        await (window as any).ethereum.request({\n            method: \"eth_requestAccounts\",\n        })\n    } else {\n        console.log(\"No metamask!\")\n    }\n}\n```\n\n接着我们需要实例化一个合约钱包，用以调用钱包中的方法，在那之前我们需要将合约的信息封装起来\n\n```typescript\n//constant.ts\n//合约地址\nexport const contractAddress = \"0x03cDbE6020084eb013b02B8d8e0A90BE018fb39E\"\n//合约编译生成的abi\nexport const abi = [\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"priceFeedAddress\",\n                type: \"address\",\n            },\n        ],\n        stateMutability: \"nonpayable\",\n        type: \"constructor\",\n    },\n]\n```\n\n接着实例化\n\n```typescript\nimport { ethers } from \"@/scripts/ethers-5.7.esm.min.js\"\nimport { abi, contractAddress } from \"./constants\"\n// 假设 1 人民币 = 39,583,333,333,333 wei\n// 其实这里偷懒了，和合约那边的喂价合约没对应上，最好是传数字到合约中的方法，之后再通过喂价合约转换成wei\nconst RMB_TO_WEI_RATE = BigInt(\"39583333333333\")\nconst provider = new ethers.providers.Web3Provider((window as any).ethereum)\nconst signer = provider.getSigner()\n//创建智能合约实例\nconst contract = new ethers.Contract(contractAddress, abi, signer)\n```\n\n接着我们使用这个实例化后的钱包调用合约中的方法\n\n```typescript\n//Minatosys.ts\n//管理员转账\nimport { updateAddress } from \"./claim_helper\"\nasync function compensation(\n    toAddress: any,\n    amountInCNY: number,\n    claimid: string,\n) {\n    let amountInWei: BigInt = BigInt(amountInCNY) * RMB_TO_WEI_RATE\n    console.log(\"Funding with\", toAddress)\n    if (typeof (window as any).ethereum !== \"undefined\") {\n        // 这里需要严格对应上合约中的方法，注意方法需要的参数类型\n        const tx = await contract.withdrawToAddress(\n            toAddress,\n            ethers.BigNumber.from(amountInWei),\n        )\n        await tx.wait()\n        updateAddress(tx.hash, claimid)\n        console.log(\"Transaction successful\")\n    } else {\n        console.log(\"No metamask!\")\n    }\n}\n```\n\n其中，关于引入的`updateAddress`\n\n```typescript\n//updateAddress.ts\n//用以更新数据库中交易的地址\nimport axios from \"axios\"\nexport async function updateAddress(address: string, claimid: string) {\n    let updateaddress = {\n        claim_id: claimid,\n        address: address,\n    }\n    await axios\n        .post(\"http://localhost:8080/updateaddress\", updateaddress)\n        .then((response) => {\n            console.log(response.data)\n        })\n}\nexport async function updateCompensation(\n    compensation: number,\n    claimid: string,\n) {\n    let updatestatus = {\n        claim_id: claimid,\n        compensation: compensation,\n    }\n    await axios\n        .post(\"http://localhost:8080/updatestatus\", updatestatus)\n        .then((response) => {\n            console.log(response.data)\n        })\n}\n\n```\n\n在封装好方法之后，我们需要调用它\n\n```typescript\nconst open = () => {\n    ElMessageBox.prompt('请输入赔偿金额（元）', '确认', {\n        confirmButtonText: '交易执行',\n        cancelButtonText: '取消',\n        inputErrorMessage: 'Invalid Email',\n    })\n        .then(({ value }) => {\n            const updatePromise = updateCompensation(parseFloat(value), tableData.value.claimid);\n            const compenstationPromise = compensation(tableData.value.publicKey, BigInt(value), tableData.value.claimid);\n            ElMessage({\n                type: 'success',\n                message: `正在建立交易，请稍后`,\n            });\n            return Promise.all([updatePromise, compenstationPromise]);\n        })\n        .then(() => {\n            setTimeout(() => {\n                router.push(\"/3-4\");\n            }, 3000);\n        })\n        .catch(() => {\n            ElMessage({\n                type: 'error',\n                message: '交易取消',\n            })\n        })\n}\n```\n\n这样就大功告成了，效果如下：\n\n<img src=\"/img/minatosys_FrontEnd_note/image-20240506160655596.png\" alt=\"image-20240506160655596\" style=\"zoom:80%;\" />\n\n<img src=\"/img/minatosys_FrontEnd_note/image-20240506160609536.png\" alt=\"image-20240506160609536\" style=\"zoom:80%;\" />\n\n静等片刻得到如下回复(当然你也可以再掏一笔燃气费用于加速交易)\n\n<img src=\"/img/minatosys_FrontEnd_note/image-20240506160424465.png\" alt=\"image-20240506160424465\" style=\"zoom:80%;\" />F\n","slug":"minatosys_FrontEnd_note","published":1,"updated":"2024-08-24T06:20:46.120Z","comments":1,"layout":"post","photos":[],"_id":"cm0b0qx7k000ljwur7ae7fcjf","content":"<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>这个文档记录了<strong>水门车险前端模块</strong>开发过程中的部分功能实现方法。</p>\n<p>内容是基于区块链技术开发的一个车险系统，关于区块链的的概念详见其他 Markdown；</p>\n<p>这个系统并没有往实际使用的方向开发，纯粹是应付毕业设计所准备的，因此可能存在很多不合理的设计或者是奇奇怪怪的 bug，总之，一切努力只为能够通过毕设考核。</p>\n<p>整个项目暂定分成三个模块，前端、后端、区块链。</p>\n<div class=\"highlight-container\" data-rel=\"Plaintext\"><figure class=\"iseeu highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">D:.</span><br><span class=\"line\">├─gin-minato</span><br><span class=\"line\">├─hardhat-minato</span><br><span class=\"line\">└─vue-minato</span><br></pre></td></tr></table></figure></div>\n\n<ul>\n<li>架构设计</li>\n</ul>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/minatosys_FrontEnd_note/image-20240423222551537.png\" alt=\"image-20240423222551537\" style=\"zoom:67%;\">\n\n<p>go ~ go ~ go！</p>\n<h2 id=\"准备工作\"><a href=\"#准备工作\" class=\"headerlink\" title=\"准备工作\"></a>准备工作</h2><p>需要安装<code>node.js</code></p>\n<div class=\"highlight-container\" data-rel=\"Plaintext\"><figure class=\"iseeu highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">PS D:\\study_test\\Minato_Sys\\vue-Minato&gt; node --version</span><br><span class=\"line\">v18.18.0</span><br></pre></td></tr></table></figure></div>\n\n<h4 id=\"安装和部署\"><a href=\"#安装和部署\" class=\"headerlink\" title=\"安装和部署\"></a>安装和部署</h4><div class=\"highlight-container\" data-rel=\"Plaintext\"><figure class=\"iseeu highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 选择一个你喜欢的包管理器</span><br><span class=\"line\"># 安装element-plus</span><br><span class=\"line\"># NPM</span><br><span class=\"line\">$ npm install element-plus --save</span><br><span class=\"line\"># Yarn</span><br><span class=\"line\">$ yarn add element-plus</span><br><span class=\"line\"># pnpm</span><br><span class=\"line\">$ pnpm install element-plus</span><br><span class=\"line\"></span><br><span class=\"line\"># “自动导入”插件</span><br><span class=\"line\">$ npm install -D unplugin-vue-components unplugin-auto-import</span><br><span class=\"line\"></span><br><span class=\"line\"># 安装setup语法糖插件</span><br><span class=\"line\">$ npm i vite-plugin-vue-setup-extend -D</span><br><span class=\"line\"></span><br><span class=\"line\"># 安装icon图标库</span><br><span class=\"line\">$ npm install @element-plus/icons-vue</span><br><span class=\"line\"></span><br><span class=\"line\"># 安装Metamask插件</span><br><span class=\"line\">$ npm i @metamask/detect-provider</span><br><span class=\"line\"></span><br><span class=\"line\"># 安装axios</span><br><span class=\"line\">$ npm i axios</span><br><span class=\"line\"></span><br><span class=\"line\"># 安装pinia</span><br><span class=\"line\">$ npm i pinia</span><br></pre></td></tr></table></figure></div>\n\n<p>使用 Element-plus 的方法请参考官方文档，写得非常详细，我觉得完全没必要多此一举再写一遍：<a class=\"link\" href=\"https://element-plus.org/zh-CN\">https://element-plus.org/zh-CN <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a></p>\n<p>同时，您还需要准备一个<code>Metamask</code>钱包，用以对接接受支付和接受赔偿金的环节</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/minatosys_FrontEnd_note/image-20240429092312447.png\" alt=\"image-20240429092312447\" style=\"zoom: 67%;\">\n\n<h2 id=\"页面设计\"><a href=\"#页面设计\" class=\"headerlink\" title=\"页面设计\"></a>页面设计</h2><p><code>src</code>下的目录大概像这样，其中经常复用的如侧边栏、顶栏、页脚被写进了<code>components</code>文件夹</p>\n<p><em>//很多页面的 UI 都是”<strong>借鉴</strong>“了各大网页的，包括了<code>Mozilla</code>、中国平安等等等等</em></p>\n<div class=\"highlight-container\" data-rel=\"Plaintext\"><figure class=\"iseeu highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">|-- App.vue</span><br><span class=\"line\">|-- components</span><br><span class=\"line\">|   |-- ClaimSide.vue</span><br><span class=\"line\">|   |-- InsuranceSide.vue</span><br><span class=\"line\">|   |-- PageBotton.vue</span><br><span class=\"line\">|   `-- PageTop.vue</span><br><span class=\"line\">|-- interface</span><br><span class=\"line\">|   |-- claimForm.ts</span><br><span class=\"line\">|   `-- loginResult.ts</span><br><span class=\"line\">|-- main.ts</span><br><span class=\"line\">|-- pages</span><br><span class=\"line\">|   |-- HomePage.vue</span><br><span class=\"line\">|   |-- Login.vue</span><br><span class=\"line\">|   |-- Register.vue</span><br><span class=\"line\">|   |-- admin_Claim.vue</span><br><span class=\"line\">|   |-- admin_Claim_Detail.vue</span><br><span class=\"line\">|   |-- user_Claim.vue</span><br><span class=\"line\">|   |-- user_ClaimQuery.vue</span><br><span class=\"line\">|   |-- user_InsuranceBought.vue</span><br><span class=\"line\">|   `-- user_InsuranceQuery.vue</span><br><span class=\"line\">|-- router</span><br><span class=\"line\">|   `-- index.ts</span><br><span class=\"line\">|-- scripts</span><br><span class=\"line\">|   |-- Codecheck.ts</span><br><span class=\"line\">|   |-- Minatosys.ts</span><br><span class=\"line\">|   |-- chineseCities.ts</span><br><span class=\"line\">|   |-- claim_helper.ts</span><br><span class=\"line\">|   |-- constants.ts</span><br><span class=\"line\">|   `-- ethers-5.7.esm.min.js</span><br><span class=\"line\">|-- store</span><br><span class=\"line\">|   `-- loginStore.ts</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></div>\n\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/minatosys_FrontEnd_note/image-20240429095339280.png\" alt=\"image-20240429095339280\" style=\"zoom:80%;\">\n\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/minatosys_FrontEnd_note/image-20240429100428388.png\" alt=\"image-20240429100428388\" style=\"zoom:80%;\">\n\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/minatosys_FrontEnd_note/image-20240429100543929.png\" alt=\"image-20240429100543929\" style=\"zoom:80%;\">\n\n<p><img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/minatosys_FrontEnd_note/image-20240429100702637.png\" alt=\"image-20240429100702637\"></p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/minatosys_FrontEnd_note/image-20240429100754037.png\" alt=\"image-20240429100754037\" style=\"zoom:80%;\">\n\n<h2 id=\"理赔申报\"><a href=\"#理赔申报\" class=\"headerlink\" title=\"理赔申报\"></a>理赔申报</h2><p>用户需要填写表单并且上传文件</p>\n<p>上传文件使用的是<code>ElementPlus</code>中的<code>el-upload</code>，这里上传的文件会直接以 POST 的方法传到 <a class=\"link\" href=\"http://localhost:8080/update%EF%BC%8C%E5%90%8E%E7%AB%AF%E9%9C%80%E8%A6%81%E5%AF%B9%E8%BF%99%E4%B8%AA%E6%96%87%E4%BB%B6%E8%BF%9B%E8%A1%8C%E6%8E%A5%E6%94%B6\">http://localhost:8080/update，后端需要对这个文件进行接收 <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a></p>\n<div class=\"highlight-container\" data-rel=\"Plaintext\"><figure class=\"iseeu highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;el-form-item</span><br><span class=\"line\">  label=\"上传事故责任确认书、保险单复印件、驾驶证复印件以及维修费清单\"</span><br><span class=\"line\">  required</span><br><span class=\"line\">  prop=\"claimfile\"&gt;</span><br><span class=\"line\">\t&lt;el-upload</span><br><span class=\"line\">\t\tref=\"uploadRef\"</span><br><span class=\"line\">        class=\"upload-demo\"</span><br><span class=\"line\">        drag action=\"http://localhost:8080/update\"</span><br><span class=\"line\">      \tmultiple style=\"width: 50vw\"</span><br><span class=\"line\">       \t:auto-upload=\"false\"</span><br><span class=\"line\">       \tlist-type=\"picture\"</span><br><span class=\"line\">       :before-upload=\"beforeClaimfileUpload\"</span><br><span class=\"line\">        @change=\"handleChange\"&gt;</span><br><span class=\"line\">        \t&lt;el-icon class=\"el-icon--upload\"&gt;&lt;upload-filled /&gt;&lt;/el-icon&gt;</span><br><span class=\"line\">            \t&lt;div class=\"el-upload__text\"&gt;</span><br><span class=\"line\">                \t将文件拖至此处或 &lt;em&gt;点击上传&lt;/em&gt;</span><br><span class=\"line\">                &lt;/div&gt;</span><br><span class=\"line\">    &lt;/el-upload&gt;</span><br><span class=\"line\">&lt;/el-form-item&gt;</span><br></pre></td></tr></table></figure></div>\n\n<p>后端接收文件，这里以<code>Gin</code>为例</p>\n<div class=\"highlight-container\" data-rel=\"Golang\"><figure class=\"iseeu highlight golang\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(f FileController)</span></span> Updatefile(ctx *gin.Context) {</span><br><span class=\"line\">\tfile, err := ctx.FormFile(<span class=\"string\">\"file\"</span>)</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> err != <span class=\"literal\">nil</span> {</span><br><span class=\"line\">\t\tfmt.Sprintf(<span class=\"string\">\"get form err: %s\"</span>, err.Error())</span><br><span class=\"line\">\t\tconfig.ReturnFalse(ctx, <span class=\"number\">3001</span>, <span class=\"string\">\"接收文件失败\"</span>)</span><br><span class=\"line\">\t}</span><br><span class=\"line\">\t<span class=\"comment\">// 保存文件到本地</span></span><br><span class=\"line\">\terr = ctx.SaveUploadedFile(file, <span class=\"string\">\"uploads/\"</span>+file.Filename)</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> err != <span class=\"literal\">nil</span> {</span><br><span class=\"line\">\t\tfmt.Sprintf(<span class=\"string\">\"upload file err: %s\"</span>, err.Error())</span><br><span class=\"line\">\t\tconfig.ReturnFalse(ctx, <span class=\"number\">3002</span>, <span class=\"string\">\"保存文件失败\"</span>)</span><br><span class=\"line\">\t}</span><br><span class=\"line\">\tconfig.ReturnSuccess(ctx, <span class=\"number\">200</span>, <span class=\"string\">\"成功接受并保存文件！\"</span>, file, <span class=\"number\">1</span>) <span class=\"comment\">// 返回文件名</span></span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure></div>\n\n<p>申报需要对用户提交的内容进行验证</p>\n<p>这里我们尽量在前端将这些都完成，避免无用表单对后端造成压力</p>\n<p>首先在 el-form 中添加规则</p>\n<div class=\"highlight-container\" data-rel=\"Plaintext\"><figure class=\"iseeu highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;el-form ref=\"claimFormRef\" :rules=\"rules\"&gt;&lt;/el-form&gt;</span><br></pre></td></tr></table></figure></div>\n\n<p>接着引入数据类型，也可以在当前页面直接定义，不过因为这个和表单提交部分复用了，所以我单独写了一个接口，方便之后使用</p>\n<div class=\"highlight-container\" data-rel=\"Typescript\"><figure class=\"iseeu highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//引入ClaimForm的钩子</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> { <span class=\"keyword\">type</span> <span class=\"title class_\">ClaimForm</span> } <span class=\"keyword\">from</span> <span class=\"string\">\"@/interface/claimForm\"</span>;</span><br></pre></td></tr></table></figure></div>\n\n<p>定义响应式，初始化和接收数据</p>\n<div class=\"highlight-container\" data-rel=\"Typescript\"><figure class=\"iseeu highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 初始化各项数据，其中insuranceid不论怎么写最终读取都是字符串格式</span></span><br><span class=\"line\"><span class=\"comment\">// 因此不必过多纠结，打包的时候将其转换成number类型即可</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> claimForm = reactive&lt;<span class=\"title class_\">ClaimForm</span>&gt;({</span><br><span class=\"line\">  <span class=\"attr\">claimid</span>: <span class=\"title function_\">nanoid</span>(),</span><br><span class=\"line\">  <span class=\"attr\">username</span>: <span class=\"string\">\"\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">userid</span>: <span class=\"string\">\"\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">callnumber</span>: <span class=\"string\">\"\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">insuranceid</span>: <span class=\"string\">\"\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">carid</span>: <span class=\"string\">\"\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">region</span>: <span class=\"string\">\"\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">date</span>: <span class=\"string\">\"\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">claimfile</span>: [<span class=\"string\">\"\"</span>],</span><br><span class=\"line\">});</span><br></pre></td></tr></table></figure></div>\n\n<p>定义验证规则</p>\n<div class=\"highlight-container\" data-rel=\"Typescript\"><figure class=\"iseeu highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> rules = reactive&lt;<span class=\"title class_\">FormRules</span>&lt;<span class=\"title class_\">ClaimForm</span>&gt;&gt;({</span><br><span class=\"line\">  <span class=\"attr\">username</span>: [</span><br><span class=\"line\">    { <span class=\"attr\">required</span>: <span class=\"literal\">true</span>, <span class=\"attr\">message</span>: <span class=\"string\">\"请输入用户名！\"</span>, <span class=\"attr\">trigger</span>: <span class=\"string\">\"blur\"</span> },</span><br><span class=\"line\">    { <span class=\"attr\">min</span>: <span class=\"number\">2</span>, <span class=\"attr\">max</span>: <span class=\"number\">10</span>, <span class=\"attr\">message</span>: <span class=\"string\">\"请输入真实用户名！\"</span>, <span class=\"attr\">trigger</span>: <span class=\"string\">\"blur\"</span> },</span><br><span class=\"line\">  ],</span><br><span class=\"line\">  <span class=\"attr\">userid</span>: [</span><br><span class=\"line\">    { <span class=\"attr\">required</span>: <span class=\"literal\">true</span>, <span class=\"attr\">message</span>: <span class=\"string\">\"请输入身份证号！\"</span>, <span class=\"attr\">trigger</span>: <span class=\"string\">\"blur\"</span> },</span><br><span class=\"line\">    { <span class=\"attr\">validator</span>: checkID, <span class=\"attr\">trigger</span>: <span class=\"string\">\"blur\"</span> },</span><br><span class=\"line\">  ],</span><br><span class=\"line\">  <span class=\"comment\">//以下验证规则省略，基本同上</span></span><br><span class=\"line\">  <span class=\"attr\">callnumber</span>: [],</span><br><span class=\"line\">  <span class=\"attr\">carid</span>: [],</span><br><span class=\"line\">  <span class=\"attr\">insuranceid</span>: [],</span><br><span class=\"line\">  <span class=\"attr\">region</span>: [],</span><br><span class=\"line\">  <span class=\"attr\">date</span>: [],</span><br><span class=\"line\">  <span class=\"attr\">claimfile</span>: [],</span><br><span class=\"line\">});</span><br></pre></td></tr></table></figure></div>\n\n<p>其中，身份证校验需要单独写一份正则表达式加以验证：</p>\n<p><em>//这部分来自网上，下方有链接</em></p>\n<div class=\"highlight-container\" data-rel=\"Typescript\"><figure class=\"iseeu highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 有关身份证校验码</span></span><br><span class=\"line\"><span class=\"comment\">// 原文链接：https://blog.csdn.net/Cavendixe/article/details/129581874</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> checkProv = <span class=\"keyword\">function</span> (<span class=\"params\"><span class=\"attr\">val</span>: <span class=\"built_in\">string</span></span>) {</span><br><span class=\"line\">  <span class=\"keyword\">var</span> pattern = <span class=\"regexp\">/^[1-9][0-9]/</span>;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> <span class=\"attr\">provs</span>: { [<span class=\"attr\">key</span>: <span class=\"built_in\">string</span>]: <span class=\"built_in\">string</span> } = {</span><br><span class=\"line\">    <span class=\"number\">11</span>: <span class=\"string\">\"北京\"</span>,</span><br><span class=\"line\">    <span class=\"number\">12</span>: <span class=\"string\">\"天津\"</span>,</span><br><span class=\"line\">    <span class=\"number\">13</span>: <span class=\"string\">\"河北\"</span>,</span><br><span class=\"line\">    <span class=\"number\">14</span>: <span class=\"string\">\"山西\"</span>,</span><br><span class=\"line\">    <span class=\"number\">15</span>: <span class=\"string\">\"内蒙古\"</span>,</span><br><span class=\"line\">    <span class=\"number\">21</span>: <span class=\"string\">\"辽宁\"</span>,</span><br><span class=\"line\">    <span class=\"number\">22</span>: <span class=\"string\">\"吉林\"</span>,</span><br><span class=\"line\">    <span class=\"number\">23</span>: <span class=\"string\">\"黑龙江\"</span>,</span><br><span class=\"line\">    <span class=\"number\">31</span>: <span class=\"string\">\"上海\"</span>,</span><br><span class=\"line\">    <span class=\"number\">32</span>: <span class=\"string\">\"江苏\"</span>,</span><br><span class=\"line\">    <span class=\"number\">33</span>: <span class=\"string\">\"浙江\"</span>,</span><br><span class=\"line\">    <span class=\"number\">34</span>: <span class=\"string\">\"安徽\"</span>,</span><br><span class=\"line\">    <span class=\"number\">35</span>: <span class=\"string\">\"福建\"</span>,</span><br><span class=\"line\">    <span class=\"number\">36</span>: <span class=\"string\">\"江西\"</span>,</span><br><span class=\"line\">    <span class=\"number\">37</span>: <span class=\"string\">\"山东\"</span>,</span><br><span class=\"line\">    <span class=\"number\">41</span>: <span class=\"string\">\"河南\"</span>,</span><br><span class=\"line\">    <span class=\"number\">42</span>: <span class=\"string\">\"湖北\"</span>,</span><br><span class=\"line\">    <span class=\"number\">43</span>: <span class=\"string\">\"湖南\"</span>,</span><br><span class=\"line\">    <span class=\"number\">44</span>: <span class=\"string\">\"广东\"</span>,</span><br><span class=\"line\">    <span class=\"number\">45</span>: <span class=\"string\">\"广西\"</span>,</span><br><span class=\"line\">    <span class=\"number\">46</span>: <span class=\"string\">\"海南\"</span>,</span><br><span class=\"line\">    <span class=\"number\">50</span>: <span class=\"string\">\"重庆\"</span>,</span><br><span class=\"line\">    <span class=\"number\">51</span>: <span class=\"string\">\"四川\"</span>,</span><br><span class=\"line\">    <span class=\"number\">52</span>: <span class=\"string\">\"贵州\"</span>,</span><br><span class=\"line\">    <span class=\"number\">53</span>: <span class=\"string\">\"云南\"</span>,</span><br><span class=\"line\">    <span class=\"number\">54</span>: <span class=\"string\">\"西藏\"</span>,</span><br><span class=\"line\">    <span class=\"number\">61</span>: <span class=\"string\">\"陕西\"</span>,</span><br><span class=\"line\">    <span class=\"number\">62</span>: <span class=\"string\">\"甘肃\"</span>,</span><br><span class=\"line\">    <span class=\"number\">63</span>: <span class=\"string\">\"青海\"</span>,</span><br><span class=\"line\">    <span class=\"number\">64</span>: <span class=\"string\">\"宁夏\"</span>,</span><br><span class=\"line\">    <span class=\"number\">65</span>: <span class=\"string\">\"新疆\"</span>,</span><br><span class=\"line\">    <span class=\"number\">71</span>: <span class=\"string\">\"台湾\"</span>,</span><br><span class=\"line\">    <span class=\"number\">81</span>: <span class=\"string\">\"香港\"</span>,</span><br><span class=\"line\">    <span class=\"number\">82</span>: <span class=\"string\">\"澳门\"</span>,</span><br><span class=\"line\">  };</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (pattern.<span class=\"title function_\">test</span>(val)) {</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (provs[val]) {</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">    }</span><br><span class=\"line\">  }</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">};</span><br><span class=\"line\"><span class=\"keyword\">let</span> checkDate = <span class=\"keyword\">function</span> (<span class=\"params\"><span class=\"attr\">val</span>: <span class=\"built_in\">string</span></span>) {</span><br><span class=\"line\">  <span class=\"keyword\">var</span> pattern =</span><br><span class=\"line\">    <span class=\"regexp\">/^(18|19|20)\\d{2}((0[1-9])|(1[0-2]))(([0-2][1-9])|10|20|30|31)$/</span>;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (pattern.<span class=\"title function_\">test</span>(val)) {</span><br><span class=\"line\">    <span class=\"keyword\">var</span> year = val.<span class=\"title function_\">substring</span>(<span class=\"number\">0</span>, <span class=\"number\">4</span>);</span><br><span class=\"line\">    <span class=\"keyword\">var</span> month = val.<span class=\"title function_\">substring</span>(<span class=\"number\">4</span>, <span class=\"number\">6</span>);</span><br><span class=\"line\">    <span class=\"keyword\">var</span> date = val.<span class=\"title function_\">substring</span>(<span class=\"number\">6</span>, <span class=\"number\">8</span>);</span><br><span class=\"line\">    <span class=\"keyword\">var</span> date2 = <span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>(year + <span class=\"string\">\"-\"</span> + month + <span class=\"string\">\"-\"</span> + date);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (date2 &amp;&amp; date2.<span class=\"title function_\">getMonth</span>() == <span class=\"built_in\">parseInt</span>(month) - <span class=\"number\">1</span>) {</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">    }</span><br><span class=\"line\">  }</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">};</span><br><span class=\"line\"><span class=\"keyword\">let</span> checkCode = <span class=\"keyword\">function</span> (<span class=\"params\"><span class=\"attr\">val</span>: <span class=\"built_in\">any</span></span>) {</span><br><span class=\"line\">  <span class=\"keyword\">var</span> p =</span><br><span class=\"line\">    <span class=\"regexp\">/^[1-9]\\d{5}(18|19|20)\\d{2}((0[1-9])|(1[0-2]))(([0-2][1-9])|10|20|30|31)\\d{3}[0-9Xx]$/</span>;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> factor = [<span class=\"number\">7</span>, <span class=\"number\">9</span>, <span class=\"number\">10</span>, <span class=\"number\">5</span>, <span class=\"number\">8</span>, <span class=\"number\">4</span>, <span class=\"number\">2</span>, <span class=\"number\">1</span>, <span class=\"number\">6</span>, <span class=\"number\">3</span>, <span class=\"number\">7</span>, <span class=\"number\">9</span>, <span class=\"number\">10</span>, <span class=\"number\">5</span>, <span class=\"number\">8</span>, <span class=\"number\">4</span>, <span class=\"number\">2</span>];</span><br><span class=\"line\">  <span class=\"keyword\">var</span> parity = [<span class=\"number\">1</span>, <span class=\"number\">0</span>, <span class=\"string\">\"X\"</span>, <span class=\"number\">9</span>, <span class=\"number\">8</span>, <span class=\"number\">7</span>, <span class=\"number\">6</span>, <span class=\"number\">5</span>, <span class=\"number\">4</span>, <span class=\"number\">3</span>, <span class=\"number\">2</span>];</span><br><span class=\"line\">  <span class=\"keyword\">var</span> code = val.<span class=\"title function_\">substring</span>(<span class=\"number\">17</span>);</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (p.<span class=\"title function_\">test</span>(val)) {</span><br><span class=\"line\">    <span class=\"keyword\">var</span> sum = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">17</span>; i++) {</span><br><span class=\"line\">      sum += val[i] * factor[i];</span><br><span class=\"line\">    }</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (parity[sum % <span class=\"number\">11</span>] == code.<span class=\"title function_\">toUpperCase</span>()) {</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">    } <span class=\"keyword\">else</span> {</span><br><span class=\"line\">      <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(parity[sum % <span class=\"number\">11</span>]);</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    }</span><br><span class=\"line\">  }</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">};</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">let</span> checkID = <span class=\"keyword\">function</span> (<span class=\"params\"><span class=\"attr\">rule</span>: <span class=\"built_in\">any</span>, <span class=\"attr\">value</span>: <span class=\"built_in\">any</span>, <span class=\"attr\">callback</span>: <span class=\"built_in\">any</span></span>) {</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"title function_\">checkCode</span>(value)) {</span><br><span class=\"line\">    <span class=\"keyword\">var</span> date = value.<span class=\"title function_\">substring</span>(<span class=\"number\">6</span>, <span class=\"number\">14</span>);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"title function_\">checkDate</span>(date)) {</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (<span class=\"title function_\">checkProv</span>(value.<span class=\"title function_\">substring</span>(<span class=\"number\">0</span>, <span class=\"number\">2</span>))) {</span><br><span class=\"line\">        <span class=\"title function_\">callback</span>();</span><br><span class=\"line\">      }</span><br><span class=\"line\">    }</span><br><span class=\"line\">  } <span class=\"keyword\">else</span> {</span><br><span class=\"line\">    <span class=\"title function_\">callback</span>(<span class=\"keyword\">new</span> <span class=\"title class_\">Error</span>(<span class=\"string\">\"请输入合法身份证号\"</span>));</span><br><span class=\"line\">    <span class=\"comment\">// console.log(value)</span></span><br><span class=\"line\">  }</span><br><span class=\"line\">};</span><br></pre></td></tr></table></figure></div>\n\n<p>同时，我们还需要在提交表单前，手动确认表单，也就是在点击提交按钮后执行一次表单验证</p>\n<div class=\"highlight-container\" data-rel=\"Typescript\"><figure class=\"iseeu highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> formcheck = <span class=\"title function_\">async</span> (</span><br><span class=\"line\">  <span class=\"attr\">formEl</span>: <span class=\"title class_\">FormInstance</span> | <span class=\"literal\">undefined</span></span><br><span class=\"line\">): <span class=\"title class_\">Promise</span>&lt;<span class=\"built_in\">boolean</span>&gt; =&gt; {</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (!formEl) <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">  <span class=\"keyword\">try</span> {</span><br><span class=\"line\">    <span class=\"keyword\">await</span> formEl.<span class=\"title function_\">validate</span>();</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">\"submit!\"</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"title class_\">Promise</span>.<span class=\"title function_\">resolve</span>(<span class=\"literal\">true</span>);</span><br><span class=\"line\">  } <span class=\"keyword\">catch</span> (error) {</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">\"error submit!\"</span>, error);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"title class_\">Promise</span>.<span class=\"title function_\">reject</span>(<span class=\"literal\">false</span>);</span><br><span class=\"line\">  }</span><br><span class=\"line\">};</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">combinedClick</span> = <span class=\"keyword\">async</span> (<span class=\"params\"></span>) =&gt; {</span><br><span class=\"line\">  <span class=\"comment\">//这里先经过表单验证，通过后会像后端开始发送json报文</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> isValid = <span class=\"keyword\">await</span> <span class=\"title function_\">formcheck</span>(claimFormRef.<span class=\"property\">value</span>);</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (isValid) {</span><br><span class=\"line\">    <span class=\"comment\">//通过表单验证之后执行下方的方法</span></span><br><span class=\"line\">    <span class=\"title function_\">submitClaimForm</span>();</span><br><span class=\"line\">    <span class=\"title function_\">submitUpload</span>();</span><br><span class=\"line\">  } <span class=\"keyword\">else</span> {</span><br><span class=\"line\">    <span class=\"keyword\">return</span>;</span><br><span class=\"line\">  }</span><br><span class=\"line\">};</span><br></pre></td></tr></table></figure></div>\n\n<p>提交表单</p>\n<div class=\"highlight-container\" data-rel=\"Typescript\"><figure class=\"iseeu highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">async</span> <span class=\"keyword\">function</span> <span class=\"title function_\">submitClaimForm</span>(<span class=\"params\"></span>) {</span><br><span class=\"line\">  <span class=\"comment\">//打包表单内容</span></span><br><span class=\"line\">  <span class=\"keyword\">let</span> claimMessage = {</span><br><span class=\"line\">    <span class=\"attr\">claim_id</span>: claimForm.<span class=\"property\">claimid</span>,</span><br><span class=\"line\">    <span class=\"attr\">claim_user</span>: claimForm.<span class=\"property\">userid</span>,</span><br><span class=\"line\">    <span class=\"attr\">claim_insurance</span>: <span class=\"built_in\">parseInt</span>(claimForm.<span class=\"property\">insuranceid</span>),</span><br><span class=\"line\">    <span class=\"attr\">callnumber</span>: claimForm.<span class=\"property\">callnumber</span>,</span><br><span class=\"line\">    <span class=\"attr\">car_id</span>: claimForm.<span class=\"property\">carid</span>,</span><br><span class=\"line\">    <span class=\"attr\">region</span>: claimForm.<span class=\"property\">region</span>,</span><br><span class=\"line\">    <span class=\"attr\">createtime</span>: claimForm.<span class=\"property\">date</span>,</span><br><span class=\"line\">    <span class=\"comment\">// claim_file: claimForm.claimfile,</span></span><br><span class=\"line\">  };</span><br><span class=\"line\">  <span class=\"comment\">// console.log(\"提交表单内容为\", claimMessage)</span></span><br><span class=\"line\">  <span class=\"keyword\">try</span> {</span><br><span class=\"line\">    <span class=\"keyword\">const</span> response = <span class=\"keyword\">await</span> axios.<span class=\"title function_\">post</span>(</span><br><span class=\"line\">      <span class=\"string\">\"http://localhost:8080/addclaim\"</span>,</span><br><span class=\"line\">      claimMessage</span><br><span class=\"line\">    );</span><br><span class=\"line\">    <span class=\"comment\">// console.log(\"send successful:\", response.data.data)</span></span><br><span class=\"line\">    <span class=\"keyword\">switch</span> (response.<span class=\"property\">data</span>.<span class=\"property\">code</span>) {</span><br><span class=\"line\">      <span class=\"keyword\">case</span> <span class=\"number\">200</span>:</span><br><span class=\"line\">        <span class=\"title class_\">ElMessage</span>({</span><br><span class=\"line\">          <span class=\"attr\">message</span>: <span class=\"string\">\"申报成功！\"</span>,</span><br><span class=\"line\">          <span class=\"attr\">type</span>: <span class=\"string\">\"success\"</span>,</span><br><span class=\"line\">        });</span><br><span class=\"line\">        <span class=\"comment\">//3秒后跳转至理赔查询</span></span><br><span class=\"line\">        <span class=\"built_in\">setTimeout</span>(<span class=\"function\">() =&gt;</span> {</span><br><span class=\"line\">          router.<span class=\"title function_\">push</span>(<span class=\"string\">\"/3-2\"</span>);</span><br><span class=\"line\">        }, <span class=\"number\">300</span>);</span><br><span class=\"line\">        <span class=\"comment\">// 可以添加其他情况的处理</span></span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">      <span class=\"comment\">//其他提交失败的结果</span></span><br><span class=\"line\">      <span class=\"keyword\">case</span> <span class=\"number\">2001</span>:</span><br><span class=\"line\">      <span class=\"attr\">default</span>:</span><br><span class=\"line\">    }</span><br><span class=\"line\">  } <span class=\"keyword\">catch</span> (error) {</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">error</span>(<span class=\"string\">\"Claim failed:\"</span>, error);</span><br><span class=\"line\">    <span class=\"comment\">// 申报失败的处理</span></span><br><span class=\"line\">  }</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure></div>\n\n<p>但是，el-update 提交的表单不能修改文件名，始终会显示变量只读，我也不知道怎么修改</p>\n<p>所以我换了一个思路，在前端拿到文件的时候，将文件名存储在一个数组中，同时记录对应的申报 id，也就是<code>claimid</code>，将这些内容打包发送至后端，由后端接受并对保存的文件进行改名。</p>\n<div class=\"highlight-container\" data-rel=\"Typescript\"><figure class=\"iseeu highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//上传前会对文件进行检查，只允许jpg格式的文件上传至后端</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"attr\">beforeClaimfileUpload</span>: <span class=\"title class_\">UploadProps</span>[<span class=\"string\">\"beforeUpload\"</span>] = <span class=\"function\">(<span class=\"params\">rawFile</span>) =&gt;</span> {</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (rawFile.<span class=\"property\">type</span> !== <span class=\"string\">\"image/jpeg\"</span>) {</span><br><span class=\"line\">    <span class=\"title class_\">ElMessage</span>.<span class=\"title function_\">error</span>(<span class=\"string\">\"图片仅支持jpeg格式\"</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">  } <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (rawFile.<span class=\"property\">size</span> / <span class=\"number\">1024</span> / <span class=\"number\">1024</span> &gt; <span class=\"number\">5</span>) {</span><br><span class=\"line\">    <span class=\"title class_\">ElMessage</span>.<span class=\"title function_\">error</span>(<span class=\"string\">\"图片不能超过5MB!\"</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">  }</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">};</span><br><span class=\"line\"><span class=\"comment\">// 监听上传组件的 change 事件，只要一有文件被加进来就会触发</span></span><br><span class=\"line\"><span class=\"comment\">//目的是为了获取上传的文件名并就将其保存在claimForm.claimfile[]这个数组中</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">handleChange</span> = (<span class=\"params\"><span class=\"attr\">file</span>: <span class=\"built_in\">any</span>, <span class=\"attr\">fileList</span>: <span class=\"built_in\">any</span></span>) =&gt; {</span><br><span class=\"line\">  <span class=\"comment\">// 获取第一个文件的文件名</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (fileList.<span class=\"property\">length</span> &gt; <span class=\"number\">0</span>) {</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; fileList.<span class=\"property\">length</span>; i++) {</span><br><span class=\"line\">      <span class=\"comment\">//fileList.name这个属性是只读的，没办法修改，很叫人头疼</span></span><br><span class=\"line\">      claimForm.<span class=\"property\">claimfile</span>[i] = fileList[i].<span class=\"property\">name</span>;</span><br><span class=\"line\">      <span class=\"comment\">// console.log(\"上传文件为\", claimForm.claimfile[i])</span></span><br><span class=\"line\">    }</span><br><span class=\"line\">  } <span class=\"keyword\">else</span> {</span><br><span class=\"line\">    claimForm.<span class=\"property\">claimfile</span>[<span class=\"number\">0</span>] = <span class=\"string\">\"\"</span>;</span><br><span class=\"line\">  }</span><br><span class=\"line\">};</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//功能是对提交表单的补充，目的是上传文件并将上传的文件名，绑定的申报单号发送至后端</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">submitUpload</span> = (<span class=\"params\"></span>) =&gt; {</span><br><span class=\"line\">  uploadRef.<span class=\"property\">value</span>!.<span class=\"title function_\">submit</span>();</span><br><span class=\"line\">  <span class=\"keyword\">let</span> fileMessage = {</span><br><span class=\"line\">    <span class=\"attr\">filename</span>: claimForm.<span class=\"property\">claimfile</span>,</span><br><span class=\"line\">    <span class=\"attr\">file_according</span>: claimForm.<span class=\"property\">claimid</span>,</span><br><span class=\"line\">    <span class=\"attr\">createtime</span>: claimForm.<span class=\"property\">date</span>,</span><br><span class=\"line\">  };</span><br><span class=\"line\">  <span class=\"comment\">// console.log(\"修改表单内容为\", fileMessage)</span></span><br><span class=\"line\">  <span class=\"comment\">//延迟提交，这个补充的改名接口必须等到图片以及被保存之后再执行，否则可能会出现图片还没保存，改名指令已经提交过来了，后端会因为找不到文件名而改名失败。</span></span><br><span class=\"line\">  <span class=\"comment\">//这实在不是一个很好地办法，最好的办法还是能够在前端就对文件进行改名</span></span><br><span class=\"line\">  <span class=\"built_in\">setTimeout</span>(<span class=\"title function_\">async</span> () =&gt; {</span><br><span class=\"line\">    <span class=\"keyword\">await</span> axios.<span class=\"title function_\">post</span>(<span class=\"string\">\"http://localhost:8080/updatesupport\"</span>, fileMessage);</span><br><span class=\"line\">  }, <span class=\"number\">200</span>);</span><br><span class=\"line\">  <span class=\"comment\">// console.log(\"send successful:\", response.data.data)</span></span><br><span class=\"line\">};</span><br></pre></td></tr></table></figure></div>\n\n<p>至此，用户申报部分就完成了，整个背后的流程分别是：</p>\n<p>用户填写表单/存储表单文件名=&gt;表单验证=&gt;表单提交=&gt;表单文件验证=&gt;表单文件提交=&gt;表单文件名数组+表单号提交</p>\n<h2 id=\"区块链交互\"><a href=\"#区块链交互\" class=\"headerlink\" title=\"区块链交互\"></a>区块链交互</h2><p>区块链的交易需要使用用户私钥，如果完全由我们执行的话，但是对于区块链而言，账户私钥基本上算是把钱包权限完全交出去了，不仅我们需要花费资源和精力妥善保管，一不小心可能还有被篡改的风险。</p>\n<p>因此，在水门车险中我们使用<code>Metamask</code>来完成这一点，<code>Metamask</code>算是一个比较成熟的钱包，由它来负责保管用户的私钥。就好比我们使用支付宝进行支付一样，我们无需在商店门口一个一个输入自己的银行卡号和密码，只需要支付宝轻轻一扫。</p>\n<p>但是在使用前我们需要在前端验证浏览器有没有安装<code>Metamask</code>插件，这里我们使用<code>ethers-5.7.esm.min.js</code>，可以自己下载也可以npm安装。但是具体使用方法要看版本号以及对应的文档。</p>\n<div class=\"highlight-container\" data-rel=\"Typescript\"><figure class=\"iseeu highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> { ethers } <span class=\"keyword\">from</span> <span class=\"string\">\"@/scripts/ethers-5.7.esm.min.js\"</span></span><br><span class=\"line\"><span class=\"comment\">// 用以检查浏览器有没有安装Metamask扩展</span></span><br><span class=\"line\"><span class=\"keyword\">async</span> <span class=\"keyword\">function</span> <span class=\"title function_\">connect</span>(<span class=\"params\"></span>) {</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"title function_\">typeof</span> (<span class=\"variable language_\">window</span> <span class=\"keyword\">as</span> <span class=\"built_in\">any</span>).<span class=\"property\">ethereum</span> !== <span class=\"string\">\"undefined\"</span>) {</span><br><span class=\"line\">        <span class=\"title function_\">await</span> (<span class=\"variable language_\">window</span> <span class=\"keyword\">as</span> <span class=\"built_in\">any</span>).<span class=\"property\">ethereum</span>.<span class=\"title function_\">request</span>({</span><br><span class=\"line\">            <span class=\"attr\">method</span>: <span class=\"string\">\"eth_requestAccounts\"</span>,</span><br><span class=\"line\">        })</span><br><span class=\"line\">    } <span class=\"keyword\">else</span> {</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">\"No metamask!\"</span>)</span><br><span class=\"line\">    }</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure></div>\n\n<p>接着我们需要实例化一个合约钱包，用以调用钱包中的方法，在那之前我们需要将合约的信息封装起来</p>\n<div class=\"highlight-container\" data-rel=\"Typescript\"><figure class=\"iseeu highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//constant.ts</span></span><br><span class=\"line\"><span class=\"comment\">//合约地址</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> contractAddress = <span class=\"string\">\"0x03cDbE6020084eb013b02B8d8e0A90BE018fb39E\"</span></span><br><span class=\"line\"><span class=\"comment\">//合约编译生成的abi</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> abi = [</span><br><span class=\"line\">    {</span><br><span class=\"line\">        <span class=\"attr\">inputs</span>: [</span><br><span class=\"line\">            {</span><br><span class=\"line\">                <span class=\"attr\">internalType</span>: <span class=\"string\">\"address\"</span>,</span><br><span class=\"line\">                <span class=\"attr\">name</span>: <span class=\"string\">\"priceFeedAddress\"</span>,</span><br><span class=\"line\">                <span class=\"attr\">type</span>: <span class=\"string\">\"address\"</span>,</span><br><span class=\"line\">            },</span><br><span class=\"line\">        ],</span><br><span class=\"line\">        <span class=\"attr\">stateMutability</span>: <span class=\"string\">\"nonpayable\"</span>,</span><br><span class=\"line\">        <span class=\"attr\">type</span>: <span class=\"string\">\"constructor\"</span>,</span><br><span class=\"line\">    },</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure></div>\n\n<p>接着实例化</p>\n<div class=\"highlight-container\" data-rel=\"Typescript\"><figure class=\"iseeu highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> { ethers } <span class=\"keyword\">from</span> <span class=\"string\">\"@/scripts/ethers-5.7.esm.min.js\"</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> { abi, contractAddress } <span class=\"keyword\">from</span> <span class=\"string\">\"./constants\"</span></span><br><span class=\"line\"><span class=\"comment\">// 假设 1 人民币 = 39,583,333,333,333 wei</span></span><br><span class=\"line\"><span class=\"comment\">// 其实这里偷懒了，和合约那边的喂价合约没对应上，最好是传数字到合约中的方法，之后再通过喂价合约转换成wei</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"variable constant_\">RMB_TO_WEI_RATE</span> = <span class=\"title class_\">BigInt</span>(<span class=\"string\">\"39583333333333\"</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> provider = <span class=\"keyword\">new</span> ethers.<span class=\"property\">providers</span>.<span class=\"title class_\">Web3Provider</span>((<span class=\"variable language_\">window</span> <span class=\"keyword\">as</span> <span class=\"built_in\">any</span>).<span class=\"property\">ethereum</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> signer = provider.<span class=\"title function_\">getSigner</span>()</span><br><span class=\"line\"><span class=\"comment\">//创建智能合约实例</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> contract = <span class=\"keyword\">new</span> ethers.<span class=\"title class_\">Contract</span>(contractAddress, abi, signer)</span><br></pre></td></tr></table></figure></div>\n\n<p>接着我们使用这个实例化后的钱包调用合约中的方法</p>\n<div class=\"highlight-container\" data-rel=\"Typescript\"><figure class=\"iseeu highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//Minatosys.ts</span></span><br><span class=\"line\"><span class=\"comment\">//管理员转账</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> { updateAddress } <span class=\"keyword\">from</span> <span class=\"string\">\"./claim_helper\"</span></span><br><span class=\"line\"><span class=\"keyword\">async</span> <span class=\"keyword\">function</span> <span class=\"title function_\">compensation</span>(<span class=\"params\"></span></span><br><span class=\"line\"><span class=\"params\">    <span class=\"attr\">toAddress</span>: <span class=\"built_in\">any</span>,</span></span><br><span class=\"line\"><span class=\"params\">    <span class=\"attr\">amountInCNY</span>: <span class=\"built_in\">number</span>,</span></span><br><span class=\"line\"><span class=\"params\">    <span class=\"attr\">claimid</span>: <span class=\"built_in\">string</span>,</span></span><br><span class=\"line\"><span class=\"params\"></span>) {</span><br><span class=\"line\">    <span class=\"keyword\">let</span> <span class=\"attr\">amountInWei</span>: <span class=\"title class_\">BigInt</span> = <span class=\"title class_\">BigInt</span>(amountInCNY) * <span class=\"variable constant_\">RMB_TO_WEI_RATE</span></span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">\"Funding with\"</span>, toAddress)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"title function_\">typeof</span> (<span class=\"variable language_\">window</span> <span class=\"keyword\">as</span> <span class=\"built_in\">any</span>).<span class=\"property\">ethereum</span> !== <span class=\"string\">\"undefined\"</span>) {</span><br><span class=\"line\">        <span class=\"comment\">// 这里需要严格对应上合约中的方法，注意方法需要的参数类型</span></span><br><span class=\"line\">        <span class=\"keyword\">const</span> tx = <span class=\"keyword\">await</span> contract.<span class=\"title function_\">withdrawToAddress</span>(</span><br><span class=\"line\">            toAddress,</span><br><span class=\"line\">            ethers.<span class=\"property\">BigNumber</span>.<span class=\"title function_\">from</span>(amountInWei),</span><br><span class=\"line\">        )</span><br><span class=\"line\">        <span class=\"keyword\">await</span> tx.<span class=\"title function_\">wait</span>()</span><br><span class=\"line\">        <span class=\"title function_\">updateAddress</span>(tx.<span class=\"property\">hash</span>, claimid)</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">\"Transaction successful\"</span>)</span><br><span class=\"line\">    } <span class=\"keyword\">else</span> {</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">\"No metamask!\"</span>)</span><br><span class=\"line\">    }</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure></div>\n\n<p>其中，关于引入的<code>updateAddress</code></p>\n<div class=\"highlight-container\" data-rel=\"Typescript\"><figure class=\"iseeu highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//updateAddress.ts</span></span><br><span class=\"line\"><span class=\"comment\">//用以更新数据库中交易的地址</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> axios <span class=\"keyword\">from</span> <span class=\"string\">\"axios\"</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">async</span> <span class=\"keyword\">function</span> <span class=\"title function_\">updateAddress</span>(<span class=\"params\"><span class=\"attr\">address</span>: <span class=\"built_in\">string</span>, <span class=\"attr\">claimid</span>: <span class=\"built_in\">string</span></span>) {</span><br><span class=\"line\">    <span class=\"keyword\">let</span> updateaddress = {</span><br><span class=\"line\">        <span class=\"attr\">claim_id</span>: claimid,</span><br><span class=\"line\">        <span class=\"attr\">address</span>: address,</span><br><span class=\"line\">    }</span><br><span class=\"line\">    <span class=\"keyword\">await</span> axios</span><br><span class=\"line\">        .<span class=\"title function_\">post</span>(<span class=\"string\">\"http://localhost:8080/updateaddress\"</span>, updateaddress)</span><br><span class=\"line\">        .<span class=\"title function_\">then</span>(<span class=\"function\">(<span class=\"params\">response</span>) =&gt;</span> {</span><br><span class=\"line\">            <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(response.<span class=\"property\">data</span>)</span><br><span class=\"line\">        })</span><br><span class=\"line\">}</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">async</span> <span class=\"keyword\">function</span> <span class=\"title function_\">updateCompensation</span>(<span class=\"params\"></span></span><br><span class=\"line\"><span class=\"params\">    <span class=\"attr\">compensation</span>: <span class=\"built_in\">number</span>,</span></span><br><span class=\"line\"><span class=\"params\">    <span class=\"attr\">claimid</span>: <span class=\"built_in\">string</span>,</span></span><br><span class=\"line\"><span class=\"params\"></span>) {</span><br><span class=\"line\">    <span class=\"keyword\">let</span> updatestatus = {</span><br><span class=\"line\">        <span class=\"attr\">claim_id</span>: claimid,</span><br><span class=\"line\">        <span class=\"attr\">compensation</span>: compensation,</span><br><span class=\"line\">    }</span><br><span class=\"line\">    <span class=\"keyword\">await</span> axios</span><br><span class=\"line\">        .<span class=\"title function_\">post</span>(<span class=\"string\">\"http://localhost:8080/updatestatus\"</span>, updatestatus)</span><br><span class=\"line\">        .<span class=\"title function_\">then</span>(<span class=\"function\">(<span class=\"params\">response</span>) =&gt;</span> {</span><br><span class=\"line\">            <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(response.<span class=\"property\">data</span>)</span><br><span class=\"line\">        })</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></div>\n\n<p>在封装好方法之后，我们需要调用它</p>\n<div class=\"highlight-container\" data-rel=\"Typescript\"><figure class=\"iseeu highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">open</span> = (<span class=\"params\"></span>) =&gt; {</span><br><span class=\"line\">    <span class=\"title class_\">ElMessageBox</span>.<span class=\"title function_\">prompt</span>(<span class=\"string\">'请输入赔偿金额（元）'</span>, <span class=\"string\">'确认'</span>, {</span><br><span class=\"line\">        <span class=\"attr\">confirmButtonText</span>: <span class=\"string\">'交易执行'</span>,</span><br><span class=\"line\">        <span class=\"attr\">cancelButtonText</span>: <span class=\"string\">'取消'</span>,</span><br><span class=\"line\">        <span class=\"attr\">inputErrorMessage</span>: <span class=\"string\">'Invalid Email'</span>,</span><br><span class=\"line\">    })</span><br><span class=\"line\">        .<span class=\"title function_\">then</span>(<span class=\"function\">(<span class=\"params\">{ value }</span>) =&gt;</span> {</span><br><span class=\"line\">            <span class=\"keyword\">const</span> updatePromise = <span class=\"title function_\">updateCompensation</span>(<span class=\"built_in\">parseFloat</span>(value), tableData.<span class=\"property\">value</span>.<span class=\"property\">claimid</span>);</span><br><span class=\"line\">            <span class=\"keyword\">const</span> compenstationPromise = <span class=\"title function_\">compensation</span>(tableData.<span class=\"property\">value</span>.<span class=\"property\">publicKey</span>, <span class=\"title class_\">BigInt</span>(value), tableData.<span class=\"property\">value</span>.<span class=\"property\">claimid</span>);</span><br><span class=\"line\">            <span class=\"title class_\">ElMessage</span>({</span><br><span class=\"line\">                <span class=\"attr\">type</span>: <span class=\"string\">'success'</span>,</span><br><span class=\"line\">                <span class=\"attr\">message</span>: <span class=\"string\">`正在建立交易，请稍后`</span>,</span><br><span class=\"line\">            });</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"title class_\">Promise</span>.<span class=\"title function_\">all</span>([updatePromise, compenstationPromise]);</span><br><span class=\"line\">        })</span><br><span class=\"line\">        .<span class=\"title function_\">then</span>(<span class=\"function\">() =&gt;</span> {</span><br><span class=\"line\">            <span class=\"built_in\">setTimeout</span>(<span class=\"function\">() =&gt;</span> {</span><br><span class=\"line\">                router.<span class=\"title function_\">push</span>(<span class=\"string\">\"/3-4\"</span>);</span><br><span class=\"line\">            }, <span class=\"number\">3000</span>);</span><br><span class=\"line\">        })</span><br><span class=\"line\">        .<span class=\"title function_\">catch</span>(<span class=\"function\">() =&gt;</span> {</span><br><span class=\"line\">            <span class=\"title class_\">ElMessage</span>({</span><br><span class=\"line\">                <span class=\"attr\">type</span>: <span class=\"string\">'error'</span>,</span><br><span class=\"line\">                <span class=\"attr\">message</span>: <span class=\"string\">'交易取消'</span>,</span><br><span class=\"line\">            })</span><br><span class=\"line\">        })</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure></div>\n\n<p>这样就大功告成了，效果如下：</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/minatosys_FrontEnd_note/image-20240506160655596.png\" alt=\"image-20240506160655596\" style=\"zoom:80%;\">\n\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/minatosys_FrontEnd_note/image-20240506160609536.png\" alt=\"image-20240506160609536\" style=\"zoom:80%;\">\n\n<p>静等片刻得到如下回复(当然你也可以再掏一笔燃气费用于加速交易)</p>\n<p><img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/minatosys_FrontEnd_note/image-20240506160424465.png\" alt=\"image-20240506160424465\" style=\"zoom:80%;\">F</p>\n","more":"<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>这个文档记录了<strong>水门车险前端模块</strong>开发过程中的部分功能实现方法。</p>\n<p>内容是基于区块链技术开发的一个车险系统，关于区块链的的概念详见其他 Markdown；</p>\n<p>这个系统并没有往实际使用的方向开发，纯粹是应付毕业设计所准备的，因此可能存在很多不合理的设计或者是奇奇怪怪的 bug，总之，一切努力只为能够通过毕设考核。</p>\n<p>整个项目暂定分成三个模块，前端、后端、区块链。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">D:.</span><br><span class=\"line\">├─gin-minato</span><br><span class=\"line\">├─hardhat-minato</span><br><span class=\"line\">└─vue-minato</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>架构设计</li>\n</ul>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/minatosys_FrontEnd_note/image-20240423222551537.png\" alt=\"image-20240423222551537\" style=\"zoom:67%;\">\n\n<p>go ~ go ~ go！</p>\n<h2 id=\"准备工作\"><a href=\"#准备工作\" class=\"headerlink\" title=\"准备工作\"></a>准备工作</h2><p>需要安装<code>node.js</code></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">PS D:\\study_test\\Minato_Sys\\vue-Minato&gt; node --version</span><br><span class=\"line\">v18.18.0</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"安装和部署\"><a href=\"#安装和部署\" class=\"headerlink\" title=\"安装和部署\"></a>安装和部署</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 选择一个你喜欢的包管理器</span><br><span class=\"line\"># 安装element-plus</span><br><span class=\"line\"># NPM</span><br><span class=\"line\">$ npm install element-plus --save</span><br><span class=\"line\"># Yarn</span><br><span class=\"line\">$ yarn add element-plus</span><br><span class=\"line\"># pnpm</span><br><span class=\"line\">$ pnpm install element-plus</span><br><span class=\"line\"></span><br><span class=\"line\"># “自动导入”插件</span><br><span class=\"line\">$ npm install -D unplugin-vue-components unplugin-auto-import</span><br><span class=\"line\"></span><br><span class=\"line\"># 安装setup语法糖插件</span><br><span class=\"line\">$ npm i vite-plugin-vue-setup-extend -D</span><br><span class=\"line\"></span><br><span class=\"line\"># 安装icon图标库</span><br><span class=\"line\">$ npm install @element-plus/icons-vue</span><br><span class=\"line\"></span><br><span class=\"line\"># 安装Metamask插件</span><br><span class=\"line\">$ npm i @metamask/detect-provider</span><br><span class=\"line\"></span><br><span class=\"line\"># 安装axios</span><br><span class=\"line\">$ npm i axios</span><br><span class=\"line\"></span><br><span class=\"line\"># 安装pinia</span><br><span class=\"line\">$ npm i pinia</span><br></pre></td></tr></table></figure>\n\n<p>使用 Element-plus 的方法请参考官方文档，写得非常详细，我觉得完全没必要多此一举再写一遍：<a class=\"link\" href=\"https://element-plus.org/zh-CN\">https://element-plus.org/zh-CN <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a></p>\n<p>同时，您还需要准备一个<code>Metamask</code>钱包，用以对接接受支付和接受赔偿金的环节</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/minatosys_FrontEnd_note/image-20240429092312447.png\" alt=\"image-20240429092312447\" style=\"zoom: 67%;\">\n\n<h2 id=\"页面设计\"><a href=\"#页面设计\" class=\"headerlink\" title=\"页面设计\"></a>页面设计</h2><p><code>src</code>下的目录大概像这样，其中经常复用的如侧边栏、顶栏、页脚被写进了<code>components</code>文件夹</p>\n<p><em>//很多页面的 UI 都是”<strong>借鉴</strong>“了各大网页的，包括了<code>Mozilla</code>、中国平安等等等等</em></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">|-- App.vue</span><br><span class=\"line\">|-- components</span><br><span class=\"line\">|   |-- ClaimSide.vue</span><br><span class=\"line\">|   |-- InsuranceSide.vue</span><br><span class=\"line\">|   |-- PageBotton.vue</span><br><span class=\"line\">|   `-- PageTop.vue</span><br><span class=\"line\">|-- interface</span><br><span class=\"line\">|   |-- claimForm.ts</span><br><span class=\"line\">|   `-- loginResult.ts</span><br><span class=\"line\">|-- main.ts</span><br><span class=\"line\">|-- pages</span><br><span class=\"line\">|   |-- HomePage.vue</span><br><span class=\"line\">|   |-- Login.vue</span><br><span class=\"line\">|   |-- Register.vue</span><br><span class=\"line\">|   |-- admin_Claim.vue</span><br><span class=\"line\">|   |-- admin_Claim_Detail.vue</span><br><span class=\"line\">|   |-- user_Claim.vue</span><br><span class=\"line\">|   |-- user_ClaimQuery.vue</span><br><span class=\"line\">|   |-- user_InsuranceBought.vue</span><br><span class=\"line\">|   `-- user_InsuranceQuery.vue</span><br><span class=\"line\">|-- router</span><br><span class=\"line\">|   `-- index.ts</span><br><span class=\"line\">|-- scripts</span><br><span class=\"line\">|   |-- Codecheck.ts</span><br><span class=\"line\">|   |-- Minatosys.ts</span><br><span class=\"line\">|   |-- chineseCities.ts</span><br><span class=\"line\">|   |-- claim_helper.ts</span><br><span class=\"line\">|   |-- constants.ts</span><br><span class=\"line\">|   `-- ethers-5.7.esm.min.js</span><br><span class=\"line\">|-- store</span><br><span class=\"line\">|   `-- loginStore.ts</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/minatosys_FrontEnd_note/image-20240429095339280.png\" alt=\"image-20240429095339280\" style=\"zoom:80%;\">\n\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/minatosys_FrontEnd_note/image-20240429100428388.png\" alt=\"image-20240429100428388\" style=\"zoom:80%;\">\n\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/minatosys_FrontEnd_note/image-20240429100543929.png\" alt=\"image-20240429100543929\" style=\"zoom:80%;\">\n\n<p><img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/minatosys_FrontEnd_note/image-20240429100702637.png\" alt=\"image-20240429100702637\"></p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/minatosys_FrontEnd_note/image-20240429100754037.png\" alt=\"image-20240429100754037\" style=\"zoom:80%;\">\n\n<h2 id=\"理赔申报\"><a href=\"#理赔申报\" class=\"headerlink\" title=\"理赔申报\"></a>理赔申报</h2><p>用户需要填写表单并且上传文件</p>\n<p>上传文件使用的是<code>ElementPlus</code>中的<code>el-upload</code>，这里上传的文件会直接以 POST 的方法传到 <a class=\"link\" href=\"http://localhost:8080/update%EF%BC%8C%E5%90%8E%E7%AB%AF%E9%9C%80%E8%A6%81%E5%AF%B9%E8%BF%99%E4%B8%AA%E6%96%87%E4%BB%B6%E8%BF%9B%E8%A1%8C%E6%8E%A5%E6%94%B6\">http://localhost:8080/update，后端需要对这个文件进行接收 <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;el-form-item</span><br><span class=\"line\">  label=\"上传事故责任确认书、保险单复印件、驾驶证复印件以及维修费清单\"</span><br><span class=\"line\">  required</span><br><span class=\"line\">  prop=\"claimfile\"&gt;</span><br><span class=\"line\">\t&lt;el-upload</span><br><span class=\"line\">\t\tref=\"uploadRef\"</span><br><span class=\"line\">        class=\"upload-demo\"</span><br><span class=\"line\">        drag action=\"http://localhost:8080/update\"</span><br><span class=\"line\">      \tmultiple style=\"width: 50vw\"</span><br><span class=\"line\">       \t:auto-upload=\"false\"</span><br><span class=\"line\">       \tlist-type=\"picture\"</span><br><span class=\"line\">       :before-upload=\"beforeClaimfileUpload\"</span><br><span class=\"line\">        @change=\"handleChange\"&gt;</span><br><span class=\"line\">        \t&lt;el-icon class=\"el-icon--upload\"&gt;&lt;upload-filled /&gt;&lt;/el-icon&gt;</span><br><span class=\"line\">            \t&lt;div class=\"el-upload__text\"&gt;</span><br><span class=\"line\">                \t将文件拖至此处或 &lt;em&gt;点击上传&lt;/em&gt;</span><br><span class=\"line\">                &lt;/div&gt;</span><br><span class=\"line\">    &lt;/el-upload&gt;</span><br><span class=\"line\">&lt;/el-form-item&gt;</span><br></pre></td></tr></table></figure>\n\n<p>后端接收文件，这里以<code>Gin</code>为例</p>\n<figure class=\"highlight golang\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(f FileController)</span></span> Updatefile(ctx *gin.Context) {</span><br><span class=\"line\">\tfile, err := ctx.FormFile(<span class=\"string\">\"file\"</span>)</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> err != <span class=\"literal\">nil</span> {</span><br><span class=\"line\">\t\tfmt.Sprintf(<span class=\"string\">\"get form err: %s\"</span>, err.Error())</span><br><span class=\"line\">\t\tconfig.ReturnFalse(ctx, <span class=\"number\">3001</span>, <span class=\"string\">\"接收文件失败\"</span>)</span><br><span class=\"line\">\t}</span><br><span class=\"line\">\t<span class=\"comment\">// 保存文件到本地</span></span><br><span class=\"line\">\terr = ctx.SaveUploadedFile(file, <span class=\"string\">\"uploads/\"</span>+file.Filename)</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> err != <span class=\"literal\">nil</span> {</span><br><span class=\"line\">\t\tfmt.Sprintf(<span class=\"string\">\"upload file err: %s\"</span>, err.Error())</span><br><span class=\"line\">\t\tconfig.ReturnFalse(ctx, <span class=\"number\">3002</span>, <span class=\"string\">\"保存文件失败\"</span>)</span><br><span class=\"line\">\t}</span><br><span class=\"line\">\tconfig.ReturnSuccess(ctx, <span class=\"number\">200</span>, <span class=\"string\">\"成功接受并保存文件！\"</span>, file, <span class=\"number\">1</span>) <span class=\"comment\">// 返回文件名</span></span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure>\n\n<p>申报需要对用户提交的内容进行验证</p>\n<p>这里我们尽量在前端将这些都完成，避免无用表单对后端造成压力</p>\n<p>首先在 el-form 中添加规则</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;el-form ref=\"claimFormRef\" :rules=\"rules\"&gt;&lt;/el-form&gt;</span><br></pre></td></tr></table></figure>\n\n<p>接着引入数据类型，也可以在当前页面直接定义，不过因为这个和表单提交部分复用了，所以我单独写了一个接口，方便之后使用</p>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//引入ClaimForm的钩子</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> { <span class=\"keyword\">type</span> <span class=\"title class_\">ClaimForm</span> } <span class=\"keyword\">from</span> <span class=\"string\">\"@/interface/claimForm\"</span>;</span><br></pre></td></tr></table></figure>\n\n<p>定义响应式，初始化和接收数据</p>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 初始化各项数据，其中insuranceid不论怎么写最终读取都是字符串格式</span></span><br><span class=\"line\"><span class=\"comment\">// 因此不必过多纠结，打包的时候将其转换成number类型即可</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> claimForm = reactive&lt;<span class=\"title class_\">ClaimForm</span>&gt;({</span><br><span class=\"line\">  <span class=\"attr\">claimid</span>: <span class=\"title function_\">nanoid</span>(),</span><br><span class=\"line\">  <span class=\"attr\">username</span>: <span class=\"string\">\"\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">userid</span>: <span class=\"string\">\"\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">callnumber</span>: <span class=\"string\">\"\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">insuranceid</span>: <span class=\"string\">\"\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">carid</span>: <span class=\"string\">\"\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">region</span>: <span class=\"string\">\"\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">date</span>: <span class=\"string\">\"\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">claimfile</span>: [<span class=\"string\">\"\"</span>],</span><br><span class=\"line\">});</span><br></pre></td></tr></table></figure>\n\n<p>定义验证规则</p>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> rules = reactive&lt;<span class=\"title class_\">FormRules</span>&lt;<span class=\"title class_\">ClaimForm</span>&gt;&gt;({</span><br><span class=\"line\">  <span class=\"attr\">username</span>: [</span><br><span class=\"line\">    { <span class=\"attr\">required</span>: <span class=\"literal\">true</span>, <span class=\"attr\">message</span>: <span class=\"string\">\"请输入用户名！\"</span>, <span class=\"attr\">trigger</span>: <span class=\"string\">\"blur\"</span> },</span><br><span class=\"line\">    { <span class=\"attr\">min</span>: <span class=\"number\">2</span>, <span class=\"attr\">max</span>: <span class=\"number\">10</span>, <span class=\"attr\">message</span>: <span class=\"string\">\"请输入真实用户名！\"</span>, <span class=\"attr\">trigger</span>: <span class=\"string\">\"blur\"</span> },</span><br><span class=\"line\">  ],</span><br><span class=\"line\">  <span class=\"attr\">userid</span>: [</span><br><span class=\"line\">    { <span class=\"attr\">required</span>: <span class=\"literal\">true</span>, <span class=\"attr\">message</span>: <span class=\"string\">\"请输入身份证号！\"</span>, <span class=\"attr\">trigger</span>: <span class=\"string\">\"blur\"</span> },</span><br><span class=\"line\">    { <span class=\"attr\">validator</span>: checkID, <span class=\"attr\">trigger</span>: <span class=\"string\">\"blur\"</span> },</span><br><span class=\"line\">  ],</span><br><span class=\"line\">  <span class=\"comment\">//以下验证规则省略，基本同上</span></span><br><span class=\"line\">  <span class=\"attr\">callnumber</span>: [],</span><br><span class=\"line\">  <span class=\"attr\">carid</span>: [],</span><br><span class=\"line\">  <span class=\"attr\">insuranceid</span>: [],</span><br><span class=\"line\">  <span class=\"attr\">region</span>: [],</span><br><span class=\"line\">  <span class=\"attr\">date</span>: [],</span><br><span class=\"line\">  <span class=\"attr\">claimfile</span>: [],</span><br><span class=\"line\">});</span><br></pre></td></tr></table></figure>\n\n<p>其中，身份证校验需要单独写一份正则表达式加以验证：</p>\n<p><em>//这部分来自网上，下方有链接</em></p>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 有关身份证校验码</span></span><br><span class=\"line\"><span class=\"comment\">// 原文链接：https://blog.csdn.net/Cavendixe/article/details/129581874</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> checkProv = <span class=\"keyword\">function</span> (<span class=\"params\"><span class=\"attr\">val</span>: <span class=\"built_in\">string</span></span>) {</span><br><span class=\"line\">  <span class=\"keyword\">var</span> pattern = <span class=\"regexp\">/^[1-9][0-9]/</span>;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> <span class=\"attr\">provs</span>: { [<span class=\"attr\">key</span>: <span class=\"built_in\">string</span>]: <span class=\"built_in\">string</span> } = {</span><br><span class=\"line\">    <span class=\"number\">11</span>: <span class=\"string\">\"北京\"</span>,</span><br><span class=\"line\">    <span class=\"number\">12</span>: <span class=\"string\">\"天津\"</span>,</span><br><span class=\"line\">    <span class=\"number\">13</span>: <span class=\"string\">\"河北\"</span>,</span><br><span class=\"line\">    <span class=\"number\">14</span>: <span class=\"string\">\"山西\"</span>,</span><br><span class=\"line\">    <span class=\"number\">15</span>: <span class=\"string\">\"内蒙古\"</span>,</span><br><span class=\"line\">    <span class=\"number\">21</span>: <span class=\"string\">\"辽宁\"</span>,</span><br><span class=\"line\">    <span class=\"number\">22</span>: <span class=\"string\">\"吉林\"</span>,</span><br><span class=\"line\">    <span class=\"number\">23</span>: <span class=\"string\">\"黑龙江\"</span>,</span><br><span class=\"line\">    <span class=\"number\">31</span>: <span class=\"string\">\"上海\"</span>,</span><br><span class=\"line\">    <span class=\"number\">32</span>: <span class=\"string\">\"江苏\"</span>,</span><br><span class=\"line\">    <span class=\"number\">33</span>: <span class=\"string\">\"浙江\"</span>,</span><br><span class=\"line\">    <span class=\"number\">34</span>: <span class=\"string\">\"安徽\"</span>,</span><br><span class=\"line\">    <span class=\"number\">35</span>: <span class=\"string\">\"福建\"</span>,</span><br><span class=\"line\">    <span class=\"number\">36</span>: <span class=\"string\">\"江西\"</span>,</span><br><span class=\"line\">    <span class=\"number\">37</span>: <span class=\"string\">\"山东\"</span>,</span><br><span class=\"line\">    <span class=\"number\">41</span>: <span class=\"string\">\"河南\"</span>,</span><br><span class=\"line\">    <span class=\"number\">42</span>: <span class=\"string\">\"湖北\"</span>,</span><br><span class=\"line\">    <span class=\"number\">43</span>: <span class=\"string\">\"湖南\"</span>,</span><br><span class=\"line\">    <span class=\"number\">44</span>: <span class=\"string\">\"广东\"</span>,</span><br><span class=\"line\">    <span class=\"number\">45</span>: <span class=\"string\">\"广西\"</span>,</span><br><span class=\"line\">    <span class=\"number\">46</span>: <span class=\"string\">\"海南\"</span>,</span><br><span class=\"line\">    <span class=\"number\">50</span>: <span class=\"string\">\"重庆\"</span>,</span><br><span class=\"line\">    <span class=\"number\">51</span>: <span class=\"string\">\"四川\"</span>,</span><br><span class=\"line\">    <span class=\"number\">52</span>: <span class=\"string\">\"贵州\"</span>,</span><br><span class=\"line\">    <span class=\"number\">53</span>: <span class=\"string\">\"云南\"</span>,</span><br><span class=\"line\">    <span class=\"number\">54</span>: <span class=\"string\">\"西藏\"</span>,</span><br><span class=\"line\">    <span class=\"number\">61</span>: <span class=\"string\">\"陕西\"</span>,</span><br><span class=\"line\">    <span class=\"number\">62</span>: <span class=\"string\">\"甘肃\"</span>,</span><br><span class=\"line\">    <span class=\"number\">63</span>: <span class=\"string\">\"青海\"</span>,</span><br><span class=\"line\">    <span class=\"number\">64</span>: <span class=\"string\">\"宁夏\"</span>,</span><br><span class=\"line\">    <span class=\"number\">65</span>: <span class=\"string\">\"新疆\"</span>,</span><br><span class=\"line\">    <span class=\"number\">71</span>: <span class=\"string\">\"台湾\"</span>,</span><br><span class=\"line\">    <span class=\"number\">81</span>: <span class=\"string\">\"香港\"</span>,</span><br><span class=\"line\">    <span class=\"number\">82</span>: <span class=\"string\">\"澳门\"</span>,</span><br><span class=\"line\">  };</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (pattern.<span class=\"title function_\">test</span>(val)) {</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (provs[val]) {</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">    }</span><br><span class=\"line\">  }</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">};</span><br><span class=\"line\"><span class=\"keyword\">let</span> checkDate = <span class=\"keyword\">function</span> (<span class=\"params\"><span class=\"attr\">val</span>: <span class=\"built_in\">string</span></span>) {</span><br><span class=\"line\">  <span class=\"keyword\">var</span> pattern =</span><br><span class=\"line\">    <span class=\"regexp\">/^(18|19|20)\\d{2}((0[1-9])|(1[0-2]))(([0-2][1-9])|10|20|30|31)$/</span>;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (pattern.<span class=\"title function_\">test</span>(val)) {</span><br><span class=\"line\">    <span class=\"keyword\">var</span> year = val.<span class=\"title function_\">substring</span>(<span class=\"number\">0</span>, <span class=\"number\">4</span>);</span><br><span class=\"line\">    <span class=\"keyword\">var</span> month = val.<span class=\"title function_\">substring</span>(<span class=\"number\">4</span>, <span class=\"number\">6</span>);</span><br><span class=\"line\">    <span class=\"keyword\">var</span> date = val.<span class=\"title function_\">substring</span>(<span class=\"number\">6</span>, <span class=\"number\">8</span>);</span><br><span class=\"line\">    <span class=\"keyword\">var</span> date2 = <span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>(year + <span class=\"string\">\"-\"</span> + month + <span class=\"string\">\"-\"</span> + date);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (date2 &amp;&amp; date2.<span class=\"title function_\">getMonth</span>() == <span class=\"built_in\">parseInt</span>(month) - <span class=\"number\">1</span>) {</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">    }</span><br><span class=\"line\">  }</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">};</span><br><span class=\"line\"><span class=\"keyword\">let</span> checkCode = <span class=\"keyword\">function</span> (<span class=\"params\"><span class=\"attr\">val</span>: <span class=\"built_in\">any</span></span>) {</span><br><span class=\"line\">  <span class=\"keyword\">var</span> p =</span><br><span class=\"line\">    <span class=\"regexp\">/^[1-9]\\d{5}(18|19|20)\\d{2}((0[1-9])|(1[0-2]))(([0-2][1-9])|10|20|30|31)\\d{3}[0-9Xx]$/</span>;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> factor = [<span class=\"number\">7</span>, <span class=\"number\">9</span>, <span class=\"number\">10</span>, <span class=\"number\">5</span>, <span class=\"number\">8</span>, <span class=\"number\">4</span>, <span class=\"number\">2</span>, <span class=\"number\">1</span>, <span class=\"number\">6</span>, <span class=\"number\">3</span>, <span class=\"number\">7</span>, <span class=\"number\">9</span>, <span class=\"number\">10</span>, <span class=\"number\">5</span>, <span class=\"number\">8</span>, <span class=\"number\">4</span>, <span class=\"number\">2</span>];</span><br><span class=\"line\">  <span class=\"keyword\">var</span> parity = [<span class=\"number\">1</span>, <span class=\"number\">0</span>, <span class=\"string\">\"X\"</span>, <span class=\"number\">9</span>, <span class=\"number\">8</span>, <span class=\"number\">7</span>, <span class=\"number\">6</span>, <span class=\"number\">5</span>, <span class=\"number\">4</span>, <span class=\"number\">3</span>, <span class=\"number\">2</span>];</span><br><span class=\"line\">  <span class=\"keyword\">var</span> code = val.<span class=\"title function_\">substring</span>(<span class=\"number\">17</span>);</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (p.<span class=\"title function_\">test</span>(val)) {</span><br><span class=\"line\">    <span class=\"keyword\">var</span> sum = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">17</span>; i++) {</span><br><span class=\"line\">      sum += val[i] * factor[i];</span><br><span class=\"line\">    }</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (parity[sum % <span class=\"number\">11</span>] == code.<span class=\"title function_\">toUpperCase</span>()) {</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">    } <span class=\"keyword\">else</span> {</span><br><span class=\"line\">      <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(parity[sum % <span class=\"number\">11</span>]);</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    }</span><br><span class=\"line\">  }</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">};</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">let</span> checkID = <span class=\"keyword\">function</span> (<span class=\"params\"><span class=\"attr\">rule</span>: <span class=\"built_in\">any</span>, <span class=\"attr\">value</span>: <span class=\"built_in\">any</span>, <span class=\"attr\">callback</span>: <span class=\"built_in\">any</span></span>) {</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"title function_\">checkCode</span>(value)) {</span><br><span class=\"line\">    <span class=\"keyword\">var</span> date = value.<span class=\"title function_\">substring</span>(<span class=\"number\">6</span>, <span class=\"number\">14</span>);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"title function_\">checkDate</span>(date)) {</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (<span class=\"title function_\">checkProv</span>(value.<span class=\"title function_\">substring</span>(<span class=\"number\">0</span>, <span class=\"number\">2</span>))) {</span><br><span class=\"line\">        <span class=\"title function_\">callback</span>();</span><br><span class=\"line\">      }</span><br><span class=\"line\">    }</span><br><span class=\"line\">  } <span class=\"keyword\">else</span> {</span><br><span class=\"line\">    <span class=\"title function_\">callback</span>(<span class=\"keyword\">new</span> <span class=\"title class_\">Error</span>(<span class=\"string\">\"请输入合法身份证号\"</span>));</span><br><span class=\"line\">    <span class=\"comment\">// console.log(value)</span></span><br><span class=\"line\">  }</span><br><span class=\"line\">};</span><br></pre></td></tr></table></figure>\n\n<p>同时，我们还需要在提交表单前，手动确认表单，也就是在点击提交按钮后执行一次表单验证</p>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> formcheck = <span class=\"title function_\">async</span> (</span><br><span class=\"line\">  <span class=\"attr\">formEl</span>: <span class=\"title class_\">FormInstance</span> | <span class=\"literal\">undefined</span></span><br><span class=\"line\">): <span class=\"title class_\">Promise</span>&lt;<span class=\"built_in\">boolean</span>&gt; =&gt; {</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (!formEl) <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">  <span class=\"keyword\">try</span> {</span><br><span class=\"line\">    <span class=\"keyword\">await</span> formEl.<span class=\"title function_\">validate</span>();</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">\"submit!\"</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"title class_\">Promise</span>.<span class=\"title function_\">resolve</span>(<span class=\"literal\">true</span>);</span><br><span class=\"line\">  } <span class=\"keyword\">catch</span> (error) {</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">\"error submit!\"</span>, error);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"title class_\">Promise</span>.<span class=\"title function_\">reject</span>(<span class=\"literal\">false</span>);</span><br><span class=\"line\">  }</span><br><span class=\"line\">};</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">combinedClick</span> = <span class=\"keyword\">async</span> (<span class=\"params\"></span>) =&gt; {</span><br><span class=\"line\">  <span class=\"comment\">//这里先经过表单验证，通过后会像后端开始发送json报文</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> isValid = <span class=\"keyword\">await</span> <span class=\"title function_\">formcheck</span>(claimFormRef.<span class=\"property\">value</span>);</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (isValid) {</span><br><span class=\"line\">    <span class=\"comment\">//通过表单验证之后执行下方的方法</span></span><br><span class=\"line\">    <span class=\"title function_\">submitClaimForm</span>();</span><br><span class=\"line\">    <span class=\"title function_\">submitUpload</span>();</span><br><span class=\"line\">  } <span class=\"keyword\">else</span> {</span><br><span class=\"line\">    <span class=\"keyword\">return</span>;</span><br><span class=\"line\">  }</span><br><span class=\"line\">};</span><br></pre></td></tr></table></figure>\n\n<p>提交表单</p>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">async</span> <span class=\"keyword\">function</span> <span class=\"title function_\">submitClaimForm</span>(<span class=\"params\"></span>) {</span><br><span class=\"line\">  <span class=\"comment\">//打包表单内容</span></span><br><span class=\"line\">  <span class=\"keyword\">let</span> claimMessage = {</span><br><span class=\"line\">    <span class=\"attr\">claim_id</span>: claimForm.<span class=\"property\">claimid</span>,</span><br><span class=\"line\">    <span class=\"attr\">claim_user</span>: claimForm.<span class=\"property\">userid</span>,</span><br><span class=\"line\">    <span class=\"attr\">claim_insurance</span>: <span class=\"built_in\">parseInt</span>(claimForm.<span class=\"property\">insuranceid</span>),</span><br><span class=\"line\">    <span class=\"attr\">callnumber</span>: claimForm.<span class=\"property\">callnumber</span>,</span><br><span class=\"line\">    <span class=\"attr\">car_id</span>: claimForm.<span class=\"property\">carid</span>,</span><br><span class=\"line\">    <span class=\"attr\">region</span>: claimForm.<span class=\"property\">region</span>,</span><br><span class=\"line\">    <span class=\"attr\">createtime</span>: claimForm.<span class=\"property\">date</span>,</span><br><span class=\"line\">    <span class=\"comment\">// claim_file: claimForm.claimfile,</span></span><br><span class=\"line\">  };</span><br><span class=\"line\">  <span class=\"comment\">// console.log(\"提交表单内容为\", claimMessage)</span></span><br><span class=\"line\">  <span class=\"keyword\">try</span> {</span><br><span class=\"line\">    <span class=\"keyword\">const</span> response = <span class=\"keyword\">await</span> axios.<span class=\"title function_\">post</span>(</span><br><span class=\"line\">      <span class=\"string\">\"http://localhost:8080/addclaim\"</span>,</span><br><span class=\"line\">      claimMessage</span><br><span class=\"line\">    );</span><br><span class=\"line\">    <span class=\"comment\">// console.log(\"send successful:\", response.data.data)</span></span><br><span class=\"line\">    <span class=\"keyword\">switch</span> (response.<span class=\"property\">data</span>.<span class=\"property\">code</span>) {</span><br><span class=\"line\">      <span class=\"keyword\">case</span> <span class=\"number\">200</span>:</span><br><span class=\"line\">        <span class=\"title class_\">ElMessage</span>({</span><br><span class=\"line\">          <span class=\"attr\">message</span>: <span class=\"string\">\"申报成功！\"</span>,</span><br><span class=\"line\">          <span class=\"attr\">type</span>: <span class=\"string\">\"success\"</span>,</span><br><span class=\"line\">        });</span><br><span class=\"line\">        <span class=\"comment\">//3秒后跳转至理赔查询</span></span><br><span class=\"line\">        <span class=\"built_in\">setTimeout</span>(<span class=\"function\">() =&gt;</span> {</span><br><span class=\"line\">          router.<span class=\"title function_\">push</span>(<span class=\"string\">\"/3-2\"</span>);</span><br><span class=\"line\">        }, <span class=\"number\">300</span>);</span><br><span class=\"line\">        <span class=\"comment\">// 可以添加其他情况的处理</span></span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">      <span class=\"comment\">//其他提交失败的结果</span></span><br><span class=\"line\">      <span class=\"keyword\">case</span> <span class=\"number\">2001</span>:</span><br><span class=\"line\">      <span class=\"attr\">default</span>:</span><br><span class=\"line\">    }</span><br><span class=\"line\">  } <span class=\"keyword\">catch</span> (error) {</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">error</span>(<span class=\"string\">\"Claim failed:\"</span>, error);</span><br><span class=\"line\">    <span class=\"comment\">// 申报失败的处理</span></span><br><span class=\"line\">  }</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure>\n\n<p>但是，el-update 提交的表单不能修改文件名，始终会显示变量只读，我也不知道怎么修改</p>\n<p>所以我换了一个思路，在前端拿到文件的时候，将文件名存储在一个数组中，同时记录对应的申报 id，也就是<code>claimid</code>，将这些内容打包发送至后端，由后端接受并对保存的文件进行改名。</p>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//上传前会对文件进行检查，只允许jpg格式的文件上传至后端</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"attr\">beforeClaimfileUpload</span>: <span class=\"title class_\">UploadProps</span>[<span class=\"string\">\"beforeUpload\"</span>] = <span class=\"function\">(<span class=\"params\">rawFile</span>) =&gt;</span> {</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (rawFile.<span class=\"property\">type</span> !== <span class=\"string\">\"image/jpeg\"</span>) {</span><br><span class=\"line\">    <span class=\"title class_\">ElMessage</span>.<span class=\"title function_\">error</span>(<span class=\"string\">\"图片仅支持jpeg格式\"</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">  } <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (rawFile.<span class=\"property\">size</span> / <span class=\"number\">1024</span> / <span class=\"number\">1024</span> &gt; <span class=\"number\">5</span>) {</span><br><span class=\"line\">    <span class=\"title class_\">ElMessage</span>.<span class=\"title function_\">error</span>(<span class=\"string\">\"图片不能超过5MB!\"</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">  }</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">};</span><br><span class=\"line\"><span class=\"comment\">// 监听上传组件的 change 事件，只要一有文件被加进来就会触发</span></span><br><span class=\"line\"><span class=\"comment\">//目的是为了获取上传的文件名并就将其保存在claimForm.claimfile[]这个数组中</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">handleChange</span> = (<span class=\"params\"><span class=\"attr\">file</span>: <span class=\"built_in\">any</span>, <span class=\"attr\">fileList</span>: <span class=\"built_in\">any</span></span>) =&gt; {</span><br><span class=\"line\">  <span class=\"comment\">// 获取第一个文件的文件名</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (fileList.<span class=\"property\">length</span> &gt; <span class=\"number\">0</span>) {</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; fileList.<span class=\"property\">length</span>; i++) {</span><br><span class=\"line\">      <span class=\"comment\">//fileList.name这个属性是只读的，没办法修改，很叫人头疼</span></span><br><span class=\"line\">      claimForm.<span class=\"property\">claimfile</span>[i] = fileList[i].<span class=\"property\">name</span>;</span><br><span class=\"line\">      <span class=\"comment\">// console.log(\"上传文件为\", claimForm.claimfile[i])</span></span><br><span class=\"line\">    }</span><br><span class=\"line\">  } <span class=\"keyword\">else</span> {</span><br><span class=\"line\">    claimForm.<span class=\"property\">claimfile</span>[<span class=\"number\">0</span>] = <span class=\"string\">\"\"</span>;</span><br><span class=\"line\">  }</span><br><span class=\"line\">};</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//功能是对提交表单的补充，目的是上传文件并将上传的文件名，绑定的申报单号发送至后端</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">submitUpload</span> = (<span class=\"params\"></span>) =&gt; {</span><br><span class=\"line\">  uploadRef.<span class=\"property\">value</span>!.<span class=\"title function_\">submit</span>();</span><br><span class=\"line\">  <span class=\"keyword\">let</span> fileMessage = {</span><br><span class=\"line\">    <span class=\"attr\">filename</span>: claimForm.<span class=\"property\">claimfile</span>,</span><br><span class=\"line\">    <span class=\"attr\">file_according</span>: claimForm.<span class=\"property\">claimid</span>,</span><br><span class=\"line\">    <span class=\"attr\">createtime</span>: claimForm.<span class=\"property\">date</span>,</span><br><span class=\"line\">  };</span><br><span class=\"line\">  <span class=\"comment\">// console.log(\"修改表单内容为\", fileMessage)</span></span><br><span class=\"line\">  <span class=\"comment\">//延迟提交，这个补充的改名接口必须等到图片以及被保存之后再执行，否则可能会出现图片还没保存，改名指令已经提交过来了，后端会因为找不到文件名而改名失败。</span></span><br><span class=\"line\">  <span class=\"comment\">//这实在不是一个很好地办法，最好的办法还是能够在前端就对文件进行改名</span></span><br><span class=\"line\">  <span class=\"built_in\">setTimeout</span>(<span class=\"title function_\">async</span> () =&gt; {</span><br><span class=\"line\">    <span class=\"keyword\">await</span> axios.<span class=\"title function_\">post</span>(<span class=\"string\">\"http://localhost:8080/updatesupport\"</span>, fileMessage);</span><br><span class=\"line\">  }, <span class=\"number\">200</span>);</span><br><span class=\"line\">  <span class=\"comment\">// console.log(\"send successful:\", response.data.data)</span></span><br><span class=\"line\">};</span><br></pre></td></tr></table></figure>\n\n<p>至此，用户申报部分就完成了，整个背后的流程分别是：</p>\n<p>用户填写表单/存储表单文件名=&gt;表单验证=&gt;表单提交=&gt;表单文件验证=&gt;表单文件提交=&gt;表单文件名数组+表单号提交</p>\n<h2 id=\"区块链交互\"><a href=\"#区块链交互\" class=\"headerlink\" title=\"区块链交互\"></a>区块链交互</h2><p>区块链的交易需要使用用户私钥，如果完全由我们执行的话，但是对于区块链而言，账户私钥基本上算是把钱包权限完全交出去了，不仅我们需要花费资源和精力妥善保管，一不小心可能还有被篡改的风险。</p>\n<p>因此，在水门车险中我们使用<code>Metamask</code>来完成这一点，<code>Metamask</code>算是一个比较成熟的钱包，由它来负责保管用户的私钥。就好比我们使用支付宝进行支付一样，我们无需在商店门口一个一个输入自己的银行卡号和密码，只需要支付宝轻轻一扫。</p>\n<p>但是在使用前我们需要在前端验证浏览器有没有安装<code>Metamask</code>插件，这里我们使用<code>ethers-5.7.esm.min.js</code>，可以自己下载也可以npm安装。但是具体使用方法要看版本号以及对应的文档。</p>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> { ethers } <span class=\"keyword\">from</span> <span class=\"string\">\"@/scripts/ethers-5.7.esm.min.js\"</span></span><br><span class=\"line\"><span class=\"comment\">// 用以检查浏览器有没有安装Metamask扩展</span></span><br><span class=\"line\"><span class=\"keyword\">async</span> <span class=\"keyword\">function</span> <span class=\"title function_\">connect</span>(<span class=\"params\"></span>) {</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"title function_\">typeof</span> (<span class=\"variable language_\">window</span> <span class=\"keyword\">as</span> <span class=\"built_in\">any</span>).<span class=\"property\">ethereum</span> !== <span class=\"string\">\"undefined\"</span>) {</span><br><span class=\"line\">        <span class=\"title function_\">await</span> (<span class=\"variable language_\">window</span> <span class=\"keyword\">as</span> <span class=\"built_in\">any</span>).<span class=\"property\">ethereum</span>.<span class=\"title function_\">request</span>({</span><br><span class=\"line\">            <span class=\"attr\">method</span>: <span class=\"string\">\"eth_requestAccounts\"</span>,</span><br><span class=\"line\">        })</span><br><span class=\"line\">    } <span class=\"keyword\">else</span> {</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">\"No metamask!\"</span>)</span><br><span class=\"line\">    }</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure>\n\n<p>接着我们需要实例化一个合约钱包，用以调用钱包中的方法，在那之前我们需要将合约的信息封装起来</p>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//constant.ts</span></span><br><span class=\"line\"><span class=\"comment\">//合约地址</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> contractAddress = <span class=\"string\">\"0x03cDbE6020084eb013b02B8d8e0A90BE018fb39E\"</span></span><br><span class=\"line\"><span class=\"comment\">//合约编译生成的abi</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> abi = [</span><br><span class=\"line\">    {</span><br><span class=\"line\">        <span class=\"attr\">inputs</span>: [</span><br><span class=\"line\">            {</span><br><span class=\"line\">                <span class=\"attr\">internalType</span>: <span class=\"string\">\"address\"</span>,</span><br><span class=\"line\">                <span class=\"attr\">name</span>: <span class=\"string\">\"priceFeedAddress\"</span>,</span><br><span class=\"line\">                <span class=\"attr\">type</span>: <span class=\"string\">\"address\"</span>,</span><br><span class=\"line\">            },</span><br><span class=\"line\">        ],</span><br><span class=\"line\">        <span class=\"attr\">stateMutability</span>: <span class=\"string\">\"nonpayable\"</span>,</span><br><span class=\"line\">        <span class=\"attr\">type</span>: <span class=\"string\">\"constructor\"</span>,</span><br><span class=\"line\">    },</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n\n<p>接着实例化</p>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> { ethers } <span class=\"keyword\">from</span> <span class=\"string\">\"@/scripts/ethers-5.7.esm.min.js\"</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> { abi, contractAddress } <span class=\"keyword\">from</span> <span class=\"string\">\"./constants\"</span></span><br><span class=\"line\"><span class=\"comment\">// 假设 1 人民币 = 39,583,333,333,333 wei</span></span><br><span class=\"line\"><span class=\"comment\">// 其实这里偷懒了，和合约那边的喂价合约没对应上，最好是传数字到合约中的方法，之后再通过喂价合约转换成wei</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"variable constant_\">RMB_TO_WEI_RATE</span> = <span class=\"title class_\">BigInt</span>(<span class=\"string\">\"39583333333333\"</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> provider = <span class=\"keyword\">new</span> ethers.<span class=\"property\">providers</span>.<span class=\"title class_\">Web3Provider</span>((<span class=\"variable language_\">window</span> <span class=\"keyword\">as</span> <span class=\"built_in\">any</span>).<span class=\"property\">ethereum</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> signer = provider.<span class=\"title function_\">getSigner</span>()</span><br><span class=\"line\"><span class=\"comment\">//创建智能合约实例</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> contract = <span class=\"keyword\">new</span> ethers.<span class=\"title class_\">Contract</span>(contractAddress, abi, signer)</span><br></pre></td></tr></table></figure>\n\n<p>接着我们使用这个实例化后的钱包调用合约中的方法</p>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//Minatosys.ts</span></span><br><span class=\"line\"><span class=\"comment\">//管理员转账</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> { updateAddress } <span class=\"keyword\">from</span> <span class=\"string\">\"./claim_helper\"</span></span><br><span class=\"line\"><span class=\"keyword\">async</span> <span class=\"keyword\">function</span> <span class=\"title function_\">compensation</span>(<span class=\"params\"></span></span><br><span class=\"line\"><span class=\"params\">    <span class=\"attr\">toAddress</span>: <span class=\"built_in\">any</span>,</span></span><br><span class=\"line\"><span class=\"params\">    <span class=\"attr\">amountInCNY</span>: <span class=\"built_in\">number</span>,</span></span><br><span class=\"line\"><span class=\"params\">    <span class=\"attr\">claimid</span>: <span class=\"built_in\">string</span>,</span></span><br><span class=\"line\"><span class=\"params\"></span>) {</span><br><span class=\"line\">    <span class=\"keyword\">let</span> <span class=\"attr\">amountInWei</span>: <span class=\"title class_\">BigInt</span> = <span class=\"title class_\">BigInt</span>(amountInCNY) * <span class=\"variable constant_\">RMB_TO_WEI_RATE</span></span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">\"Funding with\"</span>, toAddress)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"title function_\">typeof</span> (<span class=\"variable language_\">window</span> <span class=\"keyword\">as</span> <span class=\"built_in\">any</span>).<span class=\"property\">ethereum</span> !== <span class=\"string\">\"undefined\"</span>) {</span><br><span class=\"line\">        <span class=\"comment\">// 这里需要严格对应上合约中的方法，注意方法需要的参数类型</span></span><br><span class=\"line\">        <span class=\"keyword\">const</span> tx = <span class=\"keyword\">await</span> contract.<span class=\"title function_\">withdrawToAddress</span>(</span><br><span class=\"line\">            toAddress,</span><br><span class=\"line\">            ethers.<span class=\"property\">BigNumber</span>.<span class=\"title function_\">from</span>(amountInWei),</span><br><span class=\"line\">        )</span><br><span class=\"line\">        <span class=\"keyword\">await</span> tx.<span class=\"title function_\">wait</span>()</span><br><span class=\"line\">        <span class=\"title function_\">updateAddress</span>(tx.<span class=\"property\">hash</span>, claimid)</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">\"Transaction successful\"</span>)</span><br><span class=\"line\">    } <span class=\"keyword\">else</span> {</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">\"No metamask!\"</span>)</span><br><span class=\"line\">    }</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure>\n\n<p>其中，关于引入的<code>updateAddress</code></p>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//updateAddress.ts</span></span><br><span class=\"line\"><span class=\"comment\">//用以更新数据库中交易的地址</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> axios <span class=\"keyword\">from</span> <span class=\"string\">\"axios\"</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">async</span> <span class=\"keyword\">function</span> <span class=\"title function_\">updateAddress</span>(<span class=\"params\"><span class=\"attr\">address</span>: <span class=\"built_in\">string</span>, <span class=\"attr\">claimid</span>: <span class=\"built_in\">string</span></span>) {</span><br><span class=\"line\">    <span class=\"keyword\">let</span> updateaddress = {</span><br><span class=\"line\">        <span class=\"attr\">claim_id</span>: claimid,</span><br><span class=\"line\">        <span class=\"attr\">address</span>: address,</span><br><span class=\"line\">    }</span><br><span class=\"line\">    <span class=\"keyword\">await</span> axios</span><br><span class=\"line\">        .<span class=\"title function_\">post</span>(<span class=\"string\">\"http://localhost:8080/updateaddress\"</span>, updateaddress)</span><br><span class=\"line\">        .<span class=\"title function_\">then</span>(<span class=\"function\">(<span class=\"params\">response</span>) =&gt;</span> {</span><br><span class=\"line\">            <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(response.<span class=\"property\">data</span>)</span><br><span class=\"line\">        })</span><br><span class=\"line\">}</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">async</span> <span class=\"keyword\">function</span> <span class=\"title function_\">updateCompensation</span>(<span class=\"params\"></span></span><br><span class=\"line\"><span class=\"params\">    <span class=\"attr\">compensation</span>: <span class=\"built_in\">number</span>,</span></span><br><span class=\"line\"><span class=\"params\">    <span class=\"attr\">claimid</span>: <span class=\"built_in\">string</span>,</span></span><br><span class=\"line\"><span class=\"params\"></span>) {</span><br><span class=\"line\">    <span class=\"keyword\">let</span> updatestatus = {</span><br><span class=\"line\">        <span class=\"attr\">claim_id</span>: claimid,</span><br><span class=\"line\">        <span class=\"attr\">compensation</span>: compensation,</span><br><span class=\"line\">    }</span><br><span class=\"line\">    <span class=\"keyword\">await</span> axios</span><br><span class=\"line\">        .<span class=\"title function_\">post</span>(<span class=\"string\">\"http://localhost:8080/updatestatus\"</span>, updatestatus)</span><br><span class=\"line\">        .<span class=\"title function_\">then</span>(<span class=\"function\">(<span class=\"params\">response</span>) =&gt;</span> {</span><br><span class=\"line\">            <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(response.<span class=\"property\">data</span>)</span><br><span class=\"line\">        })</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>在封装好方法之后，我们需要调用它</p>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">open</span> = (<span class=\"params\"></span>) =&gt; {</span><br><span class=\"line\">    <span class=\"title class_\">ElMessageBox</span>.<span class=\"title function_\">prompt</span>(<span class=\"string\">'请输入赔偿金额（元）'</span>, <span class=\"string\">'确认'</span>, {</span><br><span class=\"line\">        <span class=\"attr\">confirmButtonText</span>: <span class=\"string\">'交易执行'</span>,</span><br><span class=\"line\">        <span class=\"attr\">cancelButtonText</span>: <span class=\"string\">'取消'</span>,</span><br><span class=\"line\">        <span class=\"attr\">inputErrorMessage</span>: <span class=\"string\">'Invalid Email'</span>,</span><br><span class=\"line\">    })</span><br><span class=\"line\">        .<span class=\"title function_\">then</span>(<span class=\"function\">(<span class=\"params\">{ value }</span>) =&gt;</span> {</span><br><span class=\"line\">            <span class=\"keyword\">const</span> updatePromise = <span class=\"title function_\">updateCompensation</span>(<span class=\"built_in\">parseFloat</span>(value), tableData.<span class=\"property\">value</span>.<span class=\"property\">claimid</span>);</span><br><span class=\"line\">            <span class=\"keyword\">const</span> compenstationPromise = <span class=\"title function_\">compensation</span>(tableData.<span class=\"property\">value</span>.<span class=\"property\">publicKey</span>, <span class=\"title class_\">BigInt</span>(value), tableData.<span class=\"property\">value</span>.<span class=\"property\">claimid</span>);</span><br><span class=\"line\">            <span class=\"title class_\">ElMessage</span>({</span><br><span class=\"line\">                <span class=\"attr\">type</span>: <span class=\"string\">'success'</span>,</span><br><span class=\"line\">                <span class=\"attr\">message</span>: <span class=\"string\">`正在建立交易，请稍后`</span>,</span><br><span class=\"line\">            });</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"title class_\">Promise</span>.<span class=\"title function_\">all</span>([updatePromise, compenstationPromise]);</span><br><span class=\"line\">        })</span><br><span class=\"line\">        .<span class=\"title function_\">then</span>(<span class=\"function\">() =&gt;</span> {</span><br><span class=\"line\">            <span class=\"built_in\">setTimeout</span>(<span class=\"function\">() =&gt;</span> {</span><br><span class=\"line\">                router.<span class=\"title function_\">push</span>(<span class=\"string\">\"/3-4\"</span>);</span><br><span class=\"line\">            }, <span class=\"number\">3000</span>);</span><br><span class=\"line\">        })</span><br><span class=\"line\">        .<span class=\"title function_\">catch</span>(<span class=\"function\">() =&gt;</span> {</span><br><span class=\"line\">            <span class=\"title class_\">ElMessage</span>({</span><br><span class=\"line\">                <span class=\"attr\">type</span>: <span class=\"string\">'error'</span>,</span><br><span class=\"line\">                <span class=\"attr\">message</span>: <span class=\"string\">'交易取消'</span>,</span><br><span class=\"line\">            })</span><br><span class=\"line\">        })</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure>\n\n<p>这样就大功告成了，效果如下：</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/minatosys_FrontEnd_note/image-20240506160655596.png\" alt=\"image-20240506160655596\" style=\"zoom:80%;\">\n\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/minatosys_FrontEnd_note/image-20240506160609536.png\" alt=\"image-20240506160609536\" style=\"zoom:80%;\">\n\n<p>静等片刻得到如下回复(当然你也可以再掏一笔燃气费用于加速交易)</p>\n<p><img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/minatosys_FrontEnd_note/image-20240506160424465.png\" alt=\"image-20240506160424465\" style=\"zoom:80%;\">F</p>\n"},{"title":"水门车险的开发记录（区块链）","description":"水门车险开发过程记录","date":"2024-05-06T08:10:00.000Z","thumbnail":"img/thumbnail/minato.png","excerpt":"该文档为水门车险的区块链部分，记录了水门车险在区块链这个模块的开发以及部署过程，语言方面使用了Solidity。语法接近js，上手较为容易。合约的部署则介绍了两种方式，Remix以及Hardhat。","_content":"\n## 前言\n\n这个文档记录了**水门车险区块链模块**的开发过程。\n\n内容是基于区块链技术开发的一个车险系统，关于区块链的的概念详见其他markdown；\n\n这个系统并没有往实际使用的方向开发，纯粹是应付毕业设计所准备的，因此可能存在很多不合理的设计或者是奇奇怪怪的bugs，总之，一切努力只为能够通过毕设考核。\n\n整个项目暂定分成三个模块，前端、后端、区块链。\n\n```terminal\nD:.\n├─gin-minato\n├─hardhat-minato\n└─vue-minato\n```\n\n- 架构设计\n\n<img src=\"/img/minatosys_Blockchain_note/image-20240423222551537.png\" alt=\"image-20240423222551537\" style=\"zoom:67%;\" />\n\ngo ~ go ~ go！\n\n## 工具包\n\nRemix网址：https://remix.ethereum.org/\n\n测试币水龙头：https://faucets.chain.link\n\nSepolia区块链浏览器：https://sepolia.etherscan.io/\n\nChainlink官方文档：https://docs.chain.link\n\n以太坊货币换算：https://eth-converter.com/\n\nSolidity 使用文档：https://solidity-by-example.org\n\n## 区块链\n\n### 合约\n\n```solidity\n// SPDX-License-Identifier: MIT\npragma solidity 0.8.7;\n\nimport \"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\";\nimport \"./PriceConverter.sol\";\n\n// EVM, Ethereum Virtual Machine\nerror NotOwner();\n\ncontract Minatosys {\n    using PriceConverter for uint256;\n    uint256 constant minimumUsd = 0;\n    address public immutable i_owner;\n    AggregatorV3Interface public priceFeed;\n\n    constructor(address priceFeedAddress) {//构造，合约部署时需要向它传入以下参数\n        i_owner = msg.sender;\n        priceFeed = AggregatorV3Interface(priceFeedAddress);\n    }\n\n    function fund() public payable {//资金注入方法\n        require(\n            msg.value.getConversionRate(priceFeed) > 0,//判断金额是否大于0，否则会回滚交易\n            \"Didn't send enough\"\n        );\n    }\n\n    function withdraw() public onlyOwner {\n        (bool callSuccess, ) = payable(msg.sender).call{//提取资金，非合约部署账户不能调用这个方法\n            value: address(this).balance\n        }(\"\");\n        require(callSuccess, \"call failed\");\n    }\n\n    // 管理员转账\n    function withdrawToAddress(\n        address payable _to,\n        uint256 _amount\n    ) public onlyOwner {//提取资金，非合约部署账户不能调用这个方法\n        // 检查目标地址是否有效\n        require(_to != address(0), \"Invalid address\");\n        // 检查合约余额是否足够支付转账金额\n        require(address(this).balance >= _amount, \"Insufficient balance\");\n        // 使用 call 方法向目标地址发送以太币\n        // 设置发送者为合约的所有者\n        (bool callSuccess, ) = _to.call{value: _amount}(\"\");\n        // 检查调用是否成功\n        require(callSuccess, \"Call failed\");\n    }\n\n    // 莫名其妙地收到钱就执行下面两个方法\n    receive() external payable {\n        fund();\n    }\n\n    fallback() external payable {\n        fund();\n    }\n\n    // 自定义修饰符，带上这个标签的方法将只对合约发布者开放使用权限\n    modifier onlyOwner() {\n        require(\n            msg.sender == address(0) || msg.sender == i_owner,\n            \"Sender is not owner\"\n        );\n        _;\n    }\n}\n\n```\n\n库：\n\n```solidity\n//SPDX-License-Identifier: MIT\npragma solidity 0.8.7;\nimport \"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\";\n\nlibrary PriceConverter {\n    function getPrice(\n        AggregatorV3Interface priceFeed\n    ) internal view returns (uint256) {\n        //得到汇率(USD/ETH)\n        //ABIw\n        //Address 0x694AA1769357215DE4FAC081bf1f309aDC325306\n        // AggregatorV3Interface priceFeed = AggregatorV3Interface(\n        //     0x694AA1769357215DE4FAC081bf1f309aDC325306\n        // );\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\n\n        return uint256(answer * 1e10);\n    }\n\n    function getVersion() internal view returns (uint256) {\n        //获取了链外数据源的版本信息，并将其作为uint256类型返回\n        AggregatorV3Interface priceFeed = AggregatorV3Interface(\n            0x694AA1769357215DE4FAC081bf1f309aDC325306\n        );\n        return priceFeed.version();\n    }\n\n    function getConversionRate(\n        uint256 ethAmount,\n        AggregatorV3Interface priceFeed\n    ) internal view returns (uint256) {\n        uint256 ethPrice = getPrice(priceFeed);\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18;\n        return ethAmountInUsd;\n    }\n}\n\n```\n\n具体写法以及solidity的语法可以参考《Patrick Collins-区块链学习笔记》\n\n### 部署\n\n#### Remix\n\n有两种部署方法，这边强力推荐使用**Remix**，真的很方便，合约输进去可以直接部署，非常适合需求不高的合约部署，唯一缺点就是网速似乎不太理想，经常链接钱包和测试网连接不上。\n\n如果使用Remix的话，基本上到此就结束了😂输入喂价地址之后，直接deploy就行，喂价地址可以从Chainlink那里获取，此处可以试着使用Sepolia的喂价地址：`0x694AA1769357215DE4FAC081bf1f309aDC325306(这个不保真，可能会更新换代，还是建议自己去官网获取)`\n\n*值得一提的是，Patrick Collins是他们的开发者大使，被请来录制的课程并且被Chainlink_cn翻译成中文放在B站上供大家学习，内容还是很新鲜且经常更新的，值得初学者去观看。另外，他们在Github上还有一个社区，可以供大家提问，虽然我问了但是没有得到解答，不过问题不大，有总比没有强😭*\n\n<img src=\"/img/minatosys_Blockchain_note/image-20240423231604679.png\" alt=\"image-20240423231604679\" style=\"zoom:80%;\" />\n\n本项目使用了第二种方式，如下：\n\n#### Hardhat\n\nHardhat是一个轻量级的合约部署框架，优点是可以安装自己需要的插件，这对于高级开发来说是非常使用的，包括prettier这样的代码格式化插件等等；并且可以自行编写脚本，包括部署脚本以及测试脚本等等等等\n\n但是Hardhat貌似？更新起来，文档有时会跟不上，这会导致对于新手来说，可能看文档并不会有很好的体验，【差点把我折磨疯了】，\n\n即便是2年内录制的课程，实际操作时也会有所不同。因此，如果你是一名想用区块链来完成毕业设计之类的项目，强力推荐Remix。\n\nHardhat部署所需的插件以及搭建过程这里不做赘述，详情请见《Patrick Collins-区块链 笔记》，这里只简单说明部署过程以及合约内容\n\n```txt\n---\n  |-- artifacts\t\t\t#编译结果保存，包括ABI等等\n  |-- cache\t\t\t\t#Hardhat框架生成的缓存文件\n  |-- contracts\t\t\t#合约以及喂价合约等等\n  |-- deploy\t\t\t#部署合约的脚本\n  |-- deployments\t\t#已经部署的合约的相关数据，比如部署时产生的地址、交易哈希等信息\n  |-- ignition\t\t\t#Hardhat框架的一些配置文件或模板文件\n  |-- node_modules\t\t#依赖\n  |-- test\t\t\t\t#测试文件夹，包含一些测试脚本\n  |-- utils\t\t\t\t#辅助开发的工具函数或辅助脚本文件，比如verify.js等等\n  |-- package.json\t\t#依赖管理\n  |-- hardhat.config.js\t#框架配置文件\n  |-- helper-hardhat-config.js\t#辅助框架配置文件\n  |-- yarn.lock\n  \\-- README.md\n\n9 directories, 5 files\n\n```\n\n框架配置信息`hardhat.config.js`，包括编译器版本，账户私钥等等信息\n\n```javascript\nrequire(\"@nomicfoundation/hardhat-toolbox\");\nrequire(\"hardhat-deploy\");\nrequire(\"dotenv\").config();\nrequire(\"hardhat-gas-reporter\");\n/** @type import('hardhat/config').HardhatUserConfig */\nconst SEPOLIA_RPC_URL = process.env.SEPOLIA_RPC_URL;\nconst PRIVATE_KEY = process.env.PRIVATE_KEY;\nconst ETHERSCAN_API_KEY = process.env.ETHERSCAN_API_KEY;\n\nmodule.exports = {\n  solidity: {\n    compilers: [\n      {\n        version: \"0.8.7\",\n      },\n      {\n        version: \"0.6.6\",\n      },\n    ],\n  },\n  defaultNetwork: \"hardhat\",\n  networks: {\n    hardhat: {\n      chainId: 31337,\n      // gasPrice: 130000000000,\n    },\n    sepolia: {\n      url: SEPOLIA_RPC_URL,\n      accounts: [PRIVATE_KEY],\n      chainId: 11155111,\n      blockConfirmations: 6,\n    },\n  },\n  gasReporter: {\n    enabled: true,\n    currency: \"USD\",\n    outputFile: \"gas-report.txt\",\n    noColors: true,\n    // coinmarketcap: COINMARKETCAP_API_KEY,\n  },\n  etherscan: {\n    apiKey: ETHERSCAN_API_KEY,\n  },\n  namedAccounts: {\n    deployer: {\n      default: 0, // here this will by default take the first account as deployer\n      1: 0, // similarly on mainnet it will take the first account as deployer. Note though that depending on how hardhat network are configured, the account 0 on one network can be different than on another\n    },\n  },\n  mocha: {\n    timeout: 500000,\n  },\n};\n```\n\n##### 本地网\n\n也就是`Hardhat`自带的本地网络，优点是，测试币很多，可以随意霍霍，交易速度非常快而且不容易出岔子\n\n但是，本地网络是无法获取喂价合约的，换句话说Chainlink预言机在这方面并不能给予你帮助，因此，在部署之前，我们需要先部署一个虚拟的喂价合约，这里并不完全需要自己去写，在`chainlink`的`github`中仔细翻找可以找到`node_modules\\@chainlink\\contracts\\src\\v0.6\\tests\\MockV3Aggregator.sol`，因此，我们可以在喂价合约中直接引入，效果等同于复制粘贴；\n\n```solidity\n//SPDX-License-Identifier:MIT\npragma solidity ^0.6.0;\n\nimport \"@chainlink/contracts/src/v0.6/tests/MockV3Aggregator.sol\";\n\n```\n\n之后我们就可以开始着手准备部署合约的脚本了；\n\n首先，我们需要处理喂价合约以及合约的chainID，也就是用于判断合约被部署在了哪条链上\n\n```javascript\n//helper-hardhat-config.js\nconst networkConfig = {\n    31337: {\n        name: \"localhost\",\n    },\n    // Price Feed Address, values can be obtained at https://docs.chain.link/data-feeds/price-feeds/addresses\n    11155111: {\n        name: \"sepolia\",\n        ethUsdPriceFeed: \"0x694AA1769357215DE4FAC081bf1f309aDC325306\",\n    },\n}\n\nconst developmentChains = [\"hardhat\", \"localhost\"]\n\nmodule.exports = {\n    networkConfig,\n    developmentChains,\n}\n\n```\n\n先将我们自己编写的喂价合约发布到`Hardhat`链上,这样我们部署的合约就可以通过本地链上的喂价合约得到USD/ETH的汇率\n这里脚本做了一个判断，如果`chainID`为`31337`，也就是处于开发链上时，会对合约进行部署\n\n```javascript\n//00-deploy-mocks.js\n//这段是部署本地预言机\nconst { network } = require(\"hardhat\");\n\nconst DECIMALS = \"8\";\nconst INITIAL_PRICE = \"200000000000\"; // 2000\n\nmodule.exports = async ({ getNamedAccounts, deployments }) => {\n  const { deploy, log } = deployments;\n  const { deployer } = await getNamedAccounts();\n  const chainId = network.config.chainId;\n  log(network.name);\n  if (chainId == 31337) {\n    log(\"Local network detected!Deploying mocks...\");\n    await deploy(\"MockV3Aggregator\", {\n      contract: \"MockV3Aggregator\",\n      from: deployer,\n      log: true,\n      args: [DECIMALS, INITIAL_PRICE],\n    });\n    log(\"Mocks deployed!\");\n    log(\"--------------------------------------------------------\");\n  }\n};\n// 这段代码指定了当前部署脚本相关的标签。在这里，使用了两个标签：\"all\" 和 \"mocks\"。\n// \"all\" 标签： 这个标签可能用于将部署脚本与整个项目的所有部署任务关联起来。\n// 当运行 npx hardhat deploy --tags all 时，将运行所有带有 \"all\" 标签的部署任务。\n// \"mocks\" 标签： 这个标签可能用于将部署脚本与与模拟合约相关的其他部署任务关联起来。\n// 当运行 npx hardhat deploy --tags mocks 时，将运行所有带有 \"mocks\" 标签的部署任务。\n//yarn hardhat deploy --tags mocks\nmodule.exports.tags = [\"all\", \"mocks\"];\n```\n\n接着，我们需要部署**水门车险**的合约，这里是第二个脚本\n\n脚本对预言机的选择上会进行一个判断，如果是在开发链，也就是本地链上，则会使用开发链上部署的喂价合约`MockV3Aggregator`，反之就会根据chainID，从`networkConfig[chainId][\"ethUsdPriceFeed\"]`获取喂价地址；\n\n另外，如果是在非开发链上，并且以太坊API KEY被正确配置时，会触发对合约的验证。\n\n```javascript\n//01-deploy-fund-me.js\nconst {\n    networkConfig,\n    developmentChains,\n} = require(\"../helper-hardhat-config.js\")\nconst { network } = require(\"hardhat\")\nconst { verify } = require(\"../utils/verify.js\")\n\n//hre代表hardhat运行环境\n// module.exports = async (hre) => {\n//     const {getNameAccounts,deployments} = hre\n// }\n//node.js的语法糖，写法等同于上方的\nmodule.exports = async ({ getNamedAccounts, deployments }) => {\n    //将deploy和log从deployments这个对象中提取出来，等同于\n    //const deploy = deployments.deploy;\n    //const log = deployments.log\n    const { deploy, log } = deployments\n    //getNameAccounts() 返回一个包含 deployer 属性的对象，等同于\n    //const getNameAccountsResult = await getNameAccounts();\n    //const deployer = getNameAccountsResult.deployer;\n    log(\"Deploy Minatosys...\")\n    const { deployer } = await getNamedAccounts()\n    const chainId = network.config.chainId\n\n    //---------------确认预言机地址-----------------\n    if (developmentChains.includes(network.name)) {\n        const ethUsdAggregator = await deployments.get(\"MockV3Aggregator\")\n        ethUsdPriceFeedAddress = ethUsdAggregator.address\n    } else {\n        // ethUsdPriceFeedAddress的格式：0x694AA1769357215DE4FAC081bf1f309aDC325306\n        ethUsdPriceFeedAddress = networkConfig[chainId][\"ethUsdPriceFeed\"]\n    }\n\n    // log(ethUsdPriceFeedAddress);\n    //-----------------deploy-----------------------\n    const args = [ethUsdPriceFeedAddress]\n    const Minatosys = await deploy(\"Minatosys\", {\n        from: deployer,\n        args: args, //喂价地址\n        log: true,\n        waitConfirmation: network.config.blockConfirmations || 1,\n    })\n    //-------------------verify-----------------------\n    //当合约部署网络与指定的不符时会进行检查\n    if (\n        !developmentChains.includes(network.name) &&\n        process.env.ETHERSCAN_API_KEY\n    ) {\n        //verify\n        await verify(Minatosys.address, args)\n    }\n    log(\"--------------------------------------------------------\")\n}\n\nmodule.exports.tags = [\"all\", \"minatosys\"]\n\n```\n\n命令行进行本地链部署：\n\n```terminal\nPS D:\\study_test\\Minato_Sys\\hardhat-Minato> yarn hardhat deploy --network hardhat\nyarn run v1.22.21\nwarning package.json: No license field\n$ D:\\study_test\\Minato_Sys\\hardhat-Minato\\node_modules\\.bin\\hardhat deploy --network hardhat\nCompiled 1 Solidity file successfully (evm target: london).\nhardhat\nLocal network detected!Deploying mocks...\ndeploying \"MockV3Aggregator\" (tx: 0x3d732abdeda8235691578f5eae48ec57c18e6860c18196ab7b211ca8f74dce2b)...: deployed at 0x5FbDB2315678afecb367f032d93F642f64180aa3 with 569759 gas\nMocks deployed!\n--------------------------------------------------------\nDeploy Minatosys...\ndeploying \"Minatosys\" (tx: 0x1756b51c675657ec993c19959606c37e39b7ef407cfa1e84177b93f0e4449881)...: deployed at 0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512 with 839016 gas\n--------------------------------------------------------\nDone in 8.47s.\n```\n\n##### 测试网\n\n测试网的部署不需要手动配置Mock合约，我们可以直接通过喂价地址获得合约\n\n但是完成在测试网的部署之后，我们需要编写一个验证脚本，用以检查被部署的合约与我们想部署的合约是否一致，避免发生被篡改的事件。\n\n这里`Hardhat`框架有为我们提供验证方法，直接调用即可\n\n`verify:verify` 是 Hardhat 框架中的一个任务（task），它用于执行智能合约的验证过程。具体来说，这个任务会将智能合约的源代码和部署信息提交给以太坊的验证服务（如 Etherscan 或其他类似的服务）。验证服务将检查合约的源代码是否与已部署的合约匹配，以及是否包含了正确的构造函数参数。\n\n*//以上说法来自chatgpt，但是验证部分我记得有些不太清楚了，具体`Hardhat`是怎么完成的，我确认好之后会进行修改；*\n\n```javascript\n//verify.js\nconst { run } = require(\"hardhat\");\nconst verify = async (contractAddress, args) => {\n  console.log(\"Verifying Contract...\");\n  try {\n    await run(\"verify:verify\", {\n      address: contractAddress,\n      constructorArguments: args,\n    });\n  } catch (e) {\n    if (e.message.toLowerCase().includes(\"already verified\")) {\n      console.log(\"Already Verified!\");\n    } else {\n      console.log(e);\n    }\n  }\n};\nmodule.exports = { verify };\n\n```\n\n命令行进行测试网部署（以Sepolia为例）：\n\n```terminal\nPS D:\\study_test\\Minato_Sys\\hardhat-Minato> yarn hardhat deploy --network sepolia\nyarn run v1.22.21\nwarning package.json: No license field\n$ D:\\study_test\\Minato_Sys\\hardhat-Minato\\node_modules\\.bin\\hardhat deploy --network sepolia\nCompiled 1 Solidity file successfully (evm target: london).\nsepolia\nDeploy Minatosys...\ndeploying \"Minatosys\" (tx: 0x5eeadc93ad11de1fc2cec56c48aa77eb2d3775cfa2a8769cc38cd75c783f6246)...: deployed at 0x03cDbE6020084eb013b02B8d8e0A90BE018fb39E with 806890 gas\nVerifying Contract...\nUnexpectedError: An unexpected error occurred during the verification process.\nPlease report this issue to the Hardhat team.\nError Details: Connect Timeout Error\n    at Etherscan.isVerified (D:\\study_test\\Minato_Sys\\hardhat-Minato\\node_modules\\@nomicfoundation\\hardhat-verify\\src\\internal\\etherscan.ts:126:13)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at SimpleTaskDefinition.action (D:\\study_test\\Minato_Sys\\hardhat-Minato\\node_modules\\@nomicfoundation\\hardhat-verify\\src\\internal\\tasks\\etherscan.ts:101:24)\n    at Environment._runTaskDefinition (D:\\study_test\\Minato_Sys\\hardhat-Minato\\node_modules\\hardhat\\src\\internal\\core\\runtime-environment.ts:359:14)\n    at Environment.run (D:\\study_test\\Minato_Sys\\hardhat-Minato\\node_modules\\hardhat\\src\\internal\\core\\runtime-environment.ts:192:14)\n    at SimpleTaskDefinition.action (D:\\study_test\\Minato_Sys\\hardhat-Minato\\node_modules\\@nomicfoundation\\hardhat-verify\\src\\index.ts:284:9)\n    at Environment._runTaskDefinition (D:\\study_test\\Minato_Sys\\hardhat-Minato\\node_modules\\hardhat\\src\\internal\\core\\runtime-environment.ts:359:14)\n    at Environment.run (D:\\study_test\\Minato_Sys\\hardhat-Minato\\node_modules\\hardhat\\src\\internal\\core\\runtime-environment.ts:192:14)\n    at verify (D:\\study_test\\Minato_Sys\\hardhat-Minato\\utils\\verify.js:6:5)\n    at Object.module.exports [as func] (D:\\study_test\\Minato_Sys\\hardhat-Minato\\deploy\\01-deploy.js:61:7)\n--------------------------------------------------------\nDone in 85.66s.\n```\n\n### 小结\n\n至此，水门车险的合约部分就被部署完成了，个人还是很推荐使用Remix的部署方式，当然，如果你有意向深入学习使用智能合约，那Hardhat这样的框架也是非常有学习的价值\n\n\n\n\n\n","source":"_posts/minatosys_Blockchain_note.md","raw":"---\ntitle: 水门车险的开发记录（区块链）\ncategories:\n  - Web3\ndescription: \"水门车险开发过程记录\"\ndate: 2024-05-06 16:10\nthumbnail: \"img/thumbnail/minato.png\"\nexcerpt: \"该文档为水门车险的区块链部分，记录了水门车险在区块链这个模块的开发以及部署过程，语言方面使用了Solidity。语法接近js，上手较为容易。合约的部署则介绍了两种方式，Remix以及Hardhat。\"\ntags:\n    - 区块链\n    - 智能合约\n    - 以太坊\n    - Solidity\n---\n\n## 前言\n\n这个文档记录了**水门车险区块链模块**的开发过程。\n\n内容是基于区块链技术开发的一个车险系统，关于区块链的的概念详见其他markdown；\n\n这个系统并没有往实际使用的方向开发，纯粹是应付毕业设计所准备的，因此可能存在很多不合理的设计或者是奇奇怪怪的bugs，总之，一切努力只为能够通过毕设考核。\n\n整个项目暂定分成三个模块，前端、后端、区块链。\n\n```terminal\nD:.\n├─gin-minato\n├─hardhat-minato\n└─vue-minato\n```\n\n- 架构设计\n\n<img src=\"/img/minatosys_Blockchain_note/image-20240423222551537.png\" alt=\"image-20240423222551537\" style=\"zoom:67%;\" />\n\ngo ~ go ~ go！\n\n## 工具包\n\nRemix网址：https://remix.ethereum.org/\n\n测试币水龙头：https://faucets.chain.link\n\nSepolia区块链浏览器：https://sepolia.etherscan.io/\n\nChainlink官方文档：https://docs.chain.link\n\n以太坊货币换算：https://eth-converter.com/\n\nSolidity 使用文档：https://solidity-by-example.org\n\n## 区块链\n\n### 合约\n\n```solidity\n// SPDX-License-Identifier: MIT\npragma solidity 0.8.7;\n\nimport \"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\";\nimport \"./PriceConverter.sol\";\n\n// EVM, Ethereum Virtual Machine\nerror NotOwner();\n\ncontract Minatosys {\n    using PriceConverter for uint256;\n    uint256 constant minimumUsd = 0;\n    address public immutable i_owner;\n    AggregatorV3Interface public priceFeed;\n\n    constructor(address priceFeedAddress) {//构造，合约部署时需要向它传入以下参数\n        i_owner = msg.sender;\n        priceFeed = AggregatorV3Interface(priceFeedAddress);\n    }\n\n    function fund() public payable {//资金注入方法\n        require(\n            msg.value.getConversionRate(priceFeed) > 0,//判断金额是否大于0，否则会回滚交易\n            \"Didn't send enough\"\n        );\n    }\n\n    function withdraw() public onlyOwner {\n        (bool callSuccess, ) = payable(msg.sender).call{//提取资金，非合约部署账户不能调用这个方法\n            value: address(this).balance\n        }(\"\");\n        require(callSuccess, \"call failed\");\n    }\n\n    // 管理员转账\n    function withdrawToAddress(\n        address payable _to,\n        uint256 _amount\n    ) public onlyOwner {//提取资金，非合约部署账户不能调用这个方法\n        // 检查目标地址是否有效\n        require(_to != address(0), \"Invalid address\");\n        // 检查合约余额是否足够支付转账金额\n        require(address(this).balance >= _amount, \"Insufficient balance\");\n        // 使用 call 方法向目标地址发送以太币\n        // 设置发送者为合约的所有者\n        (bool callSuccess, ) = _to.call{value: _amount}(\"\");\n        // 检查调用是否成功\n        require(callSuccess, \"Call failed\");\n    }\n\n    // 莫名其妙地收到钱就执行下面两个方法\n    receive() external payable {\n        fund();\n    }\n\n    fallback() external payable {\n        fund();\n    }\n\n    // 自定义修饰符，带上这个标签的方法将只对合约发布者开放使用权限\n    modifier onlyOwner() {\n        require(\n            msg.sender == address(0) || msg.sender == i_owner,\n            \"Sender is not owner\"\n        );\n        _;\n    }\n}\n\n```\n\n库：\n\n```solidity\n//SPDX-License-Identifier: MIT\npragma solidity 0.8.7;\nimport \"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\";\n\nlibrary PriceConverter {\n    function getPrice(\n        AggregatorV3Interface priceFeed\n    ) internal view returns (uint256) {\n        //得到汇率(USD/ETH)\n        //ABIw\n        //Address 0x694AA1769357215DE4FAC081bf1f309aDC325306\n        // AggregatorV3Interface priceFeed = AggregatorV3Interface(\n        //     0x694AA1769357215DE4FAC081bf1f309aDC325306\n        // );\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\n\n        return uint256(answer * 1e10);\n    }\n\n    function getVersion() internal view returns (uint256) {\n        //获取了链外数据源的版本信息，并将其作为uint256类型返回\n        AggregatorV3Interface priceFeed = AggregatorV3Interface(\n            0x694AA1769357215DE4FAC081bf1f309aDC325306\n        );\n        return priceFeed.version();\n    }\n\n    function getConversionRate(\n        uint256 ethAmount,\n        AggregatorV3Interface priceFeed\n    ) internal view returns (uint256) {\n        uint256 ethPrice = getPrice(priceFeed);\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18;\n        return ethAmountInUsd;\n    }\n}\n\n```\n\n具体写法以及solidity的语法可以参考《Patrick Collins-区块链学习笔记》\n\n### 部署\n\n#### Remix\n\n有两种部署方法，这边强力推荐使用**Remix**，真的很方便，合约输进去可以直接部署，非常适合需求不高的合约部署，唯一缺点就是网速似乎不太理想，经常链接钱包和测试网连接不上。\n\n如果使用Remix的话，基本上到此就结束了😂输入喂价地址之后，直接deploy就行，喂价地址可以从Chainlink那里获取，此处可以试着使用Sepolia的喂价地址：`0x694AA1769357215DE4FAC081bf1f309aDC325306(这个不保真，可能会更新换代，还是建议自己去官网获取)`\n\n*值得一提的是，Patrick Collins是他们的开发者大使，被请来录制的课程并且被Chainlink_cn翻译成中文放在B站上供大家学习，内容还是很新鲜且经常更新的，值得初学者去观看。另外，他们在Github上还有一个社区，可以供大家提问，虽然我问了但是没有得到解答，不过问题不大，有总比没有强😭*\n\n<img src=\"/img/minatosys_Blockchain_note/image-20240423231604679.png\" alt=\"image-20240423231604679\" style=\"zoom:80%;\" />\n\n本项目使用了第二种方式，如下：\n\n#### Hardhat\n\nHardhat是一个轻量级的合约部署框架，优点是可以安装自己需要的插件，这对于高级开发来说是非常使用的，包括prettier这样的代码格式化插件等等；并且可以自行编写脚本，包括部署脚本以及测试脚本等等等等\n\n但是Hardhat貌似？更新起来，文档有时会跟不上，这会导致对于新手来说，可能看文档并不会有很好的体验，【差点把我折磨疯了】，\n\n即便是2年内录制的课程，实际操作时也会有所不同。因此，如果你是一名想用区块链来完成毕业设计之类的项目，强力推荐Remix。\n\nHardhat部署所需的插件以及搭建过程这里不做赘述，详情请见《Patrick Collins-区块链 笔记》，这里只简单说明部署过程以及合约内容\n\n```txt\n---\n  |-- artifacts\t\t\t#编译结果保存，包括ABI等等\n  |-- cache\t\t\t\t#Hardhat框架生成的缓存文件\n  |-- contracts\t\t\t#合约以及喂价合约等等\n  |-- deploy\t\t\t#部署合约的脚本\n  |-- deployments\t\t#已经部署的合约的相关数据，比如部署时产生的地址、交易哈希等信息\n  |-- ignition\t\t\t#Hardhat框架的一些配置文件或模板文件\n  |-- node_modules\t\t#依赖\n  |-- test\t\t\t\t#测试文件夹，包含一些测试脚本\n  |-- utils\t\t\t\t#辅助开发的工具函数或辅助脚本文件，比如verify.js等等\n  |-- package.json\t\t#依赖管理\n  |-- hardhat.config.js\t#框架配置文件\n  |-- helper-hardhat-config.js\t#辅助框架配置文件\n  |-- yarn.lock\n  \\-- README.md\n\n9 directories, 5 files\n\n```\n\n框架配置信息`hardhat.config.js`，包括编译器版本，账户私钥等等信息\n\n```javascript\nrequire(\"@nomicfoundation/hardhat-toolbox\");\nrequire(\"hardhat-deploy\");\nrequire(\"dotenv\").config();\nrequire(\"hardhat-gas-reporter\");\n/** @type import('hardhat/config').HardhatUserConfig */\nconst SEPOLIA_RPC_URL = process.env.SEPOLIA_RPC_URL;\nconst PRIVATE_KEY = process.env.PRIVATE_KEY;\nconst ETHERSCAN_API_KEY = process.env.ETHERSCAN_API_KEY;\n\nmodule.exports = {\n  solidity: {\n    compilers: [\n      {\n        version: \"0.8.7\",\n      },\n      {\n        version: \"0.6.6\",\n      },\n    ],\n  },\n  defaultNetwork: \"hardhat\",\n  networks: {\n    hardhat: {\n      chainId: 31337,\n      // gasPrice: 130000000000,\n    },\n    sepolia: {\n      url: SEPOLIA_RPC_URL,\n      accounts: [PRIVATE_KEY],\n      chainId: 11155111,\n      blockConfirmations: 6,\n    },\n  },\n  gasReporter: {\n    enabled: true,\n    currency: \"USD\",\n    outputFile: \"gas-report.txt\",\n    noColors: true,\n    // coinmarketcap: COINMARKETCAP_API_KEY,\n  },\n  etherscan: {\n    apiKey: ETHERSCAN_API_KEY,\n  },\n  namedAccounts: {\n    deployer: {\n      default: 0, // here this will by default take the first account as deployer\n      1: 0, // similarly on mainnet it will take the first account as deployer. Note though that depending on how hardhat network are configured, the account 0 on one network can be different than on another\n    },\n  },\n  mocha: {\n    timeout: 500000,\n  },\n};\n```\n\n##### 本地网\n\n也就是`Hardhat`自带的本地网络，优点是，测试币很多，可以随意霍霍，交易速度非常快而且不容易出岔子\n\n但是，本地网络是无法获取喂价合约的，换句话说Chainlink预言机在这方面并不能给予你帮助，因此，在部署之前，我们需要先部署一个虚拟的喂价合约，这里并不完全需要自己去写，在`chainlink`的`github`中仔细翻找可以找到`node_modules\\@chainlink\\contracts\\src\\v0.6\\tests\\MockV3Aggregator.sol`，因此，我们可以在喂价合约中直接引入，效果等同于复制粘贴；\n\n```solidity\n//SPDX-License-Identifier:MIT\npragma solidity ^0.6.0;\n\nimport \"@chainlink/contracts/src/v0.6/tests/MockV3Aggregator.sol\";\n\n```\n\n之后我们就可以开始着手准备部署合约的脚本了；\n\n首先，我们需要处理喂价合约以及合约的chainID，也就是用于判断合约被部署在了哪条链上\n\n```javascript\n//helper-hardhat-config.js\nconst networkConfig = {\n    31337: {\n        name: \"localhost\",\n    },\n    // Price Feed Address, values can be obtained at https://docs.chain.link/data-feeds/price-feeds/addresses\n    11155111: {\n        name: \"sepolia\",\n        ethUsdPriceFeed: \"0x694AA1769357215DE4FAC081bf1f309aDC325306\",\n    },\n}\n\nconst developmentChains = [\"hardhat\", \"localhost\"]\n\nmodule.exports = {\n    networkConfig,\n    developmentChains,\n}\n\n```\n\n先将我们自己编写的喂价合约发布到`Hardhat`链上,这样我们部署的合约就可以通过本地链上的喂价合约得到USD/ETH的汇率\n这里脚本做了一个判断，如果`chainID`为`31337`，也就是处于开发链上时，会对合约进行部署\n\n```javascript\n//00-deploy-mocks.js\n//这段是部署本地预言机\nconst { network } = require(\"hardhat\");\n\nconst DECIMALS = \"8\";\nconst INITIAL_PRICE = \"200000000000\"; // 2000\n\nmodule.exports = async ({ getNamedAccounts, deployments }) => {\n  const { deploy, log } = deployments;\n  const { deployer } = await getNamedAccounts();\n  const chainId = network.config.chainId;\n  log(network.name);\n  if (chainId == 31337) {\n    log(\"Local network detected!Deploying mocks...\");\n    await deploy(\"MockV3Aggregator\", {\n      contract: \"MockV3Aggregator\",\n      from: deployer,\n      log: true,\n      args: [DECIMALS, INITIAL_PRICE],\n    });\n    log(\"Mocks deployed!\");\n    log(\"--------------------------------------------------------\");\n  }\n};\n// 这段代码指定了当前部署脚本相关的标签。在这里，使用了两个标签：\"all\" 和 \"mocks\"。\n// \"all\" 标签： 这个标签可能用于将部署脚本与整个项目的所有部署任务关联起来。\n// 当运行 npx hardhat deploy --tags all 时，将运行所有带有 \"all\" 标签的部署任务。\n// \"mocks\" 标签： 这个标签可能用于将部署脚本与与模拟合约相关的其他部署任务关联起来。\n// 当运行 npx hardhat deploy --tags mocks 时，将运行所有带有 \"mocks\" 标签的部署任务。\n//yarn hardhat deploy --tags mocks\nmodule.exports.tags = [\"all\", \"mocks\"];\n```\n\n接着，我们需要部署**水门车险**的合约，这里是第二个脚本\n\n脚本对预言机的选择上会进行一个判断，如果是在开发链，也就是本地链上，则会使用开发链上部署的喂价合约`MockV3Aggregator`，反之就会根据chainID，从`networkConfig[chainId][\"ethUsdPriceFeed\"]`获取喂价地址；\n\n另外，如果是在非开发链上，并且以太坊API KEY被正确配置时，会触发对合约的验证。\n\n```javascript\n//01-deploy-fund-me.js\nconst {\n    networkConfig,\n    developmentChains,\n} = require(\"../helper-hardhat-config.js\")\nconst { network } = require(\"hardhat\")\nconst { verify } = require(\"../utils/verify.js\")\n\n//hre代表hardhat运行环境\n// module.exports = async (hre) => {\n//     const {getNameAccounts,deployments} = hre\n// }\n//node.js的语法糖，写法等同于上方的\nmodule.exports = async ({ getNamedAccounts, deployments }) => {\n    //将deploy和log从deployments这个对象中提取出来，等同于\n    //const deploy = deployments.deploy;\n    //const log = deployments.log\n    const { deploy, log } = deployments\n    //getNameAccounts() 返回一个包含 deployer 属性的对象，等同于\n    //const getNameAccountsResult = await getNameAccounts();\n    //const deployer = getNameAccountsResult.deployer;\n    log(\"Deploy Minatosys...\")\n    const { deployer } = await getNamedAccounts()\n    const chainId = network.config.chainId\n\n    //---------------确认预言机地址-----------------\n    if (developmentChains.includes(network.name)) {\n        const ethUsdAggregator = await deployments.get(\"MockV3Aggregator\")\n        ethUsdPriceFeedAddress = ethUsdAggregator.address\n    } else {\n        // ethUsdPriceFeedAddress的格式：0x694AA1769357215DE4FAC081bf1f309aDC325306\n        ethUsdPriceFeedAddress = networkConfig[chainId][\"ethUsdPriceFeed\"]\n    }\n\n    // log(ethUsdPriceFeedAddress);\n    //-----------------deploy-----------------------\n    const args = [ethUsdPriceFeedAddress]\n    const Minatosys = await deploy(\"Minatosys\", {\n        from: deployer,\n        args: args, //喂价地址\n        log: true,\n        waitConfirmation: network.config.blockConfirmations || 1,\n    })\n    //-------------------verify-----------------------\n    //当合约部署网络与指定的不符时会进行检查\n    if (\n        !developmentChains.includes(network.name) &&\n        process.env.ETHERSCAN_API_KEY\n    ) {\n        //verify\n        await verify(Minatosys.address, args)\n    }\n    log(\"--------------------------------------------------------\")\n}\n\nmodule.exports.tags = [\"all\", \"minatosys\"]\n\n```\n\n命令行进行本地链部署：\n\n```terminal\nPS D:\\study_test\\Minato_Sys\\hardhat-Minato> yarn hardhat deploy --network hardhat\nyarn run v1.22.21\nwarning package.json: No license field\n$ D:\\study_test\\Minato_Sys\\hardhat-Minato\\node_modules\\.bin\\hardhat deploy --network hardhat\nCompiled 1 Solidity file successfully (evm target: london).\nhardhat\nLocal network detected!Deploying mocks...\ndeploying \"MockV3Aggregator\" (tx: 0x3d732abdeda8235691578f5eae48ec57c18e6860c18196ab7b211ca8f74dce2b)...: deployed at 0x5FbDB2315678afecb367f032d93F642f64180aa3 with 569759 gas\nMocks deployed!\n--------------------------------------------------------\nDeploy Minatosys...\ndeploying \"Minatosys\" (tx: 0x1756b51c675657ec993c19959606c37e39b7ef407cfa1e84177b93f0e4449881)...: deployed at 0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512 with 839016 gas\n--------------------------------------------------------\nDone in 8.47s.\n```\n\n##### 测试网\n\n测试网的部署不需要手动配置Mock合约，我们可以直接通过喂价地址获得合约\n\n但是完成在测试网的部署之后，我们需要编写一个验证脚本，用以检查被部署的合约与我们想部署的合约是否一致，避免发生被篡改的事件。\n\n这里`Hardhat`框架有为我们提供验证方法，直接调用即可\n\n`verify:verify` 是 Hardhat 框架中的一个任务（task），它用于执行智能合约的验证过程。具体来说，这个任务会将智能合约的源代码和部署信息提交给以太坊的验证服务（如 Etherscan 或其他类似的服务）。验证服务将检查合约的源代码是否与已部署的合约匹配，以及是否包含了正确的构造函数参数。\n\n*//以上说法来自chatgpt，但是验证部分我记得有些不太清楚了，具体`Hardhat`是怎么完成的，我确认好之后会进行修改；*\n\n```javascript\n//verify.js\nconst { run } = require(\"hardhat\");\nconst verify = async (contractAddress, args) => {\n  console.log(\"Verifying Contract...\");\n  try {\n    await run(\"verify:verify\", {\n      address: contractAddress,\n      constructorArguments: args,\n    });\n  } catch (e) {\n    if (e.message.toLowerCase().includes(\"already verified\")) {\n      console.log(\"Already Verified!\");\n    } else {\n      console.log(e);\n    }\n  }\n};\nmodule.exports = { verify };\n\n```\n\n命令行进行测试网部署（以Sepolia为例）：\n\n```terminal\nPS D:\\study_test\\Minato_Sys\\hardhat-Minato> yarn hardhat deploy --network sepolia\nyarn run v1.22.21\nwarning package.json: No license field\n$ D:\\study_test\\Minato_Sys\\hardhat-Minato\\node_modules\\.bin\\hardhat deploy --network sepolia\nCompiled 1 Solidity file successfully (evm target: london).\nsepolia\nDeploy Minatosys...\ndeploying \"Minatosys\" (tx: 0x5eeadc93ad11de1fc2cec56c48aa77eb2d3775cfa2a8769cc38cd75c783f6246)...: deployed at 0x03cDbE6020084eb013b02B8d8e0A90BE018fb39E with 806890 gas\nVerifying Contract...\nUnexpectedError: An unexpected error occurred during the verification process.\nPlease report this issue to the Hardhat team.\nError Details: Connect Timeout Error\n    at Etherscan.isVerified (D:\\study_test\\Minato_Sys\\hardhat-Minato\\node_modules\\@nomicfoundation\\hardhat-verify\\src\\internal\\etherscan.ts:126:13)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at SimpleTaskDefinition.action (D:\\study_test\\Minato_Sys\\hardhat-Minato\\node_modules\\@nomicfoundation\\hardhat-verify\\src\\internal\\tasks\\etherscan.ts:101:24)\n    at Environment._runTaskDefinition (D:\\study_test\\Minato_Sys\\hardhat-Minato\\node_modules\\hardhat\\src\\internal\\core\\runtime-environment.ts:359:14)\n    at Environment.run (D:\\study_test\\Minato_Sys\\hardhat-Minato\\node_modules\\hardhat\\src\\internal\\core\\runtime-environment.ts:192:14)\n    at SimpleTaskDefinition.action (D:\\study_test\\Minato_Sys\\hardhat-Minato\\node_modules\\@nomicfoundation\\hardhat-verify\\src\\index.ts:284:9)\n    at Environment._runTaskDefinition (D:\\study_test\\Minato_Sys\\hardhat-Minato\\node_modules\\hardhat\\src\\internal\\core\\runtime-environment.ts:359:14)\n    at Environment.run (D:\\study_test\\Minato_Sys\\hardhat-Minato\\node_modules\\hardhat\\src\\internal\\core\\runtime-environment.ts:192:14)\n    at verify (D:\\study_test\\Minato_Sys\\hardhat-Minato\\utils\\verify.js:6:5)\n    at Object.module.exports [as func] (D:\\study_test\\Minato_Sys\\hardhat-Minato\\deploy\\01-deploy.js:61:7)\n--------------------------------------------------------\nDone in 85.66s.\n```\n\n### 小结\n\n至此，水门车险的合约部分就被部署完成了，个人还是很推荐使用Remix的部署方式，当然，如果你有意向深入学习使用智能合约，那Hardhat这样的框架也是非常有学习的价值\n\n\n\n\n\n","slug":"minatosys_Blockchain_note","published":1,"updated":"2024-08-24T06:20:56.114Z","comments":1,"layout":"post","photos":[],"_id":"cm0b0qx7r001kjwur1eym9scd","content":"<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>这个文档记录了<strong>水门车险区块链模块</strong>的开发过程。</p>\n<p>内容是基于区块链技术开发的一个车险系统，关于区块链的的概念详见其他markdown；</p>\n<p>这个系统并没有往实际使用的方向开发，纯粹是应付毕业设计所准备的，因此可能存在很多不合理的设计或者是奇奇怪怪的bugs，总之，一切努力只为能够通过毕设考核。</p>\n<p>整个项目暂定分成三个模块，前端、后端、区块链。</p>\n<div class=\"highlight-container\" data-rel=\"Plaintext\"><figure class=\"iseeu highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">D:.</span><br><span class=\"line\">├─gin-minato</span><br><span class=\"line\">├─hardhat-minato</span><br><span class=\"line\">└─vue-minato</span><br></pre></td></tr></table></figure></div>\n\n<ul>\n<li>架构设计</li>\n</ul>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/minatosys_Blockchain_note/image-20240423222551537.png\" alt=\"image-20240423222551537\" style=\"zoom:67%;\">\n\n<p>go ~ go ~ go！</p>\n<h2 id=\"工具包\"><a href=\"#工具包\" class=\"headerlink\" title=\"工具包\"></a>工具包</h2><p>Remix网址：<a class=\"link\" href=\"https://remix.ethereum.org/\">https://remix.ethereum.org/ <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a></p>\n<p>测试币水龙头：<a class=\"link\" href=\"https://faucets.chain.link/\">https://faucets.chain.link <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a></p>\n<p>Sepolia区块链浏览器：<a class=\"link\" href=\"https://sepolia.etherscan.io/\">https://sepolia.etherscan.io/ <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a></p>\n<p>Chainlink官方文档：<a class=\"link\" href=\"https://docs.chain.link/\">https://docs.chain.link <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a></p>\n<p>以太坊货币换算：<a class=\"link\" href=\"https://eth-converter.com/\">https://eth-converter.com/ <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a></p>\n<p>Solidity 使用文档：<a class=\"link\" href=\"https://solidity-by-example.org/\">https://solidity-by-example.org <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a></p>\n<h2 id=\"区块链\"><a href=\"#区块链\" class=\"headerlink\" title=\"区块链\"></a>区块链</h2><h3 id=\"合约\"><a href=\"#合约\" class=\"headerlink\" title=\"合约\"></a>合约</h3><div class=\"highlight-container\" data-rel=\"Plaintext\"><figure class=\"iseeu highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// SPDX-License-Identifier: MIT</span><br><span class=\"line\">pragma solidity 0.8.7;</span><br><span class=\"line\"></span><br><span class=\"line\">import \"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\";</span><br><span class=\"line\">import \"./PriceConverter.sol\";</span><br><span class=\"line\"></span><br><span class=\"line\">// EVM, Ethereum Virtual Machine</span><br><span class=\"line\">error NotOwner();</span><br><span class=\"line\"></span><br><span class=\"line\">contract Minatosys {</span><br><span class=\"line\">    using PriceConverter for uint256;</span><br><span class=\"line\">    uint256 constant minimumUsd = 0;</span><br><span class=\"line\">    address public immutable i_owner;</span><br><span class=\"line\">    AggregatorV3Interface public priceFeed;</span><br><span class=\"line\"></span><br><span class=\"line\">    constructor(address priceFeedAddress) {//构造，合约部署时需要向它传入以下参数</span><br><span class=\"line\">        i_owner = msg.sender;</span><br><span class=\"line\">        priceFeed = AggregatorV3Interface(priceFeedAddress);</span><br><span class=\"line\">    }</span><br><span class=\"line\"></span><br><span class=\"line\">    function fund() public payable {//资金注入方法</span><br><span class=\"line\">        require(</span><br><span class=\"line\">            msg.value.getConversionRate(priceFeed) &gt; 0,//判断金额是否大于0，否则会回滚交易</span><br><span class=\"line\">            \"Didn't send enough\"</span><br><span class=\"line\">        );</span><br><span class=\"line\">    }</span><br><span class=\"line\"></span><br><span class=\"line\">    function withdraw() public onlyOwner {</span><br><span class=\"line\">        (bool callSuccess, ) = payable(msg.sender).call{//提取资金，非合约部署账户不能调用这个方法</span><br><span class=\"line\">            value: address(this).balance</span><br><span class=\"line\">        }(\"\");</span><br><span class=\"line\">        require(callSuccess, \"call failed\");</span><br><span class=\"line\">    }</span><br><span class=\"line\"></span><br><span class=\"line\">    // 管理员转账</span><br><span class=\"line\">    function withdrawToAddress(</span><br><span class=\"line\">        address payable _to,</span><br><span class=\"line\">        uint256 _amount</span><br><span class=\"line\">    ) public onlyOwner {//提取资金，非合约部署账户不能调用这个方法</span><br><span class=\"line\">        // 检查目标地址是否有效</span><br><span class=\"line\">        require(_to != address(0), \"Invalid address\");</span><br><span class=\"line\">        // 检查合约余额是否足够支付转账金额</span><br><span class=\"line\">        require(address(this).balance &gt;= _amount, \"Insufficient balance\");</span><br><span class=\"line\">        // 使用 call 方法向目标地址发送以太币</span><br><span class=\"line\">        // 设置发送者为合约的所有者</span><br><span class=\"line\">        (bool callSuccess, ) = _to.call{value: _amount}(\"\");</span><br><span class=\"line\">        // 检查调用是否成功</span><br><span class=\"line\">        require(callSuccess, \"Call failed\");</span><br><span class=\"line\">    }</span><br><span class=\"line\"></span><br><span class=\"line\">    // 莫名其妙地收到钱就执行下面两个方法</span><br><span class=\"line\">    receive() external payable {</span><br><span class=\"line\">        fund();</span><br><span class=\"line\">    }</span><br><span class=\"line\"></span><br><span class=\"line\">    fallback() external payable {</span><br><span class=\"line\">        fund();</span><br><span class=\"line\">    }</span><br><span class=\"line\"></span><br><span class=\"line\">    // 自定义修饰符，带上这个标签的方法将只对合约发布者开放使用权限</span><br><span class=\"line\">    modifier onlyOwner() {</span><br><span class=\"line\">        require(</span><br><span class=\"line\">            msg.sender == address(0) || msg.sender == i_owner,</span><br><span class=\"line\">            \"Sender is not owner\"</span><br><span class=\"line\">        );</span><br><span class=\"line\">        _;</span><br><span class=\"line\">    }</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></div>\n\n<p>库：</p>\n<div class=\"highlight-container\" data-rel=\"Plaintext\"><figure class=\"iseeu highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//SPDX-License-Identifier: MIT</span><br><span class=\"line\">pragma solidity 0.8.7;</span><br><span class=\"line\">import \"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\";</span><br><span class=\"line\"></span><br><span class=\"line\">library PriceConverter {</span><br><span class=\"line\">    function getPrice(</span><br><span class=\"line\">        AggregatorV3Interface priceFeed</span><br><span class=\"line\">    ) internal view returns (uint256) {</span><br><span class=\"line\">        //得到汇率(USD/ETH)</span><br><span class=\"line\">        //ABIw</span><br><span class=\"line\">        //Address 0x694AA1769357215DE4FAC081bf1f309aDC325306</span><br><span class=\"line\">        // AggregatorV3Interface priceFeed = AggregatorV3Interface(</span><br><span class=\"line\">        //     0x694AA1769357215DE4FAC081bf1f309aDC325306</span><br><span class=\"line\">        // );</span><br><span class=\"line\">        (, int256 answer, , , ) = priceFeed.latestRoundData();</span><br><span class=\"line\"></span><br><span class=\"line\">        return uint256(answer * 1e10);</span><br><span class=\"line\">    }</span><br><span class=\"line\"></span><br><span class=\"line\">    function getVersion() internal view returns (uint256) {</span><br><span class=\"line\">        //获取了链外数据源的版本信息，并将其作为uint256类型返回</span><br><span class=\"line\">        AggregatorV3Interface priceFeed = AggregatorV3Interface(</span><br><span class=\"line\">            0x694AA1769357215DE4FAC081bf1f309aDC325306</span><br><span class=\"line\">        );</span><br><span class=\"line\">        return priceFeed.version();</span><br><span class=\"line\">    }</span><br><span class=\"line\"></span><br><span class=\"line\">    function getConversionRate(</span><br><span class=\"line\">        uint256 ethAmount,</span><br><span class=\"line\">        AggregatorV3Interface priceFeed</span><br><span class=\"line\">    ) internal view returns (uint256) {</span><br><span class=\"line\">        uint256 ethPrice = getPrice(priceFeed);</span><br><span class=\"line\">        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18;</span><br><span class=\"line\">        return ethAmountInUsd;</span><br><span class=\"line\">    }</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></div>\n\n<p>具体写法以及solidity的语法可以参考《Patrick Collins-区块链学习笔记》</p>\n<h3 id=\"部署\"><a href=\"#部署\" class=\"headerlink\" title=\"部署\"></a>部署</h3><h4 id=\"Remix\"><a href=\"#Remix\" class=\"headerlink\" title=\"Remix\"></a>Remix</h4><p>有两种部署方法，这边强力推荐使用<strong>Remix</strong>，真的很方便，合约输进去可以直接部署，非常适合需求不高的合约部署，唯一缺点就是网速似乎不太理想，经常链接钱包和测试网连接不上。</p>\n<p>如果使用Remix的话，基本上到此就结束了😂输入喂价地址之后，直接deploy就行，喂价地址可以从Chainlink那里获取，此处可以试着使用Sepolia的喂价地址：<code>0x694AA1769357215DE4FAC081bf1f309aDC325306(这个不保真，可能会更新换代，还是建议自己去官网获取)</code></p>\n<p><em>值得一提的是，Patrick Collins是他们的开发者大使，被请来录制的课程并且被Chainlink_cn翻译成中文放在B站上供大家学习，内容还是很新鲜且经常更新的，值得初学者去观看。另外，他们在Github上还有一个社区，可以供大家提问，虽然我问了但是没有得到解答，不过问题不大，有总比没有强😭</em></p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/minatosys_Blockchain_note/image-20240423231604679.png\" alt=\"image-20240423231604679\" style=\"zoom:80%;\">\n\n<p>本项目使用了第二种方式，如下：</p>\n<h4 id=\"Hardhat\"><a href=\"#Hardhat\" class=\"headerlink\" title=\"Hardhat\"></a>Hardhat</h4><p>Hardhat是一个轻量级的合约部署框架，优点是可以安装自己需要的插件，这对于高级开发来说是非常使用的，包括prettier这样的代码格式化插件等等；并且可以自行编写脚本，包括部署脚本以及测试脚本等等等等</p>\n<p>但是Hardhat貌似？更新起来，文档有时会跟不上，这会导致对于新手来说，可能看文档并不会有很好的体验，【差点把我折磨疯了】，</p>\n<p>即便是2年内录制的课程，实际操作时也会有所不同。因此，如果你是一名想用区块链来完成毕业设计之类的项目，强力推荐Remix。</p>\n<p>Hardhat部署所需的插件以及搭建过程这里不做赘述，详情请见《Patrick Collins-区块链 笔记》，这里只简单说明部署过程以及合约内容</p>\n<div class=\"highlight-container\" data-rel=\"Txt\"><figure class=\"iseeu highlight txt\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">  |-- artifacts\t\t\t#编译结果保存，包括ABI等等</span><br><span class=\"line\">  |-- cache\t\t\t\t#Hardhat框架生成的缓存文件</span><br><span class=\"line\">  |-- contracts\t\t\t#合约以及喂价合约等等</span><br><span class=\"line\">  |-- deploy\t\t\t#部署合约的脚本</span><br><span class=\"line\">  |-- deployments\t\t#已经部署的合约的相关数据，比如部署时产生的地址、交易哈希等信息</span><br><span class=\"line\">  |-- ignition\t\t\t#Hardhat框架的一些配置文件或模板文件</span><br><span class=\"line\">  |-- node_modules\t\t#依赖</span><br><span class=\"line\">  |-- test\t\t\t\t#测试文件夹，包含一些测试脚本</span><br><span class=\"line\">  |-- utils\t\t\t\t#辅助开发的工具函数或辅助脚本文件，比如verify.js等等</span><br><span class=\"line\">  |-- package.json\t\t#依赖管理</span><br><span class=\"line\">  |-- hardhat.config.js\t#框架配置文件</span><br><span class=\"line\">  |-- helper-hardhat-config.js\t#辅助框架配置文件</span><br><span class=\"line\">  |-- yarn.lock</span><br><span class=\"line\">  \\-- README.md</span><br><span class=\"line\"></span><br><span class=\"line\">9 directories, 5 files</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></div>\n\n<p>框架配置信息<code>hardhat.config.js</code>，包括编译器版本，账户私钥等等信息</p>\n<div class=\"highlight-container\" data-rel=\"Javascript\"><figure class=\"iseeu highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">require</span>(<span class=\"string\">\"@nomicfoundation/hardhat-toolbox\"</span>);</span><br><span class=\"line\"><span class=\"built_in\">require</span>(<span class=\"string\">\"hardhat-deploy\"</span>);</span><br><span class=\"line\"><span class=\"built_in\">require</span>(<span class=\"string\">\"dotenv\"</span>).<span class=\"title function_\">config</span>();</span><br><span class=\"line\"><span class=\"built_in\">require</span>(<span class=\"string\">\"hardhat-gas-reporter\"</span>);</span><br><span class=\"line\"><span class=\"comment\">/** <span class=\"doctag\">@type</span> import('hardhat/config').HardhatUserConfig */</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"variable constant_\">SEPOLIA_RPC_URL</span> = process.<span class=\"property\">env</span>.<span class=\"property\">SEPOLIA_RPC_URL</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"variable constant_\">PRIVATE_KEY</span> = process.<span class=\"property\">env</span>.<span class=\"property\">PRIVATE_KEY</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"variable constant_\">ETHERSCAN_API_KEY</span> = process.<span class=\"property\">env</span>.<span class=\"property\">ETHERSCAN_API_KEY</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">module</span>.<span class=\"property\">exports</span> = {</span><br><span class=\"line\">  <span class=\"attr\">solidity</span>: {</span><br><span class=\"line\">    <span class=\"attr\">compilers</span>: [</span><br><span class=\"line\">      {</span><br><span class=\"line\">        <span class=\"attr\">version</span>: <span class=\"string\">\"0.8.7\"</span>,</span><br><span class=\"line\">      },</span><br><span class=\"line\">      {</span><br><span class=\"line\">        <span class=\"attr\">version</span>: <span class=\"string\">\"0.6.6\"</span>,</span><br><span class=\"line\">      },</span><br><span class=\"line\">    ],</span><br><span class=\"line\">  },</span><br><span class=\"line\">  <span class=\"attr\">defaultNetwork</span>: <span class=\"string\">\"hardhat\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">networks</span>: {</span><br><span class=\"line\">    <span class=\"attr\">hardhat</span>: {</span><br><span class=\"line\">      <span class=\"attr\">chainId</span>: <span class=\"number\">31337</span>,</span><br><span class=\"line\">      <span class=\"comment\">// gasPrice: 130000000000,</span></span><br><span class=\"line\">    },</span><br><span class=\"line\">    <span class=\"attr\">sepolia</span>: {</span><br><span class=\"line\">      <span class=\"attr\">url</span>: <span class=\"variable constant_\">SEPOLIA_RPC_URL</span>,</span><br><span class=\"line\">      <span class=\"attr\">accounts</span>: [<span class=\"variable constant_\">PRIVATE_KEY</span>],</span><br><span class=\"line\">      <span class=\"attr\">chainId</span>: <span class=\"number\">11155111</span>,</span><br><span class=\"line\">      <span class=\"attr\">blockConfirmations</span>: <span class=\"number\">6</span>,</span><br><span class=\"line\">    },</span><br><span class=\"line\">  },</span><br><span class=\"line\">  <span class=\"attr\">gasReporter</span>: {</span><br><span class=\"line\">    <span class=\"attr\">enabled</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">    <span class=\"attr\">currency</span>: <span class=\"string\">\"USD\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">outputFile</span>: <span class=\"string\">\"gas-report.txt\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">noColors</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">    <span class=\"comment\">// coinmarketcap: COINMARKETCAP_API_KEY,</span></span><br><span class=\"line\">  },</span><br><span class=\"line\">  <span class=\"attr\">etherscan</span>: {</span><br><span class=\"line\">    <span class=\"attr\">apiKey</span>: <span class=\"variable constant_\">ETHERSCAN_API_KEY</span>,</span><br><span class=\"line\">  },</span><br><span class=\"line\">  <span class=\"attr\">namedAccounts</span>: {</span><br><span class=\"line\">    <span class=\"attr\">deployer</span>: {</span><br><span class=\"line\">      <span class=\"attr\">default</span>: <span class=\"number\">0</span>, <span class=\"comment\">// here this will by default take the first account as deployer</span></span><br><span class=\"line\">      <span class=\"number\">1</span>: <span class=\"number\">0</span>, <span class=\"comment\">// similarly on mainnet it will take the first account as deployer. Note though that depending on how hardhat network are configured, the account 0 on one network can be different than on another</span></span><br><span class=\"line\">    },</span><br><span class=\"line\">  },</span><br><span class=\"line\">  <span class=\"attr\">mocha</span>: {</span><br><span class=\"line\">    <span class=\"attr\">timeout</span>: <span class=\"number\">500000</span>,</span><br><span class=\"line\">  },</span><br><span class=\"line\">};</span><br></pre></td></tr></table></figure></div>\n\n<h5 id=\"本地网\"><a href=\"#本地网\" class=\"headerlink\" title=\"本地网\"></a>本地网</h5><p>也就是<code>Hardhat</code>自带的本地网络，优点是，测试币很多，可以随意霍霍，交易速度非常快而且不容易出岔子</p>\n<p>但是，本地网络是无法获取喂价合约的，换句话说Chainlink预言机在这方面并不能给予你帮助，因此，在部署之前，我们需要先部署一个虚拟的喂价合约，这里并不完全需要自己去写，在<code>chainlink</code>的<code>github</code>中仔细翻找可以找到<code>node_modules\\@chainlink\\contracts\\src\\v0.6\\tests\\MockV3Aggregator.sol</code>，因此，我们可以在喂价合约中直接引入，效果等同于复制粘贴；</p>\n<div class=\"highlight-container\" data-rel=\"Plaintext\"><figure class=\"iseeu highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//SPDX-License-Identifier:MIT</span><br><span class=\"line\">pragma solidity ^0.6.0;</span><br><span class=\"line\"></span><br><span class=\"line\">import \"@chainlink/contracts/src/v0.6/tests/MockV3Aggregator.sol\";</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></div>\n\n<p>之后我们就可以开始着手准备部署合约的脚本了；</p>\n<p>首先，我们需要处理喂价合约以及合约的chainID，也就是用于判断合约被部署在了哪条链上</p>\n<div class=\"highlight-container\" data-rel=\"Javascript\"><figure class=\"iseeu highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//helper-hardhat-config.js</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> networkConfig = {</span><br><span class=\"line\">    <span class=\"number\">31337</span>: {</span><br><span class=\"line\">        <span class=\"attr\">name</span>: <span class=\"string\">\"localhost\"</span>,</span><br><span class=\"line\">    },</span><br><span class=\"line\">    <span class=\"comment\">// Price Feed Address, values can be obtained at https://docs.chain.link/data-feeds/price-feeds/addresses</span></span><br><span class=\"line\">    <span class=\"number\">11155111</span>: {</span><br><span class=\"line\">        <span class=\"attr\">name</span>: <span class=\"string\">\"sepolia\"</span>,</span><br><span class=\"line\">        <span class=\"attr\">ethUsdPriceFeed</span>: <span class=\"string\">\"0x694AA1769357215DE4FAC081bf1f309aDC325306\"</span>,</span><br><span class=\"line\">    },</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> developmentChains = [<span class=\"string\">\"hardhat\"</span>, <span class=\"string\">\"localhost\"</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">module</span>.<span class=\"property\">exports</span> = {</span><br><span class=\"line\">    networkConfig,</span><br><span class=\"line\">    developmentChains,</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></div>\n\n<p>先将我们自己编写的喂价合约发布到<code>Hardhat</code>链上,这样我们部署的合约就可以通过本地链上的喂价合约得到USD/ETH的汇率<br>这里脚本做了一个判断，如果<code>chainID</code>为<code>31337</code>，也就是处于开发链上时，会对合约进行部署</p>\n<div class=\"highlight-container\" data-rel=\"Javascript\"><figure class=\"iseeu highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//00-deploy-mocks.js</span></span><br><span class=\"line\"><span class=\"comment\">//这段是部署本地预言机</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> { network } = <span class=\"built_in\">require</span>(<span class=\"string\">\"hardhat\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"variable constant_\">DECIMALS</span> = <span class=\"string\">\"8\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"variable constant_\">INITIAL_PRICE</span> = <span class=\"string\">\"200000000000\"</span>; <span class=\"comment\">// 2000</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">module</span>.<span class=\"property\">exports</span> = <span class=\"title function_\">async</span> ({ getNamedAccounts, deployments }) =&gt; {</span><br><span class=\"line\">  <span class=\"keyword\">const</span> { deploy, log } = deployments;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> { deployer } = <span class=\"keyword\">await</span> <span class=\"title function_\">getNamedAccounts</span>();</span><br><span class=\"line\">  <span class=\"keyword\">const</span> chainId = network.<span class=\"property\">config</span>.<span class=\"property\">chainId</span>;</span><br><span class=\"line\">  <span class=\"title function_\">log</span>(network.<span class=\"property\">name</span>);</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (chainId == <span class=\"number\">31337</span>) {</span><br><span class=\"line\">    <span class=\"title function_\">log</span>(<span class=\"string\">\"Local network detected!Deploying mocks...\"</span>);</span><br><span class=\"line\">    <span class=\"keyword\">await</span> <span class=\"title function_\">deploy</span>(<span class=\"string\">\"MockV3Aggregator\"</span>, {</span><br><span class=\"line\">      <span class=\"attr\">contract</span>: <span class=\"string\">\"MockV3Aggregator\"</span>,</span><br><span class=\"line\">      <span class=\"attr\">from</span>: deployer,</span><br><span class=\"line\">      <span class=\"attr\">log</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">      <span class=\"attr\">args</span>: [<span class=\"variable constant_\">DECIMALS</span>, <span class=\"variable constant_\">INITIAL_PRICE</span>],</span><br><span class=\"line\">    });</span><br><span class=\"line\">    <span class=\"title function_\">log</span>(<span class=\"string\">\"Mocks deployed!\"</span>);</span><br><span class=\"line\">    <span class=\"title function_\">log</span>(<span class=\"string\">\"--------------------------------------------------------\"</span>);</span><br><span class=\"line\">  }</span><br><span class=\"line\">};</span><br><span class=\"line\"><span class=\"comment\">// 这段代码指定了当前部署脚本相关的标签。在这里，使用了两个标签：\"all\" 和 \"mocks\"。</span></span><br><span class=\"line\"><span class=\"comment\">// \"all\" 标签： 这个标签可能用于将部署脚本与整个项目的所有部署任务关联起来。</span></span><br><span class=\"line\"><span class=\"comment\">// 当运行 npx hardhat deploy --tags all 时，将运行所有带有 \"all\" 标签的部署任务。</span></span><br><span class=\"line\"><span class=\"comment\">// \"mocks\" 标签： 这个标签可能用于将部署脚本与与模拟合约相关的其他部署任务关联起来。</span></span><br><span class=\"line\"><span class=\"comment\">// 当运行 npx hardhat deploy --tags mocks 时，将运行所有带有 \"mocks\" 标签的部署任务。</span></span><br><span class=\"line\"><span class=\"comment\">//yarn hardhat deploy --tags mocks</span></span><br><span class=\"line\"><span class=\"variable language_\">module</span>.<span class=\"property\">exports</span>.<span class=\"property\">tags</span> = [<span class=\"string\">\"all\"</span>, <span class=\"string\">\"mocks\"</span>];</span><br></pre></td></tr></table></figure></div>\n\n<p>接着，我们需要部署<strong>水门车险</strong>的合约，这里是第二个脚本</p>\n<p>脚本对预言机的选择上会进行一个判断，如果是在开发链，也就是本地链上，则会使用开发链上部署的喂价合约<code>MockV3Aggregator</code>，反之就会根据chainID，从<code>networkConfig[chainId][\"ethUsdPriceFeed\"]</code>获取喂价地址；</p>\n<p>另外，如果是在非开发链上，并且以太坊API KEY被正确配置时，会触发对合约的验证。</p>\n<div class=\"highlight-container\" data-rel=\"Javascript\"><figure class=\"iseeu highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//01-deploy-fund-me.js</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> {</span><br><span class=\"line\">    networkConfig,</span><br><span class=\"line\">    developmentChains,</span><br><span class=\"line\">} = <span class=\"built_in\">require</span>(<span class=\"string\">\"../helper-hardhat-config.js\"</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> { network } = <span class=\"built_in\">require</span>(<span class=\"string\">\"hardhat\"</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> { verify } = <span class=\"built_in\">require</span>(<span class=\"string\">\"../utils/verify.js\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//hre代表hardhat运行环境</span></span><br><span class=\"line\"><span class=\"comment\">// module.exports = async (hre) =&gt; {</span></span><br><span class=\"line\"><span class=\"comment\">//     const {getNameAccounts,deployments} = hre</span></span><br><span class=\"line\"><span class=\"comment\">// }</span></span><br><span class=\"line\"><span class=\"comment\">//node.js的语法糖，写法等同于上方的</span></span><br><span class=\"line\"><span class=\"variable language_\">module</span>.<span class=\"property\">exports</span> = <span class=\"title function_\">async</span> ({ getNamedAccounts, deployments }) =&gt; {</span><br><span class=\"line\">    <span class=\"comment\">//将deploy和log从deployments这个对象中提取出来，等同于</span></span><br><span class=\"line\">    <span class=\"comment\">//const deploy = deployments.deploy;</span></span><br><span class=\"line\">    <span class=\"comment\">//const log = deployments.log</span></span><br><span class=\"line\">    <span class=\"keyword\">const</span> { deploy, log } = deployments</span><br><span class=\"line\">    <span class=\"comment\">//getNameAccounts() 返回一个包含 deployer 属性的对象，等同于</span></span><br><span class=\"line\">    <span class=\"comment\">//const getNameAccountsResult = await getNameAccounts();</span></span><br><span class=\"line\">    <span class=\"comment\">//const deployer = getNameAccountsResult.deployer;</span></span><br><span class=\"line\">    <span class=\"title function_\">log</span>(<span class=\"string\">\"Deploy Minatosys...\"</span>)</span><br><span class=\"line\">    <span class=\"keyword\">const</span> { deployer } = <span class=\"keyword\">await</span> <span class=\"title function_\">getNamedAccounts</span>()</span><br><span class=\"line\">    <span class=\"keyword\">const</span> chainId = network.<span class=\"property\">config</span>.<span class=\"property\">chainId</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//---------------确认预言机地址-----------------</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (developmentChains.<span class=\"title function_\">includes</span>(network.<span class=\"property\">name</span>)) {</span><br><span class=\"line\">        <span class=\"keyword\">const</span> ethUsdAggregator = <span class=\"keyword\">await</span> deployments.<span class=\"title function_\">get</span>(<span class=\"string\">\"MockV3Aggregator\"</span>)</span><br><span class=\"line\">        ethUsdPriceFeedAddress = ethUsdAggregator.<span class=\"property\">address</span></span><br><span class=\"line\">    } <span class=\"keyword\">else</span> {</span><br><span class=\"line\">        <span class=\"comment\">// ethUsdPriceFeedAddress的格式：0x694AA1769357215DE4FAC081bf1f309aDC325306</span></span><br><span class=\"line\">        ethUsdPriceFeedAddress = networkConfig[chainId][<span class=\"string\">\"ethUsdPriceFeed\"</span>]</span><br><span class=\"line\">    }</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// log(ethUsdPriceFeedAddress);</span></span><br><span class=\"line\">    <span class=\"comment\">//-----------------deploy-----------------------</span></span><br><span class=\"line\">    <span class=\"keyword\">const</span> args = [ethUsdPriceFeedAddress]</span><br><span class=\"line\">    <span class=\"keyword\">const</span> <span class=\"title class_\">Minatosys</span> = <span class=\"keyword\">await</span> <span class=\"title function_\">deploy</span>(<span class=\"string\">\"Minatosys\"</span>, {</span><br><span class=\"line\">        <span class=\"attr\">from</span>: deployer,</span><br><span class=\"line\">        <span class=\"attr\">args</span>: args, <span class=\"comment\">//喂价地址</span></span><br><span class=\"line\">        <span class=\"attr\">log</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">        <span class=\"attr\">waitConfirmation</span>: network.<span class=\"property\">config</span>.<span class=\"property\">blockConfirmations</span> || <span class=\"number\">1</span>,</span><br><span class=\"line\">    })</span><br><span class=\"line\">    <span class=\"comment\">//-------------------verify-----------------------</span></span><br><span class=\"line\">    <span class=\"comment\">//当合约部署网络与指定的不符时会进行检查</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (</span><br><span class=\"line\">        !developmentChains.<span class=\"title function_\">includes</span>(network.<span class=\"property\">name</span>) &amp;&amp;</span><br><span class=\"line\">        process.<span class=\"property\">env</span>.<span class=\"property\">ETHERSCAN_API_KEY</span></span><br><span class=\"line\">    ) {</span><br><span class=\"line\">        <span class=\"comment\">//verify</span></span><br><span class=\"line\">        <span class=\"keyword\">await</span> <span class=\"title function_\">verify</span>(<span class=\"title class_\">Minatosys</span>.<span class=\"property\">address</span>, args)</span><br><span class=\"line\">    }</span><br><span class=\"line\">    <span class=\"title function_\">log</span>(<span class=\"string\">\"--------------------------------------------------------\"</span>)</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">module</span>.<span class=\"property\">exports</span>.<span class=\"property\">tags</span> = [<span class=\"string\">\"all\"</span>, <span class=\"string\">\"minatosys\"</span>]</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></div>\n\n<p>命令行进行本地链部署：</p>\n<div class=\"highlight-container\" data-rel=\"Plaintext\"><figure class=\"iseeu highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">PS D:\\study_test\\Minato_Sys\\hardhat-Minato&gt; yarn hardhat deploy --network hardhat</span><br><span class=\"line\">yarn run v1.22.21</span><br><span class=\"line\">warning package.json: No license field</span><br><span class=\"line\">$ D:\\study_test\\Minato_Sys\\hardhat-Minato\\node_modules\\.bin\\hardhat deploy --network hardhat</span><br><span class=\"line\">Compiled 1 Solidity file successfully (evm target: london).</span><br><span class=\"line\">hardhat</span><br><span class=\"line\">Local network detected!Deploying mocks...</span><br><span class=\"line\">deploying \"MockV3Aggregator\" (tx: 0x3d732abdeda8235691578f5eae48ec57c18e6860c18196ab7b211ca8f74dce2b)...: deployed at 0x5FbDB2315678afecb367f032d93F642f64180aa3 with 569759 gas</span><br><span class=\"line\">Mocks deployed!</span><br><span class=\"line\">--------------------------------------------------------</span><br><span class=\"line\">Deploy Minatosys...</span><br><span class=\"line\">deploying \"Minatosys\" (tx: 0x1756b51c675657ec993c19959606c37e39b7ef407cfa1e84177b93f0e4449881)...: deployed at 0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512 with 839016 gas</span><br><span class=\"line\">--------------------------------------------------------</span><br><span class=\"line\">Done in 8.47s.</span><br></pre></td></tr></table></figure></div>\n\n<h5 id=\"测试网\"><a href=\"#测试网\" class=\"headerlink\" title=\"测试网\"></a>测试网</h5><p>测试网的部署不需要手动配置Mock合约，我们可以直接通过喂价地址获得合约</p>\n<p>但是完成在测试网的部署之后，我们需要编写一个验证脚本，用以检查被部署的合约与我们想部署的合约是否一致，避免发生被篡改的事件。</p>\n<p>这里<code>Hardhat</code>框架有为我们提供验证方法，直接调用即可</p>\n<p><code>verify:verify</code> 是 Hardhat 框架中的一个任务（task），它用于执行智能合约的验证过程。具体来说，这个任务会将智能合约的源代码和部署信息提交给以太坊的验证服务（如 Etherscan 或其他类似的服务）。验证服务将检查合约的源代码是否与已部署的合约匹配，以及是否包含了正确的构造函数参数。</p>\n<p><em>//以上说法来自chatgpt，但是验证部分我记得有些不太清楚了，具体<code>Hardhat</code>是怎么完成的，我确认好之后会进行修改；</em></p>\n<div class=\"highlight-container\" data-rel=\"Javascript\"><figure class=\"iseeu highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//verify.js</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> { run } = <span class=\"built_in\">require</span>(<span class=\"string\">\"hardhat\"</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">verify</span> = <span class=\"keyword\">async</span> (<span class=\"params\">contractAddress, args</span>) =&gt; {</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">\"Verifying Contract...\"</span>);</span><br><span class=\"line\">  <span class=\"keyword\">try</span> {</span><br><span class=\"line\">    <span class=\"keyword\">await</span> <span class=\"title function_\">run</span>(<span class=\"string\">\"verify:verify\"</span>, {</span><br><span class=\"line\">      <span class=\"attr\">address</span>: contractAddress,</span><br><span class=\"line\">      <span class=\"attr\">constructorArguments</span>: args,</span><br><span class=\"line\">    });</span><br><span class=\"line\">  } <span class=\"keyword\">catch</span> (e) {</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (e.<span class=\"property\">message</span>.<span class=\"title function_\">toLowerCase</span>().<span class=\"title function_\">includes</span>(<span class=\"string\">\"already verified\"</span>)) {</span><br><span class=\"line\">      <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">\"Already Verified!\"</span>);</span><br><span class=\"line\">    } <span class=\"keyword\">else</span> {</span><br><span class=\"line\">      <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(e);</span><br><span class=\"line\">    }</span><br><span class=\"line\">  }</span><br><span class=\"line\">};</span><br><span class=\"line\"><span class=\"variable language_\">module</span>.<span class=\"property\">exports</span> = { verify };</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></div>\n\n<p>命令行进行测试网部署（以Sepolia为例）：</p>\n<div class=\"highlight-container\" data-rel=\"Plaintext\"><figure class=\"iseeu highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">PS D:\\study_test\\Minato_Sys\\hardhat-Minato&gt; yarn hardhat deploy --network sepolia</span><br><span class=\"line\">yarn run v1.22.21</span><br><span class=\"line\">warning package.json: No license field</span><br><span class=\"line\">$ D:\\study_test\\Minato_Sys\\hardhat-Minato\\node_modules\\.bin\\hardhat deploy --network sepolia</span><br><span class=\"line\">Compiled 1 Solidity file successfully (evm target: london).</span><br><span class=\"line\">sepolia</span><br><span class=\"line\">Deploy Minatosys...</span><br><span class=\"line\">deploying \"Minatosys\" (tx: 0x5eeadc93ad11de1fc2cec56c48aa77eb2d3775cfa2a8769cc38cd75c783f6246)...: deployed at 0x03cDbE6020084eb013b02B8d8e0A90BE018fb39E with 806890 gas</span><br><span class=\"line\">Verifying Contract...</span><br><span class=\"line\">UnexpectedError: An unexpected error occurred during the verification process.</span><br><span class=\"line\">Please report this issue to the Hardhat team.</span><br><span class=\"line\">Error Details: Connect Timeout Error</span><br><span class=\"line\">    at Etherscan.isVerified (D:\\study_test\\Minato_Sys\\hardhat-Minato\\node_modules\\@nomicfoundation\\hardhat-verify\\src\\internal\\etherscan.ts:126:13)</span><br><span class=\"line\">    at processTicksAndRejections (node:internal/process/task_queues:95:5)</span><br><span class=\"line\">    at SimpleTaskDefinition.action (D:\\study_test\\Minato_Sys\\hardhat-Minato\\node_modules\\@nomicfoundation\\hardhat-verify\\src\\internal\\tasks\\etherscan.ts:101:24)</span><br><span class=\"line\">    at Environment._runTaskDefinition (D:\\study_test\\Minato_Sys\\hardhat-Minato\\node_modules\\hardhat\\src\\internal\\core\\runtime-environment.ts:359:14)</span><br><span class=\"line\">    at Environment.run (D:\\study_test\\Minato_Sys\\hardhat-Minato\\node_modules\\hardhat\\src\\internal\\core\\runtime-environment.ts:192:14)</span><br><span class=\"line\">    at SimpleTaskDefinition.action (D:\\study_test\\Minato_Sys\\hardhat-Minato\\node_modules\\@nomicfoundation\\hardhat-verify\\src\\index.ts:284:9)</span><br><span class=\"line\">    at Environment._runTaskDefinition (D:\\study_test\\Minato_Sys\\hardhat-Minato\\node_modules\\hardhat\\src\\internal\\core\\runtime-environment.ts:359:14)</span><br><span class=\"line\">    at Environment.run (D:\\study_test\\Minato_Sys\\hardhat-Minato\\node_modules\\hardhat\\src\\internal\\core\\runtime-environment.ts:192:14)</span><br><span class=\"line\">    at verify (D:\\study_test\\Minato_Sys\\hardhat-Minato\\utils\\verify.js:6:5)</span><br><span class=\"line\">    at Object.module.exports [as func] (D:\\study_test\\Minato_Sys\\hardhat-Minato\\deploy\\01-deploy.js:61:7)</span><br><span class=\"line\">--------------------------------------------------------</span><br><span class=\"line\">Done in 85.66s.</span><br></pre></td></tr></table></figure></div>\n\n<h3 id=\"小结\"><a href=\"#小结\" class=\"headerlink\" title=\"小结\"></a>小结</h3><p>至此，水门车险的合约部分就被部署完成了，个人还是很推荐使用Remix的部署方式，当然，如果你有意向深入学习使用智能合约，那Hardhat这样的框架也是非常有学习的价值</p>\n","more":"<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>这个文档记录了<strong>水门车险区块链模块</strong>的开发过程。</p>\n<p>内容是基于区块链技术开发的一个车险系统，关于区块链的的概念详见其他markdown；</p>\n<p>这个系统并没有往实际使用的方向开发，纯粹是应付毕业设计所准备的，因此可能存在很多不合理的设计或者是奇奇怪怪的bugs，总之，一切努力只为能够通过毕设考核。</p>\n<p>整个项目暂定分成三个模块，前端、后端、区块链。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">D:.</span><br><span class=\"line\">├─gin-minato</span><br><span class=\"line\">├─hardhat-minato</span><br><span class=\"line\">└─vue-minato</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>架构设计</li>\n</ul>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/minatosys_Blockchain_note/image-20240423222551537.png\" alt=\"image-20240423222551537\" style=\"zoom:67%;\">\n\n<p>go ~ go ~ go！</p>\n<h2 id=\"工具包\"><a href=\"#工具包\" class=\"headerlink\" title=\"工具包\"></a>工具包</h2><p>Remix网址：<a class=\"link\" href=\"https://remix.ethereum.org/\">https://remix.ethereum.org/ <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a></p>\n<p>测试币水龙头：<a class=\"link\" href=\"https://faucets.chain.link/\">https://faucets.chain.link <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a></p>\n<p>Sepolia区块链浏览器：<a class=\"link\" href=\"https://sepolia.etherscan.io/\">https://sepolia.etherscan.io/ <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a></p>\n<p>Chainlink官方文档：<a class=\"link\" href=\"https://docs.chain.link/\">https://docs.chain.link <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a></p>\n<p>以太坊货币换算：<a class=\"link\" href=\"https://eth-converter.com/\">https://eth-converter.com/ <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a></p>\n<p>Solidity 使用文档：<a class=\"link\" href=\"https://solidity-by-example.org/\">https://solidity-by-example.org <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a></p>\n<h2 id=\"区块链\"><a href=\"#区块链\" class=\"headerlink\" title=\"区块链\"></a>区块链</h2><h3 id=\"合约\"><a href=\"#合约\" class=\"headerlink\" title=\"合约\"></a>合约</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// SPDX-License-Identifier: MIT</span><br><span class=\"line\">pragma solidity 0.8.7;</span><br><span class=\"line\"></span><br><span class=\"line\">import \"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\";</span><br><span class=\"line\">import \"./PriceConverter.sol\";</span><br><span class=\"line\"></span><br><span class=\"line\">// EVM, Ethereum Virtual Machine</span><br><span class=\"line\">error NotOwner();</span><br><span class=\"line\"></span><br><span class=\"line\">contract Minatosys {</span><br><span class=\"line\">    using PriceConverter for uint256;</span><br><span class=\"line\">    uint256 constant minimumUsd = 0;</span><br><span class=\"line\">    address public immutable i_owner;</span><br><span class=\"line\">    AggregatorV3Interface public priceFeed;</span><br><span class=\"line\"></span><br><span class=\"line\">    constructor(address priceFeedAddress) {//构造，合约部署时需要向它传入以下参数</span><br><span class=\"line\">        i_owner = msg.sender;</span><br><span class=\"line\">        priceFeed = AggregatorV3Interface(priceFeedAddress);</span><br><span class=\"line\">    }</span><br><span class=\"line\"></span><br><span class=\"line\">    function fund() public payable {//资金注入方法</span><br><span class=\"line\">        require(</span><br><span class=\"line\">            msg.value.getConversionRate(priceFeed) &gt; 0,//判断金额是否大于0，否则会回滚交易</span><br><span class=\"line\">            \"Didn't send enough\"</span><br><span class=\"line\">        );</span><br><span class=\"line\">    }</span><br><span class=\"line\"></span><br><span class=\"line\">    function withdraw() public onlyOwner {</span><br><span class=\"line\">        (bool callSuccess, ) = payable(msg.sender).call{//提取资金，非合约部署账户不能调用这个方法</span><br><span class=\"line\">            value: address(this).balance</span><br><span class=\"line\">        }(\"\");</span><br><span class=\"line\">        require(callSuccess, \"call failed\");</span><br><span class=\"line\">    }</span><br><span class=\"line\"></span><br><span class=\"line\">    // 管理员转账</span><br><span class=\"line\">    function withdrawToAddress(</span><br><span class=\"line\">        address payable _to,</span><br><span class=\"line\">        uint256 _amount</span><br><span class=\"line\">    ) public onlyOwner {//提取资金，非合约部署账户不能调用这个方法</span><br><span class=\"line\">        // 检查目标地址是否有效</span><br><span class=\"line\">        require(_to != address(0), \"Invalid address\");</span><br><span class=\"line\">        // 检查合约余额是否足够支付转账金额</span><br><span class=\"line\">        require(address(this).balance &gt;= _amount, \"Insufficient balance\");</span><br><span class=\"line\">        // 使用 call 方法向目标地址发送以太币</span><br><span class=\"line\">        // 设置发送者为合约的所有者</span><br><span class=\"line\">        (bool callSuccess, ) = _to.call{value: _amount}(\"\");</span><br><span class=\"line\">        // 检查调用是否成功</span><br><span class=\"line\">        require(callSuccess, \"Call failed\");</span><br><span class=\"line\">    }</span><br><span class=\"line\"></span><br><span class=\"line\">    // 莫名其妙地收到钱就执行下面两个方法</span><br><span class=\"line\">    receive() external payable {</span><br><span class=\"line\">        fund();</span><br><span class=\"line\">    }</span><br><span class=\"line\"></span><br><span class=\"line\">    fallback() external payable {</span><br><span class=\"line\">        fund();</span><br><span class=\"line\">    }</span><br><span class=\"line\"></span><br><span class=\"line\">    // 自定义修饰符，带上这个标签的方法将只对合约发布者开放使用权限</span><br><span class=\"line\">    modifier onlyOwner() {</span><br><span class=\"line\">        require(</span><br><span class=\"line\">            msg.sender == address(0) || msg.sender == i_owner,</span><br><span class=\"line\">            \"Sender is not owner\"</span><br><span class=\"line\">        );</span><br><span class=\"line\">        _;</span><br><span class=\"line\">    }</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>库：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//SPDX-License-Identifier: MIT</span><br><span class=\"line\">pragma solidity 0.8.7;</span><br><span class=\"line\">import \"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\";</span><br><span class=\"line\"></span><br><span class=\"line\">library PriceConverter {</span><br><span class=\"line\">    function getPrice(</span><br><span class=\"line\">        AggregatorV3Interface priceFeed</span><br><span class=\"line\">    ) internal view returns (uint256) {</span><br><span class=\"line\">        //得到汇率(USD/ETH)</span><br><span class=\"line\">        //ABIw</span><br><span class=\"line\">        //Address 0x694AA1769357215DE4FAC081bf1f309aDC325306</span><br><span class=\"line\">        // AggregatorV3Interface priceFeed = AggregatorV3Interface(</span><br><span class=\"line\">        //     0x694AA1769357215DE4FAC081bf1f309aDC325306</span><br><span class=\"line\">        // );</span><br><span class=\"line\">        (, int256 answer, , , ) = priceFeed.latestRoundData();</span><br><span class=\"line\"></span><br><span class=\"line\">        return uint256(answer * 1e10);</span><br><span class=\"line\">    }</span><br><span class=\"line\"></span><br><span class=\"line\">    function getVersion() internal view returns (uint256) {</span><br><span class=\"line\">        //获取了链外数据源的版本信息，并将其作为uint256类型返回</span><br><span class=\"line\">        AggregatorV3Interface priceFeed = AggregatorV3Interface(</span><br><span class=\"line\">            0x694AA1769357215DE4FAC081bf1f309aDC325306</span><br><span class=\"line\">        );</span><br><span class=\"line\">        return priceFeed.version();</span><br><span class=\"line\">    }</span><br><span class=\"line\"></span><br><span class=\"line\">    function getConversionRate(</span><br><span class=\"line\">        uint256 ethAmount,</span><br><span class=\"line\">        AggregatorV3Interface priceFeed</span><br><span class=\"line\">    ) internal view returns (uint256) {</span><br><span class=\"line\">        uint256 ethPrice = getPrice(priceFeed);</span><br><span class=\"line\">        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18;</span><br><span class=\"line\">        return ethAmountInUsd;</span><br><span class=\"line\">    }</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>具体写法以及solidity的语法可以参考《Patrick Collins-区块链学习笔记》</p>\n<h3 id=\"部署\"><a href=\"#部署\" class=\"headerlink\" title=\"部署\"></a>部署</h3><h4 id=\"Remix\"><a href=\"#Remix\" class=\"headerlink\" title=\"Remix\"></a>Remix</h4><p>有两种部署方法，这边强力推荐使用<strong>Remix</strong>，真的很方便，合约输进去可以直接部署，非常适合需求不高的合约部署，唯一缺点就是网速似乎不太理想，经常链接钱包和测试网连接不上。</p>\n<p>如果使用Remix的话，基本上到此就结束了😂输入喂价地址之后，直接deploy就行，喂价地址可以从Chainlink那里获取，此处可以试着使用Sepolia的喂价地址：<code>0x694AA1769357215DE4FAC081bf1f309aDC325306(这个不保真，可能会更新换代，还是建议自己去官网获取)</code></p>\n<p><em>值得一提的是，Patrick Collins是他们的开发者大使，被请来录制的课程并且被Chainlink_cn翻译成中文放在B站上供大家学习，内容还是很新鲜且经常更新的，值得初学者去观看。另外，他们在Github上还有一个社区，可以供大家提问，虽然我问了但是没有得到解答，不过问题不大，有总比没有强😭</em></p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/minatosys_Blockchain_note/image-20240423231604679.png\" alt=\"image-20240423231604679\" style=\"zoom:80%;\">\n\n<p>本项目使用了第二种方式，如下：</p>\n<h4 id=\"Hardhat\"><a href=\"#Hardhat\" class=\"headerlink\" title=\"Hardhat\"></a>Hardhat</h4><p>Hardhat是一个轻量级的合约部署框架，优点是可以安装自己需要的插件，这对于高级开发来说是非常使用的，包括prettier这样的代码格式化插件等等；并且可以自行编写脚本，包括部署脚本以及测试脚本等等等等</p>\n<p>但是Hardhat貌似？更新起来，文档有时会跟不上，这会导致对于新手来说，可能看文档并不会有很好的体验，【差点把我折磨疯了】，</p>\n<p>即便是2年内录制的课程，实际操作时也会有所不同。因此，如果你是一名想用区块链来完成毕业设计之类的项目，强力推荐Remix。</p>\n<p>Hardhat部署所需的插件以及搭建过程这里不做赘述，详情请见《Patrick Collins-区块链 笔记》，这里只简单说明部署过程以及合约内容</p>\n<figure class=\"highlight txt\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">  |-- artifacts\t\t\t#编译结果保存，包括ABI等等</span><br><span class=\"line\">  |-- cache\t\t\t\t#Hardhat框架生成的缓存文件</span><br><span class=\"line\">  |-- contracts\t\t\t#合约以及喂价合约等等</span><br><span class=\"line\">  |-- deploy\t\t\t#部署合约的脚本</span><br><span class=\"line\">  |-- deployments\t\t#已经部署的合约的相关数据，比如部署时产生的地址、交易哈希等信息</span><br><span class=\"line\">  |-- ignition\t\t\t#Hardhat框架的一些配置文件或模板文件</span><br><span class=\"line\">  |-- node_modules\t\t#依赖</span><br><span class=\"line\">  |-- test\t\t\t\t#测试文件夹，包含一些测试脚本</span><br><span class=\"line\">  |-- utils\t\t\t\t#辅助开发的工具函数或辅助脚本文件，比如verify.js等等</span><br><span class=\"line\">  |-- package.json\t\t#依赖管理</span><br><span class=\"line\">  |-- hardhat.config.js\t#框架配置文件</span><br><span class=\"line\">  |-- helper-hardhat-config.js\t#辅助框架配置文件</span><br><span class=\"line\">  |-- yarn.lock</span><br><span class=\"line\">  \\-- README.md</span><br><span class=\"line\"></span><br><span class=\"line\">9 directories, 5 files</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>框架配置信息<code>hardhat.config.js</code>，包括编译器版本，账户私钥等等信息</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">require</span>(<span class=\"string\">\"@nomicfoundation/hardhat-toolbox\"</span>);</span><br><span class=\"line\"><span class=\"built_in\">require</span>(<span class=\"string\">\"hardhat-deploy\"</span>);</span><br><span class=\"line\"><span class=\"built_in\">require</span>(<span class=\"string\">\"dotenv\"</span>).<span class=\"title function_\">config</span>();</span><br><span class=\"line\"><span class=\"built_in\">require</span>(<span class=\"string\">\"hardhat-gas-reporter\"</span>);</span><br><span class=\"line\"><span class=\"comment\">/** <span class=\"doctag\">@type</span> import('hardhat/config').HardhatUserConfig */</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"variable constant_\">SEPOLIA_RPC_URL</span> = process.<span class=\"property\">env</span>.<span class=\"property\">SEPOLIA_RPC_URL</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"variable constant_\">PRIVATE_KEY</span> = process.<span class=\"property\">env</span>.<span class=\"property\">PRIVATE_KEY</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"variable constant_\">ETHERSCAN_API_KEY</span> = process.<span class=\"property\">env</span>.<span class=\"property\">ETHERSCAN_API_KEY</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">module</span>.<span class=\"property\">exports</span> = {</span><br><span class=\"line\">  <span class=\"attr\">solidity</span>: {</span><br><span class=\"line\">    <span class=\"attr\">compilers</span>: [</span><br><span class=\"line\">      {</span><br><span class=\"line\">        <span class=\"attr\">version</span>: <span class=\"string\">\"0.8.7\"</span>,</span><br><span class=\"line\">      },</span><br><span class=\"line\">      {</span><br><span class=\"line\">        <span class=\"attr\">version</span>: <span class=\"string\">\"0.6.6\"</span>,</span><br><span class=\"line\">      },</span><br><span class=\"line\">    ],</span><br><span class=\"line\">  },</span><br><span class=\"line\">  <span class=\"attr\">defaultNetwork</span>: <span class=\"string\">\"hardhat\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">networks</span>: {</span><br><span class=\"line\">    <span class=\"attr\">hardhat</span>: {</span><br><span class=\"line\">      <span class=\"attr\">chainId</span>: <span class=\"number\">31337</span>,</span><br><span class=\"line\">      <span class=\"comment\">// gasPrice: 130000000000,</span></span><br><span class=\"line\">    },</span><br><span class=\"line\">    <span class=\"attr\">sepolia</span>: {</span><br><span class=\"line\">      <span class=\"attr\">url</span>: <span class=\"variable constant_\">SEPOLIA_RPC_URL</span>,</span><br><span class=\"line\">      <span class=\"attr\">accounts</span>: [<span class=\"variable constant_\">PRIVATE_KEY</span>],</span><br><span class=\"line\">      <span class=\"attr\">chainId</span>: <span class=\"number\">11155111</span>,</span><br><span class=\"line\">      <span class=\"attr\">blockConfirmations</span>: <span class=\"number\">6</span>,</span><br><span class=\"line\">    },</span><br><span class=\"line\">  },</span><br><span class=\"line\">  <span class=\"attr\">gasReporter</span>: {</span><br><span class=\"line\">    <span class=\"attr\">enabled</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">    <span class=\"attr\">currency</span>: <span class=\"string\">\"USD\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">outputFile</span>: <span class=\"string\">\"gas-report.txt\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">noColors</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">    <span class=\"comment\">// coinmarketcap: COINMARKETCAP_API_KEY,</span></span><br><span class=\"line\">  },</span><br><span class=\"line\">  <span class=\"attr\">etherscan</span>: {</span><br><span class=\"line\">    <span class=\"attr\">apiKey</span>: <span class=\"variable constant_\">ETHERSCAN_API_KEY</span>,</span><br><span class=\"line\">  },</span><br><span class=\"line\">  <span class=\"attr\">namedAccounts</span>: {</span><br><span class=\"line\">    <span class=\"attr\">deployer</span>: {</span><br><span class=\"line\">      <span class=\"attr\">default</span>: <span class=\"number\">0</span>, <span class=\"comment\">// here this will by default take the first account as deployer</span></span><br><span class=\"line\">      <span class=\"number\">1</span>: <span class=\"number\">0</span>, <span class=\"comment\">// similarly on mainnet it will take the first account as deployer. Note though that depending on how hardhat network are configured, the account 0 on one network can be different than on another</span></span><br><span class=\"line\">    },</span><br><span class=\"line\">  },</span><br><span class=\"line\">  <span class=\"attr\">mocha</span>: {</span><br><span class=\"line\">    <span class=\"attr\">timeout</span>: <span class=\"number\">500000</span>,</span><br><span class=\"line\">  },</span><br><span class=\"line\">};</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"本地网\"><a href=\"#本地网\" class=\"headerlink\" title=\"本地网\"></a>本地网</h5><p>也就是<code>Hardhat</code>自带的本地网络，优点是，测试币很多，可以随意霍霍，交易速度非常快而且不容易出岔子</p>\n<p>但是，本地网络是无法获取喂价合约的，换句话说Chainlink预言机在这方面并不能给予你帮助，因此，在部署之前，我们需要先部署一个虚拟的喂价合约，这里并不完全需要自己去写，在<code>chainlink</code>的<code>github</code>中仔细翻找可以找到<code>node_modules\\@chainlink\\contracts\\src\\v0.6\\tests\\MockV3Aggregator.sol</code>，因此，我们可以在喂价合约中直接引入，效果等同于复制粘贴；</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//SPDX-License-Identifier:MIT</span><br><span class=\"line\">pragma solidity ^0.6.0;</span><br><span class=\"line\"></span><br><span class=\"line\">import \"@chainlink/contracts/src/v0.6/tests/MockV3Aggregator.sol\";</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>之后我们就可以开始着手准备部署合约的脚本了；</p>\n<p>首先，我们需要处理喂价合约以及合约的chainID，也就是用于判断合约被部署在了哪条链上</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//helper-hardhat-config.js</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> networkConfig = {</span><br><span class=\"line\">    <span class=\"number\">31337</span>: {</span><br><span class=\"line\">        <span class=\"attr\">name</span>: <span class=\"string\">\"localhost\"</span>,</span><br><span class=\"line\">    },</span><br><span class=\"line\">    <span class=\"comment\">// Price Feed Address, values can be obtained at https://docs.chain.link/data-feeds/price-feeds/addresses</span></span><br><span class=\"line\">    <span class=\"number\">11155111</span>: {</span><br><span class=\"line\">        <span class=\"attr\">name</span>: <span class=\"string\">\"sepolia\"</span>,</span><br><span class=\"line\">        <span class=\"attr\">ethUsdPriceFeed</span>: <span class=\"string\">\"0x694AA1769357215DE4FAC081bf1f309aDC325306\"</span>,</span><br><span class=\"line\">    },</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> developmentChains = [<span class=\"string\">\"hardhat\"</span>, <span class=\"string\">\"localhost\"</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">module</span>.<span class=\"property\">exports</span> = {</span><br><span class=\"line\">    networkConfig,</span><br><span class=\"line\">    developmentChains,</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>先将我们自己编写的喂价合约发布到<code>Hardhat</code>链上,这样我们部署的合约就可以通过本地链上的喂价合约得到USD/ETH的汇率<br>这里脚本做了一个判断，如果<code>chainID</code>为<code>31337</code>，也就是处于开发链上时，会对合约进行部署</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//00-deploy-mocks.js</span></span><br><span class=\"line\"><span class=\"comment\">//这段是部署本地预言机</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> { network } = <span class=\"built_in\">require</span>(<span class=\"string\">\"hardhat\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"variable constant_\">DECIMALS</span> = <span class=\"string\">\"8\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"variable constant_\">INITIAL_PRICE</span> = <span class=\"string\">\"200000000000\"</span>; <span class=\"comment\">// 2000</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">module</span>.<span class=\"property\">exports</span> = <span class=\"title function_\">async</span> ({ getNamedAccounts, deployments }) =&gt; {</span><br><span class=\"line\">  <span class=\"keyword\">const</span> { deploy, log } = deployments;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> { deployer } = <span class=\"keyword\">await</span> <span class=\"title function_\">getNamedAccounts</span>();</span><br><span class=\"line\">  <span class=\"keyword\">const</span> chainId = network.<span class=\"property\">config</span>.<span class=\"property\">chainId</span>;</span><br><span class=\"line\">  <span class=\"title function_\">log</span>(network.<span class=\"property\">name</span>);</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (chainId == <span class=\"number\">31337</span>) {</span><br><span class=\"line\">    <span class=\"title function_\">log</span>(<span class=\"string\">\"Local network detected!Deploying mocks...\"</span>);</span><br><span class=\"line\">    <span class=\"keyword\">await</span> <span class=\"title function_\">deploy</span>(<span class=\"string\">\"MockV3Aggregator\"</span>, {</span><br><span class=\"line\">      <span class=\"attr\">contract</span>: <span class=\"string\">\"MockV3Aggregator\"</span>,</span><br><span class=\"line\">      <span class=\"attr\">from</span>: deployer,</span><br><span class=\"line\">      <span class=\"attr\">log</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">      <span class=\"attr\">args</span>: [<span class=\"variable constant_\">DECIMALS</span>, <span class=\"variable constant_\">INITIAL_PRICE</span>],</span><br><span class=\"line\">    });</span><br><span class=\"line\">    <span class=\"title function_\">log</span>(<span class=\"string\">\"Mocks deployed!\"</span>);</span><br><span class=\"line\">    <span class=\"title function_\">log</span>(<span class=\"string\">\"--------------------------------------------------------\"</span>);</span><br><span class=\"line\">  }</span><br><span class=\"line\">};</span><br><span class=\"line\"><span class=\"comment\">// 这段代码指定了当前部署脚本相关的标签。在这里，使用了两个标签：\"all\" 和 \"mocks\"。</span></span><br><span class=\"line\"><span class=\"comment\">// \"all\" 标签： 这个标签可能用于将部署脚本与整个项目的所有部署任务关联起来。</span></span><br><span class=\"line\"><span class=\"comment\">// 当运行 npx hardhat deploy --tags all 时，将运行所有带有 \"all\" 标签的部署任务。</span></span><br><span class=\"line\"><span class=\"comment\">// \"mocks\" 标签： 这个标签可能用于将部署脚本与与模拟合约相关的其他部署任务关联起来。</span></span><br><span class=\"line\"><span class=\"comment\">// 当运行 npx hardhat deploy --tags mocks 时，将运行所有带有 \"mocks\" 标签的部署任务。</span></span><br><span class=\"line\"><span class=\"comment\">//yarn hardhat deploy --tags mocks</span></span><br><span class=\"line\"><span class=\"variable language_\">module</span>.<span class=\"property\">exports</span>.<span class=\"property\">tags</span> = [<span class=\"string\">\"all\"</span>, <span class=\"string\">\"mocks\"</span>];</span><br></pre></td></tr></table></figure>\n\n<p>接着，我们需要部署<strong>水门车险</strong>的合约，这里是第二个脚本</p>\n<p>脚本对预言机的选择上会进行一个判断，如果是在开发链，也就是本地链上，则会使用开发链上部署的喂价合约<code>MockV3Aggregator</code>，反之就会根据chainID，从<code>networkConfig[chainId][\"ethUsdPriceFeed\"]</code>获取喂价地址；</p>\n<p>另外，如果是在非开发链上，并且以太坊API KEY被正确配置时，会触发对合约的验证。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//01-deploy-fund-me.js</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> {</span><br><span class=\"line\">    networkConfig,</span><br><span class=\"line\">    developmentChains,</span><br><span class=\"line\">} = <span class=\"built_in\">require</span>(<span class=\"string\">\"../helper-hardhat-config.js\"</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> { network } = <span class=\"built_in\">require</span>(<span class=\"string\">\"hardhat\"</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> { verify } = <span class=\"built_in\">require</span>(<span class=\"string\">\"../utils/verify.js\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//hre代表hardhat运行环境</span></span><br><span class=\"line\"><span class=\"comment\">// module.exports = async (hre) =&gt; {</span></span><br><span class=\"line\"><span class=\"comment\">//     const {getNameAccounts,deployments} = hre</span></span><br><span class=\"line\"><span class=\"comment\">// }</span></span><br><span class=\"line\"><span class=\"comment\">//node.js的语法糖，写法等同于上方的</span></span><br><span class=\"line\"><span class=\"variable language_\">module</span>.<span class=\"property\">exports</span> = <span class=\"title function_\">async</span> ({ getNamedAccounts, deployments }) =&gt; {</span><br><span class=\"line\">    <span class=\"comment\">//将deploy和log从deployments这个对象中提取出来，等同于</span></span><br><span class=\"line\">    <span class=\"comment\">//const deploy = deployments.deploy;</span></span><br><span class=\"line\">    <span class=\"comment\">//const log = deployments.log</span></span><br><span class=\"line\">    <span class=\"keyword\">const</span> { deploy, log } = deployments</span><br><span class=\"line\">    <span class=\"comment\">//getNameAccounts() 返回一个包含 deployer 属性的对象，等同于</span></span><br><span class=\"line\">    <span class=\"comment\">//const getNameAccountsResult = await getNameAccounts();</span></span><br><span class=\"line\">    <span class=\"comment\">//const deployer = getNameAccountsResult.deployer;</span></span><br><span class=\"line\">    <span class=\"title function_\">log</span>(<span class=\"string\">\"Deploy Minatosys...\"</span>)</span><br><span class=\"line\">    <span class=\"keyword\">const</span> { deployer } = <span class=\"keyword\">await</span> <span class=\"title function_\">getNamedAccounts</span>()</span><br><span class=\"line\">    <span class=\"keyword\">const</span> chainId = network.<span class=\"property\">config</span>.<span class=\"property\">chainId</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//---------------确认预言机地址-----------------</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (developmentChains.<span class=\"title function_\">includes</span>(network.<span class=\"property\">name</span>)) {</span><br><span class=\"line\">        <span class=\"keyword\">const</span> ethUsdAggregator = <span class=\"keyword\">await</span> deployments.<span class=\"title function_\">get</span>(<span class=\"string\">\"MockV3Aggregator\"</span>)</span><br><span class=\"line\">        ethUsdPriceFeedAddress = ethUsdAggregator.<span class=\"property\">address</span></span><br><span class=\"line\">    } <span class=\"keyword\">else</span> {</span><br><span class=\"line\">        <span class=\"comment\">// ethUsdPriceFeedAddress的格式：0x694AA1769357215DE4FAC081bf1f309aDC325306</span></span><br><span class=\"line\">        ethUsdPriceFeedAddress = networkConfig[chainId][<span class=\"string\">\"ethUsdPriceFeed\"</span>]</span><br><span class=\"line\">    }</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// log(ethUsdPriceFeedAddress);</span></span><br><span class=\"line\">    <span class=\"comment\">//-----------------deploy-----------------------</span></span><br><span class=\"line\">    <span class=\"keyword\">const</span> args = [ethUsdPriceFeedAddress]</span><br><span class=\"line\">    <span class=\"keyword\">const</span> <span class=\"title class_\">Minatosys</span> = <span class=\"keyword\">await</span> <span class=\"title function_\">deploy</span>(<span class=\"string\">\"Minatosys\"</span>, {</span><br><span class=\"line\">        <span class=\"attr\">from</span>: deployer,</span><br><span class=\"line\">        <span class=\"attr\">args</span>: args, <span class=\"comment\">//喂价地址</span></span><br><span class=\"line\">        <span class=\"attr\">log</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">        <span class=\"attr\">waitConfirmation</span>: network.<span class=\"property\">config</span>.<span class=\"property\">blockConfirmations</span> || <span class=\"number\">1</span>,</span><br><span class=\"line\">    })</span><br><span class=\"line\">    <span class=\"comment\">//-------------------verify-----------------------</span></span><br><span class=\"line\">    <span class=\"comment\">//当合约部署网络与指定的不符时会进行检查</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (</span><br><span class=\"line\">        !developmentChains.<span class=\"title function_\">includes</span>(network.<span class=\"property\">name</span>) &amp;&amp;</span><br><span class=\"line\">        process.<span class=\"property\">env</span>.<span class=\"property\">ETHERSCAN_API_KEY</span></span><br><span class=\"line\">    ) {</span><br><span class=\"line\">        <span class=\"comment\">//verify</span></span><br><span class=\"line\">        <span class=\"keyword\">await</span> <span class=\"title function_\">verify</span>(<span class=\"title class_\">Minatosys</span>.<span class=\"property\">address</span>, args)</span><br><span class=\"line\">    }</span><br><span class=\"line\">    <span class=\"title function_\">log</span>(<span class=\"string\">\"--------------------------------------------------------\"</span>)</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">module</span>.<span class=\"property\">exports</span>.<span class=\"property\">tags</span> = [<span class=\"string\">\"all\"</span>, <span class=\"string\">\"minatosys\"</span>]</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>命令行进行本地链部署：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">PS D:\\study_test\\Minato_Sys\\hardhat-Minato&gt; yarn hardhat deploy --network hardhat</span><br><span class=\"line\">yarn run v1.22.21</span><br><span class=\"line\">warning package.json: No license field</span><br><span class=\"line\">$ D:\\study_test\\Minato_Sys\\hardhat-Minato\\node_modules\\.bin\\hardhat deploy --network hardhat</span><br><span class=\"line\">Compiled 1 Solidity file successfully (evm target: london).</span><br><span class=\"line\">hardhat</span><br><span class=\"line\">Local network detected!Deploying mocks...</span><br><span class=\"line\">deploying \"MockV3Aggregator\" (tx: 0x3d732abdeda8235691578f5eae48ec57c18e6860c18196ab7b211ca8f74dce2b)...: deployed at 0x5FbDB2315678afecb367f032d93F642f64180aa3 with 569759 gas</span><br><span class=\"line\">Mocks deployed!</span><br><span class=\"line\">--------------------------------------------------------</span><br><span class=\"line\">Deploy Minatosys...</span><br><span class=\"line\">deploying \"Minatosys\" (tx: 0x1756b51c675657ec993c19959606c37e39b7ef407cfa1e84177b93f0e4449881)...: deployed at 0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512 with 839016 gas</span><br><span class=\"line\">--------------------------------------------------------</span><br><span class=\"line\">Done in 8.47s.</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"测试网\"><a href=\"#测试网\" class=\"headerlink\" title=\"测试网\"></a>测试网</h5><p>测试网的部署不需要手动配置Mock合约，我们可以直接通过喂价地址获得合约</p>\n<p>但是完成在测试网的部署之后，我们需要编写一个验证脚本，用以检查被部署的合约与我们想部署的合约是否一致，避免发生被篡改的事件。</p>\n<p>这里<code>Hardhat</code>框架有为我们提供验证方法，直接调用即可</p>\n<p><code>verify:verify</code> 是 Hardhat 框架中的一个任务（task），它用于执行智能合约的验证过程。具体来说，这个任务会将智能合约的源代码和部署信息提交给以太坊的验证服务（如 Etherscan 或其他类似的服务）。验证服务将检查合约的源代码是否与已部署的合约匹配，以及是否包含了正确的构造函数参数。</p>\n<p><em>//以上说法来自chatgpt，但是验证部分我记得有些不太清楚了，具体<code>Hardhat</code>是怎么完成的，我确认好之后会进行修改；</em></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//verify.js</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> { run } = <span class=\"built_in\">require</span>(<span class=\"string\">\"hardhat\"</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">verify</span> = <span class=\"keyword\">async</span> (<span class=\"params\">contractAddress, args</span>) =&gt; {</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">\"Verifying Contract...\"</span>);</span><br><span class=\"line\">  <span class=\"keyword\">try</span> {</span><br><span class=\"line\">    <span class=\"keyword\">await</span> <span class=\"title function_\">run</span>(<span class=\"string\">\"verify:verify\"</span>, {</span><br><span class=\"line\">      <span class=\"attr\">address</span>: contractAddress,</span><br><span class=\"line\">      <span class=\"attr\">constructorArguments</span>: args,</span><br><span class=\"line\">    });</span><br><span class=\"line\">  } <span class=\"keyword\">catch</span> (e) {</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (e.<span class=\"property\">message</span>.<span class=\"title function_\">toLowerCase</span>().<span class=\"title function_\">includes</span>(<span class=\"string\">\"already verified\"</span>)) {</span><br><span class=\"line\">      <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">\"Already Verified!\"</span>);</span><br><span class=\"line\">    } <span class=\"keyword\">else</span> {</span><br><span class=\"line\">      <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(e);</span><br><span class=\"line\">    }</span><br><span class=\"line\">  }</span><br><span class=\"line\">};</span><br><span class=\"line\"><span class=\"variable language_\">module</span>.<span class=\"property\">exports</span> = { verify };</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>命令行进行测试网部署（以Sepolia为例）：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">PS D:\\study_test\\Minato_Sys\\hardhat-Minato&gt; yarn hardhat deploy --network sepolia</span><br><span class=\"line\">yarn run v1.22.21</span><br><span class=\"line\">warning package.json: No license field</span><br><span class=\"line\">$ D:\\study_test\\Minato_Sys\\hardhat-Minato\\node_modules\\.bin\\hardhat deploy --network sepolia</span><br><span class=\"line\">Compiled 1 Solidity file successfully (evm target: london).</span><br><span class=\"line\">sepolia</span><br><span class=\"line\">Deploy Minatosys...</span><br><span class=\"line\">deploying \"Minatosys\" (tx: 0x5eeadc93ad11de1fc2cec56c48aa77eb2d3775cfa2a8769cc38cd75c783f6246)...: deployed at 0x03cDbE6020084eb013b02B8d8e0A90BE018fb39E with 806890 gas</span><br><span class=\"line\">Verifying Contract...</span><br><span class=\"line\">UnexpectedError: An unexpected error occurred during the verification process.</span><br><span class=\"line\">Please report this issue to the Hardhat team.</span><br><span class=\"line\">Error Details: Connect Timeout Error</span><br><span class=\"line\">    at Etherscan.isVerified (D:\\study_test\\Minato_Sys\\hardhat-Minato\\node_modules\\@nomicfoundation\\hardhat-verify\\src\\internal\\etherscan.ts:126:13)</span><br><span class=\"line\">    at processTicksAndRejections (node:internal/process/task_queues:95:5)</span><br><span class=\"line\">    at SimpleTaskDefinition.action (D:\\study_test\\Minato_Sys\\hardhat-Minato\\node_modules\\@nomicfoundation\\hardhat-verify\\src\\internal\\tasks\\etherscan.ts:101:24)</span><br><span class=\"line\">    at Environment._runTaskDefinition (D:\\study_test\\Minato_Sys\\hardhat-Minato\\node_modules\\hardhat\\src\\internal\\core\\runtime-environment.ts:359:14)</span><br><span class=\"line\">    at Environment.run (D:\\study_test\\Minato_Sys\\hardhat-Minato\\node_modules\\hardhat\\src\\internal\\core\\runtime-environment.ts:192:14)</span><br><span class=\"line\">    at SimpleTaskDefinition.action (D:\\study_test\\Minato_Sys\\hardhat-Minato\\node_modules\\@nomicfoundation\\hardhat-verify\\src\\index.ts:284:9)</span><br><span class=\"line\">    at Environment._runTaskDefinition (D:\\study_test\\Minato_Sys\\hardhat-Minato\\node_modules\\hardhat\\src\\internal\\core\\runtime-environment.ts:359:14)</span><br><span class=\"line\">    at Environment.run (D:\\study_test\\Minato_Sys\\hardhat-Minato\\node_modules\\hardhat\\src\\internal\\core\\runtime-environment.ts:192:14)</span><br><span class=\"line\">    at verify (D:\\study_test\\Minato_Sys\\hardhat-Minato\\utils\\verify.js:6:5)</span><br><span class=\"line\">    at Object.module.exports [as func] (D:\\study_test\\Minato_Sys\\hardhat-Minato\\deploy\\01-deploy.js:61:7)</span><br><span class=\"line\">--------------------------------------------------------</span><br><span class=\"line\">Done in 85.66s.</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"小结\"><a href=\"#小结\" class=\"headerlink\" title=\"小结\"></a>小结</h3><p>至此，水门车险的合约部分就被部署完成了，个人还是很推荐使用Remix的部署方式，当然，如果你有意向深入学习使用智能合约，那Hardhat这样的框架也是非常有学习的价值</p>\n"},{"title":"无锡-太湖","date":"2024-06-04T00:55:00.000Z","thumbnail":"img/thumbnail/wuxi.png","cover":"img/cover/wuxi.png","excerpt":"2024年5月26日，我、汤日成、东南DNF三人前往无锡太湖周边进行游玩，天气阴凉，适合徒步","_content":"\n## 行程记录\n\n```txt\n5月26日：\n18：00 上海火车站集合\n19：35 到达无锡\n19：55 乘坐一号线前往南禅寺\n20：00 游玩南长街，茶颜悦色1.0\n21：40 前往酒店，休息\n\n5月27日：\n8：00 集合\n8：30 吃早餐\n9：20 打车抵达蠡园公园，并购置门票\n10：30 前往鼋头渚，准备进行徒步\n10：45 抵达宝界山林公园，军嶂古道A线启动\n12：00 徒步结束\n12：20 打车抵达酒店，汤老板请客吃中饭\n14：00 前往鼋头渚风景区\n15：12 爬上鹿顶山\n16：15 乘坐轮渡前往太湖仙岛\n18：20 打车前去晚饭\n19：00 茶颜悦色2.0启动\n21：00 返回酒店\n\n5月28日：\n8：00 集合\n8：25 早饭\n9：10 打车前去惠山古镇\n11：30 打车去吃中饭，茶颜悦色3.0启动\n12：49 乘坐高铁返回\n15：33 到家\n```\n\n## 南长街\n\n<br>\n\n<img src=\"/img/wuxi_travel/4b89c957cac4bc0340105379d6c3149.png\" alt=\"4b89c957cac4bc0340105379d6c3149\" style=\"zoom: 33%;\" />\n\n<center><br>\n    南禅寺站外的一条步行街<br><br>\n    有很多各地的特色小吃以及小酒馆<br><br>\n    小酒馆之中还有驻唱的吉他手在唱歌<br><br></center>\n<img src=\"/img/wuxi_travel/635f0a2b8f0d55d73afeacf15acf14d.png\" alt=\"635f0a2b8f0d55d73afeacf15acf14d\" style=\"zoom: 33%;\" />\n\n<center><br>小吃街还是非常热闹的<br><br>即便是旅游淡季<br><br>也依然有相当多的人带着小孩在附近游玩<br><br>只是作为一个游客<br><br>我挺好奇为啥一眼看过去<br><br>好多都是其他地方的美食(・∀・(・∀・(・∀・*)<br><br></center>\n\n<img src=\"/img/wuxi_travel/b48121421dd91a5276f90bd6856e5df.png\" alt=\"b48121421dd91a5276f90bd6856e5df\" style=\"zoom: 33%;\" />\n\n<center><br>步行街个人非常喜欢，真的很步行街<br><br>两侧还有很多很适合放松的小店<br><br>建筑也大多是江南特有的白墙黑瓦<br><br></center>\n\n<img src=\"/img/wuxi_travel/0b63e55eccb17bade774d1e96d9536f.png\" alt=\"0b63e55eccb17bade774d1e96d9536f\" style=\"zoom: 33%;\" />\n\n<center><br>路边碰到的 ↑ <br><br>非常老的一个机器<br><br>所以这是为什么呢哈哈哈<br><br></center>\n\n<img src=\"/img/wuxi_travel/c12eeb504affac83d6290c9d77ffdc6.png\" alt=\"c12eeb504affac83d6290c9d77ffdc6\" style=\"zoom: 33%;\" />\n\n<center><br>在无锡喝到了长沙特产茶颜悦色<br><br>排队的人蛮多的<br><br></center>\n\n<img src=\"/img/wuxi_travel/9d4365c205960d054f77e6c999aa47f.png\" alt=\"9d4365c205960d054f77e6c999aa47f\" style=\"zoom: 33%;\" />\n\n<center><br>茶颜悦色1.0<br><br></center>\n\n<img src=\"/img/wuxi_travel/ec95c4c41b95b38a6a8bac1f6e1601b.png\" alt=\"ec95c4c41b95b38a6a8bac1f6e1601b\" style=\"zoom: 33%;\" />\n\n<center><br>非常经典的小桥流水<br><br>位于南长街的出口位置<br><br></center>\n\n<img src=\"/img/wuxi_travel/19d00734826c8aa0045369227f2f991.png\" alt=\"19d00734826c8aa0045369227f2f991\" style=\"zoom: 33%;\" />\n\n<br>\n\n## 蠡园公园\n\n<br>\n\n<img src=\"/img/wuxi_travel/62b721fd8eb56b9ecebe3d7b3a9e94e.png\" alt=\"62b721fd8eb56b9ecebe3d7b3a9e94e\" style=\"zoom: 33%;\" />\n\n<center><br>天气预报原本说今天有中雨<br><br>所以暂时取消了徒步计划<br><br>选择了先去蠡园进行游玩<br><br></center>\n\n<img src=\"/img/wuxi_travel/618cb82399ff8e5247523225e7c3295.png\" alt=\"618cb82399ff8e5247523225e7c3295\" style=\"zoom: 33%;\" />\n\n<br>\n\n<img src=\"/img/wuxi_travel/0b2f97d92d81bbdc082b15c55b8719d.png\" alt=\"0b2f97d92d81bbdc082b15c55b8719d\" style=\"zoom: 33%;\" />\n\n<br>\n\n<img src=\"/img/wuxi_travel/7652f4176a3e53757f2de430679e66a.png\" alt=\"7652f4176a3e53757f2de430679e66a\" style=\"zoom: 33%;\" />\n\n<center><br>非常神奇有没有!<br><br>到现在都没有下雨<br><br>甚至隐隐有要出太阳的迹象！<br><br>所以我们果断选择前去徒步<br><br></center>\n\n## 宝界山林公园-军嶂古道\n<center><h3>徒步路线如下</h3></center>\n\n<img src=\"/img/wuxi_travel/image-20240605135725673.png\" alt=\"image-20240605135725673\" style=\"zoom:33%;\" />\n\n<br>\n\n<img src=\"/img/wuxi_travel/75a68aa3be4521d319d2f2ace73a094.png\" alt=\"75a68aa3be4521d319d2f2ace73a094\" style=\"zoom: 33%;\" />\n\n<br>\n\n<img src=\"/img/wuxi_travel/6b140467433f8c6cabce2ef700fc0bb.png\" alt=\"6b140467433f8c6cabce2ef700fc0bb\" style=\"zoom:33%;\" />\n\n\n<center><br>路线有些偏野山的感觉<br><br>并没有人工开凿的痕迹<br><br>但是沿途可以看到有徒步团扎的飘带标记以及有人居住的场所（隐居？）<br><br>当然了，也时不时能碰到别人的小土包...<br><br></center>\n\n<img src=\"/img/wuxi_travel/6f8701a00ada2c7bf0ecfffd450d00b.png\" alt=\"6f8701a00ada2c7bf0ecfffd450d00b\" style=\"zoom:33%;\" />\n\n<br>\n\n<img src=\"/img/wuxi_travel/dc85f46992113347bf299d7aaedfd6d.png\" alt=\"dc85f46992113347bf299d7aaedfd6d\" style=\"zoom:33%;\" />\n\n<br>\n\n<img src=\"/img/wuxi_travel/fa67438411b13a560d498928e194bf8.png\" alt=\"fa67438411b13a560d498928e194bf8\" style=\"zoom:33%;\" />\n\n<br>\n\n<img src=\"/img/wuxi_travel/6ba64f8a74f8fd370d169393e0be116.png\" alt=\"6ba64f8a74f8fd370d169393e0be116\" style=\"zoom:33%;\" />\n\n<br>\n\n<img src=\"/img/wuxi_travel/df31837900c348bfd7662a540513daf.png\" alt=\"df31837900c348bfd7662a540513daf\" style=\"zoom:33%;\" />\n\n<br>\n\n<img src=\"/img/wuxi_travel/1427443a2e73c9c941f33ea93460927.png\" alt=\"1427443a2e73c9c941f33ea93460927\" style=\"zoom:33%;\" />\n\n<center><br>珈瑜的大疆<br><br></center>\n\n<img src=\"/img/wuxi_travel/a2e775fb556f3202d3430f8a788803f.png\" alt=\"a2e775fb556f3202d3430f8a788803f\" style=\"zoom:33%;\" />\n\n<center><br>众神之父请赐予我视野<br><br>走出来看到的小花↓<br><br></center>\n\n<img src=\"/img/wuxi_travel/f99b0a70d8fe594a1cb60876a89c5d0.png\" alt=\"f99b0a70d8fe594a1cb60876a89c5d0\" style=\"zoom:15%;\" />\n\n<br>\n\n<img src=\"/img/wuxi_travel/e5e782b62f70befbee201f721164abd.png\" alt=\"e5e782b62f70befbee201f721164abd\" style=\"zoom:33%;\" />\n\n<br>\n\n## 太湖仙岛\n\n<center><h3>徒步路线如下</h3></center>\n\n<img src=\"/img/wuxi_travel/4a495848762e2f1ac7a93606bbfd2a3.png\" alt=\"4a495848762e2f1ac7a93606bbfd2a3\" style=\"zoom:33%;\" />\n\n<br>\n\n<img src=\"/img/wuxi_travel/e77e651e41cfffac455256ee30a62e7.png\" alt=\"e77e651e41cfffac455256ee30a62e7\" style=\"zoom:33%;\" />\n\n<center><br>好歹是有台阶可以爬得了<br><br></center>\n\n<img src=\"/img/wuxi_travel/e10bf3fe081a0e31a17601c68bc5373.png\" alt=\"e10bf3fe081a0e31a17601c68bc5373\" style=\"zoom:33%;\" />\n\n<center><br>鹿顶山晖<br><br>在这附近有范蠡的祠堂<br><br></center>\n\n<img src=\"/img/wuxi_travel/d8627057731e73a4529c303c82ff675.png\" alt=\"d8627057731e73a4529c303c82ff675\" style=\"zoom:33%;\" />\n\n<center><br>下山碰到的一只哈基米<br><br>不过它的一只眼睛坏掉了<br><br></center>\n\n<img src=\"/img/wuxi_travel/95d6958ac2f4bdfe5576f6bd7e568c4.png\" alt=\"95d6958ac2f4bdfe5576f6bd7e568c4\" style=\"zoom:33%;\" />\n\n<center><br>坐船前往太湖仙岛<br><br>这附近有不少像这样的木帆船<br><br></center>\n\n<img src=\"/img/wuxi_travel/082e66374891cb305cb637aba10c3f1.png\" alt=\"082e66374891cb305cb637aba10c3f1\" style=\"zoom:33%;\" />\n\n<br>\n\n<img src=\"/img/wuxi_travel/8dae16d449f1457f5fce533e2dab31d.png\" alt=\"8dae16d449f1457f5fce533e2dab31d\" style=\"zoom:33%;\" />\n\n<br>\n\n<img src=\"/img/wuxi_travel/1590570e99863f157b79663b746aa71.png\" alt=\"1590570e99863f157b79663b746aa71\" style=\"zoom:33%;\" />\n\n<br>\n\n<img src=\"/img/wuxi_travel/08ba68d5c6cdcd8d8fed92638f6831e.png\" alt=\"08ba68d5c6cdcd8d8fed92638f6831e\" style=\"zoom:33%;\" />\n\n<center><br>雨停了，正好赶上夕阳还有彩虹<br><br></center>\n\n<img src=\"/img/wuxi_travel/932115e476bfe0ce837efe884767298.png\" alt=\"932115e476bfe0ce837efe884767298\" style=\"zoom:33%;\" />\n\n<br>\n\n## 惠山古镇\n\n<br>\n\n<img src=\"/img/wuxi_travel/958626e2f2af371925aef1288d50b0a.png\" alt=\"958626e2f2af371925aef1288d50b0a\" style=\"zoom:33%;\" />\n\n<center><h3>鸟瞰图</h3></center>\n\n<img src=\"/img/wuxi_travel/49f67c697ac74de2f1dc938fe5f5007.jpg\" alt=\"49f67c697ac74de2f1dc938fe5f5007\" style=\"zoom: 20%;\" />\n\n<center><br>BY 东南DNF<br><br></center>\n\n<img src=\"/img/wuxi_travel/ee0d47a4f62780f85d318749fc25a8f.png\" alt=\"ee0d47a4f62780f85d318749fc25a8f\" style=\"zoom:33%;\" />\n\n<center><br>这幅窗很有意思<br>像画一样<br><br></center>\n\n<img src=\"/img/wuxi_travel/02767365218acc958e8136d77decad8.png\" alt=\"02767365218acc958e8136d77decad8\" style=\"zoom:25%;\" />\n\n<br>\n\n## 无锡特色小吃\n\n<br>\n\n<img src=\"/img/wuxi_travel/97dea71c2818e9e05ffde08045531b4.jpg\" alt=\"97dea71c2818e9e05ffde08045531b4\" style=\"zoom:12.7%;\" />\n\n<br>\n\n<img src=\"/img/wuxi_travel/252625631f0c6b7aa772de90aec5d2c.png\" alt=\"252625631f0c6b7aa772de90aec5d2c\" style=\"zoom: 33%;\" />\n\n<center><br>美兰饼，有点像肉馅的麻薯，咸口的<br><br></center>\n\n<img src=\"/img/wuxi_travel/1d904be0143789bacf088db2455ed31.png\" alt=\"1d904be0143789bacf088db2455ed31\" style=\"zoom: 33%;\" />\n\n<center><br>桂花糖芋头<br><br></center>\n\n<img src=\"/img/wuxi_travel/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20240529122839.jpg\" alt=\"微信图片_20240529122839\" style=\"zoom:7%;\" />\n\n<center><br>油馄饨<br><br></center>\n\n<img src=\"/img/wuxi_travel/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20240529122852.jpg\" alt=\"微信图片_20240529122852\" style=\"zoom:16%;\" />\n\n<center><br>太湖白鱼<br><br></center>\n\n<img src=\"/img/wuxi_travel/c46d2fb753b96b77cca1985ccf7d70d.png\" alt=\"c46d2fb753b96b77cca1985ccf7d70d\" style=\"zoom:33%;\" />\n\n<center><br>茶颜悦色2.0<br><br></center>\n","source":"_posts/wuxi_travel.md","raw":"---\ntitle: 无锡-太湖\ncategories:\n  - 生活记录\ndate: 2024-06-04 8:55\nthumbnail: \"img/thumbnail/wuxi.png\"\ncover: \"img/cover/wuxi.png\"\nexcerpt: \"2024年5月26日，我、汤日成、东南DNF三人前往无锡太湖周边进行游玩，天气阴凉，适合徒步\"\ntags:\n    - 旅途\n---\n\n## 行程记录\n\n```txt\n5月26日：\n18：00 上海火车站集合\n19：35 到达无锡\n19：55 乘坐一号线前往南禅寺\n20：00 游玩南长街，茶颜悦色1.0\n21：40 前往酒店，休息\n\n5月27日：\n8：00 集合\n8：30 吃早餐\n9：20 打车抵达蠡园公园，并购置门票\n10：30 前往鼋头渚，准备进行徒步\n10：45 抵达宝界山林公园，军嶂古道A线启动\n12：00 徒步结束\n12：20 打车抵达酒店，汤老板请客吃中饭\n14：00 前往鼋头渚风景区\n15：12 爬上鹿顶山\n16：15 乘坐轮渡前往太湖仙岛\n18：20 打车前去晚饭\n19：00 茶颜悦色2.0启动\n21：00 返回酒店\n\n5月28日：\n8：00 集合\n8：25 早饭\n9：10 打车前去惠山古镇\n11：30 打车去吃中饭，茶颜悦色3.0启动\n12：49 乘坐高铁返回\n15：33 到家\n```\n\n## 南长街\n\n<br>\n\n<img src=\"/img/wuxi_travel/4b89c957cac4bc0340105379d6c3149.png\" alt=\"4b89c957cac4bc0340105379d6c3149\" style=\"zoom: 33%;\" />\n\n<center><br>\n    南禅寺站外的一条步行街<br><br>\n    有很多各地的特色小吃以及小酒馆<br><br>\n    小酒馆之中还有驻唱的吉他手在唱歌<br><br></center>\n<img src=\"/img/wuxi_travel/635f0a2b8f0d55d73afeacf15acf14d.png\" alt=\"635f0a2b8f0d55d73afeacf15acf14d\" style=\"zoom: 33%;\" />\n\n<center><br>小吃街还是非常热闹的<br><br>即便是旅游淡季<br><br>也依然有相当多的人带着小孩在附近游玩<br><br>只是作为一个游客<br><br>我挺好奇为啥一眼看过去<br><br>好多都是其他地方的美食(・∀・(・∀・(・∀・*)<br><br></center>\n\n<img src=\"/img/wuxi_travel/b48121421dd91a5276f90bd6856e5df.png\" alt=\"b48121421dd91a5276f90bd6856e5df\" style=\"zoom: 33%;\" />\n\n<center><br>步行街个人非常喜欢，真的很步行街<br><br>两侧还有很多很适合放松的小店<br><br>建筑也大多是江南特有的白墙黑瓦<br><br></center>\n\n<img src=\"/img/wuxi_travel/0b63e55eccb17bade774d1e96d9536f.png\" alt=\"0b63e55eccb17bade774d1e96d9536f\" style=\"zoom: 33%;\" />\n\n<center><br>路边碰到的 ↑ <br><br>非常老的一个机器<br><br>所以这是为什么呢哈哈哈<br><br></center>\n\n<img src=\"/img/wuxi_travel/c12eeb504affac83d6290c9d77ffdc6.png\" alt=\"c12eeb504affac83d6290c9d77ffdc6\" style=\"zoom: 33%;\" />\n\n<center><br>在无锡喝到了长沙特产茶颜悦色<br><br>排队的人蛮多的<br><br></center>\n\n<img src=\"/img/wuxi_travel/9d4365c205960d054f77e6c999aa47f.png\" alt=\"9d4365c205960d054f77e6c999aa47f\" style=\"zoom: 33%;\" />\n\n<center><br>茶颜悦色1.0<br><br></center>\n\n<img src=\"/img/wuxi_travel/ec95c4c41b95b38a6a8bac1f6e1601b.png\" alt=\"ec95c4c41b95b38a6a8bac1f6e1601b\" style=\"zoom: 33%;\" />\n\n<center><br>非常经典的小桥流水<br><br>位于南长街的出口位置<br><br></center>\n\n<img src=\"/img/wuxi_travel/19d00734826c8aa0045369227f2f991.png\" alt=\"19d00734826c8aa0045369227f2f991\" style=\"zoom: 33%;\" />\n\n<br>\n\n## 蠡园公园\n\n<br>\n\n<img src=\"/img/wuxi_travel/62b721fd8eb56b9ecebe3d7b3a9e94e.png\" alt=\"62b721fd8eb56b9ecebe3d7b3a9e94e\" style=\"zoom: 33%;\" />\n\n<center><br>天气预报原本说今天有中雨<br><br>所以暂时取消了徒步计划<br><br>选择了先去蠡园进行游玩<br><br></center>\n\n<img src=\"/img/wuxi_travel/618cb82399ff8e5247523225e7c3295.png\" alt=\"618cb82399ff8e5247523225e7c3295\" style=\"zoom: 33%;\" />\n\n<br>\n\n<img src=\"/img/wuxi_travel/0b2f97d92d81bbdc082b15c55b8719d.png\" alt=\"0b2f97d92d81bbdc082b15c55b8719d\" style=\"zoom: 33%;\" />\n\n<br>\n\n<img src=\"/img/wuxi_travel/7652f4176a3e53757f2de430679e66a.png\" alt=\"7652f4176a3e53757f2de430679e66a\" style=\"zoom: 33%;\" />\n\n<center><br>非常神奇有没有!<br><br>到现在都没有下雨<br><br>甚至隐隐有要出太阳的迹象！<br><br>所以我们果断选择前去徒步<br><br></center>\n\n## 宝界山林公园-军嶂古道\n<center><h3>徒步路线如下</h3></center>\n\n<img src=\"/img/wuxi_travel/image-20240605135725673.png\" alt=\"image-20240605135725673\" style=\"zoom:33%;\" />\n\n<br>\n\n<img src=\"/img/wuxi_travel/75a68aa3be4521d319d2f2ace73a094.png\" alt=\"75a68aa3be4521d319d2f2ace73a094\" style=\"zoom: 33%;\" />\n\n<br>\n\n<img src=\"/img/wuxi_travel/6b140467433f8c6cabce2ef700fc0bb.png\" alt=\"6b140467433f8c6cabce2ef700fc0bb\" style=\"zoom:33%;\" />\n\n\n<center><br>路线有些偏野山的感觉<br><br>并没有人工开凿的痕迹<br><br>但是沿途可以看到有徒步团扎的飘带标记以及有人居住的场所（隐居？）<br><br>当然了，也时不时能碰到别人的小土包...<br><br></center>\n\n<img src=\"/img/wuxi_travel/6f8701a00ada2c7bf0ecfffd450d00b.png\" alt=\"6f8701a00ada2c7bf0ecfffd450d00b\" style=\"zoom:33%;\" />\n\n<br>\n\n<img src=\"/img/wuxi_travel/dc85f46992113347bf299d7aaedfd6d.png\" alt=\"dc85f46992113347bf299d7aaedfd6d\" style=\"zoom:33%;\" />\n\n<br>\n\n<img src=\"/img/wuxi_travel/fa67438411b13a560d498928e194bf8.png\" alt=\"fa67438411b13a560d498928e194bf8\" style=\"zoom:33%;\" />\n\n<br>\n\n<img src=\"/img/wuxi_travel/6ba64f8a74f8fd370d169393e0be116.png\" alt=\"6ba64f8a74f8fd370d169393e0be116\" style=\"zoom:33%;\" />\n\n<br>\n\n<img src=\"/img/wuxi_travel/df31837900c348bfd7662a540513daf.png\" alt=\"df31837900c348bfd7662a540513daf\" style=\"zoom:33%;\" />\n\n<br>\n\n<img src=\"/img/wuxi_travel/1427443a2e73c9c941f33ea93460927.png\" alt=\"1427443a2e73c9c941f33ea93460927\" style=\"zoom:33%;\" />\n\n<center><br>珈瑜的大疆<br><br></center>\n\n<img src=\"/img/wuxi_travel/a2e775fb556f3202d3430f8a788803f.png\" alt=\"a2e775fb556f3202d3430f8a788803f\" style=\"zoom:33%;\" />\n\n<center><br>众神之父请赐予我视野<br><br>走出来看到的小花↓<br><br></center>\n\n<img src=\"/img/wuxi_travel/f99b0a70d8fe594a1cb60876a89c5d0.png\" alt=\"f99b0a70d8fe594a1cb60876a89c5d0\" style=\"zoom:15%;\" />\n\n<br>\n\n<img src=\"/img/wuxi_travel/e5e782b62f70befbee201f721164abd.png\" alt=\"e5e782b62f70befbee201f721164abd\" style=\"zoom:33%;\" />\n\n<br>\n\n## 太湖仙岛\n\n<center><h3>徒步路线如下</h3></center>\n\n<img src=\"/img/wuxi_travel/4a495848762e2f1ac7a93606bbfd2a3.png\" alt=\"4a495848762e2f1ac7a93606bbfd2a3\" style=\"zoom:33%;\" />\n\n<br>\n\n<img src=\"/img/wuxi_travel/e77e651e41cfffac455256ee30a62e7.png\" alt=\"e77e651e41cfffac455256ee30a62e7\" style=\"zoom:33%;\" />\n\n<center><br>好歹是有台阶可以爬得了<br><br></center>\n\n<img src=\"/img/wuxi_travel/e10bf3fe081a0e31a17601c68bc5373.png\" alt=\"e10bf3fe081a0e31a17601c68bc5373\" style=\"zoom:33%;\" />\n\n<center><br>鹿顶山晖<br><br>在这附近有范蠡的祠堂<br><br></center>\n\n<img src=\"/img/wuxi_travel/d8627057731e73a4529c303c82ff675.png\" alt=\"d8627057731e73a4529c303c82ff675\" style=\"zoom:33%;\" />\n\n<center><br>下山碰到的一只哈基米<br><br>不过它的一只眼睛坏掉了<br><br></center>\n\n<img src=\"/img/wuxi_travel/95d6958ac2f4bdfe5576f6bd7e568c4.png\" alt=\"95d6958ac2f4bdfe5576f6bd7e568c4\" style=\"zoom:33%;\" />\n\n<center><br>坐船前往太湖仙岛<br><br>这附近有不少像这样的木帆船<br><br></center>\n\n<img src=\"/img/wuxi_travel/082e66374891cb305cb637aba10c3f1.png\" alt=\"082e66374891cb305cb637aba10c3f1\" style=\"zoom:33%;\" />\n\n<br>\n\n<img src=\"/img/wuxi_travel/8dae16d449f1457f5fce533e2dab31d.png\" alt=\"8dae16d449f1457f5fce533e2dab31d\" style=\"zoom:33%;\" />\n\n<br>\n\n<img src=\"/img/wuxi_travel/1590570e99863f157b79663b746aa71.png\" alt=\"1590570e99863f157b79663b746aa71\" style=\"zoom:33%;\" />\n\n<br>\n\n<img src=\"/img/wuxi_travel/08ba68d5c6cdcd8d8fed92638f6831e.png\" alt=\"08ba68d5c6cdcd8d8fed92638f6831e\" style=\"zoom:33%;\" />\n\n<center><br>雨停了，正好赶上夕阳还有彩虹<br><br></center>\n\n<img src=\"/img/wuxi_travel/932115e476bfe0ce837efe884767298.png\" alt=\"932115e476bfe0ce837efe884767298\" style=\"zoom:33%;\" />\n\n<br>\n\n## 惠山古镇\n\n<br>\n\n<img src=\"/img/wuxi_travel/958626e2f2af371925aef1288d50b0a.png\" alt=\"958626e2f2af371925aef1288d50b0a\" style=\"zoom:33%;\" />\n\n<center><h3>鸟瞰图</h3></center>\n\n<img src=\"/img/wuxi_travel/49f67c697ac74de2f1dc938fe5f5007.jpg\" alt=\"49f67c697ac74de2f1dc938fe5f5007\" style=\"zoom: 20%;\" />\n\n<center><br>BY 东南DNF<br><br></center>\n\n<img src=\"/img/wuxi_travel/ee0d47a4f62780f85d318749fc25a8f.png\" alt=\"ee0d47a4f62780f85d318749fc25a8f\" style=\"zoom:33%;\" />\n\n<center><br>这幅窗很有意思<br>像画一样<br><br></center>\n\n<img src=\"/img/wuxi_travel/02767365218acc958e8136d77decad8.png\" alt=\"02767365218acc958e8136d77decad8\" style=\"zoom:25%;\" />\n\n<br>\n\n## 无锡特色小吃\n\n<br>\n\n<img src=\"/img/wuxi_travel/97dea71c2818e9e05ffde08045531b4.jpg\" alt=\"97dea71c2818e9e05ffde08045531b4\" style=\"zoom:12.7%;\" />\n\n<br>\n\n<img src=\"/img/wuxi_travel/252625631f0c6b7aa772de90aec5d2c.png\" alt=\"252625631f0c6b7aa772de90aec5d2c\" style=\"zoom: 33%;\" />\n\n<center><br>美兰饼，有点像肉馅的麻薯，咸口的<br><br></center>\n\n<img src=\"/img/wuxi_travel/1d904be0143789bacf088db2455ed31.png\" alt=\"1d904be0143789bacf088db2455ed31\" style=\"zoom: 33%;\" />\n\n<center><br>桂花糖芋头<br><br></center>\n\n<img src=\"/img/wuxi_travel/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20240529122839.jpg\" alt=\"微信图片_20240529122839\" style=\"zoom:7%;\" />\n\n<center><br>油馄饨<br><br></center>\n\n<img src=\"/img/wuxi_travel/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20240529122852.jpg\" alt=\"微信图片_20240529122852\" style=\"zoom:16%;\" />\n\n<center><br>太湖白鱼<br><br></center>\n\n<img src=\"/img/wuxi_travel/c46d2fb753b96b77cca1985ccf7d70d.png\" alt=\"c46d2fb753b96b77cca1985ccf7d70d\" style=\"zoom:33%;\" />\n\n<center><br>茶颜悦色2.0<br><br></center>\n","slug":"wuxi_travel","published":1,"updated":"2024-08-24T08:08:44.909Z","comments":1,"layout":"post","photos":[],"_id":"cm0b0qx7s001ljwurgkvs7mf8","content":"<h2 id=\"行程记录\"><a href=\"#行程记录\" class=\"headerlink\" title=\"行程记录\"></a>行程记录</h2><div class=\"highlight-container\" data-rel=\"Txt\"><figure class=\"iseeu highlight txt\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">5月26日：</span><br><span class=\"line\">18：00 上海火车站集合</span><br><span class=\"line\">19：35 到达无锡</span><br><span class=\"line\">19：55 乘坐一号线前往南禅寺</span><br><span class=\"line\">20：00 游玩南长街，茶颜悦色1.0</span><br><span class=\"line\">21：40 前往酒店，休息</span><br><span class=\"line\"></span><br><span class=\"line\">5月27日：</span><br><span class=\"line\">8：00 集合</span><br><span class=\"line\">8：30 吃早餐</span><br><span class=\"line\">9：20 打车抵达蠡园公园，并购置门票</span><br><span class=\"line\">10：30 前往鼋头渚，准备进行徒步</span><br><span class=\"line\">10：45 抵达宝界山林公园，军嶂古道A线启动</span><br><span class=\"line\">12：00 徒步结束</span><br><span class=\"line\">12：20 打车抵达酒店，汤老板请客吃中饭</span><br><span class=\"line\">14：00 前往鼋头渚风景区</span><br><span class=\"line\">15：12 爬上鹿顶山</span><br><span class=\"line\">16：15 乘坐轮渡前往太湖仙岛</span><br><span class=\"line\">18：20 打车前去晚饭</span><br><span class=\"line\">19：00 茶颜悦色2.0启动</span><br><span class=\"line\">21：00 返回酒店</span><br><span class=\"line\"></span><br><span class=\"line\">5月28日：</span><br><span class=\"line\">8：00 集合</span><br><span class=\"line\">8：25 早饭</span><br><span class=\"line\">9：10 打车前去惠山古镇</span><br><span class=\"line\">11：30 打车去吃中饭，茶颜悦色3.0启动</span><br><span class=\"line\">12：49 乘坐高铁返回</span><br><span class=\"line\">15：33 到家</span><br></pre></td></tr></table></figure></div>\n\n<h2 id=\"南长街\"><a href=\"#南长街\" class=\"headerlink\" title=\"南长街\"></a>南长街</h2><br>\n\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/wuxi_travel/4b89c957cac4bc0340105379d6c3149.png\" alt=\"4b89c957cac4bc0340105379d6c3149\" style=\"zoom: 33%;\">\n\n<center><br>\n    南禅寺站外的一条步行街<br><br>\n    有很多各地的特色小吃以及小酒馆<br><br>\n    小酒馆之中还有驻唱的吉他手在唱歌<br><br></center>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/wuxi_travel/635f0a2b8f0d55d73afeacf15acf14d.png\" alt=\"635f0a2b8f0d55d73afeacf15acf14d\" style=\"zoom: 33%;\">\n\n<center><br>小吃街还是非常热闹的<br><br>即便是旅游淡季<br><br>也依然有相当多的人带着小孩在附近游玩<br><br>只是作为一个游客<br><br>我挺好奇为啥一眼看过去<br><br>好多都是其他地方的美食(・∀・(・∀・(・∀・*)<br><br></center>\n\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/wuxi_travel/b48121421dd91a5276f90bd6856e5df.png\" alt=\"b48121421dd91a5276f90bd6856e5df\" style=\"zoom: 33%;\">\n\n<center><br>步行街个人非常喜欢，真的很步行街<br><br>两侧还有很多很适合放松的小店<br><br>建筑也大多是江南特有的白墙黑瓦<br><br></center>\n\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/wuxi_travel/0b63e55eccb17bade774d1e96d9536f.png\" alt=\"0b63e55eccb17bade774d1e96d9536f\" style=\"zoom: 33%;\">\n\n<center><br>路边碰到的 ↑ <br><br>非常老的一个机器<br><br>所以这是为什么呢哈哈哈<br><br></center>\n\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/wuxi_travel/c12eeb504affac83d6290c9d77ffdc6.png\" alt=\"c12eeb504affac83d6290c9d77ffdc6\" style=\"zoom: 33%;\">\n\n<center><br>在无锡喝到了长沙特产茶颜悦色<br><br>排队的人蛮多的<br><br></center>\n\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/wuxi_travel/9d4365c205960d054f77e6c999aa47f.png\" alt=\"9d4365c205960d054f77e6c999aa47f\" style=\"zoom: 33%;\">\n\n<center><br>茶颜悦色1.0<br><br></center>\n\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/wuxi_travel/ec95c4c41b95b38a6a8bac1f6e1601b.png\" alt=\"ec95c4c41b95b38a6a8bac1f6e1601b\" style=\"zoom: 33%;\">\n\n<center><br>非常经典的小桥流水<br><br>位于南长街的出口位置<br><br></center>\n\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/wuxi_travel/19d00734826c8aa0045369227f2f991.png\" alt=\"19d00734826c8aa0045369227f2f991\" style=\"zoom: 33%;\">\n\n<br>\n\n<h2 id=\"蠡园公园\"><a href=\"#蠡园公园\" class=\"headerlink\" title=\"蠡园公园\"></a>蠡园公园</h2><br>\n\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/wuxi_travel/62b721fd8eb56b9ecebe3d7b3a9e94e.png\" alt=\"62b721fd8eb56b9ecebe3d7b3a9e94e\" style=\"zoom: 33%;\">\n\n<center><br>天气预报原本说今天有中雨<br><br>所以暂时取消了徒步计划<br><br>选择了先去蠡园进行游玩<br><br></center>\n\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/wuxi_travel/618cb82399ff8e5247523225e7c3295.png\" alt=\"618cb82399ff8e5247523225e7c3295\" style=\"zoom: 33%;\">\n\n<br>\n\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/wuxi_travel/0b2f97d92d81bbdc082b15c55b8719d.png\" alt=\"0b2f97d92d81bbdc082b15c55b8719d\" style=\"zoom: 33%;\">\n\n<br>\n\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/wuxi_travel/7652f4176a3e53757f2de430679e66a.png\" alt=\"7652f4176a3e53757f2de430679e66a\" style=\"zoom: 33%;\">\n\n<center><br>非常神奇有没有!<br><br>到现在都没有下雨<br><br>甚至隐隐有要出太阳的迹象！<br><br>所以我们果断选择前去徒步<br><br></center>\n\n<h2 id=\"宝界山林公园-军嶂古道\"><a href=\"#宝界山林公园-军嶂古道\" class=\"headerlink\" title=\"宝界山林公园-军嶂古道\"></a>宝界山林公园-军嶂古道</h2><center><h3>徒步路线如下</h3></center>\n\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/wuxi_travel/image-20240605135725673.png\" alt=\"image-20240605135725673\" style=\"zoom:33%;\">\n\n<br>\n\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/wuxi_travel/75a68aa3be4521d319d2f2ace73a094.png\" alt=\"75a68aa3be4521d319d2f2ace73a094\" style=\"zoom: 33%;\">\n\n<br>\n\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/wuxi_travel/6b140467433f8c6cabce2ef700fc0bb.png\" alt=\"6b140467433f8c6cabce2ef700fc0bb\" style=\"zoom:33%;\">\n\n\n<center><br>路线有些偏野山的感觉<br><br>并没有人工开凿的痕迹<br><br>但是沿途可以看到有徒步团扎的飘带标记以及有人居住的场所（隐居？）<br><br>当然了，也时不时能碰到别人的小土包...<br><br></center>\n\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/wuxi_travel/6f8701a00ada2c7bf0ecfffd450d00b.png\" alt=\"6f8701a00ada2c7bf0ecfffd450d00b\" style=\"zoom:33%;\">\n\n<br>\n\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/wuxi_travel/dc85f46992113347bf299d7aaedfd6d.png\" alt=\"dc85f46992113347bf299d7aaedfd6d\" style=\"zoom:33%;\">\n\n<br>\n\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/wuxi_travel/fa67438411b13a560d498928e194bf8.png\" alt=\"fa67438411b13a560d498928e194bf8\" style=\"zoom:33%;\">\n\n<br>\n\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/wuxi_travel/6ba64f8a74f8fd370d169393e0be116.png\" alt=\"6ba64f8a74f8fd370d169393e0be116\" style=\"zoom:33%;\">\n\n<br>\n\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/wuxi_travel/df31837900c348bfd7662a540513daf.png\" alt=\"df31837900c348bfd7662a540513daf\" style=\"zoom:33%;\">\n\n<br>\n\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/wuxi_travel/1427443a2e73c9c941f33ea93460927.png\" alt=\"1427443a2e73c9c941f33ea93460927\" style=\"zoom:33%;\">\n\n<center><br>珈瑜的大疆<br><br></center>\n\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/wuxi_travel/a2e775fb556f3202d3430f8a788803f.png\" alt=\"a2e775fb556f3202d3430f8a788803f\" style=\"zoom:33%;\">\n\n<center><br>众神之父请赐予我视野<br><br>走出来看到的小花↓<br><br></center>\n\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/wuxi_travel/f99b0a70d8fe594a1cb60876a89c5d0.png\" alt=\"f99b0a70d8fe594a1cb60876a89c5d0\" style=\"zoom:15%;\">\n\n<br>\n\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/wuxi_travel/e5e782b62f70befbee201f721164abd.png\" alt=\"e5e782b62f70befbee201f721164abd\" style=\"zoom:33%;\">\n\n<br>\n\n<h2 id=\"太湖仙岛\"><a href=\"#太湖仙岛\" class=\"headerlink\" title=\"太湖仙岛\"></a>太湖仙岛</h2><center><h3>徒步路线如下</h3></center>\n\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/wuxi_travel/4a495848762e2f1ac7a93606bbfd2a3.png\" alt=\"4a495848762e2f1ac7a93606bbfd2a3\" style=\"zoom:33%;\">\n\n<br>\n\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/wuxi_travel/e77e651e41cfffac455256ee30a62e7.png\" alt=\"e77e651e41cfffac455256ee30a62e7\" style=\"zoom:33%;\">\n\n<center><br>好歹是有台阶可以爬得了<br><br></center>\n\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/wuxi_travel/e10bf3fe081a0e31a17601c68bc5373.png\" alt=\"e10bf3fe081a0e31a17601c68bc5373\" style=\"zoom:33%;\">\n\n<center><br>鹿顶山晖<br><br>在这附近有范蠡的祠堂<br><br></center>\n\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/wuxi_travel/d8627057731e73a4529c303c82ff675.png\" alt=\"d8627057731e73a4529c303c82ff675\" style=\"zoom:33%;\">\n\n<center><br>下山碰到的一只哈基米<br><br>不过它的一只眼睛坏掉了<br><br></center>\n\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/wuxi_travel/95d6958ac2f4bdfe5576f6bd7e568c4.png\" alt=\"95d6958ac2f4bdfe5576f6bd7e568c4\" style=\"zoom:33%;\">\n\n<center><br>坐船前往太湖仙岛<br><br>这附近有不少像这样的木帆船<br><br></center>\n\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/wuxi_travel/082e66374891cb305cb637aba10c3f1.png\" alt=\"082e66374891cb305cb637aba10c3f1\" style=\"zoom:33%;\">\n\n<br>\n\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/wuxi_travel/8dae16d449f1457f5fce533e2dab31d.png\" alt=\"8dae16d449f1457f5fce533e2dab31d\" style=\"zoom:33%;\">\n\n<br>\n\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/wuxi_travel/1590570e99863f157b79663b746aa71.png\" alt=\"1590570e99863f157b79663b746aa71\" style=\"zoom:33%;\">\n\n<br>\n\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/wuxi_travel/08ba68d5c6cdcd8d8fed92638f6831e.png\" alt=\"08ba68d5c6cdcd8d8fed92638f6831e\" style=\"zoom:33%;\">\n\n<center><br>雨停了，正好赶上夕阳还有彩虹<br><br></center>\n\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/wuxi_travel/932115e476bfe0ce837efe884767298.png\" alt=\"932115e476bfe0ce837efe884767298\" style=\"zoom:33%;\">\n\n<br>\n\n<h2 id=\"惠山古镇\"><a href=\"#惠山古镇\" class=\"headerlink\" title=\"惠山古镇\"></a>惠山古镇</h2><br>\n\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/wuxi_travel/958626e2f2af371925aef1288d50b0a.png\" alt=\"958626e2f2af371925aef1288d50b0a\" style=\"zoom:33%;\">\n\n<center><h3>鸟瞰图</h3></center>\n\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/wuxi_travel/49f67c697ac74de2f1dc938fe5f5007.jpg\" alt=\"49f67c697ac74de2f1dc938fe5f5007\" style=\"zoom: 20%;\">\n\n<center><br>BY 东南DNF<br><br></center>\n\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/wuxi_travel/ee0d47a4f62780f85d318749fc25a8f.png\" alt=\"ee0d47a4f62780f85d318749fc25a8f\" style=\"zoom:33%;\">\n\n<center><br>这幅窗很有意思<br>像画一样<br><br></center>\n\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/wuxi_travel/02767365218acc958e8136d77decad8.png\" alt=\"02767365218acc958e8136d77decad8\" style=\"zoom:25%;\">\n\n<br>\n\n<h2 id=\"无锡特色小吃\"><a href=\"#无锡特色小吃\" class=\"headerlink\" title=\"无锡特色小吃\"></a>无锡特色小吃</h2><br>\n\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/wuxi_travel/97dea71c2818e9e05ffde08045531b4.jpg\" alt=\"97dea71c2818e9e05ffde08045531b4\" style=\"zoom:12.7%;\">\n\n<br>\n\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/wuxi_travel/252625631f0c6b7aa772de90aec5d2c.png\" alt=\"252625631f0c6b7aa772de90aec5d2c\" style=\"zoom: 33%;\">\n\n<center><br>美兰饼，有点像肉馅的麻薯，咸口的<br><br></center>\n\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/wuxi_travel/1d904be0143789bacf088db2455ed31.png\" alt=\"1d904be0143789bacf088db2455ed31\" style=\"zoom: 33%;\">\n\n<center><br>桂花糖芋头<br><br></center>\n\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/wuxi_travel/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20240529122839.jpg\" alt=\"微信图片_20240529122839\" style=\"zoom:7%;\">\n\n<center><br>油馄饨<br><br></center>\n\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/wuxi_travel/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20240529122852.jpg\" alt=\"微信图片_20240529122852\" style=\"zoom:16%;\">\n\n<center><br>太湖白鱼<br><br></center>\n\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/wuxi_travel/c46d2fb753b96b77cca1985ccf7d70d.png\" alt=\"c46d2fb753b96b77cca1985ccf7d70d\" style=\"zoom:33%;\">\n\n<center><br>茶颜悦色2.0<br><br></center>\n","more":"<h2 id=\"行程记录\"><a href=\"#行程记录\" class=\"headerlink\" title=\"行程记录\"></a>行程记录</h2><figure class=\"highlight txt\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">5月26日：</span><br><span class=\"line\">18：00 上海火车站集合</span><br><span class=\"line\">19：35 到达无锡</span><br><span class=\"line\">19：55 乘坐一号线前往南禅寺</span><br><span class=\"line\">20：00 游玩南长街，茶颜悦色1.0</span><br><span class=\"line\">21：40 前往酒店，休息</span><br><span class=\"line\"></span><br><span class=\"line\">5月27日：</span><br><span class=\"line\">8：00 集合</span><br><span class=\"line\">8：30 吃早餐</span><br><span class=\"line\">9：20 打车抵达蠡园公园，并购置门票</span><br><span class=\"line\">10：30 前往鼋头渚，准备进行徒步</span><br><span class=\"line\">10：45 抵达宝界山林公园，军嶂古道A线启动</span><br><span class=\"line\">12：00 徒步结束</span><br><span class=\"line\">12：20 打车抵达酒店，汤老板请客吃中饭</span><br><span class=\"line\">14：00 前往鼋头渚风景区</span><br><span class=\"line\">15：12 爬上鹿顶山</span><br><span class=\"line\">16：15 乘坐轮渡前往太湖仙岛</span><br><span class=\"line\">18：20 打车前去晚饭</span><br><span class=\"line\">19：00 茶颜悦色2.0启动</span><br><span class=\"line\">21：00 返回酒店</span><br><span class=\"line\"></span><br><span class=\"line\">5月28日：</span><br><span class=\"line\">8：00 集合</span><br><span class=\"line\">8：25 早饭</span><br><span class=\"line\">9：10 打车前去惠山古镇</span><br><span class=\"line\">11：30 打车去吃中饭，茶颜悦色3.0启动</span><br><span class=\"line\">12：49 乘坐高铁返回</span><br><span class=\"line\">15：33 到家</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"南长街\"><a href=\"#南长街\" class=\"headerlink\" title=\"南长街\"></a>南长街</h2><br>\n\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/wuxi_travel/4b89c957cac4bc0340105379d6c3149.png\" alt=\"4b89c957cac4bc0340105379d6c3149\" style=\"zoom: 33%;\">\n\n<center><br>\n    南禅寺站外的一条步行街<br><br>\n    有很多各地的特色小吃以及小酒馆<br><br>\n    小酒馆之中还有驻唱的吉他手在唱歌<br><br></center>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/wuxi_travel/635f0a2b8f0d55d73afeacf15acf14d.png\" alt=\"635f0a2b8f0d55d73afeacf15acf14d\" style=\"zoom: 33%;\">\n\n<center><br>小吃街还是非常热闹的<br><br>即便是旅游淡季<br><br>也依然有相当多的人带着小孩在附近游玩<br><br>只是作为一个游客<br><br>我挺好奇为啥一眼看过去<br><br>好多都是其他地方的美食(・∀・(・∀・(・∀・*)<br><br></center>\n\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/wuxi_travel/b48121421dd91a5276f90bd6856e5df.png\" alt=\"b48121421dd91a5276f90bd6856e5df\" style=\"zoom: 33%;\">\n\n<center><br>步行街个人非常喜欢，真的很步行街<br><br>两侧还有很多很适合放松的小店<br><br>建筑也大多是江南特有的白墙黑瓦<br><br></center>\n\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/wuxi_travel/0b63e55eccb17bade774d1e96d9536f.png\" alt=\"0b63e55eccb17bade774d1e96d9536f\" style=\"zoom: 33%;\">\n\n<center><br>路边碰到的 ↑ <br><br>非常老的一个机器<br><br>所以这是为什么呢哈哈哈<br><br></center>\n\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/wuxi_travel/c12eeb504affac83d6290c9d77ffdc6.png\" alt=\"c12eeb504affac83d6290c9d77ffdc6\" style=\"zoom: 33%;\">\n\n<center><br>在无锡喝到了长沙特产茶颜悦色<br><br>排队的人蛮多的<br><br></center>\n\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/wuxi_travel/9d4365c205960d054f77e6c999aa47f.png\" alt=\"9d4365c205960d054f77e6c999aa47f\" style=\"zoom: 33%;\">\n\n<center><br>茶颜悦色1.0<br><br></center>\n\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/wuxi_travel/ec95c4c41b95b38a6a8bac1f6e1601b.png\" alt=\"ec95c4c41b95b38a6a8bac1f6e1601b\" style=\"zoom: 33%;\">\n\n<center><br>非常经典的小桥流水<br><br>位于南长街的出口位置<br><br></center>\n\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/wuxi_travel/19d00734826c8aa0045369227f2f991.png\" alt=\"19d00734826c8aa0045369227f2f991\" style=\"zoom: 33%;\">\n\n<br>\n\n<h2 id=\"蠡园公园\"><a href=\"#蠡园公园\" class=\"headerlink\" title=\"蠡园公园\"></a>蠡园公园</h2><br>\n\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/wuxi_travel/62b721fd8eb56b9ecebe3d7b3a9e94e.png\" alt=\"62b721fd8eb56b9ecebe3d7b3a9e94e\" style=\"zoom: 33%;\">\n\n<center><br>天气预报原本说今天有中雨<br><br>所以暂时取消了徒步计划<br><br>选择了先去蠡园进行游玩<br><br></center>\n\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/wuxi_travel/618cb82399ff8e5247523225e7c3295.png\" alt=\"618cb82399ff8e5247523225e7c3295\" style=\"zoom: 33%;\">\n\n<br>\n\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/wuxi_travel/0b2f97d92d81bbdc082b15c55b8719d.png\" alt=\"0b2f97d92d81bbdc082b15c55b8719d\" style=\"zoom: 33%;\">\n\n<br>\n\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/wuxi_travel/7652f4176a3e53757f2de430679e66a.png\" alt=\"7652f4176a3e53757f2de430679e66a\" style=\"zoom: 33%;\">\n\n<center><br>非常神奇有没有!<br><br>到现在都没有下雨<br><br>甚至隐隐有要出太阳的迹象！<br><br>所以我们果断选择前去徒步<br><br></center>\n\n<h2 id=\"宝界山林公园-军嶂古道\"><a href=\"#宝界山林公园-军嶂古道\" class=\"headerlink\" title=\"宝界山林公园-军嶂古道\"></a>宝界山林公园-军嶂古道</h2><center><h3>徒步路线如下</h3></center>\n\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/wuxi_travel/image-20240605135725673.png\" alt=\"image-20240605135725673\" style=\"zoom:33%;\">\n\n<br>\n\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/wuxi_travel/75a68aa3be4521d319d2f2ace73a094.png\" alt=\"75a68aa3be4521d319d2f2ace73a094\" style=\"zoom: 33%;\">\n\n<br>\n\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/wuxi_travel/6b140467433f8c6cabce2ef700fc0bb.png\" alt=\"6b140467433f8c6cabce2ef700fc0bb\" style=\"zoom:33%;\">\n\n\n<center><br>路线有些偏野山的感觉<br><br>并没有人工开凿的痕迹<br><br>但是沿途可以看到有徒步团扎的飘带标记以及有人居住的场所（隐居？）<br><br>当然了，也时不时能碰到别人的小土包...<br><br></center>\n\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/wuxi_travel/6f8701a00ada2c7bf0ecfffd450d00b.png\" alt=\"6f8701a00ada2c7bf0ecfffd450d00b\" style=\"zoom:33%;\">\n\n<br>\n\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/wuxi_travel/dc85f46992113347bf299d7aaedfd6d.png\" alt=\"dc85f46992113347bf299d7aaedfd6d\" style=\"zoom:33%;\">\n\n<br>\n\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/wuxi_travel/fa67438411b13a560d498928e194bf8.png\" alt=\"fa67438411b13a560d498928e194bf8\" style=\"zoom:33%;\">\n\n<br>\n\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/wuxi_travel/6ba64f8a74f8fd370d169393e0be116.png\" alt=\"6ba64f8a74f8fd370d169393e0be116\" style=\"zoom:33%;\">\n\n<br>\n\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/wuxi_travel/df31837900c348bfd7662a540513daf.png\" alt=\"df31837900c348bfd7662a540513daf\" style=\"zoom:33%;\">\n\n<br>\n\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/wuxi_travel/1427443a2e73c9c941f33ea93460927.png\" alt=\"1427443a2e73c9c941f33ea93460927\" style=\"zoom:33%;\">\n\n<center><br>珈瑜的大疆<br><br></center>\n\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/wuxi_travel/a2e775fb556f3202d3430f8a788803f.png\" alt=\"a2e775fb556f3202d3430f8a788803f\" style=\"zoom:33%;\">\n\n<center><br>众神之父请赐予我视野<br><br>走出来看到的小花↓<br><br></center>\n\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/wuxi_travel/f99b0a70d8fe594a1cb60876a89c5d0.png\" alt=\"f99b0a70d8fe594a1cb60876a89c5d0\" style=\"zoom:15%;\">\n\n<br>\n\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/wuxi_travel/e5e782b62f70befbee201f721164abd.png\" alt=\"e5e782b62f70befbee201f721164abd\" style=\"zoom:33%;\">\n\n<br>\n\n<h2 id=\"太湖仙岛\"><a href=\"#太湖仙岛\" class=\"headerlink\" title=\"太湖仙岛\"></a>太湖仙岛</h2><center><h3>徒步路线如下</h3></center>\n\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/wuxi_travel/4a495848762e2f1ac7a93606bbfd2a3.png\" alt=\"4a495848762e2f1ac7a93606bbfd2a3\" style=\"zoom:33%;\">\n\n<br>\n\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/wuxi_travel/e77e651e41cfffac455256ee30a62e7.png\" alt=\"e77e651e41cfffac455256ee30a62e7\" style=\"zoom:33%;\">\n\n<center><br>好歹是有台阶可以爬得了<br><br></center>\n\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/wuxi_travel/e10bf3fe081a0e31a17601c68bc5373.png\" alt=\"e10bf3fe081a0e31a17601c68bc5373\" style=\"zoom:33%;\">\n\n<center><br>鹿顶山晖<br><br>在这附近有范蠡的祠堂<br><br></center>\n\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/wuxi_travel/d8627057731e73a4529c303c82ff675.png\" alt=\"d8627057731e73a4529c303c82ff675\" style=\"zoom:33%;\">\n\n<center><br>下山碰到的一只哈基米<br><br>不过它的一只眼睛坏掉了<br><br></center>\n\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/wuxi_travel/95d6958ac2f4bdfe5576f6bd7e568c4.png\" alt=\"95d6958ac2f4bdfe5576f6bd7e568c4\" style=\"zoom:33%;\">\n\n<center><br>坐船前往太湖仙岛<br><br>这附近有不少像这样的木帆船<br><br></center>\n\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/wuxi_travel/082e66374891cb305cb637aba10c3f1.png\" alt=\"082e66374891cb305cb637aba10c3f1\" style=\"zoom:33%;\">\n\n<br>\n\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/wuxi_travel/8dae16d449f1457f5fce533e2dab31d.png\" alt=\"8dae16d449f1457f5fce533e2dab31d\" style=\"zoom:33%;\">\n\n<br>\n\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/wuxi_travel/1590570e99863f157b79663b746aa71.png\" alt=\"1590570e99863f157b79663b746aa71\" style=\"zoom:33%;\">\n\n<br>\n\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/wuxi_travel/08ba68d5c6cdcd8d8fed92638f6831e.png\" alt=\"08ba68d5c6cdcd8d8fed92638f6831e\" style=\"zoom:33%;\">\n\n<center><br>雨停了，正好赶上夕阳还有彩虹<br><br></center>\n\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/wuxi_travel/932115e476bfe0ce837efe884767298.png\" alt=\"932115e476bfe0ce837efe884767298\" style=\"zoom:33%;\">\n\n<br>\n\n<h2 id=\"惠山古镇\"><a href=\"#惠山古镇\" class=\"headerlink\" title=\"惠山古镇\"></a>惠山古镇</h2><br>\n\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/wuxi_travel/958626e2f2af371925aef1288d50b0a.png\" alt=\"958626e2f2af371925aef1288d50b0a\" style=\"zoom:33%;\">\n\n<center><h3>鸟瞰图</h3></center>\n\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/wuxi_travel/49f67c697ac74de2f1dc938fe5f5007.jpg\" alt=\"49f67c697ac74de2f1dc938fe5f5007\" style=\"zoom: 20%;\">\n\n<center><br>BY 东南DNF<br><br></center>\n\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/wuxi_travel/ee0d47a4f62780f85d318749fc25a8f.png\" alt=\"ee0d47a4f62780f85d318749fc25a8f\" style=\"zoom:33%;\">\n\n<center><br>这幅窗很有意思<br>像画一样<br><br></center>\n\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/wuxi_travel/02767365218acc958e8136d77decad8.png\" alt=\"02767365218acc958e8136d77decad8\" style=\"zoom:25%;\">\n\n<br>\n\n<h2 id=\"无锡特色小吃\"><a href=\"#无锡特色小吃\" class=\"headerlink\" title=\"无锡特色小吃\"></a>无锡特色小吃</h2><br>\n\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/wuxi_travel/97dea71c2818e9e05ffde08045531b4.jpg\" alt=\"97dea71c2818e9e05ffde08045531b4\" style=\"zoom:12.7%;\">\n\n<br>\n\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/wuxi_travel/252625631f0c6b7aa772de90aec5d2c.png\" alt=\"252625631f0c6b7aa772de90aec5d2c\" style=\"zoom: 33%;\">\n\n<center><br>美兰饼，有点像肉馅的麻薯，咸口的<br><br></center>\n\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/wuxi_travel/1d904be0143789bacf088db2455ed31.png\" alt=\"1d904be0143789bacf088db2455ed31\" style=\"zoom: 33%;\">\n\n<center><br>桂花糖芋头<br><br></center>\n\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/wuxi_travel/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20240529122839.jpg\" alt=\"微信图片_20240529122839\" style=\"zoom:7%;\">\n\n<center><br>油馄饨<br><br></center>\n\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/wuxi_travel/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20240529122852.jpg\" alt=\"微信图片_20240529122852\" style=\"zoom:16%;\">\n\n<center><br>太湖白鱼<br><br></center>\n\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/wuxi_travel/c46d2fb753b96b77cca1985ccf7d70d.png\" alt=\"c46d2fb753b96b77cca1985ccf7d70d\" style=\"zoom:33%;\">\n\n<center><br>茶颜悦色2.0<br><br></center>\n"},{"title":"淄博旅行","date":"2024-07-15T02:43:00.000Z","thumbnail":"img/thumbnail/zibo.png","excerpt":"2024年6月23日，在淄博市停留了一天时间游玩。","_content":"\n## 行程记录\n\n```txt\n6月23日：晴\n08：40 骑电瓶车前往八大局便民市场\n11：30 骑共享电动车前往齐风塔\n12：15 打车前取吃午饭\n14：00 骑共享电瓶车前往中国琉璃博物馆\n17：00 骑电瓶车前往海岱楼\n18：20 搓顿烧烤\n19：05 骑车返回酒店拿行李\n19：46 打车前往淄博站\n20：15 乘坐班次G454前往泰安站\n```\n\n## 出行路线\n\n<img src=\"/img/zibo_travel/eb43fd68f43fd31e4d26e0f8586056c.png\" alt=\"eb43fd68f43fd31e4d26e0f8586056c\" style=\"zoom: 33%;\" />\n\n## 八大局便民市场\n\n<img src=\"/img/zibo_travel/%E5%85%AB%E5%A4%A7%E5%B1%80%E4%BE%BF%E6%B0%91%E5%B8%82%E5%9C%BA.png\" alt=\"八大局便民市场\" style=\"zoom:15%;\" />\n\n早上一大早骑车过来的，这里看上去像是一个巨大的集市，售卖各种小物件，琉璃，小吃等等。\n\n香酥牛奶棒，蓝莓味的，3r一个，还可以，外面口感吃起来像面包，其实味道和土司涂蓝莓酱真的很像。\n\n<img src=\"/img/zibo_travel/%E8%93%9D%E8%8E%93%E5%91%B3%E9%A6%99%E9%85%A5%E7%89%9B%E5%A5%B6%E6%A3%92.png\" alt=\"蓝莓味香酥牛奶棒\" style=\"zoom:15%;\" />\n\n抹茶味的紫米饼，12.3r一个，老板人很好，坚持要给我这么一大块，但说真的，谁能吃得下呢，尤其这天还特别热，啃一口太干了，带着又不方便，扔垃圾桶了，太可惜了，要是有试吃装就好了，味道其实挺不错的。\n\n<img src=\"/img/zibo_travel/%E7%B4%AB%E7%B1%B3%E9%A5%BC.png\" alt=\"紫米饼\" style=\"zoom: 15%;\" />\n\n锅盔饼，分量太大了，实在吃不完，口感脆脆的，适合当零食吃，后来吃不完扔烤肉店了。\n\n<img src=\"/img/zibo_travel/%E9%94%85%E7%9B%94%E9%A5%BC.png\" alt=\"锅盔饼\" style=\"zoom:15%;\" />\n\n路过买了一斤鲜啤，6r，味道很清爽，主要是天太热了，医生上次和我说戒烟酒戒辛辣，不要熬夜久坐，烟我是不抽的，以往夏天我会喝啤酒，但是医生这么说了，所以我也是隔了几个月没有喝过一滴酒【上一回喝是过年和家里亲戚喝的】，但是现在来到了山东，不搞一点其实也挺可惜的，姑且破一回例。\n\n<img src=\"/img/zibo_travel/%E5%95%A4%E9%85%92.png\" alt=\"啤酒\" style=\"zoom:25%;\" />\n\n从集市出来，买的琉璃小物件，其实还有一对龙虎，三个加在一起90多，那对龙虎买完就后悔了【不好看】\n\n<img src=\"/img/zibo_travel/%E7%90%89%E7%92%83%E5%B0%8F%E7%8C%AA.png\" alt=\"琉璃小猪\" style=\"zoom:25%;\" />\n\n## 齐风塔\n\n孝妇河湿地公园的标志建筑，但是天气太热加上路线似乎有点问题，我过去了之后没找到能直接进入的地方，所以远远地拍了一张照片就撤了。\n\n<img src=\"/img/zibo_travel/%E9%BD%90%E9%A3%8E%E5%A1%94.png\" alt=\"齐风塔\" style=\"zoom:15%;\" />\n\n## 中国琉璃博物馆\n\n<img src=\"/img/zibo_travel/%E7%90%89%E7%92%83%E5%8D%9A%E7%89%A9%E9%A6%86.png\" alt=\"琉璃博物馆\" style=\"zoom:15%;\" />\n\n这里有中国的陶瓷发展史，包括了早期原始人用的瓦罐，瓦器等等，拍了一点图片。\n\n<img src=\"/img/zibo_travel/%E3%80%8A%E6%A8%8A%E5%8D%8E%E5%87%80%E7%95%8C%E3%80%8B%E7%8E%89%E5%87%80%E7%93%B6.png\" alt=\"《樊华净界》玉净瓶\" style=\"zoom:15%;\" />\n\n<br>\n\n<img src=\"/img/zibo_travel/%E5%87%A4%E8%88%9E%E5%92%8C%E9%B8%A3%E5%9B%BD%E5%AE%B4%E7%94%A8%E7%93%B7.png\" alt=\"凤舞和鸣国宴用瓷\" style=\"zoom:10%;\" />\n\n<br>\n\n<img src=\"/img/zibo_travel/%E9%B8%A1%E8%A1%80%E7%BA%A2%E8%A7%82%E9%9F%B3%E7%93%B6.png\" alt=\"鸡血红观音瓶\" style=\"zoom:15%;\" />\n\n<br>\n\n<img src=\"/img/zibo_travel/%E9%B8%A1%E6%B2%B9%E9%BB%84%E9%95%8C%E5%88%BB%E7%BD%97%E6%B1%89%E5%9B%BE.png\" alt=\"鸡油黄镌刻罗汉图\" style=\"zoom:13%;\" />\n\n<br>\n\n<img src=\"/img/zibo_travel/%E9%99%B6%E7%93%B7%E7%90%89%E7%92%83%E7%93%B6.png\" alt=\"陶瓷琉璃瓶\" style=\"zoom:15%;\" />\n\n<br>\n\n<img src=\"/img/zibo_travel/%E9%99%B6%E7%93%B7%E9%BE%99%E8%99%BE.png\" alt=\"陶瓷龙虾\" style=\"zoom: 15%;\" />\n\n<br>\n\n<img src=\"/img/zibo_travel/%E9%99%B6%E7%93%B7%E8%8C%89%E8%8E%89%E8%8A%B1.png\" alt=\"陶瓷茉莉花\" style=\"zoom:15%;\" />\n\n<br>\n\n<img src=\"/img/zibo_travel/%E9%99%B6%E7%93%B7%E8%91%A1%E8%90%84.png\" alt=\"陶瓷葡萄\" style=\"zoom:15%;\" />\n\n<br>\n\n<img src=\"/img/zibo_travel/%E5%BF%98%E8%AE%B0%E6%8B%8D%E5%90%8D%E5%AD%97%E4%BA%86%E7%9A%84%E7%93%B7%E7%93%B6.png\" alt=\"忘记拍名字了的瓷瓶\" style=\"zoom:13%;\" />\n\n<br>\n\n<img src=\"/img/zibo_travel/%E5%BF%98%E8%AE%B0%E6%8B%8D%E5%90%8D%E5%AD%97%E4%BA%86%E7%9A%84%E7%93%B7%E5%99%A8.png\" alt=\"忘记拍名字了的瓷器\" style=\"zoom:10%;\" />\n\n## 海岱楼\n\n这其实是个书阁，外观很漂亮\n\n<img src=\"/img/zibo_travel/%E6%B5%B7%E5%B2%B1%E6%A5%BC.png\" alt=\"海岱楼\" style=\"zoom:15%;\" />\n\n## 淄博烧烤\n\n比较赶时间，只吃了两家，一家看起来是连锁店\n\n<img src=\"/img/zibo_travel/%E5%B0%8F%E7%83%A7%E7%83%A4.png\" alt=\"小烧烤\" style=\"zoom:12%;\" />\n\n<br>\n\n<img src=\"/img/zibo_travel/%E5%B0%8F%E7%83%A7%E7%83%A4(2).png\" alt=\"小烧烤(2)\" style=\"zoom:15%;\" />\n\n<br>\n\n<img src=\"/img/zibo_travel/%E5%B0%8F%E7%83%A7%E7%83%A4(3).png\" alt=\"小烧烤(3)\" style=\"zoom:12%;\" />\n\n花了40来块钱买了一份套餐，本来以为已经蛮划算的了\n\n直到晚上那顿。。。\n\n<img src=\"/img/zibo_travel/%E5%B0%8F%E7%83%A7%E7%83%A4(4).png\" alt=\"小烧烤(4)\" style=\"zoom:25%;\" />\n\n80r这么多\n\n<img src=\"/img/zibo_travel/%E5%A4%A7%E7%83%A7%E7%83%A4.png\" alt=\"大烧烤\" style=\"zoom:25%;\" />\n\n哈哈哈~\n\n不过说实话，没点面皮就这么直接吃，有点腻了【当时想着点多了吃不完，事实上也确实没吃完】\n\n<img src=\"/img/zibo_travel/%E5%A4%A7%E7%83%A7%E7%83%A4(2).png\" alt=\"大烧烤(2)\" style=\"zoom:12%;\" />\n\n## LAST\n\n至此，淄博的旅途就告一段落了，这一次由于交通工具、时间以及精力上的限制，我只游玩了张店区，我在这个地方做的攻略不是特别彻底，淄博看起来并不适合一个人来玩，吃烧烤这种事一个人吃不是很得劲。。。\n\n琉璃馆怎么说呢，很华丽，但不是特别值得大老远跑过来看。。。可能这个地方还是更适合组团或者自驾游，听说博山区的烧烤要更加出色。\n\n另外。。。我请问？？？\n\n<img src=\"/img/zibo_travel/image-20240724162657704.png\" alt=\"image-20240724162657704\" style=\"zoom: 33%;\" />\n\n<br>\n\n<img src=\"/img/zibo_travel/image-20240725095327146.png\" alt=\"image-20240725095327146\" style=\"zoom:40%;\" />\n\n#### 小插曲\n\n> 1）定房间定错了，定的无窗房，太压抑了，哥们在济南奔波了一天来到淄博，进房间直接给干自闭了\n>\n> 2）吃完烧烤，骑着电驴回旅店拿寄存的行李，结果发现时间没把握好【电瓶车限速太狠了】，差点错过高铁了，好在最后师傅足够给力，外加运气好高铁晚点，最后还是赶上了。\n>\n> <img src=\"/img/zibo_travel/image-20240725095442762.png\" alt=\"image-20240725095442762\" style=\"zoom:25%;\" />\n","source":"_posts/zibo_travel.md","raw":"---\ntitle: 淄博旅行\ncategories:\n  - 生活记录\ndate: 2024-07-15 10:43\nthumbnail: \"img/thumbnail/zibo.png\"\nexcerpt: \"2024年6月23日，在淄博市停留了一天时间游玩。\"\ntags:\n    - 旅途\n---\n\n## 行程记录\n\n```txt\n6月23日：晴\n08：40 骑电瓶车前往八大局便民市场\n11：30 骑共享电动车前往齐风塔\n12：15 打车前取吃午饭\n14：00 骑共享电瓶车前往中国琉璃博物馆\n17：00 骑电瓶车前往海岱楼\n18：20 搓顿烧烤\n19：05 骑车返回酒店拿行李\n19：46 打车前往淄博站\n20：15 乘坐班次G454前往泰安站\n```\n\n## 出行路线\n\n<img src=\"/img/zibo_travel/eb43fd68f43fd31e4d26e0f8586056c.png\" alt=\"eb43fd68f43fd31e4d26e0f8586056c\" style=\"zoom: 33%;\" />\n\n## 八大局便民市场\n\n<img src=\"/img/zibo_travel/%E5%85%AB%E5%A4%A7%E5%B1%80%E4%BE%BF%E6%B0%91%E5%B8%82%E5%9C%BA.png\" alt=\"八大局便民市场\" style=\"zoom:15%;\" />\n\n早上一大早骑车过来的，这里看上去像是一个巨大的集市，售卖各种小物件，琉璃，小吃等等。\n\n香酥牛奶棒，蓝莓味的，3r一个，还可以，外面口感吃起来像面包，其实味道和土司涂蓝莓酱真的很像。\n\n<img src=\"/img/zibo_travel/%E8%93%9D%E8%8E%93%E5%91%B3%E9%A6%99%E9%85%A5%E7%89%9B%E5%A5%B6%E6%A3%92.png\" alt=\"蓝莓味香酥牛奶棒\" style=\"zoom:15%;\" />\n\n抹茶味的紫米饼，12.3r一个，老板人很好，坚持要给我这么一大块，但说真的，谁能吃得下呢，尤其这天还特别热，啃一口太干了，带着又不方便，扔垃圾桶了，太可惜了，要是有试吃装就好了，味道其实挺不错的。\n\n<img src=\"/img/zibo_travel/%E7%B4%AB%E7%B1%B3%E9%A5%BC.png\" alt=\"紫米饼\" style=\"zoom: 15%;\" />\n\n锅盔饼，分量太大了，实在吃不完，口感脆脆的，适合当零食吃，后来吃不完扔烤肉店了。\n\n<img src=\"/img/zibo_travel/%E9%94%85%E7%9B%94%E9%A5%BC.png\" alt=\"锅盔饼\" style=\"zoom:15%;\" />\n\n路过买了一斤鲜啤，6r，味道很清爽，主要是天太热了，医生上次和我说戒烟酒戒辛辣，不要熬夜久坐，烟我是不抽的，以往夏天我会喝啤酒，但是医生这么说了，所以我也是隔了几个月没有喝过一滴酒【上一回喝是过年和家里亲戚喝的】，但是现在来到了山东，不搞一点其实也挺可惜的，姑且破一回例。\n\n<img src=\"/img/zibo_travel/%E5%95%A4%E9%85%92.png\" alt=\"啤酒\" style=\"zoom:25%;\" />\n\n从集市出来，买的琉璃小物件，其实还有一对龙虎，三个加在一起90多，那对龙虎买完就后悔了【不好看】\n\n<img src=\"/img/zibo_travel/%E7%90%89%E7%92%83%E5%B0%8F%E7%8C%AA.png\" alt=\"琉璃小猪\" style=\"zoom:25%;\" />\n\n## 齐风塔\n\n孝妇河湿地公园的标志建筑，但是天气太热加上路线似乎有点问题，我过去了之后没找到能直接进入的地方，所以远远地拍了一张照片就撤了。\n\n<img src=\"/img/zibo_travel/%E9%BD%90%E9%A3%8E%E5%A1%94.png\" alt=\"齐风塔\" style=\"zoom:15%;\" />\n\n## 中国琉璃博物馆\n\n<img src=\"/img/zibo_travel/%E7%90%89%E7%92%83%E5%8D%9A%E7%89%A9%E9%A6%86.png\" alt=\"琉璃博物馆\" style=\"zoom:15%;\" />\n\n这里有中国的陶瓷发展史，包括了早期原始人用的瓦罐，瓦器等等，拍了一点图片。\n\n<img src=\"/img/zibo_travel/%E3%80%8A%E6%A8%8A%E5%8D%8E%E5%87%80%E7%95%8C%E3%80%8B%E7%8E%89%E5%87%80%E7%93%B6.png\" alt=\"《樊华净界》玉净瓶\" style=\"zoom:15%;\" />\n\n<br>\n\n<img src=\"/img/zibo_travel/%E5%87%A4%E8%88%9E%E5%92%8C%E9%B8%A3%E5%9B%BD%E5%AE%B4%E7%94%A8%E7%93%B7.png\" alt=\"凤舞和鸣国宴用瓷\" style=\"zoom:10%;\" />\n\n<br>\n\n<img src=\"/img/zibo_travel/%E9%B8%A1%E8%A1%80%E7%BA%A2%E8%A7%82%E9%9F%B3%E7%93%B6.png\" alt=\"鸡血红观音瓶\" style=\"zoom:15%;\" />\n\n<br>\n\n<img src=\"/img/zibo_travel/%E9%B8%A1%E6%B2%B9%E9%BB%84%E9%95%8C%E5%88%BB%E7%BD%97%E6%B1%89%E5%9B%BE.png\" alt=\"鸡油黄镌刻罗汉图\" style=\"zoom:13%;\" />\n\n<br>\n\n<img src=\"/img/zibo_travel/%E9%99%B6%E7%93%B7%E7%90%89%E7%92%83%E7%93%B6.png\" alt=\"陶瓷琉璃瓶\" style=\"zoom:15%;\" />\n\n<br>\n\n<img src=\"/img/zibo_travel/%E9%99%B6%E7%93%B7%E9%BE%99%E8%99%BE.png\" alt=\"陶瓷龙虾\" style=\"zoom: 15%;\" />\n\n<br>\n\n<img src=\"/img/zibo_travel/%E9%99%B6%E7%93%B7%E8%8C%89%E8%8E%89%E8%8A%B1.png\" alt=\"陶瓷茉莉花\" style=\"zoom:15%;\" />\n\n<br>\n\n<img src=\"/img/zibo_travel/%E9%99%B6%E7%93%B7%E8%91%A1%E8%90%84.png\" alt=\"陶瓷葡萄\" style=\"zoom:15%;\" />\n\n<br>\n\n<img src=\"/img/zibo_travel/%E5%BF%98%E8%AE%B0%E6%8B%8D%E5%90%8D%E5%AD%97%E4%BA%86%E7%9A%84%E7%93%B7%E7%93%B6.png\" alt=\"忘记拍名字了的瓷瓶\" style=\"zoom:13%;\" />\n\n<br>\n\n<img src=\"/img/zibo_travel/%E5%BF%98%E8%AE%B0%E6%8B%8D%E5%90%8D%E5%AD%97%E4%BA%86%E7%9A%84%E7%93%B7%E5%99%A8.png\" alt=\"忘记拍名字了的瓷器\" style=\"zoom:10%;\" />\n\n## 海岱楼\n\n这其实是个书阁，外观很漂亮\n\n<img src=\"/img/zibo_travel/%E6%B5%B7%E5%B2%B1%E6%A5%BC.png\" alt=\"海岱楼\" style=\"zoom:15%;\" />\n\n## 淄博烧烤\n\n比较赶时间，只吃了两家，一家看起来是连锁店\n\n<img src=\"/img/zibo_travel/%E5%B0%8F%E7%83%A7%E7%83%A4.png\" alt=\"小烧烤\" style=\"zoom:12%;\" />\n\n<br>\n\n<img src=\"/img/zibo_travel/%E5%B0%8F%E7%83%A7%E7%83%A4(2).png\" alt=\"小烧烤(2)\" style=\"zoom:15%;\" />\n\n<br>\n\n<img src=\"/img/zibo_travel/%E5%B0%8F%E7%83%A7%E7%83%A4(3).png\" alt=\"小烧烤(3)\" style=\"zoom:12%;\" />\n\n花了40来块钱买了一份套餐，本来以为已经蛮划算的了\n\n直到晚上那顿。。。\n\n<img src=\"/img/zibo_travel/%E5%B0%8F%E7%83%A7%E7%83%A4(4).png\" alt=\"小烧烤(4)\" style=\"zoom:25%;\" />\n\n80r这么多\n\n<img src=\"/img/zibo_travel/%E5%A4%A7%E7%83%A7%E7%83%A4.png\" alt=\"大烧烤\" style=\"zoom:25%;\" />\n\n哈哈哈~\n\n不过说实话，没点面皮就这么直接吃，有点腻了【当时想着点多了吃不完，事实上也确实没吃完】\n\n<img src=\"/img/zibo_travel/%E5%A4%A7%E7%83%A7%E7%83%A4(2).png\" alt=\"大烧烤(2)\" style=\"zoom:12%;\" />\n\n## LAST\n\n至此，淄博的旅途就告一段落了，这一次由于交通工具、时间以及精力上的限制，我只游玩了张店区，我在这个地方做的攻略不是特别彻底，淄博看起来并不适合一个人来玩，吃烧烤这种事一个人吃不是很得劲。。。\n\n琉璃馆怎么说呢，很华丽，但不是特别值得大老远跑过来看。。。可能这个地方还是更适合组团或者自驾游，听说博山区的烧烤要更加出色。\n\n另外。。。我请问？？？\n\n<img src=\"/img/zibo_travel/image-20240724162657704.png\" alt=\"image-20240724162657704\" style=\"zoom: 33%;\" />\n\n<br>\n\n<img src=\"/img/zibo_travel/image-20240725095327146.png\" alt=\"image-20240725095327146\" style=\"zoom:40%;\" />\n\n#### 小插曲\n\n> 1）定房间定错了，定的无窗房，太压抑了，哥们在济南奔波了一天来到淄博，进房间直接给干自闭了\n>\n> 2）吃完烧烤，骑着电驴回旅店拿寄存的行李，结果发现时间没把握好【电瓶车限速太狠了】，差点错过高铁了，好在最后师傅足够给力，外加运气好高铁晚点，最后还是赶上了。\n>\n> <img src=\"/img/zibo_travel/image-20240725095442762.png\" alt=\"image-20240725095442762\" style=\"zoom:25%;\" />\n","slug":"zibo_travel","published":1,"updated":"2024-08-24T07:03:11.849Z","comments":1,"layout":"post","photos":[],"_id":"cm0b0qx7t001njwur66ob5vme","content":"<h2 id=\"行程记录\"><a href=\"#行程记录\" class=\"headerlink\" title=\"行程记录\"></a>行程记录</h2><div class=\"highlight-container\" data-rel=\"Txt\"><figure class=\"iseeu highlight txt\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">6月23日：晴</span><br><span class=\"line\">08：40 骑电瓶车前往八大局便民市场</span><br><span class=\"line\">11：30 骑共享电动车前往齐风塔</span><br><span class=\"line\">12：15 打车前取吃午饭</span><br><span class=\"line\">14：00 骑共享电瓶车前往中国琉璃博物馆</span><br><span class=\"line\">17：00 骑电瓶车前往海岱楼</span><br><span class=\"line\">18：20 搓顿烧烤</span><br><span class=\"line\">19：05 骑车返回酒店拿行李</span><br><span class=\"line\">19：46 打车前往淄博站</span><br><span class=\"line\">20：15 乘坐班次G454前往泰安站</span><br></pre></td></tr></table></figure></div>\n\n<h2 id=\"出行路线\"><a href=\"#出行路线\" class=\"headerlink\" title=\"出行路线\"></a>出行路线</h2><img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/zibo_travel/eb43fd68f43fd31e4d26e0f8586056c.png\" alt=\"eb43fd68f43fd31e4d26e0f8586056c\" style=\"zoom: 33%;\">\n\n<h2 id=\"八大局便民市场\"><a href=\"#八大局便民市场\" class=\"headerlink\" title=\"八大局便民市场\"></a>八大局便民市场</h2><img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/zibo_travel/%E5%85%AB%E5%A4%A7%E5%B1%80%E4%BE%BF%E6%B0%91%E5%B8%82%E5%9C%BA.png\" alt=\"八大局便民市场\" style=\"zoom:15%;\">\n\n<p>早上一大早骑车过来的，这里看上去像是一个巨大的集市，售卖各种小物件，琉璃，小吃等等。</p>\n<p>香酥牛奶棒，蓝莓味的，3r一个，还可以，外面口感吃起来像面包，其实味道和土司涂蓝莓酱真的很像。</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/zibo_travel/%E8%93%9D%E8%8E%93%E5%91%B3%E9%A6%99%E9%85%A5%E7%89%9B%E5%A5%B6%E6%A3%92.png\" alt=\"蓝莓味香酥牛奶棒\" style=\"zoom:15%;\">\n\n<p>抹茶味的紫米饼，12.3r一个，老板人很好，坚持要给我这么一大块，但说真的，谁能吃得下呢，尤其这天还特别热，啃一口太干了，带着又不方便，扔垃圾桶了，太可惜了，要是有试吃装就好了，味道其实挺不错的。</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/zibo_travel/%E7%B4%AB%E7%B1%B3%E9%A5%BC.png\" alt=\"紫米饼\" style=\"zoom: 15%;\">\n\n<p>锅盔饼，分量太大了，实在吃不完，口感脆脆的，适合当零食吃，后来吃不完扔烤肉店了。</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/zibo_travel/%E9%94%85%E7%9B%94%E9%A5%BC.png\" alt=\"锅盔饼\" style=\"zoom:15%;\">\n\n<p>路过买了一斤鲜啤，6r，味道很清爽，主要是天太热了，医生上次和我说戒烟酒戒辛辣，不要熬夜久坐，烟我是不抽的，以往夏天我会喝啤酒，但是医生这么说了，所以我也是隔了几个月没有喝过一滴酒【上一回喝是过年和家里亲戚喝的】，但是现在来到了山东，不搞一点其实也挺可惜的，姑且破一回例。</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/zibo_travel/%E5%95%A4%E9%85%92.png\" alt=\"啤酒\" style=\"zoom:25%;\">\n\n<p>从集市出来，买的琉璃小物件，其实还有一对龙虎，三个加在一起90多，那对龙虎买完就后悔了【不好看】</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/zibo_travel/%E7%90%89%E7%92%83%E5%B0%8F%E7%8C%AA.png\" alt=\"琉璃小猪\" style=\"zoom:25%;\">\n\n<h2 id=\"齐风塔\"><a href=\"#齐风塔\" class=\"headerlink\" title=\"齐风塔\"></a>齐风塔</h2><p>孝妇河湿地公园的标志建筑，但是天气太热加上路线似乎有点问题，我过去了之后没找到能直接进入的地方，所以远远地拍了一张照片就撤了。</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/zibo_travel/%E9%BD%90%E9%A3%8E%E5%A1%94.png\" alt=\"齐风塔\" style=\"zoom:15%;\">\n\n<h2 id=\"中国琉璃博物馆\"><a href=\"#中国琉璃博物馆\" class=\"headerlink\" title=\"中国琉璃博物馆\"></a>中国琉璃博物馆</h2><img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/zibo_travel/%E7%90%89%E7%92%83%E5%8D%9A%E7%89%A9%E9%A6%86.png\" alt=\"琉璃博物馆\" style=\"zoom:15%;\">\n\n<p>这里有中国的陶瓷发展史，包括了早期原始人用的瓦罐，瓦器等等，拍了一点图片。</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/zibo_travel/%E3%80%8A%E6%A8%8A%E5%8D%8E%E5%87%80%E7%95%8C%E3%80%8B%E7%8E%89%E5%87%80%E7%93%B6.png\" alt=\"《樊华净界》玉净瓶\" style=\"zoom:15%;\">\n\n<br>\n\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/zibo_travel/%E5%87%A4%E8%88%9E%E5%92%8C%E9%B8%A3%E5%9B%BD%E5%AE%B4%E7%94%A8%E7%93%B7.png\" alt=\"凤舞和鸣国宴用瓷\" style=\"zoom:10%;\">\n\n<br>\n\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/zibo_travel/%E9%B8%A1%E8%A1%80%E7%BA%A2%E8%A7%82%E9%9F%B3%E7%93%B6.png\" alt=\"鸡血红观音瓶\" style=\"zoom:15%;\">\n\n<br>\n\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/zibo_travel/%E9%B8%A1%E6%B2%B9%E9%BB%84%E9%95%8C%E5%88%BB%E7%BD%97%E6%B1%89%E5%9B%BE.png\" alt=\"鸡油黄镌刻罗汉图\" style=\"zoom:13%;\">\n\n<br>\n\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/zibo_travel/%E9%99%B6%E7%93%B7%E7%90%89%E7%92%83%E7%93%B6.png\" alt=\"陶瓷琉璃瓶\" style=\"zoom:15%;\">\n\n<br>\n\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/zibo_travel/%E9%99%B6%E7%93%B7%E9%BE%99%E8%99%BE.png\" alt=\"陶瓷龙虾\" style=\"zoom: 15%;\">\n\n<br>\n\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/zibo_travel/%E9%99%B6%E7%93%B7%E8%8C%89%E8%8E%89%E8%8A%B1.png\" alt=\"陶瓷茉莉花\" style=\"zoom:15%;\">\n\n<br>\n\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/zibo_travel/%E9%99%B6%E7%93%B7%E8%91%A1%E8%90%84.png\" alt=\"陶瓷葡萄\" style=\"zoom:15%;\">\n\n<br>\n\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/zibo_travel/%E5%BF%98%E8%AE%B0%E6%8B%8D%E5%90%8D%E5%AD%97%E4%BA%86%E7%9A%84%E7%93%B7%E7%93%B6.png\" alt=\"忘记拍名字了的瓷瓶\" style=\"zoom:13%;\">\n\n<br>\n\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/zibo_travel/%E5%BF%98%E8%AE%B0%E6%8B%8D%E5%90%8D%E5%AD%97%E4%BA%86%E7%9A%84%E7%93%B7%E5%99%A8.png\" alt=\"忘记拍名字了的瓷器\" style=\"zoom:10%;\">\n\n<h2 id=\"海岱楼\"><a href=\"#海岱楼\" class=\"headerlink\" title=\"海岱楼\"></a>海岱楼</h2><p>这其实是个书阁，外观很漂亮</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/zibo_travel/%E6%B5%B7%E5%B2%B1%E6%A5%BC.png\" alt=\"海岱楼\" style=\"zoom:15%;\">\n\n<h2 id=\"淄博烧烤\"><a href=\"#淄博烧烤\" class=\"headerlink\" title=\"淄博烧烤\"></a>淄博烧烤</h2><p>比较赶时间，只吃了两家，一家看起来是连锁店</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/zibo_travel/%E5%B0%8F%E7%83%A7%E7%83%A4.png\" alt=\"小烧烤\" style=\"zoom:12%;\">\n\n<br>\n\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/zibo_travel/%E5%B0%8F%E7%83%A7%E7%83%A4(2).png\" alt=\"小烧烤(2)\" style=\"zoom:15%;\">\n\n<br>\n\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/zibo_travel/%E5%B0%8F%E7%83%A7%E7%83%A4(3).png\" alt=\"小烧烤(3)\" style=\"zoom:12%;\">\n\n<p>花了40来块钱买了一份套餐，本来以为已经蛮划算的了</p>\n<p>直到晚上那顿。。。</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/zibo_travel/%E5%B0%8F%E7%83%A7%E7%83%A4(4).png\" alt=\"小烧烤(4)\" style=\"zoom:25%;\">\n\n<p>80r这么多</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/zibo_travel/%E5%A4%A7%E7%83%A7%E7%83%A4.png\" alt=\"大烧烤\" style=\"zoom:25%;\">\n\n<p>哈哈哈~</p>\n<p>不过说实话，没点面皮就这么直接吃，有点腻了【当时想着点多了吃不完，事实上也确实没吃完】</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/zibo_travel/%E5%A4%A7%E7%83%A7%E7%83%A4(2).png\" alt=\"大烧烤(2)\" style=\"zoom:12%;\">\n\n<h2 id=\"LAST\"><a href=\"#LAST\" class=\"headerlink\" title=\"LAST\"></a>LAST</h2><p>至此，淄博的旅途就告一段落了，这一次由于交通工具、时间以及精力上的限制，我只游玩了张店区，我在这个地方做的攻略不是特别彻底，淄博看起来并不适合一个人来玩，吃烧烤这种事一个人吃不是很得劲。。。</p>\n<p>琉璃馆怎么说呢，很华丽，但不是特别值得大老远跑过来看。。。可能这个地方还是更适合组团或者自驾游，听说博山区的烧烤要更加出色。</p>\n<p>另外。。。我请问？？？</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/zibo_travel/image-20240724162657704.png\" alt=\"image-20240724162657704\" style=\"zoom: 33%;\">\n\n<br>\n\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/zibo_travel/image-20240725095327146.png\" alt=\"image-20240725095327146\" style=\"zoom:40%;\">\n\n<h4 id=\"小插曲\"><a href=\"#小插曲\" class=\"headerlink\" title=\"小插曲\"></a>小插曲</h4><blockquote>\n<p>1）定房间定错了，定的无窗房，太压抑了，哥们在济南奔波了一天来到淄博，进房间直接给干自闭了</p>\n<p>2）吃完烧烤，骑着电驴回旅店拿寄存的行李，结果发现时间没把握好【电瓶车限速太狠了】，差点错过高铁了，好在最后师傅足够给力，外加运气好高铁晚点，最后还是赶上了。</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/zibo_travel/image-20240725095442762.png\" alt=\"image-20240725095442762\" style=\"zoom:25%;\">\n</blockquote>\n","more":"<h2 id=\"行程记录\"><a href=\"#行程记录\" class=\"headerlink\" title=\"行程记录\"></a>行程记录</h2><figure class=\"highlight txt\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">6月23日：晴</span><br><span class=\"line\">08：40 骑电瓶车前往八大局便民市场</span><br><span class=\"line\">11：30 骑共享电动车前往齐风塔</span><br><span class=\"line\">12：15 打车前取吃午饭</span><br><span class=\"line\">14：00 骑共享电瓶车前往中国琉璃博物馆</span><br><span class=\"line\">17：00 骑电瓶车前往海岱楼</span><br><span class=\"line\">18：20 搓顿烧烤</span><br><span class=\"line\">19：05 骑车返回酒店拿行李</span><br><span class=\"line\">19：46 打车前往淄博站</span><br><span class=\"line\">20：15 乘坐班次G454前往泰安站</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"出行路线\"><a href=\"#出行路线\" class=\"headerlink\" title=\"出行路线\"></a>出行路线</h2><img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/zibo_travel/eb43fd68f43fd31e4d26e0f8586056c.png\" alt=\"eb43fd68f43fd31e4d26e0f8586056c\" style=\"zoom: 33%;\">\n\n<h2 id=\"八大局便民市场\"><a href=\"#八大局便民市场\" class=\"headerlink\" title=\"八大局便民市场\"></a>八大局便民市场</h2><img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/zibo_travel/%E5%85%AB%E5%A4%A7%E5%B1%80%E4%BE%BF%E6%B0%91%E5%B8%82%E5%9C%BA.png\" alt=\"八大局便民市场\" style=\"zoom:15%;\">\n\n<p>早上一大早骑车过来的，这里看上去像是一个巨大的集市，售卖各种小物件，琉璃，小吃等等。</p>\n<p>香酥牛奶棒，蓝莓味的，3r一个，还可以，外面口感吃起来像面包，其实味道和土司涂蓝莓酱真的很像。</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/zibo_travel/%E8%93%9D%E8%8E%93%E5%91%B3%E9%A6%99%E9%85%A5%E7%89%9B%E5%A5%B6%E6%A3%92.png\" alt=\"蓝莓味香酥牛奶棒\" style=\"zoom:15%;\">\n\n<p>抹茶味的紫米饼，12.3r一个，老板人很好，坚持要给我这么一大块，但说真的，谁能吃得下呢，尤其这天还特别热，啃一口太干了，带着又不方便，扔垃圾桶了，太可惜了，要是有试吃装就好了，味道其实挺不错的。</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/zibo_travel/%E7%B4%AB%E7%B1%B3%E9%A5%BC.png\" alt=\"紫米饼\" style=\"zoom: 15%;\">\n\n<p>锅盔饼，分量太大了，实在吃不完，口感脆脆的，适合当零食吃，后来吃不完扔烤肉店了。</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/zibo_travel/%E9%94%85%E7%9B%94%E9%A5%BC.png\" alt=\"锅盔饼\" style=\"zoom:15%;\">\n\n<p>路过买了一斤鲜啤，6r，味道很清爽，主要是天太热了，医生上次和我说戒烟酒戒辛辣，不要熬夜久坐，烟我是不抽的，以往夏天我会喝啤酒，但是医生这么说了，所以我也是隔了几个月没有喝过一滴酒【上一回喝是过年和家里亲戚喝的】，但是现在来到了山东，不搞一点其实也挺可惜的，姑且破一回例。</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/zibo_travel/%E5%95%A4%E9%85%92.png\" alt=\"啤酒\" style=\"zoom:25%;\">\n\n<p>从集市出来，买的琉璃小物件，其实还有一对龙虎，三个加在一起90多，那对龙虎买完就后悔了【不好看】</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/zibo_travel/%E7%90%89%E7%92%83%E5%B0%8F%E7%8C%AA.png\" alt=\"琉璃小猪\" style=\"zoom:25%;\">\n\n<h2 id=\"齐风塔\"><a href=\"#齐风塔\" class=\"headerlink\" title=\"齐风塔\"></a>齐风塔</h2><p>孝妇河湿地公园的标志建筑，但是天气太热加上路线似乎有点问题，我过去了之后没找到能直接进入的地方，所以远远地拍了一张照片就撤了。</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/zibo_travel/%E9%BD%90%E9%A3%8E%E5%A1%94.png\" alt=\"齐风塔\" style=\"zoom:15%;\">\n\n<h2 id=\"中国琉璃博物馆\"><a href=\"#中国琉璃博物馆\" class=\"headerlink\" title=\"中国琉璃博物馆\"></a>中国琉璃博物馆</h2><img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/zibo_travel/%E7%90%89%E7%92%83%E5%8D%9A%E7%89%A9%E9%A6%86.png\" alt=\"琉璃博物馆\" style=\"zoom:15%;\">\n\n<p>这里有中国的陶瓷发展史，包括了早期原始人用的瓦罐，瓦器等等，拍了一点图片。</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/zibo_travel/%E3%80%8A%E6%A8%8A%E5%8D%8E%E5%87%80%E7%95%8C%E3%80%8B%E7%8E%89%E5%87%80%E7%93%B6.png\" alt=\"《樊华净界》玉净瓶\" style=\"zoom:15%;\">\n\n<br>\n\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/zibo_travel/%E5%87%A4%E8%88%9E%E5%92%8C%E9%B8%A3%E5%9B%BD%E5%AE%B4%E7%94%A8%E7%93%B7.png\" alt=\"凤舞和鸣国宴用瓷\" style=\"zoom:10%;\">\n\n<br>\n\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/zibo_travel/%E9%B8%A1%E8%A1%80%E7%BA%A2%E8%A7%82%E9%9F%B3%E7%93%B6.png\" alt=\"鸡血红观音瓶\" style=\"zoom:15%;\">\n\n<br>\n\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/zibo_travel/%E9%B8%A1%E6%B2%B9%E9%BB%84%E9%95%8C%E5%88%BB%E7%BD%97%E6%B1%89%E5%9B%BE.png\" alt=\"鸡油黄镌刻罗汉图\" style=\"zoom:13%;\">\n\n<br>\n\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/zibo_travel/%E9%99%B6%E7%93%B7%E7%90%89%E7%92%83%E7%93%B6.png\" alt=\"陶瓷琉璃瓶\" style=\"zoom:15%;\">\n\n<br>\n\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/zibo_travel/%E9%99%B6%E7%93%B7%E9%BE%99%E8%99%BE.png\" alt=\"陶瓷龙虾\" style=\"zoom: 15%;\">\n\n<br>\n\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/zibo_travel/%E9%99%B6%E7%93%B7%E8%8C%89%E8%8E%89%E8%8A%B1.png\" alt=\"陶瓷茉莉花\" style=\"zoom:15%;\">\n\n<br>\n\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/zibo_travel/%E9%99%B6%E7%93%B7%E8%91%A1%E8%90%84.png\" alt=\"陶瓷葡萄\" style=\"zoom:15%;\">\n\n<br>\n\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/zibo_travel/%E5%BF%98%E8%AE%B0%E6%8B%8D%E5%90%8D%E5%AD%97%E4%BA%86%E7%9A%84%E7%93%B7%E7%93%B6.png\" alt=\"忘记拍名字了的瓷瓶\" style=\"zoom:13%;\">\n\n<br>\n\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/zibo_travel/%E5%BF%98%E8%AE%B0%E6%8B%8D%E5%90%8D%E5%AD%97%E4%BA%86%E7%9A%84%E7%93%B7%E5%99%A8.png\" alt=\"忘记拍名字了的瓷器\" style=\"zoom:10%;\">\n\n<h2 id=\"海岱楼\"><a href=\"#海岱楼\" class=\"headerlink\" title=\"海岱楼\"></a>海岱楼</h2><p>这其实是个书阁，外观很漂亮</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/zibo_travel/%E6%B5%B7%E5%B2%B1%E6%A5%BC.png\" alt=\"海岱楼\" style=\"zoom:15%;\">\n\n<h2 id=\"淄博烧烤\"><a href=\"#淄博烧烤\" class=\"headerlink\" title=\"淄博烧烤\"></a>淄博烧烤</h2><p>比较赶时间，只吃了两家，一家看起来是连锁店</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/zibo_travel/%E5%B0%8F%E7%83%A7%E7%83%A4.png\" alt=\"小烧烤\" style=\"zoom:12%;\">\n\n<br>\n\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/zibo_travel/%E5%B0%8F%E7%83%A7%E7%83%A4(2).png\" alt=\"小烧烤(2)\" style=\"zoom:15%;\">\n\n<br>\n\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/zibo_travel/%E5%B0%8F%E7%83%A7%E7%83%A4(3).png\" alt=\"小烧烤(3)\" style=\"zoom:12%;\">\n\n<p>花了40来块钱买了一份套餐，本来以为已经蛮划算的了</p>\n<p>直到晚上那顿。。。</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/zibo_travel/%E5%B0%8F%E7%83%A7%E7%83%A4(4).png\" alt=\"小烧烤(4)\" style=\"zoom:25%;\">\n\n<p>80r这么多</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/zibo_travel/%E5%A4%A7%E7%83%A7%E7%83%A4.png\" alt=\"大烧烤\" style=\"zoom:25%;\">\n\n<p>哈哈哈~</p>\n<p>不过说实话，没点面皮就这么直接吃，有点腻了【当时想着点多了吃不完，事实上也确实没吃完】</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/zibo_travel/%E5%A4%A7%E7%83%A7%E7%83%A4(2).png\" alt=\"大烧烤(2)\" style=\"zoom:12%;\">\n\n<h2 id=\"LAST\"><a href=\"#LAST\" class=\"headerlink\" title=\"LAST\"></a>LAST</h2><p>至此，淄博的旅途就告一段落了，这一次由于交通工具、时间以及精力上的限制，我只游玩了张店区，我在这个地方做的攻略不是特别彻底，淄博看起来并不适合一个人来玩，吃烧烤这种事一个人吃不是很得劲。。。</p>\n<p>琉璃馆怎么说呢，很华丽，但不是特别值得大老远跑过来看。。。可能这个地方还是更适合组团或者自驾游，听说博山区的烧烤要更加出色。</p>\n<p>另外。。。我请问？？？</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/zibo_travel/image-20240724162657704.png\" alt=\"image-20240724162657704\" style=\"zoom: 33%;\">\n\n<br>\n\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/zibo_travel/image-20240725095327146.png\" alt=\"image-20240725095327146\" style=\"zoom:40%;\">\n\n<h4 id=\"小插曲\"><a href=\"#小插曲\" class=\"headerlink\" title=\"小插曲\"></a>小插曲</h4><blockquote>\n<p>1）定房间定错了，定的无窗房，太压抑了，哥们在济南奔波了一天来到淄博，进房间直接给干自闭了</p>\n<p>2）吃完烧烤，骑着电驴回旅店拿寄存的行李，结果发现时间没把握好【电瓶车限速太狠了】，差点错过高铁了，好在最后师傅足够给力，外加运气好高铁晚点，最后还是赶上了。</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/zibo_travel/image-20240725095442762.png\" alt=\"image-20240725095442762\" style=\"zoom:25%;\">\n</blockquote>\n"},{"title":"东岳-泰山","date":"2024-07-25T06:31:00.000Z","thumbnail":"img/thumbnail/taishan.png","excerpt":"2024年6月24日到6月26号，到东岳泰山进行了游玩。","_content":"\n## 行程记录\n\n```txt\n6月24日：晴\n09：25 搓顿早饭\n11：30 到达酒店，洗个澡准备休息\n15：00 购买一些用品，准备出发\n15：27 到达红门游客中心\n17：13 到达中天门\n18：21 到达龙门\n18：40 到达升仙坊\n18：50 到达南天门\n19：00 到达天街\n19：25 日落\n20：26 到达玉皇顶，准备休息\n6月25日：晴\n04：00 被挤得站起来等日出\n05：00 观日出\n07：00 最后看了一眼瞻鲁台，日观峰，准备下山\n11：20 到达红门，打车返回酒店\n狠狠地休息\n17：30 前往县衙大院吃晚饭\n6月26日：晴\n08：00 前往县衙大院吃早饭\n09：20 到达岱庙\n10：45 前往县衙大院吃中饭\n13：14 乘坐高铁G1705返回虹桥\n```\n\n## 出行路线\n\n<center>“什么下山的索道是为上山的勇士准备的，<br>真男人都是红门进红门出”<br></center>\n\n<img src=\"/img/taishan_travel/%E7%99%BB%E5%B1%B1%E8%B7%AF%E7%BA%BF.png\" alt=\"登山路线\" style=\"zoom:25%;\" />\n\n## 中天门\n\n<img src=\"/img/taishan_travel/IMG_20240624_171323.jpg\" alt=\"IMG_20240624_171323\" style=\"zoom:15%;\" />\n\n中天门前大约走了两小时不到一点，地段较平整，甚至会感觉不需要登山杖也能轻松走到这里，这里由于可以直接大巴从天外村坐到这里，所以这里的水价格还是比较便宜的，10r/4瓶吧好像\n\n## 龙门\n\n<img src=\"/img/taishan_travel/IMG_20240624_182059.jpg\" alt=\"IMG_20240624_182059\" style=\"zoom:12%;\" />\n\n## 升仙坊\n\n<img src=\"/img/taishan_travel/IMG_20240624_184010.jpg\" alt=\"IMG_20240624_184010\" style=\"zoom:12%;\" />\n\n## 刻字\n\n<img src=\"/img/taishan_travel/IMG_20240624_173655_edit_62212043219672.jpg\" alt=\"IMG_20240624_173655_edit_62212043219672\" style=\"zoom:12%;\" />\n\n<br>\n\n<img src=\"/img/taishan_travel/IMG_20240624_175207_edit_62156931195202.jpg\" alt=\"IMG_20240624_175207_edit_62156931195202\" style=\"zoom:10%;\" />\n\n<br>\n\n<img src=\"/img/taishan_travel/IMG_20240625_063755.jpg\" alt=\"IMG_20240625_063755\" style=\"zoom:12%;\" />\n\n像这样的刻字在这个地方还有不计其数，如果要说最久远的，可能要数岱庙里李斯为秦二世的刻字了，那副刻字随着时间的消磨只剩寥寥几个字。\n\n<img src=\"/img/taishan_travel/image-20240726110457865.png\" alt=\"image-20240726110457865\" style=\"zoom: 40%;\" />\n\n<center>图片来源于网络</center>\n\n## 南天门-天街-玉皇顶\n\n<img src=\"/img/taishan_travel/IMG_20240624_185345_edit_62433046371201.jpg\" alt=\"IMG_20240624_185345_edit_62433046371201\" style=\"zoom:15%;\" />\n\n<center>路人大哥帮我拍的</center>\n\n<img src=\"/img/taishan_travel/IMG_20240624_190641.jpg\" alt=\"IMG_20240624_190641\" style=\"zoom:12%;\" />\n\n<br>\n\n<img src=\"/img/taishan_travel/Screenshot_20240624_223334_com.autonavi.minimap_e.jpg\" alt=\"Screenshot_20240624_223334_com.autonavi.minimap_e\" style=\"zoom:25%;\" />\n\n<br>\n\n<img src=\"/img/taishan_travel/Screenshot_20240624_202610_com.huawei.compass_edi.jpg\" alt=\"Screenshot_20240624_202610_com.huawei.compass_edi\" style=\"zoom:25%;\" />\n\n到南天门的时候正好赶上日落，夕阳颜色偏橙红，很绚丽但是没有特别大的温度\n\n<img src=\"/img/taishan_travel/IMG_20240624_185754.jpg\" alt=\"IMG_20240624_185754\" style=\"zoom:10%;\" />\n\n<br>\n\n<img src=\"/img/taishan_travel/南天门夕阳.jpg\" alt=\"IMG_20240624_192902_edit_61600039356224\" style=\"zoom:8%;\" />\n\n## 观日出\n\n在山顶裹着军大衣等了一晚上，100r押金，30r租金，人真的很多，玉皇顶上都没什么位置可以坐着，尤其到了4点，红旗一举，人群全站起来了，根本不敢坐在地上，怕被踩。。\n\n<img src=\"/img/taishan_travel/IMG_20240625_032804_edit_5404153770528.jpg\" alt=\"IMG_20240625_032804_edit_5404153770528\" style=\"zoom:15%;\" />\n\n虽然不太清楚这是为什么，但是太阳是从东北方向出来的，而不是东南方向，甚至我们还花了很长时间才找准方位；\n\n朝阳颜色比较清淡，从最初的小光点逐渐变亮，变黄，变得火热，直到7点钟开始，太阳的温度照在身上已经有滚烫的感觉；\n\n<img src=\"/img/taishan_travel/Collage_20240625_124523.jpg\" alt=\"Collage_20240625_124523\" style=\"zoom:18%;\" />\n\n<br>\n\n<img src=\"/img/taishan_travel/%E6%9C%9D%E9%98%B32.png\" alt=\"朝阳2\" style=\"zoom:17%;\" />\n\n这天还是日月同辉\n\n<img src=\"/img/taishan_travel/IMG_20240625_051334.jpg\" alt=\"IMG_20240625_051334\" style=\"zoom:10%;\" />\n\n人真的很多\n\n<img src=\"/img/taishan_travel/勇闯天涯.jpg\" alt=\"IMG_20240625_055243_edit_5254111300759\" style=\"zoom:10%;\" />\n\n泰山的气象站。\n\n<img src=\"/img/taishan_travel/IMG_20240625_043819.jpg\" alt=\"IMG_20240625_043819\" style=\"zoom:10%;\" />\n\n<br>\n\n<img src=\"/img/taishan_travel/IMG_20240625_051923.jpg\" alt=\"IMG_20240625_051923\" style=\"zoom:10%;\" />\n\n那路人姐说的一点没错，真的很难绷，真想删掉（**要黑化了**）\n\n<img src=\"/img/taishan_travel/mmexport1719446927162_edit_99879125112362.jpg\" alt=\"mmexport1719446927162_edit_99879125112362\" style=\"zoom:20%;\" />\n\n最后去瞻鲁台看了一眼，顾名思义，这个地方可以看见过去鲁国的境内（好像是这样）\n\n<img src=\"/img/taishan_travel/%E7%9E%BB%E9%B2%81%E5%8F%B0.png\" alt=\"瞻鲁台\" style=\"zoom:10%;\" />\n\n\n\n## 下山所见\n\n<img src=\"/img/taishan_travel/IMG_20240625_073157.jpg\" alt=\"IMG_20240625_073157\" style=\"zoom:12%;\" />\n\n刚出南天门前的阶梯上看到的，之前闷头爬是背对它的，下山才看到还有这样的风景，”一览众山小“大概就是这意思吧\n\n<img src=\"/img/taishan_travel/一览众山小.jpg\" alt=\"IMG_20240625_073447_edit_82847305208190\" style=\"zoom:10%;\" />\n\n从南天门往下走的商贩（南天门有索道可以到桃花源）\n\n<img src=\"/img/taishan_travel/IMG_20240625_073600.jpg\" alt=\"IMG_20240625_073600\" style=\"zoom:11%;\" />\n\n在龙门碰到的，好像是中国石油大学的博士，跟他妈妈一块过来的\n\n<img src=\"/img/taishan_travel/%E4%B8%8B%E5%B1%B1%E6%89%80%E8%A7%81%EF%BC%882%EF%BC%89.png\" alt=\"下山所见（2）\" style=\"zoom:12%;\" />\n\n下山途中碰到的小情侣组合\n\n<img src=\"/img/taishan_travel/%E4%B8%8B%E5%B1%B1%E6%89%80%E8%A7%81%EF%BC%881%EF%BC%89.png\" alt=\"下山所见（1）\" style=\"zoom:15%;\" />\n\n在中天门见到的，其实五元纸币上的情景是合成出来的，现实是找不到一模一样的地方的\n\n<img src=\"/img/taishan_travel/%E4%BA%94%E5%85%83%E7%BA%B8%E5%B8%81.png\" alt=\"五元纸币\" style=\"zoom:25%;\" />\n\n红门附近看到的，手机打鸟打不清楚，懒得修图了\n\n<img src=\"/img/taishan_travel/IMG_20240626_092948.jpg\" alt=\"IMG_20240626_092948\" style=\"zoom:10%;\" />\n\n## 岱庙\n\n传说中祭祀的地方，举行封禅大典的地方\n\n<img src=\"/img/taishan_travel/IMG_20240626_100914_edit_49982107513205.jpg\" alt=\"IMG_20240626_100914_edit_49982107513205\" style=\"zoom:15%;\" />\n\n<br>\n\n<img src=\"/img/taishan_travel/%E5%B2%B1%E5%BA%992.png\" alt=\"岱庙2\" style=\"zoom:13%;\" />\n\n这里没有过多的拍摄照片，毕竟还是很庄重的地方，泰山石自古就有真邪祟的说法，泰山更是被称作泰山奶奶的道场。\n\n在泰山最北边可以看到非常不错的景色。\n\n<img src=\"/img/taishan_travel/%E6%B3%B0%E5%B1%B1%E8%BF%9C%E6%99%AF.png\" alt=\"泰山远景\" style=\"zoom:15%;\" />\n\n## 县衙大院\n\n### 糁汤\n\n这里的特色，糁汤，味道很棒，微微咸口，而且这家店的规则是8块钱自主，面食和糁汤可以随便拿，但是吃多少拿多少。\n\n<img src=\"/img/taishan_travel/%E7%B3%81%E6%B1%A4.png\" alt=\"糁汤\" style=\"zoom:12%;\" />\n\n这个看起来，是用滚烫的羹汁（羹汁里有什么我并不清楚）去冲熟蛋液，再加入他们自制的姜末和醋，味道非常不错\n\n### 茶豆腐\n\n我怀疑我被骗了，但我没有证据，因为这个怎么吃味道都是普通臭豆腐，主要是老板自己表现出来的样子，好像他自己也不清楚茶豆腐是什么。\n\n<img src=\"/img/taishan_travel/IMG_20240626_104302.jpg\" alt=\"IMG_20240626_104302\" style=\"zoom:10%;\" />\n\n### 油酥火烧\n\n这个挺便宜的，味道也一般般吧，比较干巴，可能要搭配糁汤什么的一块吃。\n\n<img src=\"/img/taishan_travel/%E6%B2%B9%E9%85%A5%E7%81%AB%E7%83%A7.png\" alt=\"油酥火烧\" style=\"zoom:10%;\" />\n\n## LAST\n\n至此，为期6天（2024.6.21->2024.6.26)的山东毕业单人旅行就结束了，玩得可以说是非常尽兴啊，虽然也因为第一次出远门，经验不足，吃了不少亏，但总体来看这趟旅行还是非常不错的，见识到了自然风光也见到了人文文化。\n\n都说泰山专治嘴硬的人，我这一趟算不算合格了呢，嘿嘿嘿\n\n#### 小插曲\n\n> 1）6月24号刚到达泰山脚下，想着洗个澡休息一段时间再去爬山，结果手一拧莲蓬头，直接碎掉了，是的，直接碎掉了（呆若木鸡）\n>\n> 2）玉皇顶上人挤人，一开始人是躺着的，到了00点就只能坐着了，差不多2点开始就只能蜷着了，到后面就人叠人，我腰窝里还夹了一个女生的脑袋，腿压在另一个男的身上\n","source":"_posts/taishan_travel.md","raw":"---\ntitle: 东岳-泰山\ncategories:\n  - 生活记录\ndate: 2024-07-25 14:31\nthumbnail: \"img/thumbnail/taishan.png\"\nexcerpt: \"2024年6月24日到6月26号，到东岳泰山进行了游玩。\"\ntags:\n    - 旅途\n---\n\n## 行程记录\n\n```txt\n6月24日：晴\n09：25 搓顿早饭\n11：30 到达酒店，洗个澡准备休息\n15：00 购买一些用品，准备出发\n15：27 到达红门游客中心\n17：13 到达中天门\n18：21 到达龙门\n18：40 到达升仙坊\n18：50 到达南天门\n19：00 到达天街\n19：25 日落\n20：26 到达玉皇顶，准备休息\n6月25日：晴\n04：00 被挤得站起来等日出\n05：00 观日出\n07：00 最后看了一眼瞻鲁台，日观峰，准备下山\n11：20 到达红门，打车返回酒店\n狠狠地休息\n17：30 前往县衙大院吃晚饭\n6月26日：晴\n08：00 前往县衙大院吃早饭\n09：20 到达岱庙\n10：45 前往县衙大院吃中饭\n13：14 乘坐高铁G1705返回虹桥\n```\n\n## 出行路线\n\n<center>“什么下山的索道是为上山的勇士准备的，<br>真男人都是红门进红门出”<br></center>\n\n<img src=\"/img/taishan_travel/%E7%99%BB%E5%B1%B1%E8%B7%AF%E7%BA%BF.png\" alt=\"登山路线\" style=\"zoom:25%;\" />\n\n## 中天门\n\n<img src=\"/img/taishan_travel/IMG_20240624_171323.jpg\" alt=\"IMG_20240624_171323\" style=\"zoom:15%;\" />\n\n中天门前大约走了两小时不到一点，地段较平整，甚至会感觉不需要登山杖也能轻松走到这里，这里由于可以直接大巴从天外村坐到这里，所以这里的水价格还是比较便宜的，10r/4瓶吧好像\n\n## 龙门\n\n<img src=\"/img/taishan_travel/IMG_20240624_182059.jpg\" alt=\"IMG_20240624_182059\" style=\"zoom:12%;\" />\n\n## 升仙坊\n\n<img src=\"/img/taishan_travel/IMG_20240624_184010.jpg\" alt=\"IMG_20240624_184010\" style=\"zoom:12%;\" />\n\n## 刻字\n\n<img src=\"/img/taishan_travel/IMG_20240624_173655_edit_62212043219672.jpg\" alt=\"IMG_20240624_173655_edit_62212043219672\" style=\"zoom:12%;\" />\n\n<br>\n\n<img src=\"/img/taishan_travel/IMG_20240624_175207_edit_62156931195202.jpg\" alt=\"IMG_20240624_175207_edit_62156931195202\" style=\"zoom:10%;\" />\n\n<br>\n\n<img src=\"/img/taishan_travel/IMG_20240625_063755.jpg\" alt=\"IMG_20240625_063755\" style=\"zoom:12%;\" />\n\n像这样的刻字在这个地方还有不计其数，如果要说最久远的，可能要数岱庙里李斯为秦二世的刻字了，那副刻字随着时间的消磨只剩寥寥几个字。\n\n<img src=\"/img/taishan_travel/image-20240726110457865.png\" alt=\"image-20240726110457865\" style=\"zoom: 40%;\" />\n\n<center>图片来源于网络</center>\n\n## 南天门-天街-玉皇顶\n\n<img src=\"/img/taishan_travel/IMG_20240624_185345_edit_62433046371201.jpg\" alt=\"IMG_20240624_185345_edit_62433046371201\" style=\"zoom:15%;\" />\n\n<center>路人大哥帮我拍的</center>\n\n<img src=\"/img/taishan_travel/IMG_20240624_190641.jpg\" alt=\"IMG_20240624_190641\" style=\"zoom:12%;\" />\n\n<br>\n\n<img src=\"/img/taishan_travel/Screenshot_20240624_223334_com.autonavi.minimap_e.jpg\" alt=\"Screenshot_20240624_223334_com.autonavi.minimap_e\" style=\"zoom:25%;\" />\n\n<br>\n\n<img src=\"/img/taishan_travel/Screenshot_20240624_202610_com.huawei.compass_edi.jpg\" alt=\"Screenshot_20240624_202610_com.huawei.compass_edi\" style=\"zoom:25%;\" />\n\n到南天门的时候正好赶上日落，夕阳颜色偏橙红，很绚丽但是没有特别大的温度\n\n<img src=\"/img/taishan_travel/IMG_20240624_185754.jpg\" alt=\"IMG_20240624_185754\" style=\"zoom:10%;\" />\n\n<br>\n\n<img src=\"/img/taishan_travel/南天门夕阳.jpg\" alt=\"IMG_20240624_192902_edit_61600039356224\" style=\"zoom:8%;\" />\n\n## 观日出\n\n在山顶裹着军大衣等了一晚上，100r押金，30r租金，人真的很多，玉皇顶上都没什么位置可以坐着，尤其到了4点，红旗一举，人群全站起来了，根本不敢坐在地上，怕被踩。。\n\n<img src=\"/img/taishan_travel/IMG_20240625_032804_edit_5404153770528.jpg\" alt=\"IMG_20240625_032804_edit_5404153770528\" style=\"zoom:15%;\" />\n\n虽然不太清楚这是为什么，但是太阳是从东北方向出来的，而不是东南方向，甚至我们还花了很长时间才找准方位；\n\n朝阳颜色比较清淡，从最初的小光点逐渐变亮，变黄，变得火热，直到7点钟开始，太阳的温度照在身上已经有滚烫的感觉；\n\n<img src=\"/img/taishan_travel/Collage_20240625_124523.jpg\" alt=\"Collage_20240625_124523\" style=\"zoom:18%;\" />\n\n<br>\n\n<img src=\"/img/taishan_travel/%E6%9C%9D%E9%98%B32.png\" alt=\"朝阳2\" style=\"zoom:17%;\" />\n\n这天还是日月同辉\n\n<img src=\"/img/taishan_travel/IMG_20240625_051334.jpg\" alt=\"IMG_20240625_051334\" style=\"zoom:10%;\" />\n\n人真的很多\n\n<img src=\"/img/taishan_travel/勇闯天涯.jpg\" alt=\"IMG_20240625_055243_edit_5254111300759\" style=\"zoom:10%;\" />\n\n泰山的气象站。\n\n<img src=\"/img/taishan_travel/IMG_20240625_043819.jpg\" alt=\"IMG_20240625_043819\" style=\"zoom:10%;\" />\n\n<br>\n\n<img src=\"/img/taishan_travel/IMG_20240625_051923.jpg\" alt=\"IMG_20240625_051923\" style=\"zoom:10%;\" />\n\n那路人姐说的一点没错，真的很难绷，真想删掉（**要黑化了**）\n\n<img src=\"/img/taishan_travel/mmexport1719446927162_edit_99879125112362.jpg\" alt=\"mmexport1719446927162_edit_99879125112362\" style=\"zoom:20%;\" />\n\n最后去瞻鲁台看了一眼，顾名思义，这个地方可以看见过去鲁国的境内（好像是这样）\n\n<img src=\"/img/taishan_travel/%E7%9E%BB%E9%B2%81%E5%8F%B0.png\" alt=\"瞻鲁台\" style=\"zoom:10%;\" />\n\n\n\n## 下山所见\n\n<img src=\"/img/taishan_travel/IMG_20240625_073157.jpg\" alt=\"IMG_20240625_073157\" style=\"zoom:12%;\" />\n\n刚出南天门前的阶梯上看到的，之前闷头爬是背对它的，下山才看到还有这样的风景，”一览众山小“大概就是这意思吧\n\n<img src=\"/img/taishan_travel/一览众山小.jpg\" alt=\"IMG_20240625_073447_edit_82847305208190\" style=\"zoom:10%;\" />\n\n从南天门往下走的商贩（南天门有索道可以到桃花源）\n\n<img src=\"/img/taishan_travel/IMG_20240625_073600.jpg\" alt=\"IMG_20240625_073600\" style=\"zoom:11%;\" />\n\n在龙门碰到的，好像是中国石油大学的博士，跟他妈妈一块过来的\n\n<img src=\"/img/taishan_travel/%E4%B8%8B%E5%B1%B1%E6%89%80%E8%A7%81%EF%BC%882%EF%BC%89.png\" alt=\"下山所见（2）\" style=\"zoom:12%;\" />\n\n下山途中碰到的小情侣组合\n\n<img src=\"/img/taishan_travel/%E4%B8%8B%E5%B1%B1%E6%89%80%E8%A7%81%EF%BC%881%EF%BC%89.png\" alt=\"下山所见（1）\" style=\"zoom:15%;\" />\n\n在中天门见到的，其实五元纸币上的情景是合成出来的，现实是找不到一模一样的地方的\n\n<img src=\"/img/taishan_travel/%E4%BA%94%E5%85%83%E7%BA%B8%E5%B8%81.png\" alt=\"五元纸币\" style=\"zoom:25%;\" />\n\n红门附近看到的，手机打鸟打不清楚，懒得修图了\n\n<img src=\"/img/taishan_travel/IMG_20240626_092948.jpg\" alt=\"IMG_20240626_092948\" style=\"zoom:10%;\" />\n\n## 岱庙\n\n传说中祭祀的地方，举行封禅大典的地方\n\n<img src=\"/img/taishan_travel/IMG_20240626_100914_edit_49982107513205.jpg\" alt=\"IMG_20240626_100914_edit_49982107513205\" style=\"zoom:15%;\" />\n\n<br>\n\n<img src=\"/img/taishan_travel/%E5%B2%B1%E5%BA%992.png\" alt=\"岱庙2\" style=\"zoom:13%;\" />\n\n这里没有过多的拍摄照片，毕竟还是很庄重的地方，泰山石自古就有真邪祟的说法，泰山更是被称作泰山奶奶的道场。\n\n在泰山最北边可以看到非常不错的景色。\n\n<img src=\"/img/taishan_travel/%E6%B3%B0%E5%B1%B1%E8%BF%9C%E6%99%AF.png\" alt=\"泰山远景\" style=\"zoom:15%;\" />\n\n## 县衙大院\n\n### 糁汤\n\n这里的特色，糁汤，味道很棒，微微咸口，而且这家店的规则是8块钱自主，面食和糁汤可以随便拿，但是吃多少拿多少。\n\n<img src=\"/img/taishan_travel/%E7%B3%81%E6%B1%A4.png\" alt=\"糁汤\" style=\"zoom:12%;\" />\n\n这个看起来，是用滚烫的羹汁（羹汁里有什么我并不清楚）去冲熟蛋液，再加入他们自制的姜末和醋，味道非常不错\n\n### 茶豆腐\n\n我怀疑我被骗了，但我没有证据，因为这个怎么吃味道都是普通臭豆腐，主要是老板自己表现出来的样子，好像他自己也不清楚茶豆腐是什么。\n\n<img src=\"/img/taishan_travel/IMG_20240626_104302.jpg\" alt=\"IMG_20240626_104302\" style=\"zoom:10%;\" />\n\n### 油酥火烧\n\n这个挺便宜的，味道也一般般吧，比较干巴，可能要搭配糁汤什么的一块吃。\n\n<img src=\"/img/taishan_travel/%E6%B2%B9%E9%85%A5%E7%81%AB%E7%83%A7.png\" alt=\"油酥火烧\" style=\"zoom:10%;\" />\n\n## LAST\n\n至此，为期6天（2024.6.21->2024.6.26)的山东毕业单人旅行就结束了，玩得可以说是非常尽兴啊，虽然也因为第一次出远门，经验不足，吃了不少亏，但总体来看这趟旅行还是非常不错的，见识到了自然风光也见到了人文文化。\n\n都说泰山专治嘴硬的人，我这一趟算不算合格了呢，嘿嘿嘿\n\n#### 小插曲\n\n> 1）6月24号刚到达泰山脚下，想着洗个澡休息一段时间再去爬山，结果手一拧莲蓬头，直接碎掉了，是的，直接碎掉了（呆若木鸡）\n>\n> 2）玉皇顶上人挤人，一开始人是躺着的，到了00点就只能坐着了，差不多2点开始就只能蜷着了，到后面就人叠人，我腰窝里还夹了一个女生的脑袋，腿压在另一个男的身上\n","slug":"taishan_travel","published":1,"updated":"2024-08-24T07:03:01.916Z","comments":1,"layout":"post","photos":[],"_id":"cm0b0qx7u001pjwurav5c4jmg","content":"<h2 id=\"行程记录\"><a href=\"#行程记录\" class=\"headerlink\" title=\"行程记录\"></a>行程记录</h2><div class=\"highlight-container\" data-rel=\"Txt\"><figure class=\"iseeu highlight txt\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">6月24日：晴</span><br><span class=\"line\">09：25 搓顿早饭</span><br><span class=\"line\">11：30 到达酒店，洗个澡准备休息</span><br><span class=\"line\">15：00 购买一些用品，准备出发</span><br><span class=\"line\">15：27 到达红门游客中心</span><br><span class=\"line\">17：13 到达中天门</span><br><span class=\"line\">18：21 到达龙门</span><br><span class=\"line\">18：40 到达升仙坊</span><br><span class=\"line\">18：50 到达南天门</span><br><span class=\"line\">19：00 到达天街</span><br><span class=\"line\">19：25 日落</span><br><span class=\"line\">20：26 到达玉皇顶，准备休息</span><br><span class=\"line\">6月25日：晴</span><br><span class=\"line\">04：00 被挤得站起来等日出</span><br><span class=\"line\">05：00 观日出</span><br><span class=\"line\">07：00 最后看了一眼瞻鲁台，日观峰，准备下山</span><br><span class=\"line\">11：20 到达红门，打车返回酒店</span><br><span class=\"line\">狠狠地休息</span><br><span class=\"line\">17：30 前往县衙大院吃晚饭</span><br><span class=\"line\">6月26日：晴</span><br><span class=\"line\">08：00 前往县衙大院吃早饭</span><br><span class=\"line\">09：20 到达岱庙</span><br><span class=\"line\">10：45 前往县衙大院吃中饭</span><br><span class=\"line\">13：14 乘坐高铁G1705返回虹桥</span><br></pre></td></tr></table></figure></div>\n\n<h2 id=\"出行路线\"><a href=\"#出行路线\" class=\"headerlink\" title=\"出行路线\"></a>出行路线</h2><center>“什么下山的索道是为上山的勇士准备的，<br>真男人都是红门进红门出”<br></center>\n\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/taishan_travel/%E7%99%BB%E5%B1%B1%E8%B7%AF%E7%BA%BF.png\" alt=\"登山路线\" style=\"zoom:25%;\">\n\n<h2 id=\"中天门\"><a href=\"#中天门\" class=\"headerlink\" title=\"中天门\"></a>中天门</h2><img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/taishan_travel/IMG_20240624_171323.jpg\" alt=\"IMG_20240624_171323\" style=\"zoom:15%;\">\n\n<p>中天门前大约走了两小时不到一点，地段较平整，甚至会感觉不需要登山杖也能轻松走到这里，这里由于可以直接大巴从天外村坐到这里，所以这里的水价格还是比较便宜的，10r/4瓶吧好像</p>\n<h2 id=\"龙门\"><a href=\"#龙门\" class=\"headerlink\" title=\"龙门\"></a>龙门</h2><img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/taishan_travel/IMG_20240624_182059.jpg\" alt=\"IMG_20240624_182059\" style=\"zoom:12%;\">\n\n<h2 id=\"升仙坊\"><a href=\"#升仙坊\" class=\"headerlink\" title=\"升仙坊\"></a>升仙坊</h2><img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/taishan_travel/IMG_20240624_184010.jpg\" alt=\"IMG_20240624_184010\" style=\"zoom:12%;\">\n\n<h2 id=\"刻字\"><a href=\"#刻字\" class=\"headerlink\" title=\"刻字\"></a>刻字</h2><img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/taishan_travel/IMG_20240624_173655_edit_62212043219672.jpg\" alt=\"IMG_20240624_173655_edit_62212043219672\" style=\"zoom:12%;\">\n\n<br>\n\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/taishan_travel/IMG_20240624_175207_edit_62156931195202.jpg\" alt=\"IMG_20240624_175207_edit_62156931195202\" style=\"zoom:10%;\">\n\n<br>\n\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/taishan_travel/IMG_20240625_063755.jpg\" alt=\"IMG_20240625_063755\" style=\"zoom:12%;\">\n\n<p>像这样的刻字在这个地方还有不计其数，如果要说最久远的，可能要数岱庙里李斯为秦二世的刻字了，那副刻字随着时间的消磨只剩寥寥几个字。</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/taishan_travel/image-20240726110457865.png\" alt=\"image-20240726110457865\" style=\"zoom: 40%;\">\n\n<center>图片来源于网络</center>\n\n<h2 id=\"南天门-天街-玉皇顶\"><a href=\"#南天门-天街-玉皇顶\" class=\"headerlink\" title=\"南天门-天街-玉皇顶\"></a>南天门-天街-玉皇顶</h2><img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/taishan_travel/IMG_20240624_185345_edit_62433046371201.jpg\" alt=\"IMG_20240624_185345_edit_62433046371201\" style=\"zoom:15%;\">\n\n<center>路人大哥帮我拍的</center>\n\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/taishan_travel/IMG_20240624_190641.jpg\" alt=\"IMG_20240624_190641\" style=\"zoom:12%;\">\n\n<br>\n\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/taishan_travel/Screenshot_20240624_223334_com.autonavi.minimap_e.jpg\" alt=\"Screenshot_20240624_223334_com.autonavi.minimap_e\" style=\"zoom:25%;\">\n\n<br>\n\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/taishan_travel/Screenshot_20240624_202610_com.huawei.compass_edi.jpg\" alt=\"Screenshot_20240624_202610_com.huawei.compass_edi\" style=\"zoom:25%;\">\n\n<p>到南天门的时候正好赶上日落，夕阳颜色偏橙红，很绚丽但是没有特别大的温度</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/taishan_travel/IMG_20240624_185754.jpg\" alt=\"IMG_20240624_185754\" style=\"zoom:10%;\">\n\n<br>\n\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/taishan_travel/南天门夕阳.jpg\" alt=\"IMG_20240624_192902_edit_61600039356224\" style=\"zoom:8%;\">\n\n<h2 id=\"观日出\"><a href=\"#观日出\" class=\"headerlink\" title=\"观日出\"></a>观日出</h2><p>在山顶裹着军大衣等了一晚上，100r押金，30r租金，人真的很多，玉皇顶上都没什么位置可以坐着，尤其到了4点，红旗一举，人群全站起来了，根本不敢坐在地上，怕被踩。。</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/taishan_travel/IMG_20240625_032804_edit_5404153770528.jpg\" alt=\"IMG_20240625_032804_edit_5404153770528\" style=\"zoom:15%;\">\n\n<p>虽然不太清楚这是为什么，但是太阳是从东北方向出来的，而不是东南方向，甚至我们还花了很长时间才找准方位；</p>\n<p>朝阳颜色比较清淡，从最初的小光点逐渐变亮，变黄，变得火热，直到7点钟开始，太阳的温度照在身上已经有滚烫的感觉；</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/taishan_travel/Collage_20240625_124523.jpg\" alt=\"Collage_20240625_124523\" style=\"zoom:18%;\">\n\n<br>\n\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/taishan_travel/%E6%9C%9D%E9%98%B32.png\" alt=\"朝阳2\" style=\"zoom:17%;\">\n\n<p>这天还是日月同辉</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/taishan_travel/IMG_20240625_051334.jpg\" alt=\"IMG_20240625_051334\" style=\"zoom:10%;\">\n\n<p>人真的很多</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/taishan_travel/勇闯天涯.jpg\" alt=\"IMG_20240625_055243_edit_5254111300759\" style=\"zoom:10%;\">\n\n<p>泰山的气象站。</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/taishan_travel/IMG_20240625_043819.jpg\" alt=\"IMG_20240625_043819\" style=\"zoom:10%;\">\n\n<br>\n\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/taishan_travel/IMG_20240625_051923.jpg\" alt=\"IMG_20240625_051923\" style=\"zoom:10%;\">\n\n<p>那路人姐说的一点没错，真的很难绷，真想删掉（<strong>要黑化了</strong>）</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/taishan_travel/mmexport1719446927162_edit_99879125112362.jpg\" alt=\"mmexport1719446927162_edit_99879125112362\" style=\"zoom:20%;\">\n\n<p>最后去瞻鲁台看了一眼，顾名思义，这个地方可以看见过去鲁国的境内（好像是这样）</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/taishan_travel/%E7%9E%BB%E9%B2%81%E5%8F%B0.png\" alt=\"瞻鲁台\" style=\"zoom:10%;\">\n\n\n\n<h2 id=\"下山所见\"><a href=\"#下山所见\" class=\"headerlink\" title=\"下山所见\"></a>下山所见</h2><img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/taishan_travel/IMG_20240625_073157.jpg\" alt=\"IMG_20240625_073157\" style=\"zoom:12%;\">\n\n<p>刚出南天门前的阶梯上看到的，之前闷头爬是背对它的，下山才看到还有这样的风景，”一览众山小“大概就是这意思吧</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/taishan_travel/一览众山小.jpg\" alt=\"IMG_20240625_073447_edit_82847305208190\" style=\"zoom:10%;\">\n\n<p>从南天门往下走的商贩（南天门有索道可以到桃花源）</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/taishan_travel/IMG_20240625_073600.jpg\" alt=\"IMG_20240625_073600\" style=\"zoom:11%;\">\n\n<p>在龙门碰到的，好像是中国石油大学的博士，跟他妈妈一块过来的</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/taishan_travel/%E4%B8%8B%E5%B1%B1%E6%89%80%E8%A7%81%EF%BC%882%EF%BC%89.png\" alt=\"下山所见（2）\" style=\"zoom:12%;\">\n\n<p>下山途中碰到的小情侣组合</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/taishan_travel/%E4%B8%8B%E5%B1%B1%E6%89%80%E8%A7%81%EF%BC%881%EF%BC%89.png\" alt=\"下山所见（1）\" style=\"zoom:15%;\">\n\n<p>在中天门见到的，其实五元纸币上的情景是合成出来的，现实是找不到一模一样的地方的</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/taishan_travel/%E4%BA%94%E5%85%83%E7%BA%B8%E5%B8%81.png\" alt=\"五元纸币\" style=\"zoom:25%;\">\n\n<p>红门附近看到的，手机打鸟打不清楚，懒得修图了</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/taishan_travel/IMG_20240626_092948.jpg\" alt=\"IMG_20240626_092948\" style=\"zoom:10%;\">\n\n<h2 id=\"岱庙\"><a href=\"#岱庙\" class=\"headerlink\" title=\"岱庙\"></a>岱庙</h2><p>传说中祭祀的地方，举行封禅大典的地方</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/taishan_travel/IMG_20240626_100914_edit_49982107513205.jpg\" alt=\"IMG_20240626_100914_edit_49982107513205\" style=\"zoom:15%;\">\n\n<br>\n\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/taishan_travel/%E5%B2%B1%E5%BA%992.png\" alt=\"岱庙2\" style=\"zoom:13%;\">\n\n<p>这里没有过多的拍摄照片，毕竟还是很庄重的地方，泰山石自古就有真邪祟的说法，泰山更是被称作泰山奶奶的道场。</p>\n<p>在泰山最北边可以看到非常不错的景色。</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/taishan_travel/%E6%B3%B0%E5%B1%B1%E8%BF%9C%E6%99%AF.png\" alt=\"泰山远景\" style=\"zoom:15%;\">\n\n<h2 id=\"县衙大院\"><a href=\"#县衙大院\" class=\"headerlink\" title=\"县衙大院\"></a>县衙大院</h2><h3 id=\"糁汤\"><a href=\"#糁汤\" class=\"headerlink\" title=\"糁汤\"></a>糁汤</h3><p>这里的特色，糁汤，味道很棒，微微咸口，而且这家店的规则是8块钱自主，面食和糁汤可以随便拿，但是吃多少拿多少。</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/taishan_travel/%E7%B3%81%E6%B1%A4.png\" alt=\"糁汤\" style=\"zoom:12%;\">\n\n<p>这个看起来，是用滚烫的羹汁（羹汁里有什么我并不清楚）去冲熟蛋液，再加入他们自制的姜末和醋，味道非常不错</p>\n<h3 id=\"茶豆腐\"><a href=\"#茶豆腐\" class=\"headerlink\" title=\"茶豆腐\"></a>茶豆腐</h3><p>我怀疑我被骗了，但我没有证据，因为这个怎么吃味道都是普通臭豆腐，主要是老板自己表现出来的样子，好像他自己也不清楚茶豆腐是什么。</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/taishan_travel/IMG_20240626_104302.jpg\" alt=\"IMG_20240626_104302\" style=\"zoom:10%;\">\n\n<h3 id=\"油酥火烧\"><a href=\"#油酥火烧\" class=\"headerlink\" title=\"油酥火烧\"></a>油酥火烧</h3><p>这个挺便宜的，味道也一般般吧，比较干巴，可能要搭配糁汤什么的一块吃。</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/taishan_travel/%E6%B2%B9%E9%85%A5%E7%81%AB%E7%83%A7.png\" alt=\"油酥火烧\" style=\"zoom:10%;\">\n\n<h2 id=\"LAST\"><a href=\"#LAST\" class=\"headerlink\" title=\"LAST\"></a>LAST</h2><p>至此，为期6天（2024.6.21-&gt;2024.6.26)的山东毕业单人旅行就结束了，玩得可以说是非常尽兴啊，虽然也因为第一次出远门，经验不足，吃了不少亏，但总体来看这趟旅行还是非常不错的，见识到了自然风光也见到了人文文化。</p>\n<p>都说泰山专治嘴硬的人，我这一趟算不算合格了呢，嘿嘿嘿</p>\n<h4 id=\"小插曲\"><a href=\"#小插曲\" class=\"headerlink\" title=\"小插曲\"></a>小插曲</h4><blockquote>\n<p>1）6月24号刚到达泰山脚下，想着洗个澡休息一段时间再去爬山，结果手一拧莲蓬头，直接碎掉了，是的，直接碎掉了（呆若木鸡）</p>\n<p>2）玉皇顶上人挤人，一开始人是躺着的，到了00点就只能坐着了，差不多2点开始就只能蜷着了，到后面就人叠人，我腰窝里还夹了一个女生的脑袋，腿压在另一个男的身上</p>\n</blockquote>\n","more":"<h2 id=\"行程记录\"><a href=\"#行程记录\" class=\"headerlink\" title=\"行程记录\"></a>行程记录</h2><figure class=\"highlight txt\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">6月24日：晴</span><br><span class=\"line\">09：25 搓顿早饭</span><br><span class=\"line\">11：30 到达酒店，洗个澡准备休息</span><br><span class=\"line\">15：00 购买一些用品，准备出发</span><br><span class=\"line\">15：27 到达红门游客中心</span><br><span class=\"line\">17：13 到达中天门</span><br><span class=\"line\">18：21 到达龙门</span><br><span class=\"line\">18：40 到达升仙坊</span><br><span class=\"line\">18：50 到达南天门</span><br><span class=\"line\">19：00 到达天街</span><br><span class=\"line\">19：25 日落</span><br><span class=\"line\">20：26 到达玉皇顶，准备休息</span><br><span class=\"line\">6月25日：晴</span><br><span class=\"line\">04：00 被挤得站起来等日出</span><br><span class=\"line\">05：00 观日出</span><br><span class=\"line\">07：00 最后看了一眼瞻鲁台，日观峰，准备下山</span><br><span class=\"line\">11：20 到达红门，打车返回酒店</span><br><span class=\"line\">狠狠地休息</span><br><span class=\"line\">17：30 前往县衙大院吃晚饭</span><br><span class=\"line\">6月26日：晴</span><br><span class=\"line\">08：00 前往县衙大院吃早饭</span><br><span class=\"line\">09：20 到达岱庙</span><br><span class=\"line\">10：45 前往县衙大院吃中饭</span><br><span class=\"line\">13：14 乘坐高铁G1705返回虹桥</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"出行路线\"><a href=\"#出行路线\" class=\"headerlink\" title=\"出行路线\"></a>出行路线</h2><center>“什么下山的索道是为上山的勇士准备的，<br>真男人都是红门进红门出”<br></center>\n\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/taishan_travel/%E7%99%BB%E5%B1%B1%E8%B7%AF%E7%BA%BF.png\" alt=\"登山路线\" style=\"zoom:25%;\">\n\n<h2 id=\"中天门\"><a href=\"#中天门\" class=\"headerlink\" title=\"中天门\"></a>中天门</h2><img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/taishan_travel/IMG_20240624_171323.jpg\" alt=\"IMG_20240624_171323\" style=\"zoom:15%;\">\n\n<p>中天门前大约走了两小时不到一点，地段较平整，甚至会感觉不需要登山杖也能轻松走到这里，这里由于可以直接大巴从天外村坐到这里，所以这里的水价格还是比较便宜的，10r/4瓶吧好像</p>\n<h2 id=\"龙门\"><a href=\"#龙门\" class=\"headerlink\" title=\"龙门\"></a>龙门</h2><img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/taishan_travel/IMG_20240624_182059.jpg\" alt=\"IMG_20240624_182059\" style=\"zoom:12%;\">\n\n<h2 id=\"升仙坊\"><a href=\"#升仙坊\" class=\"headerlink\" title=\"升仙坊\"></a>升仙坊</h2><img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/taishan_travel/IMG_20240624_184010.jpg\" alt=\"IMG_20240624_184010\" style=\"zoom:12%;\">\n\n<h2 id=\"刻字\"><a href=\"#刻字\" class=\"headerlink\" title=\"刻字\"></a>刻字</h2><img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/taishan_travel/IMG_20240624_173655_edit_62212043219672.jpg\" alt=\"IMG_20240624_173655_edit_62212043219672\" style=\"zoom:12%;\">\n\n<br>\n\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/taishan_travel/IMG_20240624_175207_edit_62156931195202.jpg\" alt=\"IMG_20240624_175207_edit_62156931195202\" style=\"zoom:10%;\">\n\n<br>\n\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/taishan_travel/IMG_20240625_063755.jpg\" alt=\"IMG_20240625_063755\" style=\"zoom:12%;\">\n\n<p>像这样的刻字在这个地方还有不计其数，如果要说最久远的，可能要数岱庙里李斯为秦二世的刻字了，那副刻字随着时间的消磨只剩寥寥几个字。</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/taishan_travel/image-20240726110457865.png\" alt=\"image-20240726110457865\" style=\"zoom: 40%;\">\n\n<center>图片来源于网络</center>\n\n<h2 id=\"南天门-天街-玉皇顶\"><a href=\"#南天门-天街-玉皇顶\" class=\"headerlink\" title=\"南天门-天街-玉皇顶\"></a>南天门-天街-玉皇顶</h2><img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/taishan_travel/IMG_20240624_185345_edit_62433046371201.jpg\" alt=\"IMG_20240624_185345_edit_62433046371201\" style=\"zoom:15%;\">\n\n<center>路人大哥帮我拍的</center>\n\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/taishan_travel/IMG_20240624_190641.jpg\" alt=\"IMG_20240624_190641\" style=\"zoom:12%;\">\n\n<br>\n\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/taishan_travel/Screenshot_20240624_223334_com.autonavi.minimap_e.jpg\" alt=\"Screenshot_20240624_223334_com.autonavi.minimap_e\" style=\"zoom:25%;\">\n\n<br>\n\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/taishan_travel/Screenshot_20240624_202610_com.huawei.compass_edi.jpg\" alt=\"Screenshot_20240624_202610_com.huawei.compass_edi\" style=\"zoom:25%;\">\n\n<p>到南天门的时候正好赶上日落，夕阳颜色偏橙红，很绚丽但是没有特别大的温度</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/taishan_travel/IMG_20240624_185754.jpg\" alt=\"IMG_20240624_185754\" style=\"zoom:10%;\">\n\n<br>\n\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/taishan_travel/南天门夕阳.jpg\" alt=\"IMG_20240624_192902_edit_61600039356224\" style=\"zoom:8%;\">\n\n<h2 id=\"观日出\"><a href=\"#观日出\" class=\"headerlink\" title=\"观日出\"></a>观日出</h2><p>在山顶裹着军大衣等了一晚上，100r押金，30r租金，人真的很多，玉皇顶上都没什么位置可以坐着，尤其到了4点，红旗一举，人群全站起来了，根本不敢坐在地上，怕被踩。。</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/taishan_travel/IMG_20240625_032804_edit_5404153770528.jpg\" alt=\"IMG_20240625_032804_edit_5404153770528\" style=\"zoom:15%;\">\n\n<p>虽然不太清楚这是为什么，但是太阳是从东北方向出来的，而不是东南方向，甚至我们还花了很长时间才找准方位；</p>\n<p>朝阳颜色比较清淡，从最初的小光点逐渐变亮，变黄，变得火热，直到7点钟开始，太阳的温度照在身上已经有滚烫的感觉；</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/taishan_travel/Collage_20240625_124523.jpg\" alt=\"Collage_20240625_124523\" style=\"zoom:18%;\">\n\n<br>\n\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/taishan_travel/%E6%9C%9D%E9%98%B32.png\" alt=\"朝阳2\" style=\"zoom:17%;\">\n\n<p>这天还是日月同辉</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/taishan_travel/IMG_20240625_051334.jpg\" alt=\"IMG_20240625_051334\" style=\"zoom:10%;\">\n\n<p>人真的很多</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/taishan_travel/勇闯天涯.jpg\" alt=\"IMG_20240625_055243_edit_5254111300759\" style=\"zoom:10%;\">\n\n<p>泰山的气象站。</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/taishan_travel/IMG_20240625_043819.jpg\" alt=\"IMG_20240625_043819\" style=\"zoom:10%;\">\n\n<br>\n\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/taishan_travel/IMG_20240625_051923.jpg\" alt=\"IMG_20240625_051923\" style=\"zoom:10%;\">\n\n<p>那路人姐说的一点没错，真的很难绷，真想删掉（<strong>要黑化了</strong>）</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/taishan_travel/mmexport1719446927162_edit_99879125112362.jpg\" alt=\"mmexport1719446927162_edit_99879125112362\" style=\"zoom:20%;\">\n\n<p>最后去瞻鲁台看了一眼，顾名思义，这个地方可以看见过去鲁国的境内（好像是这样）</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/taishan_travel/%E7%9E%BB%E9%B2%81%E5%8F%B0.png\" alt=\"瞻鲁台\" style=\"zoom:10%;\">\n\n\n\n<h2 id=\"下山所见\"><a href=\"#下山所见\" class=\"headerlink\" title=\"下山所见\"></a>下山所见</h2><img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/taishan_travel/IMG_20240625_073157.jpg\" alt=\"IMG_20240625_073157\" style=\"zoom:12%;\">\n\n<p>刚出南天门前的阶梯上看到的，之前闷头爬是背对它的，下山才看到还有这样的风景，”一览众山小“大概就是这意思吧</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/taishan_travel/一览众山小.jpg\" alt=\"IMG_20240625_073447_edit_82847305208190\" style=\"zoom:10%;\">\n\n<p>从南天门往下走的商贩（南天门有索道可以到桃花源）</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/taishan_travel/IMG_20240625_073600.jpg\" alt=\"IMG_20240625_073600\" style=\"zoom:11%;\">\n\n<p>在龙门碰到的，好像是中国石油大学的博士，跟他妈妈一块过来的</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/taishan_travel/%E4%B8%8B%E5%B1%B1%E6%89%80%E8%A7%81%EF%BC%882%EF%BC%89.png\" alt=\"下山所见（2）\" style=\"zoom:12%;\">\n\n<p>下山途中碰到的小情侣组合</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/taishan_travel/%E4%B8%8B%E5%B1%B1%E6%89%80%E8%A7%81%EF%BC%881%EF%BC%89.png\" alt=\"下山所见（1）\" style=\"zoom:15%;\">\n\n<p>在中天门见到的，其实五元纸币上的情景是合成出来的，现实是找不到一模一样的地方的</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/taishan_travel/%E4%BA%94%E5%85%83%E7%BA%B8%E5%B8%81.png\" alt=\"五元纸币\" style=\"zoom:25%;\">\n\n<p>红门附近看到的，手机打鸟打不清楚，懒得修图了</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/taishan_travel/IMG_20240626_092948.jpg\" alt=\"IMG_20240626_092948\" style=\"zoom:10%;\">\n\n<h2 id=\"岱庙\"><a href=\"#岱庙\" class=\"headerlink\" title=\"岱庙\"></a>岱庙</h2><p>传说中祭祀的地方，举行封禅大典的地方</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/taishan_travel/IMG_20240626_100914_edit_49982107513205.jpg\" alt=\"IMG_20240626_100914_edit_49982107513205\" style=\"zoom:15%;\">\n\n<br>\n\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/taishan_travel/%E5%B2%B1%E5%BA%992.png\" alt=\"岱庙2\" style=\"zoom:13%;\">\n\n<p>这里没有过多的拍摄照片，毕竟还是很庄重的地方，泰山石自古就有真邪祟的说法，泰山更是被称作泰山奶奶的道场。</p>\n<p>在泰山最北边可以看到非常不错的景色。</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/taishan_travel/%E6%B3%B0%E5%B1%B1%E8%BF%9C%E6%99%AF.png\" alt=\"泰山远景\" style=\"zoom:15%;\">\n\n<h2 id=\"县衙大院\"><a href=\"#县衙大院\" class=\"headerlink\" title=\"县衙大院\"></a>县衙大院</h2><h3 id=\"糁汤\"><a href=\"#糁汤\" class=\"headerlink\" title=\"糁汤\"></a>糁汤</h3><p>这里的特色，糁汤，味道很棒，微微咸口，而且这家店的规则是8块钱自主，面食和糁汤可以随便拿，但是吃多少拿多少。</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/taishan_travel/%E7%B3%81%E6%B1%A4.png\" alt=\"糁汤\" style=\"zoom:12%;\">\n\n<p>这个看起来，是用滚烫的羹汁（羹汁里有什么我并不清楚）去冲熟蛋液，再加入他们自制的姜末和醋，味道非常不错</p>\n<h3 id=\"茶豆腐\"><a href=\"#茶豆腐\" class=\"headerlink\" title=\"茶豆腐\"></a>茶豆腐</h3><p>我怀疑我被骗了，但我没有证据，因为这个怎么吃味道都是普通臭豆腐，主要是老板自己表现出来的样子，好像他自己也不清楚茶豆腐是什么。</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/taishan_travel/IMG_20240626_104302.jpg\" alt=\"IMG_20240626_104302\" style=\"zoom:10%;\">\n\n<h3 id=\"油酥火烧\"><a href=\"#油酥火烧\" class=\"headerlink\" title=\"油酥火烧\"></a>油酥火烧</h3><p>这个挺便宜的，味道也一般般吧，比较干巴，可能要搭配糁汤什么的一块吃。</p>\n<img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/taishan_travel/%E6%B2%B9%E9%85%A5%E7%81%AB%E7%83%A7.png\" alt=\"油酥火烧\" style=\"zoom:10%;\">\n\n<h2 id=\"LAST\"><a href=\"#LAST\" class=\"headerlink\" title=\"LAST\"></a>LAST</h2><p>至此，为期6天（2024.6.21-&gt;2024.6.26)的山东毕业单人旅行就结束了，玩得可以说是非常尽兴啊，虽然也因为第一次出远门，经验不足，吃了不少亏，但总体来看这趟旅行还是非常不错的，见识到了自然风光也见到了人文文化。</p>\n<p>都说泰山专治嘴硬的人，我这一趟算不算合格了呢，嘿嘿嘿</p>\n<h4 id=\"小插曲\"><a href=\"#小插曲\" class=\"headerlink\" title=\"小插曲\"></a>小插曲</h4><blockquote>\n<p>1）6月24号刚到达泰山脚下，想着洗个澡休息一段时间再去爬山，结果手一拧莲蓬头，直接碎掉了，是的，直接碎掉了（呆若木鸡）</p>\n<p>2）玉皇顶上人挤人，一开始人是躺着的，到了00点就只能坐着了，差不多2点开始就只能蜷着了，到后面就人叠人，我腰窝里还夹了一个女生的脑袋，腿压在另一个男的身上</p>\n</blockquote>\n"},{"title":"肖臻-区块链 笔记","description":"肖臻-区块链学习笔记","date":"2024-01-23T04:10:40.000Z","exceprt":"这是一份肖臻老师的课程笔记，主要讲解了区块链的概念，基本没有什么代码片段，因此也可以当作科普类笔记，但是内容较为干枯","_content":"\n## 工具包\n\n课程链接：【北京大学肖臻老师《区块链技术与应用》公开课】 https://www.bilibili.com/video/BV1Vt411X7JF\n\n区块链demo：https://andersbrownworth.com/blockchain\n\n## 前言\n\n这份网课是为了毕设做准备的，因此特此花费了一些时间用以学习区块链的本质\n\n在这份笔记中，你会了解比特币挖矿的真相，以及矿潮没落的原因\n\n但是比较无语的是，这份课程录制的时候我还在上初中，因此有部分内容可能以及随着时间发生了一些变化，需要辩证看待部分内容的正确性\n\n如果您发现笔记之中不正确的地方，欢迎您为我指正错误，联系方式见**关于**里的邮箱，感激不尽！\n\n## 密码学原理\n\n### 哈希\n\n加密货币实际是不加密的，线上公开透明；以最著名的加密货币比特币为例，它使用的是哈希和数字签名，密码学中的**哈希**被称为**cryptographic hash function**，它有一个特性叫**collision resistance**，也有地方说成**collision free**，但实际上哈希碰撞是不可避免的,这个特性当个玩笑话即可，马马虎虎可以这么认为，但不能当作真理。\n\n**collision resistance**，指的是对于H(x),我们没有办法做到人为高效地找到一个H(x')，使得H(x)==H(x')，通俗易懂一点来说，就是做不到篡改但是不被发现，只要x有一丁点变化，那么最终的哈希值就会与先前有所不同。在Golang的项目依赖管理go.mod和go.sum中有着类似的机制，go.mod存放了项目所需要的依赖，而go.sum则存放了依赖所对应的哈希值，一旦我们在拉取代码并使用go get下载对应依赖时，下载的依赖被人篡改，那么新依赖计算出来的哈希值就会与go.sum中的原依赖哈希值不符，进而引发警告。\n\n**哈希碰撞**，指的是对于x≠y,但是存在H(x)==H(y),使得不同输入会在哈希表被映射到同一个位置。由于哈希的输出空间只有2^256，且输出空间理论上是可以无限大的，因此哈希碰撞不可避免。但是目前来说，对于x，我们并没有高效的方式能够求得y满足哈希碰撞，暴力求解理论上可以完成，但是对于2^256种哈希值，这种方法非常困难。\n\n*//此处H(x)，相当于x的digest,部分论文会将其翻译做摘要，姑且可以当作x的指纹，“独一无二”的标识*\n\n因此，对于哈希函数，必须要严格补充一句，**collision resistance**本身是**无法被证明**且实际是**不可能存在**这种性质的，但是如果一个哈希函数在过去很长一段时间，没有人找到人为高效制造哈希碰撞的方法，我们就默许它是collision resistance的，这属于是一种比较经验化的性质，找不到等于“没有”。当然也有一些哈希函数，在过去是被认为是collision resistance的，但后来被发现可以人为制造哈希碰撞的方法，最为著名的就是MD5加密，以下是在Flask中一段经典的MD5加密代码。\n\n```py\npassword = hashlib.md5(password.encode()).hexdigest()\n```\n\n哈希函数还有一个性质，叫**hiding**，简单来说，哈希函数是单向的，x-->H(x)这个过程是不可逆的，除了蛮力，无法高效地破解,但这有一个前提，哈希的输入范围要足够大且分布要足够均匀，否则也会因为输出范围太过狭隘导致被暴力破解，这一点可以参考《模仿游戏》中阿兰·图灵最后破解德军恩格玛电报的原因。\n\n当collision resistance和hiding结合使用时就可以实现**digital commitment**，有时候也叫**digital equivalent of sealed envelope**。\n\n> 什么是digital commitment？假设现实世界出现了一名法师奇异博士，他在使用了时间宝石之后，能够准确预言未来发生的事情。请问作为旁观者，我们该如何证明他的能力呢？最简单粗暴的办法就是，让他先预言，再等预言的时间到了，看看预言的事情是否发生。这听上去非常合理，但是事实上，一旦预言被公布出来，那么未来就可能会**因为预言被公布这件事**而发生改变。例如，奇异博士预言了古一会死亡，本来按照时间线，古一可能的的确确是会死亡，但是由于奇异博士的预言，导致众人因为保护古一，而使其没有阵亡，或者说因为众人保护古一的过程中出现了意外导致古一阵亡。这无论是哪种情况，都没办法佐证奇异博士的预言能力。因此，我们得出结论，**预言是不可公开的**。我们正确的做法是让奇异博士将预言的内容封死在绝对安全的保险箱中，确保没有人知道预言，待预言的时间到了，再打开确认有没有发送预言中出现的事情。\n\n对于电子世界，我们想要做到类似的事情，我们就需要将内容进行哈希加密，将得出的哈希值公布出去，并将原文内容封锁在digital sealed envelope中，一旦到了需要解密的时候，我们再解开digital sealed envelope，由于哈希函数具有hiding的性质，因此即便公布哈希值也推不出原文，更不会影响未来，而又由于具备collision resistance的性质，如果公布出来的内容和原文不一样或者说被篡改了，那么通过哈希值就可以轻易判断。\n\n实际操作中，为满足hiding性质的前提，我们会对原文尾部添加一串随机数，将两个部分同时进行哈希加密，这样可以确保输入范围大，输出分布均匀，如：”今天看起来是个不错的日子||1018“，其中1018就是拼接的随机数。\n\n另外，在比特币中，还有一个性质，叫**puzzle friendly**，这个说的是，在工作量证明机制中，**挖矿没有捷径**，只能够通过一遍遍地试随机数，使得 Hash ( block,header ) <= target(指定阈值)。值得一提的是，在其中一名矿工成功计算出随机数之后，其他矿工需要去验证这个随机数是否正确，而这个验证方法十分简单，只需要将其重新带回Hash ( block,header ) ，查看结果是否小于等于目标阈值，因为计算复杂，求证简单，因此，这个性质又被称作\"difficult to solve, but easy to verify\"[难以解决，但容易求证]\n\n比特币中使用的哈希函数叫SHA-256(Secure Hash Algorithm)，它同时具备了上述性质。\n\n![image-20240112095737762](/img/xiaozhen_blockchain_note/image-20240112095737762.png)\n\n![image-20240112095746127](/img/xiaozhen_blockchain_note/image-20240112095746127.png)\n\n上图为哈希加密的一个示例，来源：https://andersbrownworth.com/blockchain/hash\n\n*//这个博主的个人网页也有写有关区块链的内容*\n\n\n\n### 数字签名\n\n对于不安全的通信渠道，即便是有了普通的加密措施，也就是对称加密，也可能会因为密钥被截取而导致信息泄露，于是非对称加密应运而生。\n\n**非对称加密**，即使用公钥加密，私钥解密，由于私钥是存放在本地的，并不需要参与通信，因此我们不需要担心在通信过程导致私钥被截取。而公钥是公开的，所有人都可以拿到，它只具备加密的能力，并不能解密，所以不存在公钥被截取导致信息泄露。在通信过程中，我们使用对方的公钥进行加密，对方收到信息之后，会使用本地的私钥进行解密，传输过程中，信息是处于加密状态的。\n\n值得一提的是，公钥是私钥通过某种方法去推算出来的，且这个运算是不可逆的，也就是说，知道私钥的人可以推导出对应的公钥，但知道公钥的人无法逆向推导出私钥。\n\n> 通俗易懂地来说就是，我用我手里的钥匙制作了足够多的锁，我把我的锁发给全世界每个人，他们如果想给我邮寄东西，就必须用我给的锁上锁，上完之后，除了我手里的钥匙，没人能够打开它。这就是非对称加密。\n\n非对称加密技术我们可以用来制作签名，以比特币交易为例，假设LRay向B转了10个比特币，交易产生并且记录被发布到区块链中，其他节点如何认可此次交易的真实性呢？\n\n那么LRay就会在发布交易时，同时发布一个签名（使用私钥加密这个签名），其他节点再使用公钥去验证这个签名的真实性。\n\n> 肖臻：是否存在两个人公钥和私钥一模一样的情况呢？即小黑发起大量攻击，产生大量的公私钥，再检查自身产生的公钥是否和区块链上已有的公钥是否相同，直到产生的某个公钥，恰好能够和用户C的公钥一模一样，这样小黑就得到了用户C的公私钥，那么小黑是否可以使用他的公私钥发布交易，或者篡改用户C的交易呢？\n>\n> 理论上确实可行，但是实际上，对于256位(二进制，10进制大约78位)的公私钥，出现相同的概率微乎其微，哪怕是超级计算机，日夜兼程计算，找到的概率甚至小于地球爆炸的可能性。但这一且都是建立在有一个良好的随机源的基础上，如果随机源不够优秀，可能会在一遍遍的签名中将私钥破解出来。\n\n\n\n## 比特币的数据结构[已废弃，可不学]\n\n![image-20240105091958351](/img/xiaozhen_blockchain_note/image-20240105091958351.png)\n\n\n\n### 区块链\n\n*//特奶奶个锤，学了一大半才发现这玩意已经被合并掉了，没话说，日常白学，习惯就好*\n\n区块链本身是有区块组成的链表，和传统的链表有所不同\n\n首先是哈希指针和传统指针有所不同，相比起传统指针p（存放了结构体在内存中的起始地址），增加了一个H(x)，也就是说，哈希指针不仅需要保存地址，还需要保存一个哈希值，这个哈希值可以用来检测结构体中的内容是否被篡改。\n\n![](/img/xiaozhen_blockchain_note/cec260ce36410d64a2e680b87dafbbe.png)\n\n<center>hash pointer，哈希指针</center>\n\n下面是一种简单的区块链结构\n\n![](/img/xiaozhen_blockchain_note/b82daa61a0de14965f383ca4cfbf309.png)\n\n最左边的叫创世区块，是区块链中的第一个区块，之后的每一个区块的都会保存着上一个区块的地址以及哈希值。而最后一个区块的地址和哈希值保存在系统中，一旦中间的某一个区块被篡改，H( )变成了H'( )，那么牵一发而动全身，后面区块的哈希值都会发生变化，最终系统会发现最后一个区块的哈希值与保存的哈希值有所不同。以下是一个范例：\n\n![image-20240115231345044](/img/xiaozhen_blockchain_note/image-20240115231345044.png)\n\n![image-20240115231352791](/img/xiaozhen_blockchain_note/image-20240115231352791.png)\n\n一旦发生篡改\n\n![image-20240115231411208](/img/xiaozhen_blockchain_note/image-20240115231411208.png)\n\n另外这种结构还具备temper-evident log，即可追踪日志，还是以刚才被篡改的区块为例，假如系统中只保存了后两个区块的，我们想要前面的区块中的内容，我们向前面节点发起了请求，我们对发来的区块链中的most recent block进行哈希计算，得到的哈希值如果和我们最老的区块中保存的哈希值不符合，那么就说明发来的数据是有被篡改的。\n\n在比特币中，除了区块链，还有一种结构，叫**Merkle tree**\n\n\n\n### Merkle tree\n\n![](/img/xiaozhen_blockchain_note/3f0cfb0ee800495f367fb49c58eea45.png)\n\n<center>Merkle tree</center>\n\n长相上和二叉树有类似的地方，但和二叉树有所不同的是，使用了哈希指针代替了普通指针，子节点中的哈希值存在它们的父节点中，优点是只需要记住最上方根节点的哈希值，就可以检测出merkle tree中任何一个节点是否发生篡改，原理和之前的区块链表有所类似。\n\n**根哈希值存放在block header中，而block body中包含了交易列表**\n\n用途：\n\n比特币中的节点分为轻节点(light node)和全节点(full node)两类，全节点是保存整个区块的内容（block header+block body），而轻节点只保存了block header\n\n\n\n### Merkle Proof\n\nMerkle Proof ，用于寻找交易所在的节点路径，查询交易是否被写进区块链中。轻节点中只包括了块头部分，因此，MerkleProof的第一步就是向全节点发送请求，之后全节点会返回一条交易路径和沿途的H(),而轻节点要做的就是对哈希值进行计算，判断最终结果与块头中的根哈希值是否相同。\n\n*//具体见下方肖臻老师的演示课件*\n\n> 以下是肖臻老师PPT所做的演示，是将两种区块链结构合二为一，做的显然更加细致\n>\n> ![](/img/xiaozhen_blockchain_note/9c36b711da645ebc72e4fb5b73b7572.png)\n>\n> 这张图片展示了区块链节点中的以部分，每一个区块下存放着一个merkle tree，而树的地步是交易明细，在我们查询交易的时候，为了验证某个交易是否存在，轻节点会先向全节点发送请求，全节点会返回红色部分的哈希值以及交易的路径，轻节点只需要使用底部需要查验的交易哈希值，一步一步推出父节点中的绿色哈希值，知道推出根节点中的哈希值，与块头中的根哈希值进行比对。\n>\n> *红色的哈希值我们是无法验证的，因为轻节点的这一次查询，只能查询路径中的部分，黑色部分都是无法查询的,我们无法判断红色哈希值的正确性*\n\n这种查询方式也被成为 proof of membership/proof of inclusion,复杂度是θ(log(n))；如果是 proof of non-membership呢？那就是将整个merkle tree都发送给轻节点了，复杂度是θ(n)\n\n\n\n## ETH以太坊\n\n#### 机制区别\n\n> 比特币是proof of work（**工作证明机制**）,以太坊是proof of stake（**权益证明机制**）；\n>\n> *//值得一提的是，比特币和以太坊在2022年已经完成合并，因此先前部分笔记需要进行修改。*\n>\n> *// 其实有一部分相当于白学了#无能狂怒 #龙怒*\n\n**传统比特币**（现已与以太坊合并），在前面交易中收到的货币，必须要在之后一次性花出去\n\n例如：LRay-iu转给B10个比特币，B要在将来一次性全部交易出去，多余的则成为了tranactions fee\n\n原因：比特币没有基于账户的模型，是对交易进行单独处理的，这个在其数据结构中也能看出一点\n\n而**以太坊**是基于account-based ledger，有着基于账户的模型，因此，完全不需要全部交易，多出来的以太币纠结着存放在账户中，同时也不再需要哈希指针指向上一条交易\n\n而在比特币中需要关心的一个问题--货币的双重支付（double spending attack），在以太坊对这个有着天然的防御作用，但是与之相对的有着另一个问题，重放攻击（reply attack）\n\n> 简单来说，与双重支付相对，重放指的是收钱方存在恶意，比如LRay-iu向B转了10个以太币，而B在收到这10个以太币之后，将这一条交易又广播了一遍，那么LRay-iu的账户可能会被转2次钱。\n\n解决方案，在账户下对应保存账户的交易次数nonce。在发布交易的时候节点也会更新交易次数，以避免重放交易。\n\n\n\n#### 智能合约\n\n智能合约是一种在区块链上执行的自动化合约，它是一段以编程方式编写的代码，旨在自动执行、管理或强制执行合同条款或协议。这些合约以代码的形式存在于区块链上，其中包含了特定的规则和逻辑，通过在区块链网络上运行，可以在没有第三方参与的情况下执行交易或协议。\n\n智能合约运行于区块链网络中的节点上，并且由网络中的所有节点来验证和执行，确保了其去中心化和不可篡改性质。\n\nP.S 换句话说，智能合约一经发布，即便是开发者本身也不能修改合约。\n\n\n\n#### 合约账户\n\n创建合约会返回一个地址，知道这个地址就可以调用这个合约,调用过程中状态会发生变化。\n\n> **外部账户**：balance（账户余额），nonce（交易次数）\n>\n> **合约账户**：balance（账户余额），nonce（用来记录，调用其他合约的次数），并不是依赖公私钥进行控制，并且以太坊中有规定，合约账户不可以主动发起交易。code（代码），storage（存储相关状态）\n\n\n\n## 以太坊数据结构\n\n对比比特币中的merkle tree并没有提供高效查找和更新的方法\n\n### Trie\n\nTrie 是一种树形结构，由节点和边构成，每个节点代表一个字符（或一个字节）的信息，而边则代表字符之间的关系。Trie 的特点在于利用共享前缀来节省存储空间，提高数据存取的效率。\n\n> 以下是一张经典的Trie图\n>\n> ![](/img/xiaozhen_blockchain_note/ed5b963beaf85e5b9e489a10efcc51f-170441778579113.png)\n>\n> 优点：\n>\n> **高效的数据检索**： Trie 的查找效率取决于key(上述单词的长度)的长度\n>\n> **不会发生数据碰撞**：不同的地址(key)，映射到树中的位置也注定不同\n>\n> **不同节点按照不同的顺序插入树中，得到的树的结构是一样的**\n>\n> **局部更新**： 当区块发生变化，只需要对发生变化的部分进行更新\n>\n> 缺点：\n>\n> **存储敏感性：** Trie 数据结构对存储敏感，对于大型区块链，存储 Trie 可能需要大量的存储空间。\n\n\n\n### Patricia tree\n\n为了解决占据存储的问题，有了优化过的**Patricia tree** ，也有写作 **Patricia trie **，\n\n> 经过压缩过的树，层数减少，访问内存的次数也减少，从而提高了性能；\n>\n> 而新加入的词会扩展已经被压缩过的节点\n>\n> ![](/img/xiaozhen_blockchain_note/04b959cbb244f9b3d13a0cefae513ab.png)\n\n\n\n### Merkle Patricia tree\n\nMerkle Patricia tree (MPT),所有账户组织成一张Patricia tree，用路径压缩，再将指针替换成哈希指针，最后计算出状态树根节点的哈希值，写在block header中。\n\n### 状态树\n\nP.S 以太坊中的账户地址一般是160位的，也就是20个字节，通常表示成40个16进制数字\n\n![](/img/xiaozhen_blockchain_note/5d552b84a412de924d855c63a4498a7.png)\n\n<center>以太坊状态树，来源：肖臻老师PPT</center>\n\n值得一提的是，状态树的更新并不会在原处修改，而是会另开一个区块；\n\n**原因**：以太坊由于有智能合约存在，不能像比特币那样随意回滚\n\n\n\n## 交易树-\n\n**作用：**\n\n- 提供merkle proof\n- 查找过去一段时间与某个智能合约有关的交易\n\n交易树中包含了这个区块中的所有交易，并且可以通过**bloom filter**快速查找交易是否存在。\n\n\n\n#### bloom filter\n\n用于查找交易，存放在块头中，在以太坊中将交易映射至一张表之中，在查找交易的时候，只需要将交易哈希处理后，在表中查找对应位置是否为1；之后在根据结果判断是否需要向全节点查询更详细的内容\n\n\n\n### 收据树\n\n收据树存储了每个区块中交易的收据（receipts）。交易执行完成后，会生成一个收据，记录了交易的执行结果、日志、事件等信息。这些收据包含了交易的详细信息，例如合约的调用结果、Gas消耗、事件日志等。\n\n收据树的根哈希值也被包含在区块头中，因此可以通过区块头的根哈希验证交易的有效性，并且可以快速检索特定交易的执行结果。\n\n\n\n### 总结\n\n状态树中保存的是(key,value)\n\n用RLP（Recursive Length Prefix）作序列化之后再存储，涉及库（Protobuf 只支持一种类型：nested array of bytes字符数组)\n\n它和交易树、收据树的区别是它包含了系统中所有账户的状态，无论这个账户是否参与了当前区块的交易。\n\n> [^肖臻]: **提问**\n>\n> **有没有可能A向B转了10ETH，但是B这个账户以前从来没听说过？**\n>\n> 答：存在，以太坊中，创建账户是不需要通知其他人的，只有这个账户第一次产生交易，其他节点才会知道这个账户存在，这个时候会在状态树中新加入一个账户。\n>\n> **可以将状态树设计修改成每个区块的状态树只包含这个区块中相关交易的账户？**\n>\n> 答：这会导致没有任何一个区块保存了完整的状态树，当我们查找状态信息时需要一节一节地去上一个区块中查找对应账户的状态信息，假如这个账户许久没有发生交易，那么，这个查询过程会需要花费很久，甚至会追溯至创世区块。\n>\n> 更大地问题是，假如回到上一个问题中，A向B转了10个ETH，但假如B这个账户是刚刚建立的，那么其他节点在查找这个账户的时候，会一直查找上一个区块，直到创世区块之后才能够得知B账户是新建的\n\n//*以太坊数据结构的代码此处暂时省略（看不懂），等之后看懂了再补充在这里*\n\n```go\n//以太坊交易树和收据树树数据结构\n//block.go\n```\n\n\n\n## ETH以太坊--智能合约\n\n智能合约本质是运行在区块链上的一段代码，代码的逻辑定义了合约的内容，语言是solidity，语法上和js接近。\n\n*//这块没听懂，我暂且先跳过了*\n\n*//当然是因为我太笨了，不过如果你和我一样笨的话，建议别看他讲的*\n","source":"_posts/xiaozhen_blockchain_note.md","raw":"---\ntitle: 肖臻-区块链 笔记\ncategories:\n  - Web3\ndescription: \"肖臻-区块链学习笔记\"\ndate: 2024-01-23 12:10:40\nexceprt: \"这是一份肖臻老师的课程笔记，主要讲解了区块链的概念，基本没有什么代码片段，因此也可以当作科普类笔记，但是内容较为干枯\"\ntags:\n    - 区块链\n    - 比特币\n    - 以太坊\n---\n\n## 工具包\n\n课程链接：【北京大学肖臻老师《区块链技术与应用》公开课】 https://www.bilibili.com/video/BV1Vt411X7JF\n\n区块链demo：https://andersbrownworth.com/blockchain\n\n## 前言\n\n这份网课是为了毕设做准备的，因此特此花费了一些时间用以学习区块链的本质\n\n在这份笔记中，你会了解比特币挖矿的真相，以及矿潮没落的原因\n\n但是比较无语的是，这份课程录制的时候我还在上初中，因此有部分内容可能以及随着时间发生了一些变化，需要辩证看待部分内容的正确性\n\n如果您发现笔记之中不正确的地方，欢迎您为我指正错误，联系方式见**关于**里的邮箱，感激不尽！\n\n## 密码学原理\n\n### 哈希\n\n加密货币实际是不加密的，线上公开透明；以最著名的加密货币比特币为例，它使用的是哈希和数字签名，密码学中的**哈希**被称为**cryptographic hash function**，它有一个特性叫**collision resistance**，也有地方说成**collision free**，但实际上哈希碰撞是不可避免的,这个特性当个玩笑话即可，马马虎虎可以这么认为，但不能当作真理。\n\n**collision resistance**，指的是对于H(x),我们没有办法做到人为高效地找到一个H(x')，使得H(x)==H(x')，通俗易懂一点来说，就是做不到篡改但是不被发现，只要x有一丁点变化，那么最终的哈希值就会与先前有所不同。在Golang的项目依赖管理go.mod和go.sum中有着类似的机制，go.mod存放了项目所需要的依赖，而go.sum则存放了依赖所对应的哈希值，一旦我们在拉取代码并使用go get下载对应依赖时，下载的依赖被人篡改，那么新依赖计算出来的哈希值就会与go.sum中的原依赖哈希值不符，进而引发警告。\n\n**哈希碰撞**，指的是对于x≠y,但是存在H(x)==H(y),使得不同输入会在哈希表被映射到同一个位置。由于哈希的输出空间只有2^256，且输出空间理论上是可以无限大的，因此哈希碰撞不可避免。但是目前来说，对于x，我们并没有高效的方式能够求得y满足哈希碰撞，暴力求解理论上可以完成，但是对于2^256种哈希值，这种方法非常困难。\n\n*//此处H(x)，相当于x的digest,部分论文会将其翻译做摘要，姑且可以当作x的指纹，“独一无二”的标识*\n\n因此，对于哈希函数，必须要严格补充一句，**collision resistance**本身是**无法被证明**且实际是**不可能存在**这种性质的，但是如果一个哈希函数在过去很长一段时间，没有人找到人为高效制造哈希碰撞的方法，我们就默许它是collision resistance的，这属于是一种比较经验化的性质，找不到等于“没有”。当然也有一些哈希函数，在过去是被认为是collision resistance的，但后来被发现可以人为制造哈希碰撞的方法，最为著名的就是MD5加密，以下是在Flask中一段经典的MD5加密代码。\n\n```py\npassword = hashlib.md5(password.encode()).hexdigest()\n```\n\n哈希函数还有一个性质，叫**hiding**，简单来说，哈希函数是单向的，x-->H(x)这个过程是不可逆的，除了蛮力，无法高效地破解,但这有一个前提，哈希的输入范围要足够大且分布要足够均匀，否则也会因为输出范围太过狭隘导致被暴力破解，这一点可以参考《模仿游戏》中阿兰·图灵最后破解德军恩格玛电报的原因。\n\n当collision resistance和hiding结合使用时就可以实现**digital commitment**，有时候也叫**digital equivalent of sealed envelope**。\n\n> 什么是digital commitment？假设现实世界出现了一名法师奇异博士，他在使用了时间宝石之后，能够准确预言未来发生的事情。请问作为旁观者，我们该如何证明他的能力呢？最简单粗暴的办法就是，让他先预言，再等预言的时间到了，看看预言的事情是否发生。这听上去非常合理，但是事实上，一旦预言被公布出来，那么未来就可能会**因为预言被公布这件事**而发生改变。例如，奇异博士预言了古一会死亡，本来按照时间线，古一可能的的确确是会死亡，但是由于奇异博士的预言，导致众人因为保护古一，而使其没有阵亡，或者说因为众人保护古一的过程中出现了意外导致古一阵亡。这无论是哪种情况，都没办法佐证奇异博士的预言能力。因此，我们得出结论，**预言是不可公开的**。我们正确的做法是让奇异博士将预言的内容封死在绝对安全的保险箱中，确保没有人知道预言，待预言的时间到了，再打开确认有没有发送预言中出现的事情。\n\n对于电子世界，我们想要做到类似的事情，我们就需要将内容进行哈希加密，将得出的哈希值公布出去，并将原文内容封锁在digital sealed envelope中，一旦到了需要解密的时候，我们再解开digital sealed envelope，由于哈希函数具有hiding的性质，因此即便公布哈希值也推不出原文，更不会影响未来，而又由于具备collision resistance的性质，如果公布出来的内容和原文不一样或者说被篡改了，那么通过哈希值就可以轻易判断。\n\n实际操作中，为满足hiding性质的前提，我们会对原文尾部添加一串随机数，将两个部分同时进行哈希加密，这样可以确保输入范围大，输出分布均匀，如：”今天看起来是个不错的日子||1018“，其中1018就是拼接的随机数。\n\n另外，在比特币中，还有一个性质，叫**puzzle friendly**，这个说的是，在工作量证明机制中，**挖矿没有捷径**，只能够通过一遍遍地试随机数，使得 Hash ( block,header ) <= target(指定阈值)。值得一提的是，在其中一名矿工成功计算出随机数之后，其他矿工需要去验证这个随机数是否正确，而这个验证方法十分简单，只需要将其重新带回Hash ( block,header ) ，查看结果是否小于等于目标阈值，因为计算复杂，求证简单，因此，这个性质又被称作\"difficult to solve, but easy to verify\"[难以解决，但容易求证]\n\n比特币中使用的哈希函数叫SHA-256(Secure Hash Algorithm)，它同时具备了上述性质。\n\n![image-20240112095737762](/img/xiaozhen_blockchain_note/image-20240112095737762.png)\n\n![image-20240112095746127](/img/xiaozhen_blockchain_note/image-20240112095746127.png)\n\n上图为哈希加密的一个示例，来源：https://andersbrownworth.com/blockchain/hash\n\n*//这个博主的个人网页也有写有关区块链的内容*\n\n\n\n### 数字签名\n\n对于不安全的通信渠道，即便是有了普通的加密措施，也就是对称加密，也可能会因为密钥被截取而导致信息泄露，于是非对称加密应运而生。\n\n**非对称加密**，即使用公钥加密，私钥解密，由于私钥是存放在本地的，并不需要参与通信，因此我们不需要担心在通信过程导致私钥被截取。而公钥是公开的，所有人都可以拿到，它只具备加密的能力，并不能解密，所以不存在公钥被截取导致信息泄露。在通信过程中，我们使用对方的公钥进行加密，对方收到信息之后，会使用本地的私钥进行解密，传输过程中，信息是处于加密状态的。\n\n值得一提的是，公钥是私钥通过某种方法去推算出来的，且这个运算是不可逆的，也就是说，知道私钥的人可以推导出对应的公钥，但知道公钥的人无法逆向推导出私钥。\n\n> 通俗易懂地来说就是，我用我手里的钥匙制作了足够多的锁，我把我的锁发给全世界每个人，他们如果想给我邮寄东西，就必须用我给的锁上锁，上完之后，除了我手里的钥匙，没人能够打开它。这就是非对称加密。\n\n非对称加密技术我们可以用来制作签名，以比特币交易为例，假设LRay向B转了10个比特币，交易产生并且记录被发布到区块链中，其他节点如何认可此次交易的真实性呢？\n\n那么LRay就会在发布交易时，同时发布一个签名（使用私钥加密这个签名），其他节点再使用公钥去验证这个签名的真实性。\n\n> 肖臻：是否存在两个人公钥和私钥一模一样的情况呢？即小黑发起大量攻击，产生大量的公私钥，再检查自身产生的公钥是否和区块链上已有的公钥是否相同，直到产生的某个公钥，恰好能够和用户C的公钥一模一样，这样小黑就得到了用户C的公私钥，那么小黑是否可以使用他的公私钥发布交易，或者篡改用户C的交易呢？\n>\n> 理论上确实可行，但是实际上，对于256位(二进制，10进制大约78位)的公私钥，出现相同的概率微乎其微，哪怕是超级计算机，日夜兼程计算，找到的概率甚至小于地球爆炸的可能性。但这一且都是建立在有一个良好的随机源的基础上，如果随机源不够优秀，可能会在一遍遍的签名中将私钥破解出来。\n\n\n\n## 比特币的数据结构[已废弃，可不学]\n\n![image-20240105091958351](/img/xiaozhen_blockchain_note/image-20240105091958351.png)\n\n\n\n### 区块链\n\n*//特奶奶个锤，学了一大半才发现这玩意已经被合并掉了，没话说，日常白学，习惯就好*\n\n区块链本身是有区块组成的链表，和传统的链表有所不同\n\n首先是哈希指针和传统指针有所不同，相比起传统指针p（存放了结构体在内存中的起始地址），增加了一个H(x)，也就是说，哈希指针不仅需要保存地址，还需要保存一个哈希值，这个哈希值可以用来检测结构体中的内容是否被篡改。\n\n![](/img/xiaozhen_blockchain_note/cec260ce36410d64a2e680b87dafbbe.png)\n\n<center>hash pointer，哈希指针</center>\n\n下面是一种简单的区块链结构\n\n![](/img/xiaozhen_blockchain_note/b82daa61a0de14965f383ca4cfbf309.png)\n\n最左边的叫创世区块，是区块链中的第一个区块，之后的每一个区块的都会保存着上一个区块的地址以及哈希值。而最后一个区块的地址和哈希值保存在系统中，一旦中间的某一个区块被篡改，H( )变成了H'( )，那么牵一发而动全身，后面区块的哈希值都会发生变化，最终系统会发现最后一个区块的哈希值与保存的哈希值有所不同。以下是一个范例：\n\n![image-20240115231345044](/img/xiaozhen_blockchain_note/image-20240115231345044.png)\n\n![image-20240115231352791](/img/xiaozhen_blockchain_note/image-20240115231352791.png)\n\n一旦发生篡改\n\n![image-20240115231411208](/img/xiaozhen_blockchain_note/image-20240115231411208.png)\n\n另外这种结构还具备temper-evident log，即可追踪日志，还是以刚才被篡改的区块为例，假如系统中只保存了后两个区块的，我们想要前面的区块中的内容，我们向前面节点发起了请求，我们对发来的区块链中的most recent block进行哈希计算，得到的哈希值如果和我们最老的区块中保存的哈希值不符合，那么就说明发来的数据是有被篡改的。\n\n在比特币中，除了区块链，还有一种结构，叫**Merkle tree**\n\n\n\n### Merkle tree\n\n![](/img/xiaozhen_blockchain_note/3f0cfb0ee800495f367fb49c58eea45.png)\n\n<center>Merkle tree</center>\n\n长相上和二叉树有类似的地方，但和二叉树有所不同的是，使用了哈希指针代替了普通指针，子节点中的哈希值存在它们的父节点中，优点是只需要记住最上方根节点的哈希值，就可以检测出merkle tree中任何一个节点是否发生篡改，原理和之前的区块链表有所类似。\n\n**根哈希值存放在block header中，而block body中包含了交易列表**\n\n用途：\n\n比特币中的节点分为轻节点(light node)和全节点(full node)两类，全节点是保存整个区块的内容（block header+block body），而轻节点只保存了block header\n\n\n\n### Merkle Proof\n\nMerkle Proof ，用于寻找交易所在的节点路径，查询交易是否被写进区块链中。轻节点中只包括了块头部分，因此，MerkleProof的第一步就是向全节点发送请求，之后全节点会返回一条交易路径和沿途的H(),而轻节点要做的就是对哈希值进行计算，判断最终结果与块头中的根哈希值是否相同。\n\n*//具体见下方肖臻老师的演示课件*\n\n> 以下是肖臻老师PPT所做的演示，是将两种区块链结构合二为一，做的显然更加细致\n>\n> ![](/img/xiaozhen_blockchain_note/9c36b711da645ebc72e4fb5b73b7572.png)\n>\n> 这张图片展示了区块链节点中的以部分，每一个区块下存放着一个merkle tree，而树的地步是交易明细，在我们查询交易的时候，为了验证某个交易是否存在，轻节点会先向全节点发送请求，全节点会返回红色部分的哈希值以及交易的路径，轻节点只需要使用底部需要查验的交易哈希值，一步一步推出父节点中的绿色哈希值，知道推出根节点中的哈希值，与块头中的根哈希值进行比对。\n>\n> *红色的哈希值我们是无法验证的，因为轻节点的这一次查询，只能查询路径中的部分，黑色部分都是无法查询的,我们无法判断红色哈希值的正确性*\n\n这种查询方式也被成为 proof of membership/proof of inclusion,复杂度是θ(log(n))；如果是 proof of non-membership呢？那就是将整个merkle tree都发送给轻节点了，复杂度是θ(n)\n\n\n\n## ETH以太坊\n\n#### 机制区别\n\n> 比特币是proof of work（**工作证明机制**）,以太坊是proof of stake（**权益证明机制**）；\n>\n> *//值得一提的是，比特币和以太坊在2022年已经完成合并，因此先前部分笔记需要进行修改。*\n>\n> *// 其实有一部分相当于白学了#无能狂怒 #龙怒*\n\n**传统比特币**（现已与以太坊合并），在前面交易中收到的货币，必须要在之后一次性花出去\n\n例如：LRay-iu转给B10个比特币，B要在将来一次性全部交易出去，多余的则成为了tranactions fee\n\n原因：比特币没有基于账户的模型，是对交易进行单独处理的，这个在其数据结构中也能看出一点\n\n而**以太坊**是基于account-based ledger，有着基于账户的模型，因此，完全不需要全部交易，多出来的以太币纠结着存放在账户中，同时也不再需要哈希指针指向上一条交易\n\n而在比特币中需要关心的一个问题--货币的双重支付（double spending attack），在以太坊对这个有着天然的防御作用，但是与之相对的有着另一个问题，重放攻击（reply attack）\n\n> 简单来说，与双重支付相对，重放指的是收钱方存在恶意，比如LRay-iu向B转了10个以太币，而B在收到这10个以太币之后，将这一条交易又广播了一遍，那么LRay-iu的账户可能会被转2次钱。\n\n解决方案，在账户下对应保存账户的交易次数nonce。在发布交易的时候节点也会更新交易次数，以避免重放交易。\n\n\n\n#### 智能合约\n\n智能合约是一种在区块链上执行的自动化合约，它是一段以编程方式编写的代码，旨在自动执行、管理或强制执行合同条款或协议。这些合约以代码的形式存在于区块链上，其中包含了特定的规则和逻辑，通过在区块链网络上运行，可以在没有第三方参与的情况下执行交易或协议。\n\n智能合约运行于区块链网络中的节点上，并且由网络中的所有节点来验证和执行，确保了其去中心化和不可篡改性质。\n\nP.S 换句话说，智能合约一经发布，即便是开发者本身也不能修改合约。\n\n\n\n#### 合约账户\n\n创建合约会返回一个地址，知道这个地址就可以调用这个合约,调用过程中状态会发生变化。\n\n> **外部账户**：balance（账户余额），nonce（交易次数）\n>\n> **合约账户**：balance（账户余额），nonce（用来记录，调用其他合约的次数），并不是依赖公私钥进行控制，并且以太坊中有规定，合约账户不可以主动发起交易。code（代码），storage（存储相关状态）\n\n\n\n## 以太坊数据结构\n\n对比比特币中的merkle tree并没有提供高效查找和更新的方法\n\n### Trie\n\nTrie 是一种树形结构，由节点和边构成，每个节点代表一个字符（或一个字节）的信息，而边则代表字符之间的关系。Trie 的特点在于利用共享前缀来节省存储空间，提高数据存取的效率。\n\n> 以下是一张经典的Trie图\n>\n> ![](/img/xiaozhen_blockchain_note/ed5b963beaf85e5b9e489a10efcc51f-170441778579113.png)\n>\n> 优点：\n>\n> **高效的数据检索**： Trie 的查找效率取决于key(上述单词的长度)的长度\n>\n> **不会发生数据碰撞**：不同的地址(key)，映射到树中的位置也注定不同\n>\n> **不同节点按照不同的顺序插入树中，得到的树的结构是一样的**\n>\n> **局部更新**： 当区块发生变化，只需要对发生变化的部分进行更新\n>\n> 缺点：\n>\n> **存储敏感性：** Trie 数据结构对存储敏感，对于大型区块链，存储 Trie 可能需要大量的存储空间。\n\n\n\n### Patricia tree\n\n为了解决占据存储的问题，有了优化过的**Patricia tree** ，也有写作 **Patricia trie **，\n\n> 经过压缩过的树，层数减少，访问内存的次数也减少，从而提高了性能；\n>\n> 而新加入的词会扩展已经被压缩过的节点\n>\n> ![](/img/xiaozhen_blockchain_note/04b959cbb244f9b3d13a0cefae513ab.png)\n\n\n\n### Merkle Patricia tree\n\nMerkle Patricia tree (MPT),所有账户组织成一张Patricia tree，用路径压缩，再将指针替换成哈希指针，最后计算出状态树根节点的哈希值，写在block header中。\n\n### 状态树\n\nP.S 以太坊中的账户地址一般是160位的，也就是20个字节，通常表示成40个16进制数字\n\n![](/img/xiaozhen_blockchain_note/5d552b84a412de924d855c63a4498a7.png)\n\n<center>以太坊状态树，来源：肖臻老师PPT</center>\n\n值得一提的是，状态树的更新并不会在原处修改，而是会另开一个区块；\n\n**原因**：以太坊由于有智能合约存在，不能像比特币那样随意回滚\n\n\n\n## 交易树-\n\n**作用：**\n\n- 提供merkle proof\n- 查找过去一段时间与某个智能合约有关的交易\n\n交易树中包含了这个区块中的所有交易，并且可以通过**bloom filter**快速查找交易是否存在。\n\n\n\n#### bloom filter\n\n用于查找交易，存放在块头中，在以太坊中将交易映射至一张表之中，在查找交易的时候，只需要将交易哈希处理后，在表中查找对应位置是否为1；之后在根据结果判断是否需要向全节点查询更详细的内容\n\n\n\n### 收据树\n\n收据树存储了每个区块中交易的收据（receipts）。交易执行完成后，会生成一个收据，记录了交易的执行结果、日志、事件等信息。这些收据包含了交易的详细信息，例如合约的调用结果、Gas消耗、事件日志等。\n\n收据树的根哈希值也被包含在区块头中，因此可以通过区块头的根哈希验证交易的有效性，并且可以快速检索特定交易的执行结果。\n\n\n\n### 总结\n\n状态树中保存的是(key,value)\n\n用RLP（Recursive Length Prefix）作序列化之后再存储，涉及库（Protobuf 只支持一种类型：nested array of bytes字符数组)\n\n它和交易树、收据树的区别是它包含了系统中所有账户的状态，无论这个账户是否参与了当前区块的交易。\n\n> [^肖臻]: **提问**\n>\n> **有没有可能A向B转了10ETH，但是B这个账户以前从来没听说过？**\n>\n> 答：存在，以太坊中，创建账户是不需要通知其他人的，只有这个账户第一次产生交易，其他节点才会知道这个账户存在，这个时候会在状态树中新加入一个账户。\n>\n> **可以将状态树设计修改成每个区块的状态树只包含这个区块中相关交易的账户？**\n>\n> 答：这会导致没有任何一个区块保存了完整的状态树，当我们查找状态信息时需要一节一节地去上一个区块中查找对应账户的状态信息，假如这个账户许久没有发生交易，那么，这个查询过程会需要花费很久，甚至会追溯至创世区块。\n>\n> 更大地问题是，假如回到上一个问题中，A向B转了10个ETH，但假如B这个账户是刚刚建立的，那么其他节点在查找这个账户的时候，会一直查找上一个区块，直到创世区块之后才能够得知B账户是新建的\n\n//*以太坊数据结构的代码此处暂时省略（看不懂），等之后看懂了再补充在这里*\n\n```go\n//以太坊交易树和收据树树数据结构\n//block.go\n```\n\n\n\n## ETH以太坊--智能合约\n\n智能合约本质是运行在区块链上的一段代码，代码的逻辑定义了合约的内容，语言是solidity，语法上和js接近。\n\n*//这块没听懂，我暂且先跳过了*\n\n*//当然是因为我太笨了，不过如果你和我一样笨的话，建议别看他讲的*\n","slug":"xiaozhen_blockchain_note","published":1,"updated":"2024-08-24T06:10:09.248Z","comments":1,"layout":"post","photos":[],"_id":"cm0b0qx7v001sjwurd09ue4mq","content":"<h2 id=\"工具包\"><a href=\"#工具包\" class=\"headerlink\" title=\"工具包\"></a>工具包</h2><p>课程链接：【北京大学肖臻老师《区块链技术与应用》公开课】 <a class=\"link\" href=\"https://www.bilibili.com/video/BV1Vt411X7JF\">https://www.bilibili.com/video/BV1Vt411X7JF <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a></p>\n<p>区块链demo：<a class=\"link\" href=\"https://andersbrownworth.com/blockchain\">https://andersbrownworth.com/blockchain <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a></p>\n<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>这份网课是为了毕设做准备的，因此特此花费了一些时间用以学习区块链的本质</p>\n<p>在这份笔记中，你会了解比特币挖矿的真相，以及矿潮没落的原因</p>\n<p>但是比较无语的是，这份课程录制的时候我还在上初中，因此有部分内容可能以及随着时间发生了一些变化，需要辩证看待部分内容的正确性</p>\n<p>如果您发现笔记之中不正确的地方，欢迎您为我指正错误，联系方式见<strong>关于</strong>里的邮箱，感激不尽！</p>\n<h2 id=\"密码学原理\"><a href=\"#密码学原理\" class=\"headerlink\" title=\"密码学原理\"></a>密码学原理</h2><h3 id=\"哈希\"><a href=\"#哈希\" class=\"headerlink\" title=\"哈希\"></a>哈希</h3><p>加密货币实际是不加密的，线上公开透明；以最著名的加密货币比特币为例，它使用的是哈希和数字签名，密码学中的<strong>哈希</strong>被称为<strong>cryptographic hash function</strong>，它有一个特性叫<strong>collision resistance</strong>，也有地方说成<strong>collision free</strong>，但实际上哈希碰撞是不可避免的,这个特性当个玩笑话即可，马马虎虎可以这么认为，但不能当作真理。</p>\n<p><strong>collision resistance</strong>，指的是对于H(x),我们没有办法做到人为高效地找到一个H(x’)，使得H(x)==H(x’)，通俗易懂一点来说，就是做不到篡改但是不被发现，只要x有一丁点变化，那么最终的哈希值就会与先前有所不同。在Golang的项目依赖管理go.mod和go.sum中有着类似的机制，go.mod存放了项目所需要的依赖，而go.sum则存放了依赖所对应的哈希值，一旦我们在拉取代码并使用go get下载对应依赖时，下载的依赖被人篡改，那么新依赖计算出来的哈希值就会与go.sum中的原依赖哈希值不符，进而引发警告。</p>\n<p><strong>哈希碰撞</strong>，指的是对于x≠y,但是存在H(x)==H(y),使得不同输入会在哈希表被映射到同一个位置。由于哈希的输出空间只有2^256，且输出空间理论上是可以无限大的，因此哈希碰撞不可避免。但是目前来说，对于x，我们并没有高效的方式能够求得y满足哈希碰撞，暴力求解理论上可以完成，但是对于2^256种哈希值，这种方法非常困难。</p>\n<p><em>//此处H(x)，相当于x的digest,部分论文会将其翻译做摘要，姑且可以当作x的指纹，“独一无二”的标识</em></p>\n<p>因此，对于哈希函数，必须要严格补充一句，<strong>collision resistance</strong>本身是<strong>无法被证明</strong>且实际是<strong>不可能存在</strong>这种性质的，但是如果一个哈希函数在过去很长一段时间，没有人找到人为高效制造哈希碰撞的方法，我们就默许它是collision resistance的，这属于是一种比较经验化的性质，找不到等于“没有”。当然也有一些哈希函数，在过去是被认为是collision resistance的，但后来被发现可以人为制造哈希碰撞的方法，最为著名的就是MD5加密，以下是在Flask中一段经典的MD5加密代码。</p>\n<div class=\"highlight-container\" data-rel=\"Py\"><figure class=\"iseeu highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">password = hashlib.md5(password.encode()).hexdigest()</span><br></pre></td></tr></table></figure></div>\n\n<p>哈希函数还有一个性质，叫<strong>hiding</strong>，简单来说，哈希函数是单向的，x–&gt;H(x)这个过程是不可逆的，除了蛮力，无法高效地破解,但这有一个前提，哈希的输入范围要足够大且分布要足够均匀，否则也会因为输出范围太过狭隘导致被暴力破解，这一点可以参考《模仿游戏》中阿兰·图灵最后破解德军恩格玛电报的原因。</p>\n<p>当collision resistance和hiding结合使用时就可以实现<strong>digital commitment</strong>，有时候也叫<strong>digital equivalent of sealed envelope</strong>。</p>\n<blockquote>\n<p>什么是digital commitment？假设现实世界出现了一名法师奇异博士，他在使用了时间宝石之后，能够准确预言未来发生的事情。请问作为旁观者，我们该如何证明他的能力呢？最简单粗暴的办法就是，让他先预言，再等预言的时间到了，看看预言的事情是否发生。这听上去非常合理，但是事实上，一旦预言被公布出来，那么未来就可能会<strong>因为预言被公布这件事</strong>而发生改变。例如，奇异博士预言了古一会死亡，本来按照时间线，古一可能的的确确是会死亡，但是由于奇异博士的预言，导致众人因为保护古一，而使其没有阵亡，或者说因为众人保护古一的过程中出现了意外导致古一阵亡。这无论是哪种情况，都没办法佐证奇异博士的预言能力。因此，我们得出结论，<strong>预言是不可公开的</strong>。我们正确的做法是让奇异博士将预言的内容封死在绝对安全的保险箱中，确保没有人知道预言，待预言的时间到了，再打开确认有没有发送预言中出现的事情。</p>\n</blockquote>\n<p>对于电子世界，我们想要做到类似的事情，我们就需要将内容进行哈希加密，将得出的哈希值公布出去，并将原文内容封锁在digital sealed envelope中，一旦到了需要解密的时候，我们再解开digital sealed envelope，由于哈希函数具有hiding的性质，因此即便公布哈希值也推不出原文，更不会影响未来，而又由于具备collision resistance的性质，如果公布出来的内容和原文不一样或者说被篡改了，那么通过哈希值就可以轻易判断。</p>\n<p>实际操作中，为满足hiding性质的前提，我们会对原文尾部添加一串随机数，将两个部分同时进行哈希加密，这样可以确保输入范围大，输出分布均匀，如：”今天看起来是个不错的日子||1018“，其中1018就是拼接的随机数。</p>\n<p>另外，在比特币中，还有一个性质，叫<strong>puzzle friendly</strong>，这个说的是，在工作量证明机制中，<strong>挖矿没有捷径</strong>，只能够通过一遍遍地试随机数，使得 Hash ( block,header ) &lt;= target(指定阈值)。值得一提的是，在其中一名矿工成功计算出随机数之后，其他矿工需要去验证这个随机数是否正确，而这个验证方法十分简单，只需要将其重新带回Hash ( block,header ) ，查看结果是否小于等于目标阈值，因为计算复杂，求证简单，因此，这个性质又被称作”difficult to solve, but easy to verify”[难以解决，但容易求证]</p>\n<p>比特币中使用的哈希函数叫SHA-256(Secure Hash Algorithm)，它同时具备了上述性质。</p>\n<p><img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/xiaozhen_blockchain_note/image-20240112095737762.png\" alt=\"image-20240112095737762\"></p>\n<p><img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/xiaozhen_blockchain_note/image-20240112095746127.png\" alt=\"image-20240112095746127\"></p>\n<p>上图为哈希加密的一个示例，来源：<a class=\"link\" href=\"https://andersbrownworth.com/blockchain/hash\">https://andersbrownworth.com/blockchain/hash <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a></p>\n<p><em>//这个博主的个人网页也有写有关区块链的内容</em></p>\n<h3 id=\"数字签名\"><a href=\"#数字签名\" class=\"headerlink\" title=\"数字签名\"></a>数字签名</h3><p>对于不安全的通信渠道，即便是有了普通的加密措施，也就是对称加密，也可能会因为密钥被截取而导致信息泄露，于是非对称加密应运而生。</p>\n<p><strong>非对称加密</strong>，即使用公钥加密，私钥解密，由于私钥是存放在本地的，并不需要参与通信，因此我们不需要担心在通信过程导致私钥被截取。而公钥是公开的，所有人都可以拿到，它只具备加密的能力，并不能解密，所以不存在公钥被截取导致信息泄露。在通信过程中，我们使用对方的公钥进行加密，对方收到信息之后，会使用本地的私钥进行解密，传输过程中，信息是处于加密状态的。</p>\n<p>值得一提的是，公钥是私钥通过某种方法去推算出来的，且这个运算是不可逆的，也就是说，知道私钥的人可以推导出对应的公钥，但知道公钥的人无法逆向推导出私钥。</p>\n<blockquote>\n<p>通俗易懂地来说就是，我用我手里的钥匙制作了足够多的锁，我把我的锁发给全世界每个人，他们如果想给我邮寄东西，就必须用我给的锁上锁，上完之后，除了我手里的钥匙，没人能够打开它。这就是非对称加密。</p>\n</blockquote>\n<p>非对称加密技术我们可以用来制作签名，以比特币交易为例，假设LRay向B转了10个比特币，交易产生并且记录被发布到区块链中，其他节点如何认可此次交易的真实性呢？</p>\n<p>那么LRay就会在发布交易时，同时发布一个签名（使用私钥加密这个签名），其他节点再使用公钥去验证这个签名的真实性。</p>\n<blockquote>\n<p>肖臻：是否存在两个人公钥和私钥一模一样的情况呢？即小黑发起大量攻击，产生大量的公私钥，再检查自身产生的公钥是否和区块链上已有的公钥是否相同，直到产生的某个公钥，恰好能够和用户C的公钥一模一样，这样小黑就得到了用户C的公私钥，那么小黑是否可以使用他的公私钥发布交易，或者篡改用户C的交易呢？</p>\n<p>理论上确实可行，但是实际上，对于256位(二进制，10进制大约78位)的公私钥，出现相同的概率微乎其微，哪怕是超级计算机，日夜兼程计算，找到的概率甚至小于地球爆炸的可能性。但这一且都是建立在有一个良好的随机源的基础上，如果随机源不够优秀，可能会在一遍遍的签名中将私钥破解出来。</p>\n</blockquote>\n<h2 id=\"比特币的数据结构-已废弃，可不学\"><a href=\"#比特币的数据结构-已废弃，可不学\" class=\"headerlink\" title=\"比特币的数据结构[已废弃，可不学]\"></a>比特币的数据结构[已废弃，可不学]</h2><p><img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/xiaozhen_blockchain_note/image-20240105091958351.png\" alt=\"image-20240105091958351\"></p>\n<h3 id=\"区块链\"><a href=\"#区块链\" class=\"headerlink\" title=\"区块链\"></a>区块链</h3><p><em>//特奶奶个锤，学了一大半才发现这玩意已经被合并掉了，没话说，日常白学，习惯就好</em></p>\n<p>区块链本身是有区块组成的链表，和传统的链表有所不同</p>\n<p>首先是哈希指针和传统指针有所不同，相比起传统指针p（存放了结构体在内存中的起始地址），增加了一个H(x)，也就是说，哈希指针不仅需要保存地址，还需要保存一个哈希值，这个哈希值可以用来检测结构体中的内容是否被篡改。</p>\n<p><img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/xiaozhen_blockchain_note/cec260ce36410d64a2e680b87dafbbe.png\"></p>\n<center>hash pointer，哈希指针</center>\n\n<p>下面是一种简单的区块链结构</p>\n<p><img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/xiaozhen_blockchain_note/b82daa61a0de14965f383ca4cfbf309.png\"></p>\n<p>最左边的叫创世区块，是区块链中的第一个区块，之后的每一个区块的都会保存着上一个区块的地址以及哈希值。而最后一个区块的地址和哈希值保存在系统中，一旦中间的某一个区块被篡改，H( )变成了H’( )，那么牵一发而动全身，后面区块的哈希值都会发生变化，最终系统会发现最后一个区块的哈希值与保存的哈希值有所不同。以下是一个范例：</p>\n<p><img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/xiaozhen_blockchain_note/image-20240115231345044.png\" alt=\"image-20240115231345044\"></p>\n<p><img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/xiaozhen_blockchain_note/image-20240115231352791.png\" alt=\"image-20240115231352791\"></p>\n<p>一旦发生篡改</p>\n<p><img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/xiaozhen_blockchain_note/image-20240115231411208.png\" alt=\"image-20240115231411208\"></p>\n<p>另外这种结构还具备temper-evident log，即可追踪日志，还是以刚才被篡改的区块为例，假如系统中只保存了后两个区块的，我们想要前面的区块中的内容，我们向前面节点发起了请求，我们对发来的区块链中的most recent block进行哈希计算，得到的哈希值如果和我们最老的区块中保存的哈希值不符合，那么就说明发来的数据是有被篡改的。</p>\n<p>在比特币中，除了区块链，还有一种结构，叫<strong>Merkle tree</strong></p>\n<h3 id=\"Merkle-tree\"><a href=\"#Merkle-tree\" class=\"headerlink\" title=\"Merkle tree\"></a>Merkle tree</h3><p><img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/xiaozhen_blockchain_note/3f0cfb0ee800495f367fb49c58eea45.png\"></p>\n<center>Merkle tree</center>\n\n<p>长相上和二叉树有类似的地方，但和二叉树有所不同的是，使用了哈希指针代替了普通指针，子节点中的哈希值存在它们的父节点中，优点是只需要记住最上方根节点的哈希值，就可以检测出merkle tree中任何一个节点是否发生篡改，原理和之前的区块链表有所类似。</p>\n<p><strong>根哈希值存放在block header中，而block body中包含了交易列表</strong></p>\n<p>用途：</p>\n<p>比特币中的节点分为轻节点(light node)和全节点(full node)两类，全节点是保存整个区块的内容（block header+block body），而轻节点只保存了block header</p>\n<h3 id=\"Merkle-Proof\"><a href=\"#Merkle-Proof\" class=\"headerlink\" title=\"Merkle Proof\"></a>Merkle Proof</h3><p>Merkle Proof ，用于寻找交易所在的节点路径，查询交易是否被写进区块链中。轻节点中只包括了块头部分，因此，MerkleProof的第一步就是向全节点发送请求，之后全节点会返回一条交易路径和沿途的H(),而轻节点要做的就是对哈希值进行计算，判断最终结果与块头中的根哈希值是否相同。</p>\n<p><em>//具体见下方肖臻老师的演示课件</em></p>\n<blockquote>\n<p>以下是肖臻老师PPT所做的演示，是将两种区块链结构合二为一，做的显然更加细致</p>\n<p><img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/xiaozhen_blockchain_note/9c36b711da645ebc72e4fb5b73b7572.png\"></p>\n<p>这张图片展示了区块链节点中的以部分，每一个区块下存放着一个merkle tree，而树的地步是交易明细，在我们查询交易的时候，为了验证某个交易是否存在，轻节点会先向全节点发送请求，全节点会返回红色部分的哈希值以及交易的路径，轻节点只需要使用底部需要查验的交易哈希值，一步一步推出父节点中的绿色哈希值，知道推出根节点中的哈希值，与块头中的根哈希值进行比对。</p>\n<p><em>红色的哈希值我们是无法验证的，因为轻节点的这一次查询，只能查询路径中的部分，黑色部分都是无法查询的,我们无法判断红色哈希值的正确性</em></p>\n</blockquote>\n<p>这种查询方式也被成为 proof of membership/proof of inclusion,复杂度是θ(log(n))；如果是 proof of non-membership呢？那就是将整个merkle tree都发送给轻节点了，复杂度是θ(n)</p>\n<h2 id=\"ETH以太坊\"><a href=\"#ETH以太坊\" class=\"headerlink\" title=\"ETH以太坊\"></a>ETH以太坊</h2><h4 id=\"机制区别\"><a href=\"#机制区别\" class=\"headerlink\" title=\"机制区别\"></a>机制区别</h4><blockquote>\n<p>比特币是proof of work（<strong>工作证明机制</strong>）,以太坊是proof of stake（<strong>权益证明机制</strong>）；</p>\n<p><em>//值得一提的是，比特币和以太坊在2022年已经完成合并，因此先前部分笔记需要进行修改。</em></p>\n<p><em>// 其实有一部分相当于白学了#无能狂怒 #龙怒</em></p>\n</blockquote>\n<p><strong>传统比特币</strong>（现已与以太坊合并），在前面交易中收到的货币，必须要在之后一次性花出去</p>\n<p>例如：LRay-iu转给B10个比特币，B要在将来一次性全部交易出去，多余的则成为了tranactions fee</p>\n<p>原因：比特币没有基于账户的模型，是对交易进行单独处理的，这个在其数据结构中也能看出一点</p>\n<p>而<strong>以太坊</strong>是基于account-based ledger，有着基于账户的模型，因此，完全不需要全部交易，多出来的以太币纠结着存放在账户中，同时也不再需要哈希指针指向上一条交易</p>\n<p>而在比特币中需要关心的一个问题–货币的双重支付（double spending attack），在以太坊对这个有着天然的防御作用，但是与之相对的有着另一个问题，重放攻击（reply attack）</p>\n<blockquote>\n<p>简单来说，与双重支付相对，重放指的是收钱方存在恶意，比如LRay-iu向B转了10个以太币，而B在收到这10个以太币之后，将这一条交易又广播了一遍，那么LRay-iu的账户可能会被转2次钱。</p>\n</blockquote>\n<p>解决方案，在账户下对应保存账户的交易次数nonce。在发布交易的时候节点也会更新交易次数，以避免重放交易。</p>\n<h4 id=\"智能合约\"><a href=\"#智能合约\" class=\"headerlink\" title=\"智能合约\"></a>智能合约</h4><p>智能合约是一种在区块链上执行的自动化合约，它是一段以编程方式编写的代码，旨在自动执行、管理或强制执行合同条款或协议。这些合约以代码的形式存在于区块链上，其中包含了特定的规则和逻辑，通过在区块链网络上运行，可以在没有第三方参与的情况下执行交易或协议。</p>\n<p>智能合约运行于区块链网络中的节点上，并且由网络中的所有节点来验证和执行，确保了其去中心化和不可篡改性质。</p>\n<p>P.S 换句话说，智能合约一经发布，即便是开发者本身也不能修改合约。</p>\n<h4 id=\"合约账户\"><a href=\"#合约账户\" class=\"headerlink\" title=\"合约账户\"></a>合约账户</h4><p>创建合约会返回一个地址，知道这个地址就可以调用这个合约,调用过程中状态会发生变化。</p>\n<blockquote>\n<p><strong>外部账户</strong>：balance（账户余额），nonce（交易次数）</p>\n<p><strong>合约账户</strong>：balance（账户余额），nonce（用来记录，调用其他合约的次数），并不是依赖公私钥进行控制，并且以太坊中有规定，合约账户不可以主动发起交易。code（代码），storage（存储相关状态）</p>\n</blockquote>\n<h2 id=\"以太坊数据结构\"><a href=\"#以太坊数据结构\" class=\"headerlink\" title=\"以太坊数据结构\"></a>以太坊数据结构</h2><p>对比比特币中的merkle tree并没有提供高效查找和更新的方法</p>\n<h3 id=\"Trie\"><a href=\"#Trie\" class=\"headerlink\" title=\"Trie\"></a>Trie</h3><p>Trie 是一种树形结构，由节点和边构成，每个节点代表一个字符（或一个字节）的信息，而边则代表字符之间的关系。Trie 的特点在于利用共享前缀来节省存储空间，提高数据存取的效率。</p>\n<blockquote>\n<p>以下是一张经典的Trie图</p>\n<p><img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/xiaozhen_blockchain_note/ed5b963beaf85e5b9e489a10efcc51f-170441778579113.png\"></p>\n<p>优点：</p>\n<p><strong>高效的数据检索</strong>： Trie 的查找效率取决于key(上述单词的长度)的长度</p>\n<p><strong>不会发生数据碰撞</strong>：不同的地址(key)，映射到树中的位置也注定不同</p>\n<p><strong>不同节点按照不同的顺序插入树中，得到的树的结构是一样的</strong></p>\n<p><strong>局部更新</strong>： 当区块发生变化，只需要对发生变化的部分进行更新</p>\n<p>缺点：</p>\n<p><strong>存储敏感性：</strong> Trie 数据结构对存储敏感，对于大型区块链，存储 Trie 可能需要大量的存储空间。</p>\n</blockquote>\n<h3 id=\"Patricia-tree\"><a href=\"#Patricia-tree\" class=\"headerlink\" title=\"Patricia tree\"></a>Patricia tree</h3><p>为了解决占据存储的问题，有了优化过的<strong>Patricia tree</strong> ，也有写作 **Patricia trie **，</p>\n<blockquote>\n<p>经过压缩过的树，层数减少，访问内存的次数也减少，从而提高了性能；</p>\n<p>而新加入的词会扩展已经被压缩过的节点</p>\n<p><img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/xiaozhen_blockchain_note/04b959cbb244f9b3d13a0cefae513ab.png\"></p>\n</blockquote>\n<h3 id=\"Merkle-Patricia-tree\"><a href=\"#Merkle-Patricia-tree\" class=\"headerlink\" title=\"Merkle Patricia tree\"></a>Merkle Patricia tree</h3><p>Merkle Patricia tree (MPT),所有账户组织成一张Patricia tree，用路径压缩，再将指针替换成哈希指针，最后计算出状态树根节点的哈希值，写在block header中。</p>\n<h3 id=\"状态树\"><a href=\"#状态树\" class=\"headerlink\" title=\"状态树\"></a>状态树</h3><p>P.S 以太坊中的账户地址一般是160位的，也就是20个字节，通常表示成40个16进制数字</p>\n<p><img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/xiaozhen_blockchain_note/5d552b84a412de924d855c63a4498a7.png\"></p>\n<center>以太坊状态树，来源：肖臻老师PPT</center>\n\n<p>值得一提的是，状态树的更新并不会在原处修改，而是会另开一个区块；</p>\n<p><strong>原因</strong>：以太坊由于有智能合约存在，不能像比特币那样随意回滚</p>\n<h2 id=\"交易树\"><a href=\"#交易树\" class=\"headerlink\" title=\"交易树-\"></a>交易树-</h2><p><strong>作用：</strong></p>\n<ul>\n<li>提供merkle proof</li>\n<li>查找过去一段时间与某个智能合约有关的交易</li>\n</ul>\n<p>交易树中包含了这个区块中的所有交易，并且可以通过<strong>bloom filter</strong>快速查找交易是否存在。</p>\n<h4 id=\"bloom-filter\"><a href=\"#bloom-filter\" class=\"headerlink\" title=\"bloom filter\"></a>bloom filter</h4><p>用于查找交易，存放在块头中，在以太坊中将交易映射至一张表之中，在查找交易的时候，只需要将交易哈希处理后，在表中查找对应位置是否为1；之后在根据结果判断是否需要向全节点查询更详细的内容</p>\n<h3 id=\"收据树\"><a href=\"#收据树\" class=\"headerlink\" title=\"收据树\"></a>收据树</h3><p>收据树存储了每个区块中交易的收据（receipts）。交易执行完成后，会生成一个收据，记录了交易的执行结果、日志、事件等信息。这些收据包含了交易的详细信息，例如合约的调用结果、Gas消耗、事件日志等。</p>\n<p>收据树的根哈希值也被包含在区块头中，因此可以通过区块头的根哈希验证交易的有效性，并且可以快速检索特定交易的执行结果。</p>\n<h3 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h3><p>状态树中保存的是(key,value)</p>\n<p>用RLP（Recursive Length Prefix）作序列化之后再存储，涉及库（Protobuf 只支持一种类型：nested array of bytes字符数组)</p>\n<p>它和交易树、收据树的区别是它包含了系统中所有账户的状态，无论这个账户是否参与了当前区块的交易。</p>\n<blockquote>\n<p><strong>有没有可能A向B转了10ETH，但是B这个账户以前从来没听说过？</strong></p>\n<p>答：存在，以太坊中，创建账户是不需要通知其他人的，只有这个账户第一次产生交易，其他节点才会知道这个账户存在，这个时候会在状态树中新加入一个账户。</p>\n<p><strong>可以将状态树设计修改成每个区块的状态树只包含这个区块中相关交易的账户？</strong></p>\n<p>答：这会导致没有任何一个区块保存了完整的状态树，当我们查找状态信息时需要一节一节地去上一个区块中查找对应账户的状态信息，假如这个账户许久没有发生交易，那么，这个查询过程会需要花费很久，甚至会追溯至创世区块。</p>\n<p>更大地问题是，假如回到上一个问题中，A向B转了10个ETH，但假如B这个账户是刚刚建立的，那么其他节点在查找这个账户的时候，会一直查找上一个区块，直到创世区块之后才能够得知B账户是新建的</p>\n</blockquote>\n<p>//<em>以太坊数据结构的代码此处暂时省略（看不懂），等之后看懂了再补充在这里</em></p>\n<div class=\"highlight-container\" data-rel=\"Go\"><figure class=\"iseeu highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//以太坊交易树和收据树树数据结构</span></span><br><span class=\"line\"><span class=\"comment\">//block.go</span></span><br></pre></td></tr></table></figure></div>\n\n\n\n<h2 id=\"ETH以太坊–智能合约\"><a href=\"#ETH以太坊–智能合约\" class=\"headerlink\" title=\"ETH以太坊–智能合约\"></a>ETH以太坊–智能合约</h2><p>智能合约本质是运行在区块链上的一段代码，代码的逻辑定义了合约的内容，语言是solidity，语法上和js接近。</p>\n<p><em>//这块没听懂，我暂且先跳过了</em></p>\n<p><em>//当然是因为我太笨了，不过如果你和我一样笨的话，建议别看他讲的</em></p>\n","excerpt":"","more":"<h2 id=\"工具包\"><a href=\"#工具包\" class=\"headerlink\" title=\"工具包\"></a>工具包</h2><p>课程链接：【北京大学肖臻老师《区块链技术与应用》公开课】 <a class=\"link\" href=\"https://www.bilibili.com/video/BV1Vt411X7JF\">https://www.bilibili.com/video/BV1Vt411X7JF <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a></p>\n<p>区块链demo：<a class=\"link\" href=\"https://andersbrownworth.com/blockchain\">https://andersbrownworth.com/blockchain <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a></p>\n<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>这份网课是为了毕设做准备的，因此特此花费了一些时间用以学习区块链的本质</p>\n<p>在这份笔记中，你会了解比特币挖矿的真相，以及矿潮没落的原因</p>\n<p>但是比较无语的是，这份课程录制的时候我还在上初中，因此有部分内容可能以及随着时间发生了一些变化，需要辩证看待部分内容的正确性</p>\n<p>如果您发现笔记之中不正确的地方，欢迎您为我指正错误，联系方式见<strong>关于</strong>里的邮箱，感激不尽！</p>\n<h2 id=\"密码学原理\"><a href=\"#密码学原理\" class=\"headerlink\" title=\"密码学原理\"></a>密码学原理</h2><h3 id=\"哈希\"><a href=\"#哈希\" class=\"headerlink\" title=\"哈希\"></a>哈希</h3><p>加密货币实际是不加密的，线上公开透明；以最著名的加密货币比特币为例，它使用的是哈希和数字签名，密码学中的<strong>哈希</strong>被称为<strong>cryptographic hash function</strong>，它有一个特性叫<strong>collision resistance</strong>，也有地方说成<strong>collision free</strong>，但实际上哈希碰撞是不可避免的,这个特性当个玩笑话即可，马马虎虎可以这么认为，但不能当作真理。</p>\n<p><strong>collision resistance</strong>，指的是对于H(x),我们没有办法做到人为高效地找到一个H(x’)，使得H(x)==H(x’)，通俗易懂一点来说，就是做不到篡改但是不被发现，只要x有一丁点变化，那么最终的哈希值就会与先前有所不同。在Golang的项目依赖管理go.mod和go.sum中有着类似的机制，go.mod存放了项目所需要的依赖，而go.sum则存放了依赖所对应的哈希值，一旦我们在拉取代码并使用go get下载对应依赖时，下载的依赖被人篡改，那么新依赖计算出来的哈希值就会与go.sum中的原依赖哈希值不符，进而引发警告。</p>\n<p><strong>哈希碰撞</strong>，指的是对于x≠y,但是存在H(x)==H(y),使得不同输入会在哈希表被映射到同一个位置。由于哈希的输出空间只有2^256，且输出空间理论上是可以无限大的，因此哈希碰撞不可避免。但是目前来说，对于x，我们并没有高效的方式能够求得y满足哈希碰撞，暴力求解理论上可以完成，但是对于2^256种哈希值，这种方法非常困难。</p>\n<p><em>//此处H(x)，相当于x的digest,部分论文会将其翻译做摘要，姑且可以当作x的指纹，“独一无二”的标识</em></p>\n<p>因此，对于哈希函数，必须要严格补充一句，<strong>collision resistance</strong>本身是<strong>无法被证明</strong>且实际是<strong>不可能存在</strong>这种性质的，但是如果一个哈希函数在过去很长一段时间，没有人找到人为高效制造哈希碰撞的方法，我们就默许它是collision resistance的，这属于是一种比较经验化的性质，找不到等于“没有”。当然也有一些哈希函数，在过去是被认为是collision resistance的，但后来被发现可以人为制造哈希碰撞的方法，最为著名的就是MD5加密，以下是在Flask中一段经典的MD5加密代码。</p>\n<figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">password = hashlib.md5(password.encode()).hexdigest()</span><br></pre></td></tr></table></figure>\n\n<p>哈希函数还有一个性质，叫<strong>hiding</strong>，简单来说，哈希函数是单向的，x–&gt;H(x)这个过程是不可逆的，除了蛮力，无法高效地破解,但这有一个前提，哈希的输入范围要足够大且分布要足够均匀，否则也会因为输出范围太过狭隘导致被暴力破解，这一点可以参考《模仿游戏》中阿兰·图灵最后破解德军恩格玛电报的原因。</p>\n<p>当collision resistance和hiding结合使用时就可以实现<strong>digital commitment</strong>，有时候也叫<strong>digital equivalent of sealed envelope</strong>。</p>\n<blockquote>\n<p>什么是digital commitment？假设现实世界出现了一名法师奇异博士，他在使用了时间宝石之后，能够准确预言未来发生的事情。请问作为旁观者，我们该如何证明他的能力呢？最简单粗暴的办法就是，让他先预言，再等预言的时间到了，看看预言的事情是否发生。这听上去非常合理，但是事实上，一旦预言被公布出来，那么未来就可能会<strong>因为预言被公布这件事</strong>而发生改变。例如，奇异博士预言了古一会死亡，本来按照时间线，古一可能的的确确是会死亡，但是由于奇异博士的预言，导致众人因为保护古一，而使其没有阵亡，或者说因为众人保护古一的过程中出现了意外导致古一阵亡。这无论是哪种情况，都没办法佐证奇异博士的预言能力。因此，我们得出结论，<strong>预言是不可公开的</strong>。我们正确的做法是让奇异博士将预言的内容封死在绝对安全的保险箱中，确保没有人知道预言，待预言的时间到了，再打开确认有没有发送预言中出现的事情。</p>\n</blockquote>\n<p>对于电子世界，我们想要做到类似的事情，我们就需要将内容进行哈希加密，将得出的哈希值公布出去，并将原文内容封锁在digital sealed envelope中，一旦到了需要解密的时候，我们再解开digital sealed envelope，由于哈希函数具有hiding的性质，因此即便公布哈希值也推不出原文，更不会影响未来，而又由于具备collision resistance的性质，如果公布出来的内容和原文不一样或者说被篡改了，那么通过哈希值就可以轻易判断。</p>\n<p>实际操作中，为满足hiding性质的前提，我们会对原文尾部添加一串随机数，将两个部分同时进行哈希加密，这样可以确保输入范围大，输出分布均匀，如：”今天看起来是个不错的日子||1018“，其中1018就是拼接的随机数。</p>\n<p>另外，在比特币中，还有一个性质，叫<strong>puzzle friendly</strong>，这个说的是，在工作量证明机制中，<strong>挖矿没有捷径</strong>，只能够通过一遍遍地试随机数，使得 Hash ( block,header ) &lt;= target(指定阈值)。值得一提的是，在其中一名矿工成功计算出随机数之后，其他矿工需要去验证这个随机数是否正确，而这个验证方法十分简单，只需要将其重新带回Hash ( block,header ) ，查看结果是否小于等于目标阈值，因为计算复杂，求证简单，因此，这个性质又被称作”difficult to solve, but easy to verify”[难以解决，但容易求证]</p>\n<p>比特币中使用的哈希函数叫SHA-256(Secure Hash Algorithm)，它同时具备了上述性质。</p>\n<p><img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/xiaozhen_blockchain_note/image-20240112095737762.png\" alt=\"image-20240112095737762\"></p>\n<p><img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/xiaozhen_blockchain_note/image-20240112095746127.png\" alt=\"image-20240112095746127\"></p>\n<p>上图为哈希加密的一个示例，来源：<a class=\"link\" href=\"https://andersbrownworth.com/blockchain/hash\">https://andersbrownworth.com/blockchain/hash <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a></p>\n<p><em>//这个博主的个人网页也有写有关区块链的内容</em></p>\n<h3 id=\"数字签名\"><a href=\"#数字签名\" class=\"headerlink\" title=\"数字签名\"></a>数字签名</h3><p>对于不安全的通信渠道，即便是有了普通的加密措施，也就是对称加密，也可能会因为密钥被截取而导致信息泄露，于是非对称加密应运而生。</p>\n<p><strong>非对称加密</strong>，即使用公钥加密，私钥解密，由于私钥是存放在本地的，并不需要参与通信，因此我们不需要担心在通信过程导致私钥被截取。而公钥是公开的，所有人都可以拿到，它只具备加密的能力，并不能解密，所以不存在公钥被截取导致信息泄露。在通信过程中，我们使用对方的公钥进行加密，对方收到信息之后，会使用本地的私钥进行解密，传输过程中，信息是处于加密状态的。</p>\n<p>值得一提的是，公钥是私钥通过某种方法去推算出来的，且这个运算是不可逆的，也就是说，知道私钥的人可以推导出对应的公钥，但知道公钥的人无法逆向推导出私钥。</p>\n<blockquote>\n<p>通俗易懂地来说就是，我用我手里的钥匙制作了足够多的锁，我把我的锁发给全世界每个人，他们如果想给我邮寄东西，就必须用我给的锁上锁，上完之后，除了我手里的钥匙，没人能够打开它。这就是非对称加密。</p>\n</blockquote>\n<p>非对称加密技术我们可以用来制作签名，以比特币交易为例，假设LRay向B转了10个比特币，交易产生并且记录被发布到区块链中，其他节点如何认可此次交易的真实性呢？</p>\n<p>那么LRay就会在发布交易时，同时发布一个签名（使用私钥加密这个签名），其他节点再使用公钥去验证这个签名的真实性。</p>\n<blockquote>\n<p>肖臻：是否存在两个人公钥和私钥一模一样的情况呢？即小黑发起大量攻击，产生大量的公私钥，再检查自身产生的公钥是否和区块链上已有的公钥是否相同，直到产生的某个公钥，恰好能够和用户C的公钥一模一样，这样小黑就得到了用户C的公私钥，那么小黑是否可以使用他的公私钥发布交易，或者篡改用户C的交易呢？</p>\n<p>理论上确实可行，但是实际上，对于256位(二进制，10进制大约78位)的公私钥，出现相同的概率微乎其微，哪怕是超级计算机，日夜兼程计算，找到的概率甚至小于地球爆炸的可能性。但这一且都是建立在有一个良好的随机源的基础上，如果随机源不够优秀，可能会在一遍遍的签名中将私钥破解出来。</p>\n</blockquote>\n<h2 id=\"比特币的数据结构-已废弃，可不学\"><a href=\"#比特币的数据结构-已废弃，可不学\" class=\"headerlink\" title=\"比特币的数据结构[已废弃，可不学]\"></a>比特币的数据结构[已废弃，可不学]</h2><p><img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/xiaozhen_blockchain_note/image-20240105091958351.png\" alt=\"image-20240105091958351\"></p>\n<h3 id=\"区块链\"><a href=\"#区块链\" class=\"headerlink\" title=\"区块链\"></a>区块链</h3><p><em>//特奶奶个锤，学了一大半才发现这玩意已经被合并掉了，没话说，日常白学，习惯就好</em></p>\n<p>区块链本身是有区块组成的链表，和传统的链表有所不同</p>\n<p>首先是哈希指针和传统指针有所不同，相比起传统指针p（存放了结构体在内存中的起始地址），增加了一个H(x)，也就是说，哈希指针不仅需要保存地址，还需要保存一个哈希值，这个哈希值可以用来检测结构体中的内容是否被篡改。</p>\n<p><img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/xiaozhen_blockchain_note/cec260ce36410d64a2e680b87dafbbe.png\"></p>\n<center>hash pointer，哈希指针</center>\n\n<p>下面是一种简单的区块链结构</p>\n<p><img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/xiaozhen_blockchain_note/b82daa61a0de14965f383ca4cfbf309.png\"></p>\n<p>最左边的叫创世区块，是区块链中的第一个区块，之后的每一个区块的都会保存着上一个区块的地址以及哈希值。而最后一个区块的地址和哈希值保存在系统中，一旦中间的某一个区块被篡改，H( )变成了H’( )，那么牵一发而动全身，后面区块的哈希值都会发生变化，最终系统会发现最后一个区块的哈希值与保存的哈希值有所不同。以下是一个范例：</p>\n<p><img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/xiaozhen_blockchain_note/image-20240115231345044.png\" alt=\"image-20240115231345044\"></p>\n<p><img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/xiaozhen_blockchain_note/image-20240115231352791.png\" alt=\"image-20240115231352791\"></p>\n<p>一旦发生篡改</p>\n<p><img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/xiaozhen_blockchain_note/image-20240115231411208.png\" alt=\"image-20240115231411208\"></p>\n<p>另外这种结构还具备temper-evident log，即可追踪日志，还是以刚才被篡改的区块为例，假如系统中只保存了后两个区块的，我们想要前面的区块中的内容，我们向前面节点发起了请求，我们对发来的区块链中的most recent block进行哈希计算，得到的哈希值如果和我们最老的区块中保存的哈希值不符合，那么就说明发来的数据是有被篡改的。</p>\n<p>在比特币中，除了区块链，还有一种结构，叫<strong>Merkle tree</strong></p>\n<h3 id=\"Merkle-tree\"><a href=\"#Merkle-tree\" class=\"headerlink\" title=\"Merkle tree\"></a>Merkle tree</h3><p><img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/xiaozhen_blockchain_note/3f0cfb0ee800495f367fb49c58eea45.png\"></p>\n<center>Merkle tree</center>\n\n<p>长相上和二叉树有类似的地方，但和二叉树有所不同的是，使用了哈希指针代替了普通指针，子节点中的哈希值存在它们的父节点中，优点是只需要记住最上方根节点的哈希值，就可以检测出merkle tree中任何一个节点是否发生篡改，原理和之前的区块链表有所类似。</p>\n<p><strong>根哈希值存放在block header中，而block body中包含了交易列表</strong></p>\n<p>用途：</p>\n<p>比特币中的节点分为轻节点(light node)和全节点(full node)两类，全节点是保存整个区块的内容（block header+block body），而轻节点只保存了block header</p>\n<h3 id=\"Merkle-Proof\"><a href=\"#Merkle-Proof\" class=\"headerlink\" title=\"Merkle Proof\"></a>Merkle Proof</h3><p>Merkle Proof ，用于寻找交易所在的节点路径，查询交易是否被写进区块链中。轻节点中只包括了块头部分，因此，MerkleProof的第一步就是向全节点发送请求，之后全节点会返回一条交易路径和沿途的H(),而轻节点要做的就是对哈希值进行计算，判断最终结果与块头中的根哈希值是否相同。</p>\n<p><em>//具体见下方肖臻老师的演示课件</em></p>\n<blockquote>\n<p>以下是肖臻老师PPT所做的演示，是将两种区块链结构合二为一，做的显然更加细致</p>\n<p><img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/xiaozhen_blockchain_note/9c36b711da645ebc72e4fb5b73b7572.png\"></p>\n<p>这张图片展示了区块链节点中的以部分，每一个区块下存放着一个merkle tree，而树的地步是交易明细，在我们查询交易的时候，为了验证某个交易是否存在，轻节点会先向全节点发送请求，全节点会返回红色部分的哈希值以及交易的路径，轻节点只需要使用底部需要查验的交易哈希值，一步一步推出父节点中的绿色哈希值，知道推出根节点中的哈希值，与块头中的根哈希值进行比对。</p>\n<p><em>红色的哈希值我们是无法验证的，因为轻节点的这一次查询，只能查询路径中的部分，黑色部分都是无法查询的,我们无法判断红色哈希值的正确性</em></p>\n</blockquote>\n<p>这种查询方式也被成为 proof of membership/proof of inclusion,复杂度是θ(log(n))；如果是 proof of non-membership呢？那就是将整个merkle tree都发送给轻节点了，复杂度是θ(n)</p>\n<h2 id=\"ETH以太坊\"><a href=\"#ETH以太坊\" class=\"headerlink\" title=\"ETH以太坊\"></a>ETH以太坊</h2><h4 id=\"机制区别\"><a href=\"#机制区别\" class=\"headerlink\" title=\"机制区别\"></a>机制区别</h4><blockquote>\n<p>比特币是proof of work（<strong>工作证明机制</strong>）,以太坊是proof of stake（<strong>权益证明机制</strong>）；</p>\n<p><em>//值得一提的是，比特币和以太坊在2022年已经完成合并，因此先前部分笔记需要进行修改。</em></p>\n<p><em>// 其实有一部分相当于白学了#无能狂怒 #龙怒</em></p>\n</blockquote>\n<p><strong>传统比特币</strong>（现已与以太坊合并），在前面交易中收到的货币，必须要在之后一次性花出去</p>\n<p>例如：LRay-iu转给B10个比特币，B要在将来一次性全部交易出去，多余的则成为了tranactions fee</p>\n<p>原因：比特币没有基于账户的模型，是对交易进行单独处理的，这个在其数据结构中也能看出一点</p>\n<p>而<strong>以太坊</strong>是基于account-based ledger，有着基于账户的模型，因此，完全不需要全部交易，多出来的以太币纠结着存放在账户中，同时也不再需要哈希指针指向上一条交易</p>\n<p>而在比特币中需要关心的一个问题–货币的双重支付（double spending attack），在以太坊对这个有着天然的防御作用，但是与之相对的有着另一个问题，重放攻击（reply attack）</p>\n<blockquote>\n<p>简单来说，与双重支付相对，重放指的是收钱方存在恶意，比如LRay-iu向B转了10个以太币，而B在收到这10个以太币之后，将这一条交易又广播了一遍，那么LRay-iu的账户可能会被转2次钱。</p>\n</blockquote>\n<p>解决方案，在账户下对应保存账户的交易次数nonce。在发布交易的时候节点也会更新交易次数，以避免重放交易。</p>\n<h4 id=\"智能合约\"><a href=\"#智能合约\" class=\"headerlink\" title=\"智能合约\"></a>智能合约</h4><p>智能合约是一种在区块链上执行的自动化合约，它是一段以编程方式编写的代码，旨在自动执行、管理或强制执行合同条款或协议。这些合约以代码的形式存在于区块链上，其中包含了特定的规则和逻辑，通过在区块链网络上运行，可以在没有第三方参与的情况下执行交易或协议。</p>\n<p>智能合约运行于区块链网络中的节点上，并且由网络中的所有节点来验证和执行，确保了其去中心化和不可篡改性质。</p>\n<p>P.S 换句话说，智能合约一经发布，即便是开发者本身也不能修改合约。</p>\n<h4 id=\"合约账户\"><a href=\"#合约账户\" class=\"headerlink\" title=\"合约账户\"></a>合约账户</h4><p>创建合约会返回一个地址，知道这个地址就可以调用这个合约,调用过程中状态会发生变化。</p>\n<blockquote>\n<p><strong>外部账户</strong>：balance（账户余额），nonce（交易次数）</p>\n<p><strong>合约账户</strong>：balance（账户余额），nonce（用来记录，调用其他合约的次数），并不是依赖公私钥进行控制，并且以太坊中有规定，合约账户不可以主动发起交易。code（代码），storage（存储相关状态）</p>\n</blockquote>\n<h2 id=\"以太坊数据结构\"><a href=\"#以太坊数据结构\" class=\"headerlink\" title=\"以太坊数据结构\"></a>以太坊数据结构</h2><p>对比比特币中的merkle tree并没有提供高效查找和更新的方法</p>\n<h3 id=\"Trie\"><a href=\"#Trie\" class=\"headerlink\" title=\"Trie\"></a>Trie</h3><p>Trie 是一种树形结构，由节点和边构成，每个节点代表一个字符（或一个字节）的信息，而边则代表字符之间的关系。Trie 的特点在于利用共享前缀来节省存储空间，提高数据存取的效率。</p>\n<blockquote>\n<p>以下是一张经典的Trie图</p>\n<p><img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/xiaozhen_blockchain_note/ed5b963beaf85e5b9e489a10efcc51f-170441778579113.png\"></p>\n<p>优点：</p>\n<p><strong>高效的数据检索</strong>： Trie 的查找效率取决于key(上述单词的长度)的长度</p>\n<p><strong>不会发生数据碰撞</strong>：不同的地址(key)，映射到树中的位置也注定不同</p>\n<p><strong>不同节点按照不同的顺序插入树中，得到的树的结构是一样的</strong></p>\n<p><strong>局部更新</strong>： 当区块发生变化，只需要对发生变化的部分进行更新</p>\n<p>缺点：</p>\n<p><strong>存储敏感性：</strong> Trie 数据结构对存储敏感，对于大型区块链，存储 Trie 可能需要大量的存储空间。</p>\n</blockquote>\n<h3 id=\"Patricia-tree\"><a href=\"#Patricia-tree\" class=\"headerlink\" title=\"Patricia tree\"></a>Patricia tree</h3><p>为了解决占据存储的问题，有了优化过的<strong>Patricia tree</strong> ，也有写作 **Patricia trie **，</p>\n<blockquote>\n<p>经过压缩过的树，层数减少，访问内存的次数也减少，从而提高了性能；</p>\n<p>而新加入的词会扩展已经被压缩过的节点</p>\n<p><img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/xiaozhen_blockchain_note/04b959cbb244f9b3d13a0cefae513ab.png\"></p>\n</blockquote>\n<h3 id=\"Merkle-Patricia-tree\"><a href=\"#Merkle-Patricia-tree\" class=\"headerlink\" title=\"Merkle Patricia tree\"></a>Merkle Patricia tree</h3><p>Merkle Patricia tree (MPT),所有账户组织成一张Patricia tree，用路径压缩，再将指针替换成哈希指针，最后计算出状态树根节点的哈希值，写在block header中。</p>\n<h3 id=\"状态树\"><a href=\"#状态树\" class=\"headerlink\" title=\"状态树\"></a>状态树</h3><p>P.S 以太坊中的账户地址一般是160位的，也就是20个字节，通常表示成40个16进制数字</p>\n<p><img lazyload=\"\" src=\"/images/loading.svg\" data-src=\"/img/xiaozhen_blockchain_note/5d552b84a412de924d855c63a4498a7.png\"></p>\n<center>以太坊状态树，来源：肖臻老师PPT</center>\n\n<p>值得一提的是，状态树的更新并不会在原处修改，而是会另开一个区块；</p>\n<p><strong>原因</strong>：以太坊由于有智能合约存在，不能像比特币那样随意回滚</p>\n<h2 id=\"交易树\"><a href=\"#交易树\" class=\"headerlink\" title=\"交易树-\"></a>交易树-</h2><p><strong>作用：</strong></p>\n<ul>\n<li>提供merkle proof</li>\n<li>查找过去一段时间与某个智能合约有关的交易</li>\n</ul>\n<p>交易树中包含了这个区块中的所有交易，并且可以通过<strong>bloom filter</strong>快速查找交易是否存在。</p>\n<h4 id=\"bloom-filter\"><a href=\"#bloom-filter\" class=\"headerlink\" title=\"bloom filter\"></a>bloom filter</h4><p>用于查找交易，存放在块头中，在以太坊中将交易映射至一张表之中，在查找交易的时候，只需要将交易哈希处理后，在表中查找对应位置是否为1；之后在根据结果判断是否需要向全节点查询更详细的内容</p>\n<h3 id=\"收据树\"><a href=\"#收据树\" class=\"headerlink\" title=\"收据树\"></a>收据树</h3><p>收据树存储了每个区块中交易的收据（receipts）。交易执行完成后，会生成一个收据，记录了交易的执行结果、日志、事件等信息。这些收据包含了交易的详细信息，例如合约的调用结果、Gas消耗、事件日志等。</p>\n<p>收据树的根哈希值也被包含在区块头中，因此可以通过区块头的根哈希验证交易的有效性，并且可以快速检索特定交易的执行结果。</p>\n<h3 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h3><p>状态树中保存的是(key,value)</p>\n<p>用RLP（Recursive Length Prefix）作序列化之后再存储，涉及库（Protobuf 只支持一种类型：nested array of bytes字符数组)</p>\n<p>它和交易树、收据树的区别是它包含了系统中所有账户的状态，无论这个账户是否参与了当前区块的交易。</p>\n<blockquote>\n<p><strong>有没有可能A向B转了10ETH，但是B这个账户以前从来没听说过？</strong></p>\n<p>答：存在，以太坊中，创建账户是不需要通知其他人的，只有这个账户第一次产生交易，其他节点才会知道这个账户存在，这个时候会在状态树中新加入一个账户。</p>\n<p><strong>可以将状态树设计修改成每个区块的状态树只包含这个区块中相关交易的账户？</strong></p>\n<p>答：这会导致没有任何一个区块保存了完整的状态树，当我们查找状态信息时需要一节一节地去上一个区块中查找对应账户的状态信息，假如这个账户许久没有发生交易，那么，这个查询过程会需要花费很久，甚至会追溯至创世区块。</p>\n<p>更大地问题是，假如回到上一个问题中，A向B转了10个ETH，但假如B这个账户是刚刚建立的，那么其他节点在查找这个账户的时候，会一直查找上一个区块，直到创世区块之后才能够得知B账户是新建的</p>\n</blockquote>\n<p>//<em>以太坊数据结构的代码此处暂时省略（看不懂），等之后看懂了再补充在这里</em></p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//以太坊交易树和收据树树数据结构</span></span><br><span class=\"line\"><span class=\"comment\">//block.go</span></span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"ETH以太坊–智能合约\"><a href=\"#ETH以太坊–智能合约\" class=\"headerlink\" title=\"ETH以太坊–智能合约\"></a>ETH以太坊–智能合约</h2><p>智能合约本质是运行在区块链上的一段代码，代码的逻辑定义了合约的内容，语言是solidity，语法上和js接近。</p>\n<p><em>//这块没听懂，我暂且先跳过了</em></p>\n<p><em>//当然是因为我太笨了，不过如果你和我一样笨的话，建议别看他讲的</em></p>\n"},{"title":"常用指令集（个人向）","date":"2024-03-21T06:41:00.000Z","copyright":"无","_content":"\n## Git指令\n\n```terminal\n\tgit init //把这个目录变成Git可以管理的仓库\n\tgit add README.md //文件添加到仓库\n\tgit add . //不但可以跟单一文件，还可以跟通配符，更可以跟目录。一个点就把当前目录下所有未追踪的文件全部add了 \n\tgit commit -m \"first commit\" //把文件提交到仓库\n\tgit remote add origin git@github.com:LRay-iu/LRay-iu.github.io.git //关联远程仓库\n\tgit branch -m master main//更改本地分支\n\tgit push -u origin main //把本地库的所有内容推送到远程库上\n\tgit pull //拉去远程仓库\n\tgit remote -v //查看远程仓库\n\tgit remote remove 远程仓库的别名 //清楚远程仓库\n\tgit log //查看分支日志\n\tgit reset --hard 目标版本号  //回退版本\n\tgit push -f origin main //强制提交\n```\n\n## 包指令\n\n吐槽一句，最近npm这玩意是真的难用，各种奇奇怪怪的下载不了，代理也不太好使。。。可能是我的问题？\n\n```terminal\n\t#切换至华为云镜像\n\tnpm config set registry https://registry.npmmirror.com\n\tyarn config set registry https://mirrors.huaweicloud.com\n\t#切换回官方源\n\tnpm config set registry https://registry.npmjs.org/\n\n\t#查看npm和yarn所有配置\n\tnpm config list\n\tyarn config list\n\t\n\t#取消ssl验证\n\tnpm config set strict-ssl false \n```\n\n","source":"_posts/个人常用指令集.md","raw":"---\ntitle: 常用指令集（个人向）\ncategories:\n  - 工具包\ndate: 2024-03-21 14:41\ncopyright: 无\ntags:\n  - git\n  - npm\n  - yarn\n---\n\n## Git指令\n\n```terminal\n\tgit init //把这个目录变成Git可以管理的仓库\n\tgit add README.md //文件添加到仓库\n\tgit add . //不但可以跟单一文件，还可以跟通配符，更可以跟目录。一个点就把当前目录下所有未追踪的文件全部add了 \n\tgit commit -m \"first commit\" //把文件提交到仓库\n\tgit remote add origin git@github.com:LRay-iu/LRay-iu.github.io.git //关联远程仓库\n\tgit branch -m master main//更改本地分支\n\tgit push -u origin main //把本地库的所有内容推送到远程库上\n\tgit pull //拉去远程仓库\n\tgit remote -v //查看远程仓库\n\tgit remote remove 远程仓库的别名 //清楚远程仓库\n\tgit log //查看分支日志\n\tgit reset --hard 目标版本号  //回退版本\n\tgit push -f origin main //强制提交\n```\n\n## 包指令\n\n吐槽一句，最近npm这玩意是真的难用，各种奇奇怪怪的下载不了，代理也不太好使。。。可能是我的问题？\n\n```terminal\n\t#切换至华为云镜像\n\tnpm config set registry https://registry.npmmirror.com\n\tyarn config set registry https://mirrors.huaweicloud.com\n\t#切换回官方源\n\tnpm config set registry https://registry.npmjs.org/\n\n\t#查看npm和yarn所有配置\n\tnpm config list\n\tyarn config list\n\t\n\t#取消ssl验证\n\tnpm config set strict-ssl false \n```\n\n","slug":"个人常用指令集","published":1,"updated":"2024-08-25T13:49:25.324Z","comments":1,"layout":"post","photos":[],"_id":"cm0b0qx7w001vjwurdzlu1h9k","content":"<h2 id=\"Git指令\"><a href=\"#Git指令\" class=\"headerlink\" title=\"Git指令\"></a>Git指令</h2><div class=\"highlight-container\" data-rel=\"Plaintext\"><figure class=\"iseeu highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git init //把这个目录变成Git可以管理的仓库</span><br><span class=\"line\">git add README.md //文件添加到仓库</span><br><span class=\"line\">git add . //不但可以跟单一文件，还可以跟通配符，更可以跟目录。一个点就把当前目录下所有未追踪的文件全部add了 </span><br><span class=\"line\">git commit -m \"first commit\" //把文件提交到仓库</span><br><span class=\"line\">git remote add origin git@github.com:LRay-iu/LRay-iu.github.io.git //关联远程仓库</span><br><span class=\"line\">git branch -m master main//更改本地分支</span><br><span class=\"line\">git push -u origin main //把本地库的所有内容推送到远程库上</span><br><span class=\"line\">git pull //拉去远程仓库</span><br><span class=\"line\">git remote -v //查看远程仓库</span><br><span class=\"line\">git remote remove 远程仓库的别名 //清楚远程仓库</span><br><span class=\"line\">git log //查看分支日志</span><br><span class=\"line\">git reset --hard 目标版本号  //回退版本</span><br><span class=\"line\">git push -f origin main //强制提交</span><br></pre></td></tr></table></figure></div>\n\n<h2 id=\"包指令\"><a href=\"#包指令\" class=\"headerlink\" title=\"包指令\"></a>包指令</h2><p>吐槽一句，最近npm这玩意是真的难用，各种奇奇怪怪的下载不了，代理也不太好使。。。可能是我的问题？</p>\n<div class=\"highlight-container\" data-rel=\"Plaintext\"><figure class=\"iseeu highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#切换至华为云镜像</span><br><span class=\"line\">npm config set registry https://registry.npmmirror.com</span><br><span class=\"line\">yarn config set registry https://mirrors.huaweicloud.com</span><br><span class=\"line\">#切换回官方源</span><br><span class=\"line\">npm config set registry https://registry.npmjs.org/</span><br><span class=\"line\"></span><br><span class=\"line\">#查看npm和yarn所有配置</span><br><span class=\"line\">npm config list</span><br><span class=\"line\">yarn config list</span><br><span class=\"line\"></span><br><span class=\"line\">#取消ssl验证</span><br><span class=\"line\">npm config set strict-ssl false </span><br></pre></td></tr></table></figure></div>\n\n","excerpt":"","more":"<h2 id=\"Git指令\"><a href=\"#Git指令\" class=\"headerlink\" title=\"Git指令\"></a>Git指令</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git init //把这个目录变成Git可以管理的仓库</span><br><span class=\"line\">git add README.md //文件添加到仓库</span><br><span class=\"line\">git add . //不但可以跟单一文件，还可以跟通配符，更可以跟目录。一个点就把当前目录下所有未追踪的文件全部add了 </span><br><span class=\"line\">git commit -m \"first commit\" //把文件提交到仓库</span><br><span class=\"line\">git remote add origin git@github.com:LRay-iu/LRay-iu.github.io.git //关联远程仓库</span><br><span class=\"line\">git branch -m master main//更改本地分支</span><br><span class=\"line\">git push -u origin main //把本地库的所有内容推送到远程库上</span><br><span class=\"line\">git pull //拉去远程仓库</span><br><span class=\"line\">git remote -v //查看远程仓库</span><br><span class=\"line\">git remote remove 远程仓库的别名 //清楚远程仓库</span><br><span class=\"line\">git log //查看分支日志</span><br><span class=\"line\">git reset --hard 目标版本号  //回退版本</span><br><span class=\"line\">git push -f origin main //强制提交</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"包指令\"><a href=\"#包指令\" class=\"headerlink\" title=\"包指令\"></a>包指令</h2><p>吐槽一句，最近npm这玩意是真的难用，各种奇奇怪怪的下载不了，代理也不太好使。。。可能是我的问题？</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#切换至华为云镜像</span><br><span class=\"line\">npm config set registry https://registry.npmmirror.com</span><br><span class=\"line\">yarn config set registry https://mirrors.huaweicloud.com</span><br><span class=\"line\">#切换回官方源</span><br><span class=\"line\">npm config set registry https://registry.npmjs.org/</span><br><span class=\"line\"></span><br><span class=\"line\">#查看npm和yarn所有配置</span><br><span class=\"line\">npm config list</span><br><span class=\"line\">yarn config list</span><br><span class=\"line\"></span><br><span class=\"line\">#取消ssl验证</span><br><span class=\"line\">npm config set strict-ssl false </span><br></pre></td></tr></table></figure>\n\n"}],"PostAsset":[],"PostCategory":[{"post_id":"cm0b0qx740001jwurg5o7drud","category_id":"cm0b0qx790004jwur8832edjk","_id":"cm0b0qx7j000ijwur6r8eavyc"},{"post_id":"cm0b0qx7h000fjwur3mmd1d1p","category_id":"cm0b0qx7g000cjwur1klo9xvo","_id":"cm0b0qx7k000njwuratjd81y7"},{"post_id":"cm0b0qx780003jwur3pfth1dp","category_id":"cm0b0qx7g000cjwur1klo9xvo","_id":"cm0b0qx7l000rjwurdeee99lx"},{"post_id":"cm0b0qx7c0007jwurbyp9dq2b","category_id":"cm0b0qx7j000jjwurfxc65nyv","_id":"cm0b0qx7l000tjwur0c6m5ut6"},{"post_id":"cm0b0qx7e0009jwur6q14e6ee","category_id":"cm0b0qx7l000pjwur59mt8f0y","_id":"cm0b0qx7n000xjwur35sw10y0"},{"post_id":"cm0b0qx7f000bjwur37kqfw0c","category_id":"cm0b0qx7g000cjwur1klo9xvo","_id":"cm0b0qx7n000zjwur7tuofm7x"},{"post_id":"cm0b0qx7i000hjwurg06paqhs","category_id":"cm0b0qx7m000wjwur2bo86wqr","_id":"cm0b0qx7o0013jwure4et3kb5"},{"post_id":"cm0b0qx7k000ljwur7ae7fcjf","category_id":"cm0b0qx7l000pjwur59mt8f0y","_id":"cm0b0qx7o0017jwur43477pgt"},{"post_id":"cm0b0qx7r001kjwur1eym9scd","category_id":"cm0b0qx7j000jjwurfxc65nyv","_id":"cm0b0qx7v001qjwur995p9maj"},{"post_id":"cm0b0qx7s001ljwurgkvs7mf8","category_id":"cm0b0qx7g000cjwur1klo9xvo","_id":"cm0b0qx7w001tjwurea7eacg4"},{"post_id":"cm0b0qx7t001njwur66ob5vme","category_id":"cm0b0qx7g000cjwur1klo9xvo","_id":"cm0b0qx7w001wjwurhh8v0kbe"},{"post_id":"cm0b0qx7u001pjwurav5c4jmg","category_id":"cm0b0qx7g000cjwur1klo9xvo","_id":"cm0b0qx7x001zjwur2shu9cvf"},{"post_id":"cm0b0qx7v001sjwurd09ue4mq","category_id":"cm0b0qx7j000jjwurfxc65nyv","_id":"cm0b0qx7x0022jwurc9ev4mbn"},{"post_id":"cm0b0qx7w001vjwurdzlu1h9k","category_id":"cm0b0qx7x0020jwurcdh8akbn","_id":"cm0b0qx7y0029jwur3el457q0"}],"PostTag":[{"post_id":"cm0b0qx740001jwurg5o7drud","tag_id":"cm0b0qx7b0005jwurd20c7sgv","_id":"cm0b0qx7k000mjwurhp8a8h1u"},{"post_id":"cm0b0qx740001jwurg5o7drud","tag_id":"cm0b0qx7g000djwur8vvc32mv","_id":"cm0b0qx7k000ojwur85l36wp0"},{"post_id":"cm0b0qx780003jwur3pfth1dp","tag_id":"cm0b0qx7j000kjwurg4ca42an","_id":"cm0b0qx7l000sjwurhm3e1pks"},{"post_id":"cm0b0qx7c0007jwurbyp9dq2b","tag_id":"cm0b0qx7l000qjwurdi66gs1g","_id":"cm0b0qx7o0012jwur616hfh9h"},{"post_id":"cm0b0qx7c0007jwurbyp9dq2b","tag_id":"cm0b0qx7l000vjwur1wjnbtad","_id":"cm0b0qx7o0014jwurasj7cvoj"},{"post_id":"cm0b0qx7c0007jwurbyp9dq2b","tag_id":"cm0b0qx7n000yjwur9y73fb96","_id":"cm0b0qx7o0016jwur21fz6s1q"},{"post_id":"cm0b0qx7e0009jwur6q14e6ee","tag_id":"cm0b0qx7o0011jwur9kjz0vms","_id":"cm0b0qx7p0019jwur60r7fvz7"},{"post_id":"cm0b0qx7e0009jwur6q14e6ee","tag_id":"cm0b0qx7o0015jwur53ak9j8w","_id":"cm0b0qx7p001ajwur9wsh83ws"},{"post_id":"cm0b0qx7f000bjwur37kqfw0c","tag_id":"cm0b0qx7o0018jwur1pv7f25k","_id":"cm0b0qx7p001cjwuraupjfxnc"},{"post_id":"cm0b0qx7h000fjwur3mmd1d1p","tag_id":"cm0b0qx7p001bjwur55dc1zp6","_id":"cm0b0qx7p001ejwur7p5f65r6"},{"post_id":"cm0b0qx7i000hjwurg06paqhs","tag_id":"cm0b0qx7p001djwur08d01ov3","_id":"cm0b0qx7p001gjwurgkw52u3y"},{"post_id":"cm0b0qx7k000ljwur7ae7fcjf","tag_id":"cm0b0qx7o0011jwur9kjz0vms","_id":"cm0b0qx7q001ijwurcryya8ju"},{"post_id":"cm0b0qx7k000ljwur7ae7fcjf","tag_id":"cm0b0qx7o0015jwur53ak9j8w","_id":"cm0b0qx7q001jjwure2r8aj4t"},{"post_id":"cm0b0qx7s001ljwurgkvs7mf8","tag_id":"cm0b0qx7p001bjwur55dc1zp6","_id":"cm0b0qx7u001ojwurbv7i0g8q"},{"post_id":"cm0b0qx7t001njwur66ob5vme","tag_id":"cm0b0qx7p001bjwur55dc1zp6","_id":"cm0b0qx7v001rjwurfij975v9"},{"post_id":"cm0b0qx7u001pjwurav5c4jmg","tag_id":"cm0b0qx7p001bjwur55dc1zp6","_id":"cm0b0qx7w001ujwurgcd04z5t"},{"post_id":"cm0b0qx7r001kjwur1eym9scd","tag_id":"cm0b0qx7l000qjwurdi66gs1g","_id":"cm0b0qx7x001yjwur79a32t7b"},{"post_id":"cm0b0qx7r001kjwur1eym9scd","tag_id":"cm0b0qx7n000yjwur9y73fb96","_id":"cm0b0qx7x0021jwureggr4ns7"},{"post_id":"cm0b0qx7r001kjwur1eym9scd","tag_id":"cm0b0qx7l000vjwur1wjnbtad","_id":"cm0b0qx7x0023jwur6bhs3pdx"},{"post_id":"cm0b0qx7r001kjwur1eym9scd","tag_id":"cm0b0qx7t001mjwur0l8uegty","_id":"cm0b0qx7x0025jwur4y0aadf1"},{"post_id":"cm0b0qx7v001sjwurd09ue4mq","tag_id":"cm0b0qx7l000qjwurdi66gs1g","_id":"cm0b0qx7y0026jwurhaufbmk3"},{"post_id":"cm0b0qx7v001sjwurd09ue4mq","tag_id":"cm0b0qx7x001xjwur7qla2z6m","_id":"cm0b0qx7y0028jwurectq5fxp"},{"post_id":"cm0b0qx7v001sjwurd09ue4mq","tag_id":"cm0b0qx7l000vjwur1wjnbtad","_id":"cm0b0qx7y002ajwur6azr0zrn"},{"post_id":"cm0b0qx7w001vjwurdzlu1h9k","tag_id":"cm0b0qx7x0024jwur44c26igu","_id":"cm0b0qx7y002cjwur14fpgth1"},{"post_id":"cm0b0qx7w001vjwurdzlu1h9k","tag_id":"cm0b0qx7y0027jwur33gj42t5","_id":"cm0b0qx7y002djwur3f105eqg"},{"post_id":"cm0b0qx7w001vjwurdzlu1h9k","tag_id":"cm0b0qx7y002bjwur9jqy3u7f","_id":"cm0b0qx7y002ejwurf64343yy"}],"Tag":[{"name":"Gin","_id":"cm0b0qx7b0005jwurd20c7sgv"},{"name":"Golang","_id":"cm0b0qx7g000djwur8vvc32mv"},{"name":"碎碎念","_id":"cm0b0qx7j000kjwurg4ca42an"},{"name":"区块链","_id":"cm0b0qx7l000qjwurdi66gs1g"},{"name":"以太坊","_id":"cm0b0qx7l000vjwur1wjnbtad"},{"name":"智能合约","_id":"cm0b0qx7n000yjwur9y73fb96"},{"name":"Vue3.0","_id":"cm0b0qx7o0011jwur9kjz0vms"},{"name":"Typescript","_id":"cm0b0qx7o0015jwur53ak9j8w"},{"name":"手工DIY","_id":"cm0b0qx7o0018jwur1pv7f25k"},{"name":"旅途","_id":"cm0b0qx7p001bjwur55dc1zp6"},{"name":"网络工程","_id":"cm0b0qx7p001djwur08d01ov3"},{"name":"Solidity","_id":"cm0b0qx7t001mjwur0l8uegty"},{"name":"比特币","_id":"cm0b0qx7x001xjwur7qla2z6m"},{"name":"git","_id":"cm0b0qx7x0024jwur44c26igu"},{"name":"npm","_id":"cm0b0qx7y0027jwur33gj42t5"},{"name":"yarn","_id":"cm0b0qx7y002bjwur9jqy3u7f"}]}}